"use strict";
(self.webpackChunkangular_io_example =
  self.webpackChunkangular_io_example || []).push([
  [179],
  {
    2011: (wt, Oe, M) => {
      M.d(Oe, {
        Dh: () => he,
        GT: () => _e,
        Ot: () => ce,
        cc: () => Ue,
        hO: () => Be,
        on: () => G,
        pX: () => Ie,
        xv: () => Ce,
      });
      var f = M(4650),
        V = M(127),
        P = M(4027);
      wt = M.hmd(wt);
      const re = ["ngOnDestroy"],
        Ie = (de, at, rt, Ve = {}) =>
          new Proxy(de, {
            get: (Ne, Ae) =>
              rt.runOutsideAngular(() => {
                var Xe;
                if (de[Ae])
                  return (
                    !(null === (Xe = Ve?.spy) || void 0 === Xe) &&
                      Xe.get &&
                      Ve.spy.get(Ae, de[Ae]),
                    de[Ae]
                  );
                if (re.indexOf(Ae) > -1) return () => {};
                const te = at.toPromise().then((ye) => {
                  const De = ye && ye[Ae];
                  return "function" == typeof De
                    ? De.bind(ye)
                    : De && De.then
                    ? De.then((X) => rt.run(() => X))
                    : rt.run(() => De);
                });
                return new Proxy(() => {}, {
                  get: (ye, De) => te[De],
                  apply: (ye, De, X) =>
                    te.then((ne) => {
                      var se;
                      const ve = ne && ne(...X);
                      return (
                        !(null === (se = Ve?.spy) || void 0 === se) &&
                          se.apply &&
                          Ve.spy.apply(Ae, X, ve),
                        ve
                      );
                    }),
                });
              }),
          }),
        _e = (de, at) => {
          at.forEach((rt) => {
            Object.getOwnPropertyNames(rt.prototype || rt).forEach((Ve) => {
              Object.defineProperty(
                de.prototype,
                Ve,
                Object.getOwnPropertyDescriptor(rt.prototype || rt, Ve)
              );
            });
          });
        };
      class ce {
        constructor(at) {
          return at;
        }
      }
      const he = new f.OlP("angularfire2.app.options"),
        Ce = new f.OlP("angularfire2.app.name");
      function G(de, at, rt) {
        const Ne = ("object" == typeof rt && rt) || {};
        Ne.name = Ne.name || ("string" == typeof rt && rt) || "[DEFAULT]";
        const Xe =
          V.Z.apps.filter((te) => te && te.name === Ne.name)[0] ||
          at.runOutsideAngular(() => V.Z.initializeApp(de, Ne));
        try {
          JSON.stringify(de) !== JSON.stringify(Xe.options) &&
            H(
              "error",
              `${
                Xe.name
              } Firebase App already initialized with different options${
                wt.hot
                  ? ", you may need to reload as Firebase is not HMR aware."
                  : "."
              }`
            );
        } catch {}
        return new ce(Xe);
      }
      const H = (de, ...at) => {
          (0, f.X6Q)() && typeof console < "u" && console[de](...at);
        },
        Q = {
          provide: ce,
          useFactory: G,
          deps: [he, f.R0b, [new f.FiY(), Ce]],
        };
      let Be = (() => {
        class de {
          constructor(rt) {
            V.Z.registerVersion("angularfire", P.q4.full, "core"),
              V.Z.registerVersion("angularfire", P.q4.full, "app-compat"),
              V.Z.registerVersion("angular", f.q4F.full, rt.toString());
          }
          static initializeApp(rt, Ve) {
            return {
              ngModule: de,
              providers: [
                { provide: he, useValue: rt },
                { provide: Ce, useValue: Ve },
              ],
            };
          }
        }
        return (
          (de.ɵfac = function (rt) {
            return new (rt || de)(f.LFG(f.Lbi));
          }),
          (de.ɵmod = f.oAB({ type: de })),
          (de.ɵinj = f.cJS({ providers: [Q] })),
          de
        );
      })();
      function Ue(de, at, rt, Ve, Ne) {
        const [, Ae, Xe] =
          globalThis.ɵAngularfireInstanceCache.find((te) => te[0] === de) || [];
        if (Ae)
          return (
            (function Re(de, at) {
              try {
                return de.toString() === at.toString();
              } catch {
                return de === at;
              }
            })(Ne, Xe) ||
              (ge(
                "error",
                `${at} was already initialized on the ${rt} Firebase App with different settings.${
                  tt
                    ? " You may need to reload as Firebase is not HMR aware."
                    : ""
                }`
              ),
              ge("warn", { is: Ne, was: Xe })),
            Ae
          );
        {
          const te = Ve();
          return globalThis.ɵAngularfireInstanceCache.push([de, te, Ne]), te;
        }
      }
      const tt = !!wt.hot,
        ge = (de, ...at) => {
          (0, f.X6Q)() && typeof console < "u" && console[de](...at);
        };
      globalThis.ɵAngularfireInstanceCache ||
        (globalThis.ɵAngularfireInstanceCache = []);
    },
    4027: (wt, Oe, M) => {
      M.d(Oe, {
        q4: () => ge,
        iC: () => Ln,
        HU: () => $e,
        vb: () => ne,
        JM: () => X,
        nk: () => De,
        n1: () => te,
        _J: () => ye,
        u3: () => Nt,
      });
      var f = M(4650),
        V = M(5867),
        P = M(3226),
        re = M(2375),
        Ie = M(7982),
        _e = M(4408),
        he = M(7565);
      const G = new (class Ce extends he.v {})(
        class ce extends _e.o {
          constructor(lt, yt) {
            super(lt, yt), (this.scheduler = lt), (this.work = yt);
          }
          schedule(lt, yt = 0) {
            return yt > 0
              ? super.schedule(lt, yt)
              : ((this.delay = yt),
                (this.state = lt),
                this.scheduler.flush(this),
                this);
          }
          execute(lt, yt) {
            return yt > 0 || this.closed
              ? super.execute(lt, yt)
              : this._execute(lt, yt);
          }
          requestAsyncId(lt, yt, Zt = 0) {
            return (null != Zt && Zt > 0) || (null == Zt && this.delay > 0)
              ? super.requestAsyncId(lt, yt, Zt)
              : lt.flush(this);
          }
        }
      );
      var Q = M(4986),
        Be = M(9751),
        Ue = M(8505),
        Re = M(9468),
        tt = M(5363);
      const ge = new f.GfV("7.4.1"),
        de = "__angularfire_symbol__analyticsIsSupportedValue",
        at = "__angularfire_symbol__analyticsIsSupported",
        rt = "__angularfire_symbol__remoteConfigIsSupportedValue",
        Ve = "__angularfire_symbol__remoteConfigIsSupported",
        Ne = "__angularfire_symbol__messagingIsSupportedValue",
        Ae = "__angularfire_symbol__messagingIsSupported";
      globalThis[at] ||
        (globalThis[at] = (0, Ie.Gb)()
          .then((ze) => (globalThis[de] = ze))
          .catch(() => (globalThis[de] = !1))),
        globalThis[Ae] ||
          (globalThis[Ae] = (0, re.Gb)()
            .then((ze) => (globalThis[Ne] = ze))
            .catch(() => (globalThis[Ne] = !1))),
        globalThis[Ve] ||
          (globalThis[Ve] = (0, P.Gb)()
            .then((ze) => (globalThis[rt] = ze))
            .catch(() => (globalThis[rt] = !1)));
      const Xe = (ze) =>
          `The APP_INITIALIZER that is "making" isSupported() sync for the sake of convenient DI has not resolved in this\ncontext. Rather than injecting ${ze} in the constructor, first ensure that ${ze} is supported by calling\n\`await isSupported()\`, then retrieve the instance from the injector manually \`injector.get(${ze})\`.`,
        te = {
          async: () => globalThis[Ae],
          sync: () => {
            const ze = globalThis[Ne];
            if (void 0 === ze) throw new Error(Xe("Messaging"));
            return ze;
          },
        },
        ye = {
          async: () => globalThis[Ve],
          sync: () => {
            const ze = globalThis[rt];
            if (void 0 === ze) throw new Error(Xe("RemoteConfig"));
            return ze;
          },
        },
        De = {
          async: () => globalThis[at],
          sync: () => {
            const ze = globalThis[de];
            if (void 0 === ze) throw new Error(Xe("Analytics"));
            return ze;
          },
        };
      function X(ze, lt, yt) {
        if (lt) {
          if (1 === lt.length) return lt[0];
          const en = lt.filter((Mn) => Mn.app === yt);
          if (1 === en.length) return en[0];
        }
        return yt.container.getProvider(ze).getImmediate({ optional: !0 });
      }
      const ne = (ze, lt) => {
        const yt = lt ? [lt] : (0, V.C6)(),
          Zt = [];
        return (
          yt.forEach(($t) => {
            $t.container.getProvider(ze).instances.forEach((Mn) => {
              Zt.includes(Mn) || Zt.push(Mn);
            });
          }),
          Zt
        );
      };
      function se() {}
      class ve {
        constructor(lt, yt = G) {
          (this.zone = lt), (this.delegate = yt);
        }
        now() {
          return this.delegate.now();
        }
        schedule(lt, yt, Zt) {
          const $t = this.zone;
          return this.delegate.schedule(
            function (Mn) {
              $t.runGuarded(() => {
                lt.apply(this, [Mn]);
              });
            },
            yt,
            Zt
          );
        }
      }
      class ae {
        constructor(lt) {
          (this.zone = lt), (this.task = null);
        }
        call(lt, yt) {
          const Zt = this.unscheduleTask.bind(this);
          return (
            (this.task = this.zone.run(() =>
              Zone.current.scheduleMacroTask(
                "firebaseZoneBlock",
                se,
                {},
                se,
                se
              )
            )),
            yt
              .pipe((0, Ue.b)({ next: Zt, complete: Zt, error: Zt }))
              .subscribe(lt)
              .add(Zt)
          );
        }
        unscheduleTask() {
          setTimeout(() => {
            null != this.task &&
              "scheduled" === this.task.state &&
              (this.task.invoke(), (this.task = null));
          }, 10);
        }
      }
      let $e = (() => {
        class ze {
          constructor(yt) {
            (this.ngZone = yt),
              (this.outsideAngular = yt.runOutsideAngular(
                () => new ve(Zone.current)
              )),
              (this.insideAngular = yt.run(() => new ve(Zone.current, Q.z))),
              globalThis.ɵAngularFireScheduler ||
                (globalThis.ɵAngularFireScheduler = this);
          }
        }
        return (
          (ze.ɵfac = function (yt) {
            return new (yt || ze)(f.LFG(f.R0b));
          }),
          (ze.ɵprov = f.Yz7({
            token: ze,
            factory: ze.ɵfac,
            providedIn: "root",
          })),
          ze
        );
      })();
      function ht() {
        const ze = globalThis.ɵAngularFireScheduler;
        if (!ze)
          throw new Error(
            "Either AngularFireModule has not been provided in your AppModule (this can be done manually or implictly using\nprovideFirebaseApp) or you're calling an AngularFire method outside of an NgModule (which is not supported)."
          );
        return ze;
      }
      function Gt(ze) {
        return ht().ngZone.runOutsideAngular(() => ze());
      }
      function Dt(ze) {
        return ht().ngZone.run(() => ze());
      }
      function Ln(ze) {
        return (
          ht(),
          (function pn(ze) {
            return function (yt) {
              return (yt = yt.lift(new ae(ze.ngZone))).pipe(
                (0, Re.R)(ze.outsideAngular),
                (0, tt.Q)(ze.insideAngular)
              );
            };
          })(ht())(ze)
        );
      }
      const zt = (ze, lt) =>
          function () {
            const Zt = arguments;
            return (
              lt &&
                setTimeout(() => {
                  "scheduled" === lt.state && lt.invoke();
                }, 10),
              Dt(() => ze.apply(void 0, Zt))
            );
          },
        Nt = (ze, lt) =>
          function () {
            let yt;
            const Zt = arguments;
            for (let en = 0; en < arguments.length; en++)
              "function" == typeof Zt[en] &&
                (lt &&
                  (yt ||
                    (yt = Dt(() =>
                      Zone.current.scheduleMacroTask(
                        "firebaseZoneBlock",
                        se,
                        {},
                        se,
                        se
                      )
                    ))),
                (Zt[en] = zt(Zt[en], yt)));
            const $t = Gt(() => ze.apply(this, Zt));
            if (!lt) {
              if ($t instanceof Be.y) {
                const en = ht();
                return $t.pipe(
                  (0, Re.R)(en.outsideAngular),
                  (0, tt.Q)(en.insideAngular)
                );
              }
              return Dt(() => $t);
            }
            return $t instanceof Be.y
              ? $t.pipe(Ln)
              : $t instanceof Promise
              ? Dt(
                  () =>
                    new Promise((en, Mn) =>
                      $t.then(
                        (On) => Dt(() => en(On)),
                        (On) => Dt(() => Mn(On))
                      )
                    )
                )
              : "function" == typeof $t && yt
              ? function () {
                  return (
                    setTimeout(() => {
                      yt && "scheduled" === yt.state && yt.invoke();
                    }, 10),
                    $t.apply(this, arguments)
                  );
                }
              : Dt(() => $t);
          };
    },
    6457: (wt, Oe, M) => {
      M.d(Oe, {
        $: () => Hf,
        A: () => H,
        B: () => Ue,
        G: () => pe,
        H: () => Tt,
        J: () => hs,
        L: () => sn,
        M: () => fs,
        N: () => Xm,
        P: () => tu,
        Q: () => Yu,
        R: () => Un,
        T: () => Qu,
        U: () => ta,
        V: () => Xu,
        W: () => di,
        X: () => Bf,
        Y: () => ia,
        Z: () => sd,
        _: () => $f,
        a: () => _l,
        a0: () => ol,
        a1: () => ad,
        a2: () => Zi,
        a3: () => al,
        a4: () => Gf,
        a5: () => sa,
        a6: () => _s,
        a7: () => ud,
        a8: () => vs,
        a9: () => t_,
        aA: () => xd,
        aB: () => Ys,
        aC: () => ya,
        aD: () => _a,
        aE: () => Ot,
        aI: () => Ja,
        aL: () => na,
        aa: () => cd,
        ab: () => zf,
        ac: () => n_,
        af: () => Kf,
        ag: () => Zf,
        ah: () => cl,
        ak: () => Di,
        al: () => hl,
        an: () => fl,
        ao: () => gd,
        ap: () => qt,
        aq: () => De,
        ar: () => mt,
        as: () => Qe,
        at: () => rt,
        au: () => Xi,
        av: () => wa,
        aw: () => Ve,
        ax: () => te,
        ay: () => ne,
        az: () => on,
        b: () => l_,
        c: () => ws,
        d: () => ip,
        e: () => p_,
        f: () => or,
        g: () => Ml,
        h: () => va,
        i: () => tp,
        j: () => Zs,
        k: () => hp,
        l: () => Sr,
        m: () => lu,
        n: () => D_,
        o: () => he,
        r: () => bd,
        s: () => Ao,
        u: () => ln,
        v: () => fd,
      });
      var f = M(5861),
        V = M(2090),
        P = M(9681),
        re = M(655),
        Ie = M(1877),
        _e = M(4859);
      const he = {
          FACEBOOK: "facebook.com",
          GITHUB: "github.com",
          GOOGLE: "google.com",
          PASSWORD: "password",
          PHONE: "phone",
          TWITTER: "twitter.com",
        },
        H = {
          EMAIL_SIGNIN: "EMAIL_SIGNIN",
          PASSWORD_RESET: "PASSWORD_RESET",
          RECOVER_EMAIL: "RECOVER_EMAIL",
          REVERT_SECOND_FACTOR_ADDITION: "REVERT_SECOND_FACTOR_ADDITION",
          VERIFY_AND_CHANGE_EMAIL: "VERIFY_AND_CHANGE_EMAIL",
          VERIFY_EMAIL: "VERIFY_EMAIL",
        };
      const Ue = function Q() {
          return {
            "admin-restricted-operation":
              "This operation is restricted to administrators only.",
            "argument-error": "",
            "app-not-authorized":
              "This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.",
            "app-not-installed":
              "The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.",
            "captcha-check-failed":
              "The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.",
            "code-expired":
              "The SMS code has expired. Please re-send the verification code to try again.",
            "cordova-not-ready": "Cordova framework is not ready.",
            "cors-unsupported": "This browser is not supported.",
            "credential-already-in-use":
              "This credential is already associated with a different user account.",
            "custom-token-mismatch":
              "The custom token corresponds to a different audience.",
            "requires-recent-login":
              "This operation is sensitive and requires recent authentication. Log in again before retrying this request.",
            "dependent-sdk-initialized-before-auth":
              "Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.",
            "dynamic-link-not-activated":
              "Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.",
            "email-change-needs-verification":
              "Multi-factor users must always have a verified email.",
            "email-already-in-use":
              "The email address is already in use by another account.",
            "emulator-config-failed":
              'Auth instance has already been used to make a network call. Auth can no longer be configured to use the emulator. Try calling "connectAuthEmulator()" sooner.',
            "expired-action-code": "The action code has expired.",
            "cancelled-popup-request":
              "This operation has been cancelled due to another conflicting popup being opened.",
            "internal-error": "An internal AuthError has occurred.",
            "invalid-app-credential":
              "The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.",
            "invalid-app-id":
              "The mobile app identifier is not registed for the current project.",
            "invalid-user-token":
              "This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.",
            "invalid-auth-event": "An internal AuthError has occurred.",
            "invalid-verification-code":
              "The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure to use the verification code provided by the user.",
            "invalid-continue-uri":
              "The continue URL provided in the request is invalid.",
            "invalid-cordova-configuration":
              "The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.",
            "invalid-custom-token":
              "The custom token format is incorrect. Please check the documentation.",
            "invalid-dynamic-link-domain":
              "The provided dynamic link domain is not configured or authorized for the current project.",
            "invalid-email": "The email address is badly formatted.",
            "invalid-emulator-scheme":
              "Emulator URL must start with a valid scheme (http:// or https://).",
            "invalid-api-key":
              "Your API key is invalid, please check you have copied it correctly.",
            "invalid-cert-hash":
              "The SHA-1 certificate hash provided is invalid.",
            "invalid-credential":
              "The supplied auth credential is malformed or has expired.",
            "invalid-message-payload":
              "The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.",
            "invalid-multi-factor-session":
              "The request does not contain a valid proof of first factor successful sign-in.",
            "invalid-oauth-provider":
              "EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.",
            "invalid-oauth-client-id":
              "The OAuth client ID provided is either invalid or does not match the specified API key.",
            "unauthorized-domain":
              "This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.",
            "invalid-action-code":
              "The action code is invalid. This can happen if the code is malformed, expired, or has already been used.",
            "wrong-password":
              "The password is invalid or the user does not have a password.",
            "invalid-persistence-type":
              "The specified persistence type is invalid. It can only be local, session or none.",
            "invalid-phone-number":
              "The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].",
            "invalid-provider-id": "The specified provider ID is invalid.",
            "invalid-recipient-email":
              "The email corresponding to this action failed to send as the provided recipient email address is invalid.",
            "invalid-sender":
              "The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.",
            "invalid-verification-id":
              "The verification ID used to create the phone auth credential is invalid.",
            "invalid-tenant-id": "The Auth instance's tenant ID is invalid.",
            "login-blocked":
              "Login blocked by user-provided method: {$originalMessage}",
            "missing-android-pkg-name":
              "An Android Package Name must be provided if the Android App is required to be installed.",
            "auth-domain-config-required":
              "Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.",
            "missing-app-credential":
              "The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.",
            "missing-verification-code":
              "The phone auth credential was created with an empty SMS verification code.",
            "missing-continue-uri":
              "A continue URL must be provided in the request.",
            "missing-iframe-start": "An internal AuthError has occurred.",
            "missing-ios-bundle-id":
              "An iOS Bundle ID must be provided if an App Store ID is provided.",
            "missing-or-invalid-nonce":
              "The request does not contain a valid nonce. This can occur if the SHA-256 hash of the provided raw nonce does not match the hashed nonce in the ID token payload.",
            "missing-multi-factor-info":
              "No second factor identifier is provided.",
            "missing-multi-factor-session":
              "The request is missing proof of first factor successful sign-in.",
            "missing-phone-number":
              "To send verification codes, provide a phone number for the recipient.",
            "missing-verification-id":
              "The phone auth credential was created with an empty verification ID.",
            "app-deleted": "This instance of FirebaseApp has been deleted.",
            "multi-factor-info-not-found":
              "The user does not have a second factor matching the identifier provided.",
            "multi-factor-auth-required":
              "Proof of ownership of a second factor is required to complete sign-in.",
            "account-exists-with-different-credential":
              "An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.",
            "network-request-failed":
              "A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.",
            "no-auth-event": "An internal AuthError has occurred.",
            "no-such-provider":
              "User was not linked to an account with the given provider.",
            "null-user":
              "A null user object was provided as the argument for an operation which requires a non-null user object.",
            "operation-not-allowed":
              "The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.",
            "operation-not-supported-in-this-environment":
              'This operation is not supported in the environment this application is running on. "location.protocol" must be http, https or chrome-extension and web storage must be enabled.',
            "popup-blocked":
              "Unable to establish a connection with the popup. It may have been blocked by the browser.",
            "popup-closed-by-user":
              "The popup has been closed by the user before finalizing the operation.",
            "provider-already-linked":
              "User can only be linked to one identity for the given provider.",
            "quota-exceeded":
              "The project's quota for this operation has been exceeded.",
            "redirect-cancelled-by-user":
              "The redirect operation has been cancelled by the user before finalizing.",
            "redirect-operation-pending":
              "A redirect sign-in operation is already pending.",
            "rejected-credential":
              "The request contains malformed or mismatching credentials.",
            "second-factor-already-in-use":
              "The second factor is already enrolled on this account.",
            "maximum-second-factor-count-exceeded":
              "The maximum allowed number of second factors on a user has been exceeded.",
            "tenant-id-mismatch":
              "The provided tenant ID does not match the Auth instance's tenant ID",
            timeout: "The operation has timed out.",
            "user-token-expired":
              "The user's credential is no longer valid. The user must sign in again.",
            "too-many-requests":
              "We have blocked all requests from this device due to unusual activity. Try again later.",
            "unauthorized-continue-uri":
              "The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.",
            "unsupported-first-factor":
              "Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.",
            "unsupported-persistence-type":
              "The current environment does not support the specified persistence type.",
            "unsupported-tenant-operation":
              "This operation is not supported in a multi-tenant context.",
            "unverified-email": "The operation requires a verified email.",
            "user-cancelled":
              "The user did not grant your application the permissions it requested.",
            "user-not-found":
              "There is no user record corresponding to this identifier. The user may have been deleted.",
            "user-disabled":
              "The user account has been disabled by an administrator.",
            "user-mismatch":
              "The supplied credentials do not correspond to the previously signed in user.",
            "user-signed-out": "",
            "weak-password": "The password must be 6 characters long or more.",
            "web-storage-unsupported":
              "This browser is not supported or 3rd party cookies and data may be disabled.",
            "already-initialized":
              "initializeAuth() has already been called with different options. To avoid this error, call initializeAuth() with the same options as when it was originally called, or call getAuth() to return the already initialized instance.",
          };
        },
        Re = function Be() {
          return {
            "dependent-sdk-initialized-before-auth":
              "Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.",
          };
        },
        tt = new V.LL("auth", "Firebase", {
          "dependent-sdk-initialized-before-auth":
            "Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.",
        }),
        de = new Ie.Yd("@firebase/auth");
      function at(E, ...g) {
        de.logLevel <= Ie.in.ERROR &&
          de.error(`Auth (${P.SDK_VERSION}): ${E}`, ...g);
      }
      function rt(E, ...g) {
        throw Xe(E, ...g);
      }
      function Ve(E, ...g) {
        return Xe(E, ...g);
      }
      function Ne(E, g, _) {
        const I = Object.assign(Object.assign({}, Re()), { [g]: _ });
        return new V.LL("auth", "Firebase", I).create(g, { appName: E.name });
      }
      function Ae(E, g, _) {
        if (!(g instanceof _))
          throw (
            (_.name !== g.constructor.name && rt(E, "argument-error"),
            Ne(
              E,
              "argument-error",
              `Type of ${g.constructor.name} does not match expected instance.Did you pass a reference from a different Auth SDK?`
            ))
          );
      }
      function Xe(E, ...g) {
        if ("string" != typeof E) {
          const _ = g[0],
            I = [...g.slice(1)];
          return (
            I[0] && (I[0].appName = E.name), E._errorFactory.create(_, ...I)
          );
        }
        return tt.create(E, ...g);
      }
      function te(E, g, ..._) {
        if (!E) throw Xe(g, ..._);
      }
      function ye(E) {
        const g = "INTERNAL ASSERTION FAILED: " + E;
        throw (at(g), new Error(g));
      }
      function De(E, g) {
        E || ye(g);
      }
      const X = new Map();
      function ne(E) {
        De(E instanceof Function, "Expected a class definition");
        let g = X.get(E);
        return g
          ? (De(
              g instanceof E,
              "Instance stored in cache mismatched with class"
            ),
            g)
          : ((g = new E()), X.set(E, g), g);
      }
      function ae() {
        var E;
        return (
          (typeof self < "u" &&
            (null === (E = self.location) || void 0 === E ? void 0 : E.href)) ||
          ""
        );
      }
      function $e() {
        return "http:" === ht() || "https:" === ht();
      }
      function ht() {
        var E;
        return (
          (typeof self < "u" &&
            (null === (E = self.location) || void 0 === E
              ? void 0
              : E.protocol)) ||
          null
        );
      }
      class et {
        constructor(g, _) {
          (this.shortDelay = g),
            (this.longDelay = _),
            De(_ > g, "Short delay should be less than long delay!"),
            (this.isMobile = (0, V.uI)() || (0, V.b$)());
        }
        get() {
          return (function Gt() {
            return (
              !(
                typeof navigator < "u" &&
                navigator &&
                "onLine" in navigator &&
                "boolean" == typeof navigator.onLine &&
                ($e() || (0, V.ru)() || "connection" in navigator)
              ) || navigator.onLine
            );
          })()
            ? this.isMobile
              ? this.longDelay
              : this.shortDelay
            : Math.min(5e3, this.shortDelay);
        }
      }
      function Vt(E, g) {
        De(E.emulator, "Emulator should always be set here");
        const { url: _ } = E.emulator;
        return g ? `${_}${g.startsWith("/") ? g.slice(1) : g}` : _;
      }
      class Ln {
        static initialize(g, _, I) {
          (this.fetchImpl = g),
            _ && (this.headersImpl = _),
            I && (this.responseImpl = I);
        }
        static fetch() {
          return this.fetchImpl
            ? this.fetchImpl
            : typeof self < "u" && "fetch" in self
            ? self.fetch
            : void ye(
                "Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill"
              );
        }
        static headers() {
          return this.headersImpl
            ? this.headersImpl
            : typeof self < "u" && "Headers" in self
            ? self.Headers
            : void ye(
                "Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill"
              );
        }
        static response() {
          return this.responseImpl
            ? this.responseImpl
            : typeof self < "u" && "Response" in self
            ? self.Response
            : void ye(
                "Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill"
              );
        }
      }
      const pn = {
          CREDENTIAL_MISMATCH: "custom-token-mismatch",
          MISSING_CUSTOM_TOKEN: "internal-error",
          INVALID_IDENTIFIER: "invalid-email",
          MISSING_CONTINUE_URI: "internal-error",
          INVALID_PASSWORD: "wrong-password",
          MISSING_PASSWORD: "internal-error",
          EMAIL_EXISTS: "email-already-in-use",
          PASSWORD_LOGIN_DISABLED: "operation-not-allowed",
          INVALID_IDP_RESPONSE: "invalid-credential",
          INVALID_PENDING_TOKEN: "invalid-credential",
          FEDERATED_USER_ID_ALREADY_LINKED: "credential-already-in-use",
          MISSING_REQ_TYPE: "internal-error",
          EMAIL_NOT_FOUND: "user-not-found",
          RESET_PASSWORD_EXCEED_LIMIT: "too-many-requests",
          EXPIRED_OOB_CODE: "expired-action-code",
          INVALID_OOB_CODE: "invalid-action-code",
          MISSING_OOB_CODE: "internal-error",
          CREDENTIAL_TOO_OLD_LOGIN_AGAIN: "requires-recent-login",
          INVALID_ID_TOKEN: "invalid-user-token",
          TOKEN_EXPIRED: "user-token-expired",
          USER_NOT_FOUND: "user-token-expired",
          TOO_MANY_ATTEMPTS_TRY_LATER: "too-many-requests",
          INVALID_CODE: "invalid-verification-code",
          INVALID_SESSION_INFO: "invalid-verification-id",
          INVALID_TEMPORARY_PROOF: "invalid-credential",
          MISSING_SESSION_INFO: "missing-verification-id",
          SESSION_EXPIRED: "code-expired",
          MISSING_ANDROID_PACKAGE_NAME: "missing-android-pkg-name",
          UNAUTHORIZED_DOMAIN: "unauthorized-continue-uri",
          INVALID_OAUTH_CLIENT_ID: "invalid-oauth-client-id",
          ADMIN_ONLY_OPERATION: "admin-restricted-operation",
          INVALID_MFA_PENDING_CREDENTIAL: "invalid-multi-factor-session",
          MFA_ENROLLMENT_NOT_FOUND: "multi-factor-info-not-found",
          MISSING_MFA_ENROLLMENT_ID: "missing-multi-factor-info",
          MISSING_MFA_PENDING_CREDENTIAL: "missing-multi-factor-session",
          SECOND_FACTOR_EXISTS: "second-factor-already-in-use",
          SECOND_FACTOR_LIMIT_EXCEEDED: "maximum-second-factor-count-exceeded",
          BLOCKING_FUNCTION_ERROR_RESPONSE: "internal-error",
        },
        zt = new et(3e4, 6e4);
      function Nt(E, g) {
        return E.tenantId && !g.tenantId
          ? Object.assign(Object.assign({}, g), { tenantId: E.tenantId })
          : g;
      }
      function ze(E, g, _, I) {
        return lt.apply(this, arguments);
      }
      function lt() {
        return (lt = (0, f.Z)(function* (E, g, _, I, S = {}) {
          return yt(
            E,
            S,
            (0, f.Z)(function* () {
              let N = {},
                ie = {};
              I && ("GET" === g ? (ie = I) : (N = { body: JSON.stringify(I) }));
              const Le = (0, V.xO)(
                  Object.assign({ key: E.config.apiKey }, ie)
                ).slice(1),
                ft = yield E._getAdditionalHeaders();
              return (
                (ft["Content-Type"] = "application/json"),
                E.languageCode && (ft["X-Firebase-Locale"] = E.languageCode),
                Ln.fetch()(
                  Mn(E, E.config.apiHost, _, Le),
                  Object.assign(
                    { method: g, headers: ft, referrerPolicy: "no-referrer" },
                    N
                  )
                )
              );
            })
          );
        })).apply(this, arguments);
      }
      function yt(E, g, _) {
        return Zt.apply(this, arguments);
      }
      function Zt() {
        return (Zt = (0, f.Z)(function* (E, g, _) {
          E._canInitEmulator = !1;
          const I = Object.assign(Object.assign({}, pn), g);
          try {
            const S = new On(E),
              N = yield Promise.race([_(), S.promise]);
            S.clearNetworkTimeout();
            const ie = yield N.json();
            if ("needConfirmation" in ie)
              throw xn(E, "account-exists-with-different-credential", ie);
            if (N.ok && !("errorMessage" in ie)) return ie;
            {
              const Le = N.ok ? ie.errorMessage : ie.error.message,
                [ft, vt] = Le.split(" : ");
              if ("FEDERATED_USER_ID_ALREADY_LINKED" === ft)
                throw xn(E, "credential-already-in-use", ie);
              if ("EMAIL_EXISTS" === ft)
                throw xn(E, "email-already-in-use", ie);
              if ("USER_DISABLED" === ft) throw xn(E, "user-disabled", ie);
              const Bt = I[ft] || ft.toLowerCase().replace(/[_\s]+/g, "-");
              if (vt) throw Ne(E, Bt, vt);
              rt(E, Bt);
            }
          } catch (S) {
            if (S instanceof V.ZR) throw S;
            rt(E, "network-request-failed");
          }
        })).apply(this, arguments);
      }
      function $t(E, g, _, I) {
        return en.apply(this, arguments);
      }
      function en() {
        return (en = (0, f.Z)(function* (E, g, _, I, S = {}) {
          const N = yield ze(E, g, _, I, S);
          return (
            "mfaPendingCredential" in N &&
              rt(E, "multi-factor-auth-required", { _serverResponse: N }),
            N
          );
        })).apply(this, arguments);
      }
      function Mn(E, g, _, I) {
        const S = `${g}${_}?${I}`;
        return E.config.emulator
          ? Vt(E.config, S)
          : `${E.config.apiScheme}://${S}`;
      }
      class On {
        constructor(g) {
          (this.auth = g),
            (this.timer = null),
            (this.promise = new Promise((_, I) => {
              this.timer = setTimeout(
                () => I(Ve(this.auth, "network-request-failed")),
                zt.get()
              );
            }));
        }
        clearNetworkTimeout() {
          clearTimeout(this.timer);
        }
      }
      function xn(E, g, _) {
        const I = { appName: E.name };
        _.email && (I.email = _.email),
          _.phoneNumber && (I.phoneNumber = _.phoneNumber);
        const S = Ve(E, g, I);
        return (S.customData._tokenResponse = _), S;
      }
      function Me() {
        return (Me = (0, f.Z)(function* (E, g) {
          return ze(E, "POST", "/v1/accounts:delete", g);
        })).apply(this, arguments);
      }
      function fe(E, g) {
        return Pe.apply(this, arguments);
      }
      function Pe() {
        return (Pe = (0, f.Z)(function* (E, g) {
          return ze(E, "POST", "/v1/accounts:update", g);
        })).apply(this, arguments);
      }
      function Ke(E, g) {
        return ct.apply(this, arguments);
      }
      function ct() {
        return (ct = (0, f.Z)(function* (E, g) {
          return ze(E, "POST", "/v1/accounts:lookup", g);
        })).apply(this, arguments);
      }
      function Ut(E) {
        if (E)
          try {
            const g = new Date(Number(E));
            if (!isNaN(g.getTime())) return g.toUTCString();
          } catch {}
      }
      function En() {
        return (En = (0, f.Z)(function* (E, g = !1) {
          const _ = (0, V.m9)(E),
            I = yield _.getIdToken(g),
            S = bt(I);
          te(S && S.exp && S.auth_time && S.iat, _.auth, "internal-error");
          const N = "object" == typeof S.firebase ? S.firebase : void 0,
            ie = N?.sign_in_provider;
          return {
            claims: S,
            token: I,
            authTime: Ut(Nn(S.auth_time)),
            issuedAtTime: Ut(Nn(S.iat)),
            expirationTime: Ut(Nn(S.exp)),
            signInProvider: ie || null,
            signInSecondFactor: N?.sign_in_second_factor || null,
          };
        })).apply(this, arguments);
      }
      function Nn(E) {
        return 1e3 * Number(E);
      }
      function bt(E) {
        var g;
        const [_, I, S] = E.split(".");
        if (void 0 === _ || void 0 === I || void 0 === S)
          return at("JWT malformed, contained fewer than 3 sections"), null;
        try {
          const N = (0, V.tV)(I);
          return N
            ? JSON.parse(N)
            : (at("Failed to decode base64 JWT payload"), null);
        } catch (N) {
          return (
            at(
              "Caught error parsing JWT payload as JSON",
              null === (g = N) || void 0 === g ? void 0 : g.toString()
            ),
            null
          );
        }
      }
      function it(E, g) {
        return Bn.apply(this, arguments);
      }
      function Bn() {
        return (Bn = (0, f.Z)(function* (E, g, _ = !1) {
          if (_) return g;
          try {
            return yield g;
          } catch (I) {
            throw (
              (I instanceof V.ZR &&
                Vn(I) &&
                E.auth.currentUser === E &&
                (yield E.auth.signOut()),
              I)
            );
          }
        })).apply(this, arguments);
      }
      function Vn({ code: E }) {
        return "auth/user-disabled" === E || "auth/user-token-expired" === E;
      }
      class Mt {
        constructor(g) {
          (this.user = g),
            (this.isRunning = !1),
            (this.timerId = null),
            (this.errorBackoff = 3e4);
        }
        _start() {
          this.isRunning || ((this.isRunning = !0), this.schedule());
        }
        _stop() {
          !this.isRunning ||
            ((this.isRunning = !1),
            null !== this.timerId && clearTimeout(this.timerId));
        }
        getInterval(g) {
          var _;
          if (g) {
            const I = this.errorBackoff;
            return (
              (this.errorBackoff = Math.min(2 * this.errorBackoff, 96e4)), I
            );
          }
          {
            this.errorBackoff = 3e4;
            const S =
              (null !== (_ = this.user.stsTokenManager.expirationTime) &&
              void 0 !== _
                ? _
                : 0) -
              Date.now() -
              3e5;
            return Math.max(0, S);
          }
        }
        schedule(g = !1) {
          var _ = this;
          if (!this.isRunning) return;
          const I = this.getInterval(g);
          this.timerId = setTimeout(
            (0, f.Z)(function* () {
              yield _.iteration();
            }),
            I
          );
        }
        iteration() {
          var g = this;
          return (0, f.Z)(function* () {
            var _;
            try {
              yield g.user.getIdToken(!0);
            } catch (I) {
              return void (
                "auth/network-request-failed" ===
                  (null === (_ = I) || void 0 === _ ? void 0 : _.code) &&
                g.schedule(!0)
              );
            }
            g.schedule();
          })();
        }
      }
      class kn {
        constructor(g, _) {
          (this.createdAt = g), (this.lastLoginAt = _), this._initializeTime();
        }
        _initializeTime() {
          (this.lastSignInTime = Ut(this.lastLoginAt)),
            (this.creationTime = Ut(this.createdAt));
        }
        _copy(g) {
          (this.createdAt = g.createdAt),
            (this.lastLoginAt = g.lastLoginAt),
            this._initializeTime();
        }
        toJSON() {
          return { createdAt: this.createdAt, lastLoginAt: this.lastLoginAt };
        }
      }
      function bn(E) {
        return dn.apply(this, arguments);
      }
      function dn() {
        return (dn = (0, f.Z)(function* (E) {
          var g;
          const _ = E.auth,
            I = yield E.getIdToken(),
            S = yield it(E, Ke(_, { idToken: I }));
          te(S?.users.length, _, "internal-error");
          const N = S.users[0];
          E._notifyReloadListener(N);
          const ie =
              null !== (g = N.providerUserInfo) && void 0 !== g && g.length
                ? $(N.providerUserInfo)
                : [],
            Le = j(E.providerData, ie),
            Bt =
              !!E.isAnonymous && !((E.email && N.passwordHash) || Le?.length),
            $n = {
              uid: N.localId,
              displayName: N.displayName || null,
              photoURL: N.photoUrl || null,
              email: N.email || null,
              emailVerified: N.emailVerified || !1,
              phoneNumber: N.phoneNumber || null,
              tenantId: N.tenantId || null,
              providerData: Le,
              metadata: new kn(N.createdAt, N.lastLoginAt),
              isAnonymous: Bt,
            };
          Object.assign(E, $n);
        })).apply(this, arguments);
      }
      function gn() {
        return (gn = (0, f.Z)(function* (E) {
          const g = (0, V.m9)(E);
          yield bn(g),
            yield g.auth._persistUserIfCurrent(g),
            g.auth._notifyListenersIfCurrent(g);
        })).apply(this, arguments);
      }
      function j(E, g) {
        return [
          ...E.filter((I) => !g.some((S) => S.providerId === I.providerId)),
          ...g,
        ];
      }
      function $(E) {
        return E.map((g) => {
          var { providerId: _ } = g,
            I = (0, re._T)(g, ["providerId"]);
          return {
            providerId: _,
            uid: I.rawId || "",
            displayName: I.displayName || null,
            email: I.email || null,
            phoneNumber: I.phoneNumber || null,
            photoURL: I.photoUrl || null,
          };
        });
      }
      function z() {
        return (z = (0, f.Z)(function* (E, g) {
          const _ = yield yt(
            E,
            {},
            (0, f.Z)(function* () {
              const I = (0, V.xO)({
                  grant_type: "refresh_token",
                  refresh_token: g,
                }).slice(1),
                { tokenApiHost: S, apiKey: N } = E.config,
                ie = Mn(E, S, "/v1/token", `key=${N}`),
                Le = yield E._getAdditionalHeaders();
              return (
                (Le["Content-Type"] = "application/x-www-form-urlencoded"),
                Ln.fetch()(ie, { method: "POST", headers: Le, body: I })
              );
            })
          );
          return {
            accessToken: _.access_token,
            expiresIn: _.expires_in,
            refreshToken: _.refresh_token,
          };
        })).apply(this, arguments);
      }
      class q {
        constructor() {
          (this.refreshToken = null),
            (this.accessToken = null),
            (this.expirationTime = null);
        }
        get isExpired() {
          return !this.expirationTime || Date.now() > this.expirationTime - 3e4;
        }
        updateFromServerResponse(g) {
          te(g.idToken, "internal-error"),
            te(typeof g.idToken < "u", "internal-error"),
            te(typeof g.refreshToken < "u", "internal-error");
          const _ =
            "expiresIn" in g && typeof g.expiresIn < "u"
              ? Number(g.expiresIn)
              : (function qe(E) {
                  const g = bt(E);
                  return (
                    te(g, "internal-error"),
                    te(typeof g.exp < "u", "internal-error"),
                    te(typeof g.iat < "u", "internal-error"),
                    Number(g.exp) - Number(g.iat)
                  );
                })(g.idToken);
          this.updateTokensAndExpiration(g.idToken, g.refreshToken, _);
        }
        getToken(g, _ = !1) {
          var I = this;
          return (0, f.Z)(function* () {
            return (
              te(!I.accessToken || I.refreshToken, g, "user-token-expired"),
              _ || !I.accessToken || I.isExpired
                ? I.refreshToken
                  ? (yield I.refresh(g, I.refreshToken), I.accessToken)
                  : null
                : I.accessToken
            );
          })();
        }
        clearRefreshToken() {
          this.refreshToken = null;
        }
        refresh(g, _) {
          var I = this;
          return (0, f.Z)(function* () {
            const {
              accessToken: S,
              refreshToken: N,
              expiresIn: ie,
            } = yield (function U(E, g) {
              return z.apply(this, arguments);
            })(g, _);
            I.updateTokensAndExpiration(S, N, Number(ie));
          })();
        }
        updateTokensAndExpiration(g, _, I) {
          (this.refreshToken = _ || null),
            (this.accessToken = g || null),
            (this.expirationTime = Date.now() + 1e3 * I);
        }
        static fromJSON(g, _) {
          const { refreshToken: I, accessToken: S, expirationTime: N } = _,
            ie = new q();
          return (
            I &&
              (te("string" == typeof I, "internal-error", { appName: g }),
              (ie.refreshToken = I)),
            S &&
              (te("string" == typeof S, "internal-error", { appName: g }),
              (ie.accessToken = S)),
            N &&
              (te("number" == typeof N, "internal-error", { appName: g }),
              (ie.expirationTime = N)),
            ie
          );
        }
        toJSON() {
          return {
            refreshToken: this.refreshToken,
            accessToken: this.accessToken,
            expirationTime: this.expirationTime,
          };
        }
        _assign(g) {
          (this.accessToken = g.accessToken),
            (this.refreshToken = g.refreshToken),
            (this.expirationTime = g.expirationTime);
        }
        _clone() {
          return Object.assign(new q(), this.toJSON());
        }
        _performRefresh() {
          return ye("not implemented");
        }
      }
      function ke(E, g) {
        te("string" == typeof E || typeof E > "u", "internal-error", {
          appName: g,
        });
      }
      class st {
        constructor(g) {
          var { uid: _, auth: I, stsTokenManager: S } = g,
            N = (0, re._T)(g, ["uid", "auth", "stsTokenManager"]);
          (this.providerId = "firebase"),
            (this.proactiveRefresh = new Mt(this)),
            (this.reloadUserInfo = null),
            (this.reloadListener = null),
            (this.uid = _),
            (this.auth = I),
            (this.stsTokenManager = S),
            (this.accessToken = S.accessToken),
            (this.displayName = N.displayName || null),
            (this.email = N.email || null),
            (this.emailVerified = N.emailVerified || !1),
            (this.phoneNumber = N.phoneNumber || null),
            (this.photoURL = N.photoURL || null),
            (this.isAnonymous = N.isAnonymous || !1),
            (this.tenantId = N.tenantId || null),
            (this.providerData = N.providerData ? [...N.providerData] : []),
            (this.metadata = new kn(
              N.createdAt || void 0,
              N.lastLoginAt || void 0
            ));
        }
        getIdToken(g) {
          var _ = this;
          return (0, f.Z)(function* () {
            const I = yield it(_, _.stsTokenManager.getToken(_.auth, g));
            return (
              te(I, _.auth, "internal-error"),
              _.accessToken !== I &&
                ((_.accessToken = I),
                yield _.auth._persistUserIfCurrent(_),
                _.auth._notifyListenersIfCurrent(_)),
              I
            );
          })();
        }
        getIdTokenResult(g) {
          return (function Yt(E) {
            return En.apply(this, arguments);
          })(this, g);
        }
        reload() {
          return (function Jt(E) {
            return gn.apply(this, arguments);
          })(this);
        }
        _assign(g) {
          this !== g &&
            (te(this.uid === g.uid, this.auth, "internal-error"),
            (this.displayName = g.displayName),
            (this.photoURL = g.photoURL),
            (this.email = g.email),
            (this.emailVerified = g.emailVerified),
            (this.phoneNumber = g.phoneNumber),
            (this.isAnonymous = g.isAnonymous),
            (this.tenantId = g.tenantId),
            (this.providerData = g.providerData.map((_) =>
              Object.assign({}, _)
            )),
            this.metadata._copy(g.metadata),
            this.stsTokenManager._assign(g.stsTokenManager));
        }
        _clone(g) {
          return new st(
            Object.assign(Object.assign({}, this), {
              auth: g,
              stsTokenManager: this.stsTokenManager._clone(),
            })
          );
        }
        _onReload(g) {
          te(!this.reloadListener, this.auth, "internal-error"),
            (this.reloadListener = g),
            this.reloadUserInfo &&
              (this._notifyReloadListener(this.reloadUserInfo),
              (this.reloadUserInfo = null));
        }
        _notifyReloadListener(g) {
          this.reloadListener
            ? this.reloadListener(g)
            : (this.reloadUserInfo = g);
        }
        _startProactiveRefresh() {
          this.proactiveRefresh._start();
        }
        _stopProactiveRefresh() {
          this.proactiveRefresh._stop();
        }
        _updateTokensIfNecessary(g, _ = !1) {
          var I = this;
          return (0, f.Z)(function* () {
            let S = !1;
            g.idToken &&
              g.idToken !== I.stsTokenManager.accessToken &&
              (I.stsTokenManager.updateFromServerResponse(g), (S = !0)),
              _ && (yield bn(I)),
              yield I.auth._persistUserIfCurrent(I),
              S && I.auth._notifyListenersIfCurrent(I);
          })();
        }
        delete() {
          var g = this;
          return (0, f.Z)(function* () {
            const _ = yield g.getIdToken();
            return (
              yield it(
                g,
                (function Yn(E, g) {
                  return Me.apply(this, arguments);
                })(g.auth, { idToken: _ })
              ),
              g.stsTokenManager.clearRefreshToken(),
              g.auth.signOut()
            );
          })();
        }
        toJSON() {
          return Object.assign(
            Object.assign(
              {
                uid: this.uid,
                email: this.email || void 0,
                emailVerified: this.emailVerified,
                displayName: this.displayName || void 0,
                isAnonymous: this.isAnonymous,
                photoURL: this.photoURL || void 0,
                phoneNumber: this.phoneNumber || void 0,
                tenantId: this.tenantId || void 0,
                providerData: this.providerData.map((g) =>
                  Object.assign({}, g)
                ),
                stsTokenManager: this.stsTokenManager.toJSON(),
                _redirectEventId: this._redirectEventId,
              },
              this.metadata.toJSON()
            ),
            { apiKey: this.auth.config.apiKey, appName: this.auth.name }
          );
        }
        get refreshToken() {
          return this.stsTokenManager.refreshToken || "";
        }
        static _fromJSON(g, _) {
          var I, S, N, ie, Le, ft, vt, Bt;
          const $n = null !== (I = _.displayName) && void 0 !== I ? I : void 0,
            Oi = null !== (S = _.email) && void 0 !== S ? S : void 0,
            Si = null !== (N = _.phoneNumber) && void 0 !== N ? N : void 0,
            Ll = null !== (ie = _.photoURL) && void 0 !== ie ? ie : void 0,
            Fd = null !== (Le = _.tenantId) && void 0 !== Le ? Le : void 0,
            Ld =
              null !== (ft = _._redirectEventId) && void 0 !== ft ? ft : void 0,
            Ia = null !== (vt = _.createdAt) && void 0 !== vt ? vt : void 0,
            Ca = null !== (Bt = _.lastLoginAt) && void 0 !== Bt ? Bt : void 0,
            {
              uid: cu,
              emailVerified: du,
              isAnonymous: T_,
              providerData: Vl,
              stsTokenManager: Ul,
            } = _;
          te(cu && Ul, g, "internal-error");
          const pp = q.fromJSON(this.name, Ul);
          te("string" == typeof cu, g, "internal-error"),
            ke($n, g.name),
            ke(Oi, g.name),
            te("boolean" == typeof du, g, "internal-error"),
            te("boolean" == typeof T_, g, "internal-error"),
            ke(Si, g.name),
            ke(Ll, g.name),
            ke(Fd, g.name),
            ke(Ld, g.name),
            ke(Ia, g.name),
            ke(Ca, g.name);
          const Bl = new st({
            uid: cu,
            auth: g,
            email: Oi,
            emailVerified: du,
            displayName: $n,
            isAnonymous: T_,
            photoURL: Ll,
            phoneNumber: Si,
            tenantId: Fd,
            stsTokenManager: pp,
            createdAt: Ia,
            lastLoginAt: Ca,
          });
          return (
            Vl &&
              Array.isArray(Vl) &&
              (Bl.providerData = Vl.map((gp) => Object.assign({}, gp))),
            Ld && (Bl._redirectEventId = Ld),
            Bl
          );
        }
        static _fromIdTokenResponse(g, _, I = !1) {
          return (0, f.Z)(function* () {
            const S = new q();
            S.updateFromServerResponse(_);
            const N = new st({
              uid: _.localId,
              auth: g,
              stsTokenManager: S,
              isAnonymous: I,
            });
            return yield bn(N), N;
          })();
        }
      }
      const sn = (() => {
        class E {
          constructor() {
            (this.type = "NONE"), (this.storage = {});
          }
          _isAvailable() {
            return (0, f.Z)(function* () {
              return !0;
            })();
          }
          _set(_, I) {
            var S = this;
            return (0, f.Z)(function* () {
              S.storage[_] = I;
            })();
          }
          _get(_) {
            var I = this;
            return (0, f.Z)(function* () {
              const S = I.storage[_];
              return void 0 === S ? null : S;
            })();
          }
          _remove(_) {
            var I = this;
            return (0, f.Z)(function* () {
              delete I.storage[_];
            })();
          }
          _addListener(_, I) {}
          _removeListener(_, I) {}
        }
        return (E.type = "NONE"), E;
      })();
      function on(E, g, _) {
        return `firebase:${E}:${g}:${_}`;
      }
      class ue {
        constructor(g, _, I) {
          (this.persistence = g), (this.auth = _), (this.userKey = I);
          const { config: S, name: N } = this.auth;
          (this.fullUserKey = on(this.userKey, S.apiKey, N)),
            (this.fullPersistenceKey = on("persistence", S.apiKey, N)),
            (this.boundEventHandler = _._onStorageEvent.bind(_)),
            this.persistence._addListener(
              this.fullUserKey,
              this.boundEventHandler
            );
        }
        setCurrentUser(g) {
          return this.persistence._set(this.fullUserKey, g.toJSON());
        }
        getCurrentUser() {
          var g = this;
          return (0, f.Z)(function* () {
            const _ = yield g.persistence._get(g.fullUserKey);
            return _ ? st._fromJSON(g.auth, _) : null;
          })();
        }
        removeCurrentUser() {
          return this.persistence._remove(this.fullUserKey);
        }
        savePersistenceForRedirect() {
          return this.persistence._set(
            this.fullPersistenceKey,
            this.persistence.type
          );
        }
        setPersistence(g) {
          var _ = this;
          return (0, f.Z)(function* () {
            if (_.persistence === g) return;
            const I = yield _.getCurrentUser();
            return (
              yield _.removeCurrentUser(),
              (_.persistence = g),
              I ? _.setCurrentUser(I) : void 0
            );
          })();
        }
        delete() {
          this.persistence._removeListener(
            this.fullUserKey,
            this.boundEventHandler
          );
        }
        static create(g, _, I = "authUser") {
          return (0, f.Z)(function* () {
            if (!_.length) return new ue(ne(sn), g, I);
            const S = (yield Promise.all(
              _.map(
                (function () {
                  var vt = (0, f.Z)(function* (Bt) {
                    if (yield Bt._isAvailable()) return Bt;
                  });
                  return function (Bt) {
                    return vt.apply(this, arguments);
                  };
                })()
              )
            )).filter((vt) => vt);
            let N = S[0] || ne(sn);
            const ie = on(I, g.config.apiKey, g.name);
            let Le = null;
            for (const vt of _)
              try {
                const Bt = yield vt._get(ie);
                if (Bt) {
                  const $n = st._fromJSON(g, Bt);
                  vt !== N && (Le = $n), (N = vt);
                  break;
                }
              } catch {}
            const ft = S.filter((vt) => vt._shouldAllowMigration);
            return N._shouldAllowMigration && ft.length
              ? ((N = ft[0]),
                Le && (yield N._set(ie, Le.toJSON())),
                yield Promise.all(
                  _.map(
                    (function () {
                      var vt = (0, f.Z)(function* (Bt) {
                        if (Bt !== N)
                          try {
                            yield Bt._remove(ie);
                          } catch {}
                      });
                      return function (Bt) {
                        return vt.apply(this, arguments);
                      };
                    })()
                  )
                ),
                new ue(N, g, I))
              : new ue(N, g, I);
          })();
        }
      }
      function L(E) {
        const g = E.toLowerCase();
        if (g.includes("opera/") || g.includes("opr/") || g.includes("opios/"))
          return "Opera";
        if (Se(g)) return "IEMobile";
        if (g.includes("msie") || g.includes("trident/")) return "IE";
        if (g.includes("edge/")) return "Edge";
        if (x(g)) return "Firefox";
        if (g.includes("silk/")) return "Silk";
        if (we(g)) return "Blackberry";
        if (Ze(g)) return "Webos";
        if (k(g)) return "Safari";
        if ((g.includes("chrome/") || J(g)) && !g.includes("edge/"))
          return "Chrome";
        if (Qe(g)) return "Android";
        {
          const I = E.match(/([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/);
          if (2 === I?.length) return I[1];
        }
        return "Other";
      }
      function x(E = (0, V.z$)()) {
        return /firefox\//i.test(E);
      }
      function k(E = (0, V.z$)()) {
        const g = E.toLowerCase();
        return (
          g.includes("safari/") &&
          !g.includes("chrome/") &&
          !g.includes("crios/") &&
          !g.includes("android")
        );
      }
      function J(E = (0, V.z$)()) {
        return /crios\//i.test(E);
      }
      function Se(E = (0, V.z$)()) {
        return /iemobile/i.test(E);
      }
      function Qe(E = (0, V.z$)()) {
        return /android/i.test(E);
      }
      function we(E = (0, V.z$)()) {
        return /blackberry/i.test(E);
      }
      function Ze(E = (0, V.z$)()) {
        return /webos/i.test(E);
      }
      function mt(E = (0, V.z$)()) {
        return (
          /iphone|ipad|ipod/i.test(E) ||
          (/macintosh/i.test(E) && /mobile/i.test(E))
        );
      }
      function qt(E = (0, V.z$)()) {
        return (
          /(iPad|iPhone|iPod).*OS 7_\d/i.test(E) ||
          /(iPad|iPhone|iPod).*OS 8_\d/i.test(E)
        );
      }
      function Dn(E = (0, V.z$)()) {
        return (
          mt(E) || Qe(E) || Ze(E) || we(E) || /windows phone/i.test(E) || Se(E)
        );
      }
      function me(E, g = []) {
        let _;
        switch (E) {
          case "Browser":
            _ = L((0, V.z$)());
            break;
          case "Worker":
            _ = `${L((0, V.z$)())}-${E}`;
            break;
          default:
            _ = E;
        }
        const I = g.length ? g.join(",") : "FirebaseCore-web";
        return `${_}/JsCore/${P.SDK_VERSION}/${I}`;
      }
      class nt {
        constructor(g) {
          (this.auth = g), (this.queue = []);
        }
        pushCallback(g, _) {
          const I = (N) =>
            new Promise((ie, Le) => {
              try {
                ie(g(N));
              } catch (ft) {
                Le(ft);
              }
            });
          (I.onAbort = _), this.queue.push(I);
          const S = this.queue.length - 1;
          return () => {
            this.queue[S] = () => Promise.resolve();
          };
        }
        runMiddleware(g) {
          var _ = this;
          return (0, f.Z)(function* () {
            var I;
            if (_.auth.currentUser === g) return;
            const S = [];
            try {
              for (const N of _.queue)
                yield N(g), N.onAbort && S.push(N.onAbort);
            } catch (N) {
              S.reverse();
              for (const ie of S)
                try {
                  ie();
                } catch {}
              throw _.auth._errorFactory.create("login-blocked", {
                originalMessage:
                  null === (I = N) || void 0 === I ? void 0 : I.message,
              });
            }
          })();
        }
      }
      class He {
        constructor(g, _, I) {
          (this.app = g),
            (this.heartbeatServiceProvider = _),
            (this.config = I),
            (this.currentUser = null),
            (this.emulatorConfig = null),
            (this.operations = Promise.resolve()),
            (this.authStateSubscription = new Y(this)),
            (this.idTokenSubscription = new Y(this)),
            (this.beforeStateQueue = new nt(this)),
            (this.redirectUser = null),
            (this.isProactiveRefreshEnabled = !1),
            (this._canInitEmulator = !0),
            (this._isInitialized = !1),
            (this._deleted = !1),
            (this._initializationPromise = null),
            (this._popupRedirectResolver = null),
            (this._errorFactory = tt),
            (this.lastNotifiedUid = void 0),
            (this.languageCode = null),
            (this.tenantId = null),
            (this.settings = { appVerificationDisabledForTesting: !1 }),
            (this.frameworks = []),
            (this.name = g.name),
            (this.clientVersion = I.sdkClientVersion);
        }
        _initializeWithPersistence(g, _) {
          var I = this;
          return (
            _ && (this._popupRedirectResolver = ne(_)),
            (this._initializationPromise = this.queue(
              (0, f.Z)(function* () {
                var S, N;
                if (
                  !I._deleted &&
                  ((I.persistenceManager = yield ue.create(I, g)), !I._deleted)
                ) {
                  if (
                    null !== (S = I._popupRedirectResolver) &&
                    void 0 !== S &&
                    S._shouldInitProactively
                  )
                    try {
                      yield I._popupRedirectResolver._initialize(I);
                    } catch {}
                  yield I.initializeCurrentUser(_),
                    (I.lastNotifiedUid =
                      (null === (N = I.currentUser) || void 0 === N
                        ? void 0
                        : N.uid) || null),
                    !I._deleted && (I._isInitialized = !0);
                }
              })
            )),
            this._initializationPromise
          );
        }
        _onStorageEvent() {
          var g = this;
          return (0, f.Z)(function* () {
            if (g._deleted) return;
            const _ = yield g.assertedPersistence.getCurrentUser();
            if (g.currentUser || _) {
              if (g.currentUser && _ && g.currentUser.uid === _.uid)
                return (
                  g._currentUser._assign(_),
                  void (yield g.currentUser.getIdToken())
                );
              yield g._updateCurrentUser(_, !0);
            }
          })();
        }
        initializeCurrentUser(g) {
          var _ = this;
          return (0, f.Z)(function* () {
            var I;
            const S = yield _.assertedPersistence.getCurrentUser();
            let N = S,
              ie = !1;
            if (g && _.config.authDomain) {
              yield _.getOrInitRedirectPersistenceManager();
              const Le =
                  null === (I = _.redirectUser) || void 0 === I
                    ? void 0
                    : I._redirectEventId,
                ft = N?._redirectEventId,
                vt = yield _.tryRedirectSignIn(g);
              (!Le || Le === ft) && vt?.user && ((N = vt.user), (ie = !0));
            }
            if (!N) return _.directlySetCurrentUser(null);
            if (!N._redirectEventId) {
              if (ie)
                try {
                  yield _.beforeStateQueue.runMiddleware(N);
                } catch (Le) {
                  (N = S),
                    _._popupRedirectResolver._overrideRedirectResult(_, () =>
                      Promise.reject(Le)
                    );
                }
              return N
                ? _.reloadAndSetCurrentUserOrClear(N)
                : _.directlySetCurrentUser(null);
            }
            return (
              te(_._popupRedirectResolver, _, "argument-error"),
              yield _.getOrInitRedirectPersistenceManager(),
              _.redirectUser &&
              _.redirectUser._redirectEventId === N._redirectEventId
                ? _.directlySetCurrentUser(N)
                : _.reloadAndSetCurrentUserOrClear(N)
            );
          })();
        }
        tryRedirectSignIn(g) {
          var _ = this;
          return (0, f.Z)(function* () {
            let I = null;
            try {
              I = yield _._popupRedirectResolver._completeRedirectFn(_, g, !0);
            } catch {
              yield _._setRedirectUser(null);
            }
            return I;
          })();
        }
        reloadAndSetCurrentUserOrClear(g) {
          var _ = this;
          return (0, f.Z)(function* () {
            var I;
            try {
              yield bn(g);
            } catch (S) {
              if (
                "auth/network-request-failed" !==
                (null === (I = S) || void 0 === I ? void 0 : I.code)
              )
                return _.directlySetCurrentUser(null);
            }
            return _.directlySetCurrentUser(g);
          })();
        }
        useDeviceLanguage() {
          this.languageCode = (function Dt() {
            if (typeof navigator > "u") return null;
            const E = navigator;
            return (E.languages && E.languages[0]) || E.language || null;
          })();
        }
        _delete() {
          var g = this;
          return (0, f.Z)(function* () {
            g._deleted = !0;
          })();
        }
        updateCurrentUser(g) {
          var _ = this;
          return (0, f.Z)(function* () {
            const I = g ? (0, V.m9)(g) : null;
            return (
              I &&
                te(
                  I.auth.config.apiKey === _.config.apiKey,
                  _,
                  "invalid-user-token"
                ),
              _._updateCurrentUser(I && I._clone(_))
            );
          })();
        }
        _updateCurrentUser(g, _ = !1) {
          var I = this;
          return (0, f.Z)(function* () {
            if (!I._deleted)
              return (
                g && te(I.tenantId === g.tenantId, I, "tenant-id-mismatch"),
                _ || (yield I.beforeStateQueue.runMiddleware(g)),
                I.queue(
                  (0, f.Z)(function* () {
                    yield I.directlySetCurrentUser(g), I.notifyAuthListeners();
                  })
                )
              );
          })();
        }
        signOut() {
          var g = this;
          return (0, f.Z)(function* () {
            return (
              yield g.beforeStateQueue.runMiddleware(null),
              (g.redirectPersistenceManager || g._popupRedirectResolver) &&
                (yield g._setRedirectUser(null)),
              g._updateCurrentUser(null, !0)
            );
          })();
        }
        setPersistence(g) {
          var _ = this;
          return this.queue(
            (0, f.Z)(function* () {
              yield _.assertedPersistence.setPersistence(ne(g));
            })
          );
        }
        _getPersistence() {
          return this.assertedPersistence.persistence.type;
        }
        _updateErrorMap(g) {
          this._errorFactory = new V.LL("auth", "Firebase", g());
        }
        onAuthStateChanged(g, _, I) {
          return this.registerStateListener(
            this.authStateSubscription,
            g,
            _,
            I
          );
        }
        beforeAuthStateChanged(g, _) {
          return this.beforeStateQueue.pushCallback(g, _);
        }
        onIdTokenChanged(g, _, I) {
          return this.registerStateListener(this.idTokenSubscription, g, _, I);
        }
        toJSON() {
          var g;
          return {
            apiKey: this.config.apiKey,
            authDomain: this.config.authDomain,
            appName: this.name,
            currentUser:
              null === (g = this._currentUser) || void 0 === g
                ? void 0
                : g.toJSON(),
          };
        }
        _setRedirectUser(g, _) {
          var I = this;
          return (0, f.Z)(function* () {
            const S = yield I.getOrInitRedirectPersistenceManager(_);
            return null === g ? S.removeCurrentUser() : S.setCurrentUser(g);
          })();
        }
        getOrInitRedirectPersistenceManager(g) {
          var _ = this;
          return (0, f.Z)(function* () {
            if (!_.redirectPersistenceManager) {
              const I = (g && ne(g)) || _._popupRedirectResolver;
              te(I, _, "argument-error"),
                (_.redirectPersistenceManager = yield ue.create(
                  _,
                  [ne(I._redirectPersistence)],
                  "redirectUser"
                )),
                (_.redirectUser =
                  yield _.redirectPersistenceManager.getCurrentUser());
            }
            return _.redirectPersistenceManager;
          })();
        }
        _redirectUserForId(g) {
          var _ = this;
          return (0, f.Z)(function* () {
            var I, S;
            return (
              _._isInitialized && (yield _.queue((0, f.Z)(function* () {}))),
              (null === (I = _._currentUser) || void 0 === I
                ? void 0
                : I._redirectEventId) === g
                ? _._currentUser
                : (null === (S = _.redirectUser) || void 0 === S
                    ? void 0
                    : S._redirectEventId) === g
                ? _.redirectUser
                : null
            );
          })();
        }
        _persistUserIfCurrent(g) {
          var _ = this;
          return (0, f.Z)(function* () {
            if (g === _.currentUser)
              return _.queue(
                (0, f.Z)(function* () {
                  return _.directlySetCurrentUser(g);
                })
              );
          })();
        }
        _notifyListenersIfCurrent(g) {
          g === this.currentUser && this.notifyAuthListeners();
        }
        _key() {
          return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;
        }
        _startProactiveRefresh() {
          (this.isProactiveRefreshEnabled = !0),
            this.currentUser && this._currentUser._startProactiveRefresh();
        }
        _stopProactiveRefresh() {
          (this.isProactiveRefreshEnabled = !1),
            this.currentUser && this._currentUser._stopProactiveRefresh();
        }
        get _currentUser() {
          return this.currentUser;
        }
        notifyAuthListeners() {
          var g, _;
          if (!this._isInitialized) return;
          this.idTokenSubscription.next(this.currentUser);
          const I =
            null !==
              (_ =
                null === (g = this.currentUser) || void 0 === g
                  ? void 0
                  : g.uid) && void 0 !== _
              ? _
              : null;
          this.lastNotifiedUid !== I &&
            ((this.lastNotifiedUid = I),
            this.authStateSubscription.next(this.currentUser));
        }
        registerStateListener(g, _, I, S) {
          if (this._deleted) return () => {};
          const N = "function" == typeof _ ? _ : _.next.bind(_),
            ie = this._isInitialized
              ? Promise.resolve()
              : this._initializationPromise;
          return (
            te(ie, this, "internal-error"),
            ie.then(() => N(this.currentUser)),
            "function" == typeof _ ? g.addObserver(_, I, S) : g.addObserver(_)
          );
        }
        directlySetCurrentUser(g) {
          var _ = this;
          return (0, f.Z)(function* () {
            _.currentUser &&
              _.currentUser !== g &&
              (_._currentUser._stopProactiveRefresh(),
              g && _.isProactiveRefreshEnabled && g._startProactiveRefresh()),
              (_.currentUser = g),
              g
                ? yield _.assertedPersistence.setCurrentUser(g)
                : yield _.assertedPersistence.removeCurrentUser();
          })();
        }
        queue(g) {
          return (
            (this.operations = this.operations.then(g, g)), this.operations
          );
        }
        get assertedPersistence() {
          return (
            te(this.persistenceManager, this, "internal-error"),
            this.persistenceManager
          );
        }
        _logFramework(g) {
          !g ||
            this.frameworks.includes(g) ||
            (this.frameworks.push(g),
            this.frameworks.sort(),
            (this.clientVersion = me(
              this.config.clientPlatform,
              this._getFrameworks()
            )));
        }
        _getFrameworks() {
          return this.frameworks;
        }
        _getAdditionalHeaders() {
          var g = this;
          return (0, f.Z)(function* () {
            var _;
            const I = { "X-Client-Version": g.clientVersion };
            g.app.options.appId &&
              (I["X-Firebase-gmpid"] = g.app.options.appId);
            const S = yield null ===
              (_ = g.heartbeatServiceProvider.getImmediate({ optional: !0 })) ||
            void 0 === _
              ? void 0
              : _.getHeartbeatsHeader();
            return S && (I["X-Firebase-Client"] = S), I;
          })();
        }
      }
      function Ot(E) {
        return (0, V.m9)(E);
      }
      class Y {
        constructor(g) {
          (this.auth = g),
            (this.observer = null),
            (this.addObserver = (0, V.ne)((_) => (this.observer = _)));
        }
        get next() {
          return (
            te(this.observer, this.auth, "internal-error"),
            this.observer.next.bind(this.observer)
          );
        }
      }
      function pe(E, g, _) {
        const I = Ot(E);
        te(I._canInitEmulator, I, "emulator-config-failed"),
          te(/^https?:\/\//.test(g), I, "invalid-emulator-scheme");
        const S = !!_?.disableWarnings,
          N = Fe(g),
          { host: ie, port: Le } = (function ut(E) {
            const g = Fe(E),
              _ = /(\/\/)?([^?#/]+)/.exec(E.substr(g.length));
            if (!_) return { host: "", port: null };
            const I = _[2].split("@").pop() || "",
              S = /^(\[[^\]]+\])(:|$)/.exec(I);
            if (S) {
              const N = S[1];
              return { host: N, port: Sn(I.substr(N.length + 1)) };
            }
            {
              const [N, ie] = I.split(":");
              return { host: N, port: Sn(ie) };
            }
          })(g);
        (I.config.emulator = {
          url: `${N}//${ie}${null === Le ? "" : `:${Le}`}/`,
        }),
          (I.settings.appVerificationDisabledForTesting = !0),
          (I.emulatorConfig = Object.freeze({
            host: ie,
            port: Le,
            protocol: N.replace(":", ""),
            options: Object.freeze({ disableWarnings: S }),
          })),
          S ||
            (function hn() {
              function E() {
                const g = document.createElement("p"),
                  _ = g.style;
                (g.innerText =
                  "Running in emulator mode. Do not use with production credentials."),
                  (_.position = "fixed"),
                  (_.width = "100%"),
                  (_.backgroundColor = "#ffffff"),
                  (_.border = ".1em solid #000000"),
                  (_.color = "#b50000"),
                  (_.bottom = "0px"),
                  (_.left = "0px"),
                  (_.margin = "0px"),
                  (_.zIndex = "10000"),
                  (_.textAlign = "center"),
                  g.classList.add("firebase-emulator-warning"),
                  document.body.appendChild(g);
              }
              typeof console < "u" &&
                "function" == typeof console.info &&
                console.info(
                  "WARNING: You are using the Auth Emulator, which is intended for local testing only.  Do not use with production credentials."
                ),
                typeof window < "u" &&
                  typeof document < "u" &&
                  ("loading" === document.readyState
                    ? window.addEventListener("DOMContentLoaded", E)
                    : E());
            })();
      }
      function Fe(E) {
        const g = E.indexOf(":");
        return g < 0 ? "" : E.substr(0, g + 1);
      }
      function Sn(E) {
        if (!E) return null;
        const g = Number(E);
        return isNaN(g) ? null : g;
      }
      class Tt {
        constructor(g, _) {
          (this.providerId = g), (this.signInMethod = _);
        }
        toJSON() {
          return ye("not implemented");
        }
        _getIdTokenResponse(g) {
          return ye("not implemented");
        }
        _linkToIdToken(g, _) {
          return ye("not implemented");
        }
        _getReauthenticationResolver(g) {
          return ye("not implemented");
        }
      }
      function Qn(E, g) {
        return bi.apply(this, arguments);
      }
      function bi() {
        return (bi = (0, f.Z)(function* (E, g) {
          return ze(E, "POST", "/v1/accounts:resetPassword", Nt(E, g));
        })).apply(this, arguments);
      }
      function fn(E, g) {
        return Jo.apply(this, arguments);
      }
      function Jo() {
        return (Jo = (0, f.Z)(function* (E, g) {
          return ze(E, "POST", "/v1/accounts:update", g);
        })).apply(this, arguments);
      }
      function Zm(E, g) {
        return Xo.apply(this, arguments);
      }
      function Xo() {
        return (Xo = (0, f.Z)(function* (E, g) {
          return ze(E, "POST", "/v1/accounts:update", Nt(E, g));
        })).apply(this, arguments);
      }
      function Vs() {
        return (Vs = (0, f.Z)(function* (E, g) {
          return $t(E, "POST", "/v1/accounts:signInWithPassword", Nt(E, g));
        })).apply(this, arguments);
      }
      function go(E, g) {
        return ui.apply(this, arguments);
      }
      function ui() {
        return (ui = (0, f.Z)(function* (E, g) {
          return ze(E, "POST", "/v1/accounts:sendOobCode", Nt(E, g));
        })).apply(this, arguments);
      }
      function br(E, g) {
        return ed.apply(this, arguments);
      }
      function ed() {
        return (ed = (0, f.Z)(function* (E, g) {
          return go(E, g);
        })).apply(this, arguments);
      }
      function Dr(E, g) {
        return li.apply(this, arguments);
      }
      function li() {
        return (li = (0, f.Z)(function* (E, g) {
          return go(E, g);
        })).apply(this, arguments);
      }
      function zu(E, g) {
        return Us.apply(this, arguments);
      }
      function Us() {
        return (Us = (0, f.Z)(function* (E, g) {
          return go(E, g);
        })).apply(this, arguments);
      }
      function ea(E, g) {
        return ci.apply(this, arguments);
      }
      function ci() {
        return (ci = (0, f.Z)(function* (E, g) {
          return go(E, g);
        })).apply(this, arguments);
      }
      function Qm() {
        return (Qm = (0, f.Z)(function* (E, g) {
          return $t(E, "POST", "/v1/accounts:signInWithEmailLink", Nt(E, g));
        })).apply(this, arguments);
      }
      function td() {
        return (td = (0, f.Z)(function* (E, g) {
          return $t(E, "POST", "/v1/accounts:signInWithEmailLink", Nt(E, g));
        })).apply(this, arguments);
      }
      class qu extends Tt {
        constructor(g, _, I, S = null) {
          super("password", I),
            (this._email = g),
            (this._password = _),
            (this._tenantId = S);
        }
        static _fromEmailAndPassword(g, _) {
          return new qu(g, _, "password");
        }
        static _fromEmailAndCode(g, _, I = null) {
          return new qu(g, _, "emailLink", I);
        }
        toJSON() {
          return {
            email: this._email,
            password: this._password,
            signInMethod: this.signInMethod,
            tenantId: this._tenantId,
          };
        }
        static fromJSON(g) {
          const _ = "string" == typeof g ? JSON.parse(g) : g;
          if (_?.email && _?.password) {
            if ("password" === _.signInMethod)
              return this._fromEmailAndPassword(_.email, _.password);
            if ("emailLink" === _.signInMethod)
              return this._fromEmailAndCode(_.email, _.password, _.tenantId);
          }
          return null;
        }
        _getIdTokenResponse(g) {
          var _ = this;
          return (0, f.Z)(function* () {
            switch (_.signInMethod) {
              case "password":
                return (function Wu(E, g) {
                  return Vs.apply(this, arguments);
                })(g, {
                  returnSecureToken: !0,
                  email: _._email,
                  password: _._password,
                });
              case "emailLink":
                return (function Ym(E, g) {
                  return Qm.apply(this, arguments);
                })(g, { email: _._email, oobCode: _._password });
              default:
                rt(g, "internal-error");
            }
          })();
        }
        _linkToIdToken(g, _) {
          var I = this;
          return (0, f.Z)(function* () {
            switch (I.signInMethod) {
              case "password":
                return fn(g, {
                  idToken: _,
                  returnSecureToken: !0,
                  email: I._email,
                  password: I._password,
                });
              case "emailLink":
                return (function kf(E, g) {
                  return td.apply(this, arguments);
                })(g, { idToken: _, email: I._email, oobCode: I._password });
              default:
                rt(g, "internal-error");
            }
          })();
        }
        _getReauthenticationResolver(g) {
          return this._getIdTokenResponse(g);
        }
      }
      function Bs(E, g) {
        return Jm.apply(this, arguments);
      }
      function Jm() {
        return (Jm = (0, f.Z)(function* (E, g) {
          return $t(E, "POST", "/v1/accounts:signInWithIdp", Nt(E, g));
        })).apply(this, arguments);
      }
      class hs extends Tt {
        constructor() {
          super(...arguments), (this.pendingToken = null);
        }
        static _fromParams(g) {
          const _ = new hs(g.providerId, g.signInMethod);
          return (
            g.idToken || g.accessToken
              ? (g.idToken && (_.idToken = g.idToken),
                g.accessToken && (_.accessToken = g.accessToken),
                g.nonce && !g.pendingToken && (_.nonce = g.nonce),
                g.pendingToken && (_.pendingToken = g.pendingToken))
              : g.oauthToken && g.oauthTokenSecret
              ? ((_.accessToken = g.oauthToken),
                (_.secret = g.oauthTokenSecret))
              : rt("argument-error"),
            _
          );
        }
        toJSON() {
          return {
            idToken: this.idToken,
            accessToken: this.accessToken,
            secret: this.secret,
            nonce: this.nonce,
            pendingToken: this.pendingToken,
            providerId: this.providerId,
            signInMethod: this.signInMethod,
          };
        }
        static fromJSON(g) {
          const _ = "string" == typeof g ? JSON.parse(g) : g,
            { providerId: I, signInMethod: S } = _,
            N = (0, re._T)(_, ["providerId", "signInMethod"]);
          if (!I || !S) return null;
          const ie = new hs(I, S);
          return (
            (ie.idToken = N.idToken || void 0),
            (ie.accessToken = N.accessToken || void 0),
            (ie.secret = N.secret),
            (ie.nonce = N.nonce),
            (ie.pendingToken = N.pendingToken || null),
            ie
          );
        }
        _getIdTokenResponse(g) {
          return Bs(g, this.buildRequest());
        }
        _linkToIdToken(g, _) {
          const I = this.buildRequest();
          return (I.idToken = _), Bs(g, I);
        }
        _getReauthenticationResolver(g) {
          const _ = this.buildRequest();
          return (_.autoCreate = !1), Bs(g, _);
        }
        buildRequest() {
          const g = { requestUri: "http://localhost", returnSecureToken: !0 };
          if (this.pendingToken) g.pendingToken = this.pendingToken;
          else {
            const _ = {};
            this.idToken && (_.id_token = this.idToken),
              this.accessToken && (_.access_token = this.accessToken),
              this.secret && (_.oauth_token_secret = this.secret),
              (_.providerId = this.providerId),
              this.nonce && !this.pendingToken && (_.nonce = this.nonce),
              (g.postBody = (0, V.xO)(_));
          }
          return g;
        }
      }
      function r0(E, g) {
        return Ff.apply(this, arguments);
      }
      function Ff() {
        return (Ff = (0, f.Z)(function* (E, g) {
          return ze(E, "POST", "/v1/accounts:sendVerificationCode", Nt(E, g));
        })).apply(this, arguments);
      }
      function Ku() {
        return (Ku = (0, f.Z)(function* (E, g) {
          return $t(E, "POST", "/v1/accounts:signInWithPhoneNumber", Nt(E, g));
        })).apply(this, arguments);
      }
      function Lf() {
        return (Lf = (0, f.Z)(function* (E, g) {
          const _ = yield $t(
            E,
            "POST",
            "/v1/accounts:signInWithPhoneNumber",
            Nt(E, g)
          );
          if (_.temporaryProof)
            throw xn(E, "account-exists-with-different-credential", _);
          return _;
        })).apply(this, arguments);
      }
      const a0 = { USER_NOT_FOUND: "user-not-found" };
      function Vf() {
        return (Vf = (0, f.Z)(function* (E, g) {
          return $t(
            E,
            "POST",
            "/v1/accounts:signInWithPhoneNumber",
            Nt(E, Object.assign(Object.assign({}, g), { operation: "REAUTH" })),
            a0
          );
        })).apply(this, arguments);
      }
      class js extends Tt {
        constructor(g) {
          super("phone", "phone"), (this.params = g);
        }
        static _fromVerification(g, _) {
          return new js({ verificationId: g, verificationCode: _ });
        }
        static _fromTokenResponse(g, _) {
          return new js({ phoneNumber: g, temporaryProof: _ });
        }
        _getIdTokenResponse(g) {
          return (function s0(E, g) {
            return Ku.apply(this, arguments);
          })(g, this._makeVerificationRequest());
        }
        _linkToIdToken(g, _) {
          return (function o0(E, g) {
            return Lf.apply(this, arguments);
          })(g, Object.assign({ idToken: _ }, this._makeVerificationRequest()));
        }
        _getReauthenticationResolver(g) {
          return (function u0(E, g) {
            return Vf.apply(this, arguments);
          })(g, this._makeVerificationRequest());
        }
        _makeVerificationRequest() {
          const {
            temporaryProof: g,
            phoneNumber: _,
            verificationId: I,
            verificationCode: S,
          } = this.params;
          return g && _
            ? { temporaryProof: g, phoneNumber: _ }
            : { sessionInfo: I, code: S };
        }
        toJSON() {
          const g = { providerId: this.providerId };
          return (
            this.params.phoneNumber &&
              (g.phoneNumber = this.params.phoneNumber),
            this.params.temporaryProof &&
              (g.temporaryProof = this.params.temporaryProof),
            this.params.verificationCode &&
              (g.verificationCode = this.params.verificationCode),
            this.params.verificationId &&
              (g.verificationId = this.params.verificationId),
            g
          );
        }
        static fromJSON(g) {
          "string" == typeof g && (g = JSON.parse(g));
          const {
            verificationId: _,
            verificationCode: I,
            phoneNumber: S,
            temporaryProof: N,
          } = g;
          return I || _ || S || N
            ? new js({
                verificationId: _,
                verificationCode: I,
                phoneNumber: S,
                temporaryProof: N,
              })
            : null;
        }
      }
      class Zu {
        constructor(g) {
          var _, I, S, N, ie, Le;
          const ft = (0, V.zd)((0, V.pd)(g)),
            vt = null !== (_ = ft.apiKey) && void 0 !== _ ? _ : null,
            Bt = null !== (I = ft.oobCode) && void 0 !== I ? I : null,
            $n = (function nd(E) {
              switch (E) {
                case "recoverEmail":
                  return "RECOVER_EMAIL";
                case "resetPassword":
                  return "PASSWORD_RESET";
                case "signIn":
                  return "EMAIL_SIGNIN";
                case "verifyEmail":
                  return "VERIFY_EMAIL";
                case "verifyAndChangeEmail":
                  return "VERIFY_AND_CHANGE_EMAIL";
                case "revertSecondFactorAddition":
                  return "REVERT_SECOND_FACTOR_ADDITION";
                default:
                  return null;
              }
            })(null !== (S = ft.mode) && void 0 !== S ? S : null);
          te(vt && Bt && $n, "argument-error"),
            (this.apiKey = vt),
            (this.operation = $n),
            (this.code = Bt),
            (this.continueUrl =
              null !== (N = ft.continueUrl) && void 0 !== N ? N : null),
            (this.languageCode =
              null !== (ie = ft.languageCode) && void 0 !== ie ? ie : null),
            (this.tenantId =
              null !== (Le = ft.tenantId) && void 0 !== Le ? Le : null);
        }
        static parseLink(g) {
          const _ = (function l0(E) {
            const g = (0, V.zd)((0, V.pd)(E)).link,
              _ = g ? (0, V.zd)((0, V.pd)(g)).deep_link_id : null,
              I = (0, V.zd)((0, V.pd)(E)).deep_link_id;
            return (
              (I ? (0, V.zd)((0, V.pd)(I)).link : null) || I || _ || g || E
            );
          })(g);
          try {
            return new Zu(_);
          } catch {
            return null;
          }
        }
      }
      let fs = (() => {
        class E {
          constructor() {
            this.providerId = E.PROVIDER_ID;
          }
          static credential(_, I) {
            return qu._fromEmailAndPassword(_, I);
          }
          static credentialWithLink(_, I) {
            const S = Zu.parseLink(I);
            return (
              te(S, "argument-error"),
              qu._fromEmailAndCode(_, S.code, S.tenantId)
            );
          }
        }
        return (
          (E.PROVIDER_ID = "password"),
          (E.EMAIL_PASSWORD_SIGN_IN_METHOD = "password"),
          (E.EMAIL_LINK_SIGN_IN_METHOD = "emailLink"),
          E
        );
      })();
      class ps {
        constructor(g) {
          (this.providerId = g),
            (this.defaultLanguageCode = null),
            (this.customParameters = {});
        }
        setDefaultLanguage(g) {
          this.defaultLanguageCode = g;
        }
        setCustomParameters(g) {
          return (this.customParameters = g), this;
        }
        getCustomParameters() {
          return this.customParameters;
        }
      }
      class gs extends ps {
        constructor() {
          super(...arguments), (this.scopes = []);
        }
        addScope(g) {
          return this.scopes.includes(g) || this.scopes.push(g), this;
        }
        getScopes() {
          return [...this.scopes];
        }
      }
      class ta extends gs {
        static credentialFromJSON(g) {
          const _ = "string" == typeof g ? JSON.parse(g) : g;
          return (
            te("providerId" in _ && "signInMethod" in _, "argument-error"),
            hs._fromParams(_)
          );
        }
        credential(g) {
          return this._credential(
            Object.assign(Object.assign({}, g), { nonce: g.rawNonce })
          );
        }
        _credential(g) {
          return (
            te(g.idToken || g.accessToken, "argument-error"),
            hs._fromParams(
              Object.assign(Object.assign({}, g), {
                providerId: this.providerId,
                signInMethod: this.providerId,
              })
            )
          );
        }
        static credentialFromResult(g) {
          return ta.oauthCredentialFromTaggedObject(g);
        }
        static credentialFromError(g) {
          return ta.oauthCredentialFromTaggedObject(g.customData || {});
        }
        static oauthCredentialFromTaggedObject({ _tokenResponse: g }) {
          if (!g) return null;
          const {
            oauthIdToken: _,
            oauthAccessToken: I,
            oauthTokenSecret: S,
            pendingToken: N,
            nonce: ie,
            providerId: Le,
          } = g;
          if ((!I && !S && !_ && !N) || !Le) return null;
          try {
            return new ta(Le)._credential({
              idToken: _,
              accessToken: I,
              nonce: ie,
              pendingToken: N,
            });
          } catch {
            return null;
          }
        }
      }
      let Xm = (() => {
          class E extends gs {
            constructor() {
              super("facebook.com");
            }
            static credential(_) {
              return hs._fromParams({
                providerId: E.PROVIDER_ID,
                signInMethod: E.FACEBOOK_SIGN_IN_METHOD,
                accessToken: _,
              });
            }
            static credentialFromResult(_) {
              return E.credentialFromTaggedObject(_);
            }
            static credentialFromError(_) {
              return E.credentialFromTaggedObject(_.customData || {});
            }
            static credentialFromTaggedObject({ _tokenResponse: _ }) {
              if (!_ || !("oauthAccessToken" in _) || !_.oauthAccessToken)
                return null;
              try {
                return E.credential(_.oauthAccessToken);
              } catch {
                return null;
              }
            }
          }
          return (
            (E.FACEBOOK_SIGN_IN_METHOD = "facebook.com"),
            (E.PROVIDER_ID = "facebook.com"),
            E
          );
        })(),
        Yu = (() => {
          class E extends gs {
            constructor() {
              super("google.com"), this.addScope("profile");
            }
            static credential(_, I) {
              return hs._fromParams({
                providerId: E.PROVIDER_ID,
                signInMethod: E.GOOGLE_SIGN_IN_METHOD,
                idToken: _,
                accessToken: I,
              });
            }
            static credentialFromResult(_) {
              return E.credentialFromTaggedObject(_);
            }
            static credentialFromError(_) {
              return E.credentialFromTaggedObject(_.customData || {});
            }
            static credentialFromTaggedObject({ _tokenResponse: _ }) {
              if (!_) return null;
              const { oauthIdToken: I, oauthAccessToken: S } = _;
              if (!I && !S) return null;
              try {
                return E.credential(I, S);
              } catch {
                return null;
              }
            }
          }
          return (
            (E.GOOGLE_SIGN_IN_METHOD = "google.com"),
            (E.PROVIDER_ID = "google.com"),
            E
          );
        })(),
        Qu = (() => {
          class E extends gs {
            constructor() {
              super("github.com");
            }
            static credential(_) {
              return hs._fromParams({
                providerId: E.PROVIDER_ID,
                signInMethod: E.GITHUB_SIGN_IN_METHOD,
                accessToken: _,
              });
            }
            static credentialFromResult(_) {
              return E.credentialFromTaggedObject(_);
            }
            static credentialFromError(_) {
              return E.credentialFromTaggedObject(_.customData || {});
            }
            static credentialFromTaggedObject({ _tokenResponse: _ }) {
              if (!_ || !("oauthAccessToken" in _) || !_.oauthAccessToken)
                return null;
              try {
                return E.credential(_.oauthAccessToken);
              } catch {
                return null;
              }
            }
          }
          return (
            (E.GITHUB_SIGN_IN_METHOD = "github.com"),
            (E.PROVIDER_ID = "github.com"),
            E
          );
        })();
      class na extends Tt {
        constructor(g, _) {
          super(g, g), (this.pendingToken = _);
        }
        _getIdTokenResponse(g) {
          return Bs(g, this.buildRequest());
        }
        _linkToIdToken(g, _) {
          const I = this.buildRequest();
          return (I.idToken = _), Bs(g, I);
        }
        _getReauthenticationResolver(g) {
          const _ = this.buildRequest();
          return (_.autoCreate = !1), Bs(g, _);
        }
        toJSON() {
          return {
            signInMethod: this.signInMethod,
            providerId: this.providerId,
            pendingToken: this.pendingToken,
          };
        }
        static fromJSON(g) {
          const _ = "string" == typeof g ? JSON.parse(g) : g,
            { providerId: I, signInMethod: S, pendingToken: N } = _;
          return I && S && N && I === S ? new na(I, N) : null;
        }
        static _create(g, _) {
          return new na(g, _);
        }
        buildRequest() {
          return {
            requestUri: "http://localhost",
            returnSecureToken: !0,
            pendingToken: this.pendingToken,
          };
        }
      }
      class Xu extends ps {
        constructor(g) {
          te(g.startsWith("saml."), "argument-error"), super(g);
        }
        static credentialFromResult(g) {
          return Xu.samlCredentialFromTaggedObject(g);
        }
        static credentialFromError(g) {
          return Xu.samlCredentialFromTaggedObject(g.customData || {});
        }
        static credentialFromJSON(g) {
          const _ = na.fromJSON(g);
          return te(_, "argument-error"), _;
        }
        static samlCredentialFromTaggedObject({ _tokenResponse: g }) {
          if (!g) return null;
          const { pendingToken: _, providerId: I } = g;
          if (!_ || !I) return null;
          try {
            return na._create(I, _);
          } catch {
            return null;
          }
        }
      }
      let di = (() => {
        class E extends gs {
          constructor() {
            super("twitter.com");
          }
          static credential(_, I) {
            return hs._fromParams({
              providerId: E.PROVIDER_ID,
              signInMethod: E.TWITTER_SIGN_IN_METHOD,
              oauthToken: _,
              oauthTokenSecret: I,
            });
          }
          static credentialFromResult(_) {
            return E.credentialFromTaggedObject(_);
          }
          static credentialFromError(_) {
            return E.credentialFromTaggedObject(_.customData || {});
          }
          static credentialFromTaggedObject({ _tokenResponse: _ }) {
            if (!_) return null;
            const { oauthAccessToken: I, oauthTokenSecret: S } = _;
            if (!I || !S) return null;
            try {
              return E.credential(I, S);
            } catch {
              return null;
            }
          }
        }
        return (
          (E.TWITTER_SIGN_IN_METHOD = "twitter.com"),
          (E.PROVIDER_ID = "twitter.com"),
          E
        );
      })();
      function el(E, g) {
        return rd.apply(this, arguments);
      }
      function rd() {
        return (rd = (0, f.Z)(function* (E, g) {
          return $t(E, "POST", "/v1/accounts:signUp", Nt(E, g));
        })).apply(this, arguments);
      }
      class Zr {
        constructor(g) {
          (this.user = g.user),
            (this.providerId = g.providerId),
            (this._tokenResponse = g._tokenResponse),
            (this.operationType = g.operationType);
        }
        static _fromIdTokenResponse(g, _, I, S = !1) {
          return (0, f.Z)(function* () {
            const N = yield st._fromIdTokenResponse(g, I, S),
              ie = tl(I);
            return new Zr({
              user: N,
              providerId: ie,
              _tokenResponse: I,
              operationType: _,
            });
          })();
        }
        static _forOperation(g, _, I) {
          return (0, f.Z)(function* () {
            yield g._updateTokensIfNecessary(I, !0);
            const S = tl(I);
            return new Zr({
              user: g,
              providerId: S,
              _tokenResponse: I,
              operationType: _,
            });
          })();
        }
      }
      function tl(E) {
        return E.providerId
          ? E.providerId
          : "phoneNumber" in E
          ? "phone"
          : null;
      }
      function Bf(E) {
        return sr.apply(this, arguments);
      }
      function sr() {
        return (sr = (0, f.Z)(function* (E) {
          var g;
          const _ = Ot(E);
          if (
            (yield _._initializationPromise,
            null !== (g = _.currentUser) && void 0 !== g && g.isAnonymous)
          )
            return new Zr({
              user: _.currentUser,
              providerId: null,
              operationType: "signIn",
            });
          const I = yield el(_, { returnSecureToken: !0 }),
            S = yield Zr._fromIdTokenResponse(_, "signIn", I, !0);
          return yield _._updateCurrentUser(S.user), S;
        })).apply(this, arguments);
      }
      class id extends V.ZR {
        constructor(g, _, I, S) {
          var N;
          super(_.code, _.message),
            (this.operationType = I),
            (this.user = S),
            Object.setPrototypeOf(this, id.prototype),
            (this.customData = {
              appName: g.name,
              tenantId: null !== (N = g.tenantId) && void 0 !== N ? N : void 0,
              _serverResponse: _.customData._serverResponse,
              operationType: I,
            });
        }
        static _fromErrorAndOperation(g, _, I, S) {
          return new id(g, _, I, S);
        }
      }
      function c0(E, g, _, I) {
        return (
          "reauthenticate" === g
            ? _._getReauthenticationResolver(E)
            : _._getIdTokenResponse(E)
        ).catch((N) => {
          throw "auth/multi-factor-auth-required" === N.code
            ? id._fromErrorAndOperation(E, N, g, I)
            : N;
        });
      }
      function qa(E) {
        return new Set(E.map(({ providerId: g }) => g).filter((g) => !!g));
      }
      function Di(E, g) {
        return nl.apply(this, arguments);
      }
      function nl() {
        return (nl = (0, f.Z)(function* (E, g) {
          const _ = (0, V.m9)(E);
          yield Tr(!0, _, g);
          const { providerUserInfo: I } = yield fe(_.auth, {
              idToken: yield _.getIdToken(),
              deleteProvider: [g],
            }),
            S = qa(I || []);
          return (
            (_.providerData = _.providerData.filter((N) =>
              S.has(N.providerId)
            )),
            S.has("phone") || (_.phoneNumber = null),
            yield _.auth._persistUserIfCurrent(_),
            _
          );
        })).apply(this, arguments);
      }
      function Ka(E, g) {
        return mo.apply(this, arguments);
      }
      function mo() {
        return (mo = (0, f.Z)(function* (E, g, _ = !1) {
          const I = yield it(
            E,
            g._linkToIdToken(E.auth, yield E.getIdToken()),
            _
          );
          return Zr._forOperation(E, "link", I);
        })).apply(this, arguments);
      }
      function Tr(E, g, _) {
        return rl.apply(this, arguments);
      }
      function rl() {
        return (rl = (0, f.Z)(function* (E, g, _) {
          yield bn(g);
          const S = !1 === E ? "provider-already-linked" : "no-such-provider";
          te(qa(g.providerData).has(_) === E, g.auth, S);
        })).apply(this, arguments);
      }
      function ra(E, g) {
        return _o.apply(this, arguments);
      }
      function _o() {
        return (_o = (0, f.Z)(function* (E, g, _ = !1) {
          var I;
          const { auth: S } = E,
            N = "reauthenticate";
          try {
            const ie = yield it(E, c0(S, N, g, E), _);
            te(ie.idToken, S, "internal-error");
            const Le = bt(ie.idToken);
            te(Le, S, "internal-error");
            const { sub: ft } = Le;
            return (
              te(E.uid === ft, S, "user-mismatch"), Zr._forOperation(E, N, ie)
            );
          } catch (ie) {
            throw (
              ("auth/user-not-found" ===
                (null === (I = ie) || void 0 === I ? void 0 : I.code) &&
                rt(S, "user-mismatch"),
              ie)
            );
          }
        })).apply(this, arguments);
      }
      function ms(E, g) {
        return yo.apply(this, arguments);
      }
      function yo() {
        return (yo = (0, f.Z)(function* (E, g, _ = !1) {
          const I = "signIn",
            S = yield c0(E, I, g),
            N = yield Zr._fromIdTokenResponse(E, I, S);
          return _ || (yield E._updateCurrentUser(N.user)), N;
        })).apply(this, arguments);
      }
      function ia(E, g) {
        return Ht.apply(this, arguments);
      }
      function Ht() {
        return (Ht = (0, f.Z)(function* (E, g) {
          return ms(Ot(E), g);
        })).apply(this, arguments);
      }
      function sd(E, g) {
        return jf.apply(this, arguments);
      }
      function jf() {
        return (jf = (0, f.Z)(function* (E, g) {
          const _ = (0, V.m9)(E);
          return yield Tr(!1, _, g.providerId), Ka(_, g);
        })).apply(this, arguments);
      }
      function $f(E, g) {
        return od.apply(this, arguments);
      }
      function od() {
        return (od = (0, f.Z)(function* (E, g) {
          return ra((0, V.m9)(E), g);
        })).apply(this, arguments);
      }
      function il(E, g) {
        return vo.apply(this, arguments);
      }
      function vo() {
        return (vo = (0, f.Z)(function* (E, g) {
          return $t(E, "POST", "/v1/accounts:signInWithCustomToken", Nt(E, g));
        })).apply(this, arguments);
      }
      function Hf(E, g) {
        return sl.apply(this, arguments);
      }
      function sl() {
        return (sl = (0, f.Z)(function* (E, g) {
          const _ = Ot(E),
            I = yield il(_, { token: g, returnSecureToken: !0 }),
            S = yield Zr._fromIdTokenResponse(_, "signIn", I);
          return yield _._updateCurrentUser(S.user), S;
        })).apply(this, arguments);
      }
      class je {
        constructor(g, _) {
          (this.factorId = g),
            (this.uid = _.mfaEnrollmentId),
            (this.enrollmentTime = new Date(_.enrolledAt).toUTCString()),
            (this.displayName = _.displayName);
        }
        static _fromServerResponse(g, _) {
          return "phoneInfo" in _
            ? mn._fromServerResponse(g, _)
            : rt(g, "internal-error");
        }
      }
      class mn extends je {
        constructor(g) {
          super("phone", g), (this.phoneNumber = g.phoneInfo);
        }
        static _fromServerResponse(g, _) {
          return new mn(_);
        }
      }
      function Eo(E, g, _) {
        var I;
        te(
          (null === (I = _.url) || void 0 === I ? void 0 : I.length) > 0,
          E,
          "invalid-continue-uri"
        ),
          te(
            typeof _.dynamicLinkDomain > "u" || _.dynamicLinkDomain.length > 0,
            E,
            "invalid-dynamic-link-domain"
          ),
          (g.continueUrl = _.url),
          (g.dynamicLinkDomain = _.dynamicLinkDomain),
          (g.canHandleCodeInApp = _.handleCodeInApp),
          _.iOS &&
            (te(_.iOS.bundleId.length > 0, E, "missing-ios-bundle-id"),
            (g.iOSBundleId = _.iOS.bundleId)),
          _.android &&
            (te(
              _.android.packageName.length > 0,
              E,
              "missing-android-pkg-name"
            ),
            (g.androidInstallApp = _.android.installApp),
            (g.androidMinimumVersionCode = _.android.minimumVersion),
            (g.androidPackageName = _.android.packageName));
      }
      function ol(E, g, _) {
        return Jn.apply(this, arguments);
      }
      function Jn() {
        return (Jn = (0, f.Z)(function* (E, g, _) {
          const I = (0, V.m9)(E),
            S = { requestType: "PASSWORD_RESET", email: g };
          _ && Eo(I, S, _), yield Dr(I, S);
        })).apply(this, arguments);
      }
      function ad(E, g, _) {
        return wo.apply(this, arguments);
      }
      function wo() {
        return (wo = (0, f.Z)(function* (E, g, _) {
          yield Qn((0, V.m9)(E), { oobCode: g, newPassword: _ });
        })).apply(this, arguments);
      }
      function Zi(E, g) {
        return Za.apply(this, arguments);
      }
      function Za() {
        return (Za = (0, f.Z)(function* (E, g) {
          yield Zm((0, V.m9)(E), { oobCode: g });
        })).apply(this, arguments);
      }
      function al(E, g) {
        return Ya.apply(this, arguments);
      }
      function Ya() {
        return (Ya = (0, f.Z)(function* (E, g) {
          const _ = (0, V.m9)(E),
            I = yield Qn(_, { oobCode: g }),
            S = I.requestType;
          switch ((te(S, _, "internal-error"), S)) {
            case "EMAIL_SIGNIN":
              break;
            case "VERIFY_AND_CHANGE_EMAIL":
              te(I.newEmail, _, "internal-error");
              break;
            case "REVERT_SECOND_FACTOR_ADDITION":
              te(I.mfaInfo, _, "internal-error");
            default:
              te(I.email, _, "internal-error");
          }
          let N = null;
          return (
            I.mfaInfo && (N = je._fromServerResponse(Ot(_), I.mfaInfo)),
            {
              data: {
                email:
                  ("VERIFY_AND_CHANGE_EMAIL" === I.requestType
                    ? I.newEmail
                    : I.email) || null,
                previousEmail:
                  ("VERIFY_AND_CHANGE_EMAIL" === I.requestType
                    ? I.email
                    : I.newEmail) || null,
                multiFactorInfo: N,
              },
              operation: S,
            }
          );
        })).apply(this, arguments);
      }
      function Gf(E, g) {
        return e_.apply(this, arguments);
      }
      function e_() {
        return (e_ = (0, f.Z)(function* (E, g) {
          const { data: _ } = yield al((0, V.m9)(E), g);
          return _.email;
        })).apply(this, arguments);
      }
      function sa(E, g, _) {
        return fr.apply(this, arguments);
      }
      function fr() {
        return (fr = (0, f.Z)(function* (E, g, _) {
          const I = Ot(E),
            S = yield el(I, { returnSecureToken: !0, email: g, password: _ }),
            N = yield Zr._fromIdTokenResponse(I, "signIn", S);
          return yield I._updateCurrentUser(N.user), N;
        })).apply(this, arguments);
      }
      function _s(E, g, _) {
        return ia((0, V.m9)(E), fs.credential(g, _));
      }
      function ud(E, g, _) {
        return ys.apply(this, arguments);
      }
      function ys() {
        return (ys = (0, f.Z)(function* (E, g, _) {
          const I = (0, V.m9)(E),
            S = { requestType: "EMAIL_SIGNIN", email: g };
          te(_.handleCodeInApp, I, "argument-error"),
            _ && Eo(I, S, _),
            yield zu(I, S);
        })).apply(this, arguments);
      }
      function vs(E, g) {
        return "EMAIL_SIGNIN" === Zu.parseLink(g)?.operation;
      }
      function t_(E, g, _) {
        return ul.apply(this, arguments);
      }
      function ul() {
        return (ul = (0, f.Z)(function* (E, g, _) {
          const I = (0, V.m9)(E),
            S = fs.credentialWithLink(g, _ || ae());
          return (
            te(S._tenantId === (I.tenantId || null), I, "tenant-id-mismatch"),
            ia(I, S)
          );
        })).apply(this, arguments);
      }
      function Wf(E, g) {
        return ld.apply(this, arguments);
      }
      function ld() {
        return (ld = (0, f.Z)(function* (E, g) {
          return ze(E, "POST", "/v1/accounts:createAuthUri", Nt(E, g));
        })).apply(this, arguments);
      }
      function cd(E, g) {
        return oa.apply(this, arguments);
      }
      function oa() {
        return (oa = (0, f.Z)(function* (E, g) {
          const I = {
              identifier: g,
              continueUri: $e() ? ae() : "http://localhost",
            },
            { signinMethods: S } = yield Wf((0, V.m9)(E), I);
          return S || [];
        })).apply(this, arguments);
      }
      function zf(E, g) {
        return Qa.apply(this, arguments);
      }
      function Qa() {
        return (Qa = (0, f.Z)(function* (E, g) {
          const _ = (0, V.m9)(E),
            S = { requestType: "VERIFY_EMAIL", idToken: yield E.getIdToken() };
          g && Eo(_.auth, S, g);
          const { email: N } = yield br(_.auth, S);
          N !== E.email && (yield E.reload());
        })).apply(this, arguments);
      }
      function n_(E, g, _) {
        return aa.apply(this, arguments);
      }
      function aa() {
        return (aa = (0, f.Z)(function* (E, g, _) {
          const I = (0, V.m9)(E),
            N = {
              requestType: "VERIFY_AND_CHANGE_EMAIL",
              idToken: yield E.getIdToken(),
              newEmail: g,
            };
          _ && Eo(I.auth, N, _);
          const { email: ie } = yield ea(I.auth, N);
          ie !== E.email && (yield E.reload());
        })).apply(this, arguments);
      }
      function qf(E, g) {
        return dd.apply(this, arguments);
      }
      function dd() {
        return (dd = (0, f.Z)(function* (E, g) {
          return ze(E, "POST", "/v1/accounts:update", g);
        })).apply(this, arguments);
      }
      function Kf(E, g) {
        return ll.apply(this, arguments);
      }
      function ll() {
        return (ll = (0, f.Z)(function* (E, { displayName: g, photoURL: _ }) {
          if (void 0 === g && void 0 === _) return;
          const I = (0, V.m9)(E),
            N = {
              idToken: yield I.getIdToken(),
              displayName: g,
              photoUrl: _,
              returnSecureToken: !0,
            },
            ie = yield it(I, qf(I.auth, N));
          (I.displayName = ie.displayName || null),
            (I.photoURL = ie.photoUrl || null);
          const Le = I.providerData.find(
            ({ providerId: ft }) => "password" === ft
          );
          Le && ((Le.displayName = I.displayName), (Le.photoURL = I.photoURL)),
            yield I._updateTokensIfNecessary(ie);
        })).apply(this, arguments);
      }
      function Zf(E, g) {
        return Yf((0, V.m9)(E), g, null);
      }
      function cl(E, g) {
        return Yf((0, V.m9)(E), null, g);
      }
      function Yf(E, g, _) {
        return dl.apply(this, arguments);
      }
      function dl() {
        return (dl = (0, f.Z)(function* (E, g, _) {
          const { auth: I } = E,
            N = { idToken: yield E.getIdToken(), returnSecureToken: !0 };
          g && (N.email = g), _ && (N.password = _);
          const ie = yield it(E, fn(I, N));
          yield E._updateTokensIfNecessary(ie, !0);
        })).apply(this, arguments);
      }
      class Yr {
        constructor(g, _, I = {}) {
          (this.isNewUser = g), (this.providerId = _), (this.profile = I);
        }
      }
      class qn extends Yr {
        constructor(g, _, I, S) {
          super(g, _, I), (this.username = S);
        }
      }
      class d0 extends Yr {
        constructor(g, _) {
          super(g, "facebook.com", _);
        }
      }
      class r_ extends qn {
        constructor(g, _) {
          super(
            g,
            "github.com",
            _,
            "string" == typeof _?.login ? _?.login : null
          );
        }
      }
      class h0 extends Yr {
        constructor(g, _) {
          super(g, "google.com", _);
        }
      }
      class i_ extends qn {
        constructor(g, _, I) {
          super(g, "twitter.com", _, I);
        }
      }
      function hl(E) {
        const { user: g, _tokenResponse: _ } = E;
        return g.isAnonymous && !_
          ? { providerId: null, isNewUser: !1, profile: null }
          : (function Or(E) {
              var g, _;
              if (!E) return null;
              const { providerId: I } = E,
                S = E.rawUserInfo ? JSON.parse(E.rawUserInfo) : {},
                N =
                  E.isNewUser ||
                  "identitytoolkit#SignupNewUserResponse" === E.kind;
              if (!I && E?.idToken) {
                const ie =
                  null ===
                    (_ =
                      null === (g = bt(E.idToken)) || void 0 === g
                        ? void 0
                        : g.firebase) || void 0 === _
                    ? void 0
                    : _.sign_in_provider;
                if (ie)
                  return new Yr(
                    N,
                    "anonymous" !== ie && "custom" !== ie ? ie : null
                  );
              }
              if (!I) return null;
              switch (I) {
                case "facebook.com":
                  return new d0(N, S);
                case "github.com":
                  return new r_(N, S);
                case "google.com":
                  return new h0(N, S);
                case "twitter.com":
                  return new i_(N, S, E.screenName || null);
                case "custom":
                case "anonymous":
                  return new Yr(N, null);
                default:
                  return new Yr(N, I, S);
              }
            })(_);
      }
      function fd(E, g, _, I) {
        return (0, V.m9)(E).onAuthStateChanged(g, _, I);
      }
      class Hs {
        constructor(g, _) {
          (this.type = g), (this.credential = _);
        }
        static _fromIdtoken(g) {
          return new Hs("enroll", g);
        }
        static _fromMfaPendingCredential(g) {
          return new Hs("signin", g);
        }
        toJSON() {
          return {
            multiFactorSession: {
              ["enroll" === this.type ? "idToken" : "pendingCredential"]:
                this.credential,
            },
          };
        }
        static fromJSON(g) {
          var _, I;
          if (g?.multiFactorSession) {
            if (
              null !== (_ = g.multiFactorSession) &&
              void 0 !== _ &&
              _.pendingCredential
            )
              return Hs._fromMfaPendingCredential(
                g.multiFactorSession.pendingCredential
              );
            if (
              null !== (I = g.multiFactorSession) &&
              void 0 !== I &&
              I.idToken
            )
              return Hs._fromIdtoken(g.multiFactorSession.idToken);
          }
          return null;
        }
      }
      class Jf {
        constructor(g, _, I) {
          (this.session = g), (this.hints = _), (this.signInResolver = I);
        }
        static _fromError(g, _) {
          const I = Ot(g),
            S = _.customData._serverResponse,
            N = (S.mfaInfo || []).map((Le) => je._fromServerResponse(I, Le));
          te(S.mfaPendingCredential, I, "internal-error");
          const ie = Hs._fromMfaPendingCredential(S.mfaPendingCredential);
          return new Jf(
            ie,
            N,
            (function () {
              var Le = (0, f.Z)(function* (ft) {
                const vt = yield ft._process(I, ie);
                delete S.mfaInfo, delete S.mfaPendingCredential;
                const Bt = Object.assign(Object.assign({}, S), {
                  idToken: vt.idToken,
                  refreshToken: vt.refreshToken,
                });
                switch (_.operationType) {
                  case "signIn":
                    const $n = yield Zr._fromIdTokenResponse(
                      I,
                      _.operationType,
                      Bt
                    );
                    return yield I._updateCurrentUser($n.user), $n;
                  case "reauthenticate":
                    return (
                      te(_.user, I, "internal-error"),
                      Zr._forOperation(_.user, _.operationType, Bt)
                    );
                  default:
                    rt(I, "internal-error");
                }
              });
              return function (ft) {
                return Le.apply(this, arguments);
              };
            })()
          );
        }
        resolveSignIn(g) {
          var _ = this;
          return (0, f.Z)(function* () {
            return _.signInResolver(g);
          })();
        }
      }
      function fl(E, g) {
        var _;
        const I = (0, V.m9)(E),
          S = g;
        return (
          te(g.customData.operationType, I, "argument-error"),
          te(
            null === (_ = S.customData._serverResponse) || void 0 === _
              ? void 0
              : _.mfaPendingCredential,
            I,
            "argument-error"
          ),
          Jf._fromError(I, S)
        );
      }
      function Xf(E, g) {
        return ze(E, "POST", "/v2/accounts/mfaEnrollment:start", Nt(E, g));
      }
      class ep {
        constructor(g) {
          (this.user = g),
            (this.enrolledFactors = []),
            g._onReload((_) => {
              _.mfaInfo &&
                (this.enrolledFactors = _.mfaInfo.map((I) =>
                  je._fromServerResponse(g.auth, I)
                ));
            });
        }
        static _fromUser(g) {
          return new ep(g);
        }
        getSession() {
          var g = this;
          return (0, f.Z)(function* () {
            return Hs._fromIdtoken(yield g.user.getIdToken());
          })();
        }
        enroll(g, _) {
          var I = this;
          return (0, f.Z)(function* () {
            const S = g,
              N = yield I.getSession(),
              ie = yield it(I.user, S._process(I.user.auth, N, _));
            return yield I.user._updateTokensIfNecessary(ie), I.user.reload();
          })();
        }
        unenroll(g) {
          var _ = this;
          return (0, f.Z)(function* () {
            var I;
            const S = "string" == typeof g ? g : g.uid,
              N = yield _.user.getIdToken(),
              ie = yield it(
                _.user,
                (function g0(E, g) {
                  return ze(
                    E,
                    "POST",
                    "/v2/accounts/mfaEnrollment:withdraw",
                    Nt(E, g)
                  );
                })(_.user.auth, { idToken: N, mfaEnrollmentId: S })
              );
            (_.enrolledFactors = _.enrolledFactors.filter(
              ({ uid: Le }) => Le !== S
            )),
              yield _.user._updateTokensIfNecessary(ie);
            try {
              yield _.user.reload();
            } catch (Le) {
              if (
                "auth/user-token-expired" !==
                (null === (I = Le) || void 0 === I ? void 0 : I.code)
              )
                throw Le;
            }
          })();
        }
      }
      const o_ = new WeakMap();
      function gd(E) {
        const g = (0, V.m9)(E);
        return o_.has(g) || o_.set(g, ep._fromUser(g)), o_.get(g);
      }
      const pl = "__sak";
      class md {
        constructor(g, _) {
          (this.storageRetriever = g), (this.type = _);
        }
        _isAvailable() {
          try {
            return this.storage
              ? (this.storage.setItem(pl, "1"),
                this.storage.removeItem(pl),
                Promise.resolve(!0))
              : Promise.resolve(!1);
          } catch {
            return Promise.resolve(!1);
          }
        }
        _set(g, _) {
          return this.storage.setItem(g, JSON.stringify(_)), Promise.resolve();
        }
        _get(g) {
          const _ = this.storage.getItem(g);
          return Promise.resolve(_ ? JSON.parse(_) : null);
        }
        _remove(g) {
          return this.storage.removeItem(g), Promise.resolve();
        }
        get storage() {
          return this.storageRetriever();
        }
      }
      const l_ = (() => {
          class E extends md {
            constructor() {
              super(() => window.localStorage, "LOCAL"),
                (this.boundEventHandler = (_, I) => this.onStorageEvent(_, I)),
                (this.listeners = {}),
                (this.localCache = {}),
                (this.pollTimer = null),
                (this.safariLocalStorageNotSynced =
                  (function _d() {
                    const E = (0, V.z$)();
                    return k(E) || mt(E);
                  })() &&
                  (function K() {
                    try {
                      return !(!window || window === window.top);
                    } catch {
                      return !1;
                    }
                  })()),
                (this.fallbackToPolling = Dn()),
                (this._shouldAllowMigration = !0);
            }
            forAllChangedKeys(_) {
              for (const I of Object.keys(this.listeners)) {
                const S = this.storage.getItem(I),
                  N = this.localCache[I];
                S !== N && _(I, N, S);
              }
            }
            onStorageEvent(_, I = !1) {
              if (!_.key)
                return void this.forAllChangedKeys((Le, ft, vt) => {
                  this.notifyListeners(Le, vt);
                });
              const S = _.key;
              if (
                (I ? this.detachListener() : this.stopPolling(),
                this.safariLocalStorageNotSynced)
              ) {
                const Le = this.storage.getItem(S);
                if (_.newValue !== Le)
                  null !== _.newValue
                    ? this.storage.setItem(S, _.newValue)
                    : this.storage.removeItem(S);
                else if (this.localCache[S] === _.newValue && !I) return;
              }
              const N = () => {
                  const Le = this.storage.getItem(S);
                  (!I && this.localCache[S] === Le) ||
                    this.notifyListeners(S, Le);
                },
                ie = this.storage.getItem(S);
              !(function At() {
                return (0, V.w1)() && 10 === document.documentMode;
              })() ||
              ie === _.newValue ||
              _.newValue === _.oldValue
                ? N()
                : setTimeout(N, 10);
            }
            notifyListeners(_, I) {
              this.localCache[_] = I;
              const S = this.listeners[_];
              if (S) for (const N of Array.from(S)) N(I && JSON.parse(I));
            }
            startPolling() {
              this.stopPolling(),
                (this.pollTimer = setInterval(() => {
                  this.forAllChangedKeys((_, I, S) => {
                    this.onStorageEvent(
                      new StorageEvent("storage", {
                        key: _,
                        oldValue: I,
                        newValue: S,
                      }),
                      !0
                    );
                  });
                }, 1e3));
            }
            stopPolling() {
              this.pollTimer &&
                (clearInterval(this.pollTimer), (this.pollTimer = null));
            }
            attachListener() {
              window.addEventListener("storage", this.boundEventHandler);
            }
            detachListener() {
              window.removeEventListener("storage", this.boundEventHandler);
            }
            _addListener(_, I) {
              0 === Object.keys(this.listeners).length &&
                (this.fallbackToPolling
                  ? this.startPolling()
                  : this.attachListener()),
                this.listeners[_] ||
                  ((this.listeners[_] = new Set()),
                  (this.localCache[_] = this.storage.getItem(_))),
                this.listeners[_].add(I);
            }
            _removeListener(_, I) {
              this.listeners[_] &&
                (this.listeners[_].delete(I),
                0 === this.listeners[_].size && delete this.listeners[_]),
                0 === Object.keys(this.listeners).length &&
                  (this.detachListener(), this.stopPolling());
            }
            _set(_, I) {
              var S = () => super._set,
                N = this;
              return (0, f.Z)(function* () {
                yield S().call(N, _, I), (N.localCache[_] = JSON.stringify(I));
              })();
            }
            _get(_) {
              var I = () => super._get,
                S = this;
              return (0, f.Z)(function* () {
                const N = yield I().call(S, _);
                return (S.localCache[_] = JSON.stringify(N)), N;
              })();
            }
            _remove(_) {
              var I = () => super._remove,
                S = this;
              return (0, f.Z)(function* () {
                yield I().call(S, _), delete S.localCache[_];
              })();
            }
          }
          return (E.type = "LOCAL"), E;
        })(),
        _l = (() => {
          class E extends md {
            constructor() {
              super(() => window.sessionStorage, "SESSION");
            }
            _addListener(_, I) {}
            _removeListener(_, I) {}
          }
          return (E.type = "SESSION"), E;
        })();
      let m0 = (() => {
        class E {
          constructor(_) {
            (this.eventTarget = _),
              (this.handlersMap = {}),
              (this.boundEventHandler = this.handleEvent.bind(this));
          }
          static _getInstance(_) {
            const I = this.receivers.find((N) => N.isListeningto(_));
            if (I) return I;
            const S = new E(_);
            return this.receivers.push(S), S;
          }
          isListeningto(_) {
            return this.eventTarget === _;
          }
          handleEvent(_) {
            var I = this;
            return (0, f.Z)(function* () {
              const S = _,
                { eventId: N, eventType: ie, data: Le } = S.data,
                ft = I.handlersMap[ie];
              if (!ft?.size) return;
              S.ports[0].postMessage({
                status: "ack",
                eventId: N,
                eventType: ie,
              });
              const vt = Array.from(ft).map(
                  (function () {
                    var $n = (0, f.Z)(function* (Oi) {
                      return Oi(S.origin, Le);
                    });
                    return function (Oi) {
                      return $n.apply(this, arguments);
                    };
                  })()
                ),
                Bt = yield (function yd(E) {
                  return Promise.all(
                    E.map(
                      (function () {
                        var g = (0, f.Z)(function* (_) {
                          try {
                            return { fulfilled: !0, value: yield _ };
                          } catch (I) {
                            return { fulfilled: !1, reason: I };
                          }
                        });
                        return function (_) {
                          return g.apply(this, arguments);
                        };
                      })()
                    )
                  );
                })(vt);
              S.ports[0].postMessage({
                status: "done",
                eventId: N,
                eventType: ie,
                response: Bt,
              });
            })();
          }
          _subscribe(_, I) {
            0 === Object.keys(this.handlersMap).length &&
              this.eventTarget.addEventListener(
                "message",
                this.boundEventHandler
              ),
              this.handlersMap[_] || (this.handlersMap[_] = new Set()),
              this.handlersMap[_].add(I);
          }
          _unsubscribe(_, I) {
            this.handlersMap[_] && I && this.handlersMap[_].delete(I),
              (!I || 0 === this.handlersMap[_].size) &&
                delete this.handlersMap[_],
              0 === Object.keys(this.handlersMap).length &&
                this.eventTarget.removeEventListener(
                  "message",
                  this.boundEventHandler
                );
          }
        }
        return (E.receivers = []), E;
      })();
      function Ja(E = "", g = 10) {
        let _ = "";
        for (let I = 0; I < g; I++) _ += Math.floor(10 * Math.random());
        return E + _;
      }
      class jn {
        constructor(g) {
          (this.target = g), (this.handlers = new Set());
        }
        removeMessageHandler(g) {
          g.messageChannel &&
            (g.messageChannel.port1.removeEventListener("message", g.onMessage),
            g.messageChannel.port1.close()),
            this.handlers.delete(g);
        }
        _send(g, _, I = 50) {
          var S = this;
          return (0, f.Z)(function* () {
            const N = typeof MessageChannel < "u" ? new MessageChannel() : null;
            if (!N) throw new Error("connection_unavailable");
            let ie, Le;
            return new Promise((ft, vt) => {
              const Bt = Ja("", 20);
              N.port1.start();
              const $n = setTimeout(() => {
                vt(new Error("unsupported_event"));
              }, I);
              (Le = {
                messageChannel: N,
                onMessage(Oi) {
                  const Si = Oi;
                  if (Si.data.eventId === Bt)
                    switch (Si.data.status) {
                      case "ack":
                        clearTimeout($n),
                          (ie = setTimeout(() => {
                            vt(new Error("timeout"));
                          }, 3e3));
                        break;
                      case "done":
                        clearTimeout(ie), ft(Si.data.response);
                        break;
                      default:
                        clearTimeout($n),
                          clearTimeout(ie),
                          vt(new Error("invalid_response"));
                    }
                },
              }),
                S.handlers.add(Le),
                N.port1.addEventListener("message", Le.onMessage),
                S.target.postMessage({ eventType: g, eventId: Bt, data: _ }, [
                  N.port2,
                ]);
            }).finally(() => {
              Le && S.removeMessageHandler(Le);
            });
          })();
        }
      }
      function Gn() {
        return window;
      }
      function Ti() {
        return (
          typeof Gn().WorkerGlobalScope < "u" &&
          "function" == typeof Gn().importScripts
        );
      }
      function kr() {
        return (kr = (0, f.Z)(function* () {
          if (!navigator?.serviceWorker) return null;
          try {
            return (yield navigator.serviceWorker.ready).active;
          } catch {
            return null;
          }
        })).apply(this, arguments);
      }
      const Xa = "firebaseLocalStorageDb",
        ua = "firebaseLocalStorage",
        Ed = "fbase_key";
      class Yi {
        constructor(g) {
          this.request = g;
        }
        toPromise() {
          return new Promise((g, _) => {
            this.request.addEventListener("success", () => {
              g(this.request.result);
            }),
              this.request.addEventListener("error", () => {
                _(this.request.error);
              });
          });
        }
      }
      function Ft(E, g) {
        return E.transaction([ua], g ? "readwrite" : "readonly").objectStore(
          ua
        );
      }
      function la() {
        const E = indexedDB.open(Xa, 1);
        return new Promise((g, _) => {
          E.addEventListener("error", () => {
            _(E.error);
          }),
            E.addEventListener("upgradeneeded", () => {
              const I = E.result;
              try {
                I.createObjectStore(ua, { keyPath: Ed });
              } catch (S) {
                _(S);
              }
            }),
            E.addEventListener(
              "success",
              (0, f.Z)(function* () {
                const I = E.result;
                I.objectStoreNames.contains(ua)
                  ? g(I)
                  : (I.close(),
                    yield (function d_() {
                      const E = indexedDB.deleteDatabase(Xa);
                      return new Yi(E).toPromise();
                    })(),
                    g(yield la()));
              })
            );
        });
      }
      function Co(E, g, _) {
        return vl.apply(this, arguments);
      }
      function vl() {
        return (vl = (0, f.Z)(function* (E, g, _) {
          const I = Ft(E, !0).put({ [Ed]: g, value: _ });
          return new Yi(I).toPromise();
        })).apply(this, arguments);
      }
      function El() {
        return (El = (0, f.Z)(function* (E, g) {
          const _ = Ft(E, !1).get(g),
            I = yield new Yi(_).toPromise();
          return void 0 === I ? null : I.value;
        })).apply(this, arguments);
      }
      function Gs(E, g) {
        const _ = Ft(E, !0).delete(g);
        return new Yi(_).toPromise();
      }
      const tp = (() => {
        class E {
          constructor() {
            (this.type = "LOCAL"),
              (this._shouldAllowMigration = !0),
              (this.listeners = {}),
              (this.localCache = {}),
              (this.pollTimer = null),
              (this.pendingWrites = 0),
              (this.receiver = null),
              (this.sender = null),
              (this.serviceWorkerReceiverAvailable = !1),
              (this.activeServiceWorker = null),
              (this._workerInitializationPromise =
                this.initializeServiceWorkerMessaging().then(
                  () => {},
                  () => {}
                ));
          }
          _openDb() {
            var _ = this;
            return (0, f.Z)(function* () {
              return _.db || (_.db = yield la()), _.db;
            })();
          }
          _withRetries(_) {
            var I = this;
            return (0, f.Z)(function* () {
              let S = 0;
              for (;;)
                try {
                  const N = yield I._openDb();
                  return yield _(N);
                } catch (N) {
                  if (S++ > 3) throw N;
                  I.db && (I.db.close(), (I.db = void 0));
                }
            })();
          }
          initializeServiceWorkerMessaging() {
            var _ = this;
            return (0, f.Z)(function* () {
              return Ti() ? _.initializeReceiver() : _.initializeSender();
            })();
          }
          initializeReceiver() {
            var _ = this;
            return (0, f.Z)(function* () {
              (_.receiver = m0._getInstance(
                (function yl() {
                  return Ti() ? self : null;
                })()
              )),
                _.receiver._subscribe(
                  "keyChanged",
                  (function () {
                    var I = (0, f.Z)(function* (S, N) {
                      return {
                        keyProcessed: (yield _._poll()).includes(N.key),
                      };
                    });
                    return function (S, N) {
                      return I.apply(this, arguments);
                    };
                  })()
                ),
                _.receiver._subscribe(
                  "ping",
                  (function () {
                    var I = (0, f.Z)(function* (S, N) {
                      return ["keyChanged"];
                    });
                    return function (S, N) {
                      return I.apply(this, arguments);
                    };
                  })()
                );
            })();
          }
          initializeSender() {
            var _ = this;
            return (0, f.Z)(function* () {
              var I, S;
              if (
                ((_.activeServiceWorker = yield (function $r() {
                  return kr.apply(this, arguments);
                })()),
                !_.activeServiceWorker)
              )
                return;
              _.sender = new jn(_.activeServiceWorker);
              const N = yield _.sender._send("ping", {}, 800);
              !N ||
                ((null === (I = N[0]) || void 0 === I ? void 0 : I.fulfilled) &&
                  (null === (S = N[0]) || void 0 === S
                    ? void 0
                    : S.value.includes("keyChanged")) &&
                  (_.serviceWorkerReceiverAvailable = !0));
            })();
          }
          notifyServiceWorker(_) {
            var I = this;
            return (0, f.Z)(function* () {
              if (
                I.sender &&
                I.activeServiceWorker &&
                (function vd() {
                  var E;
                  return (
                    (null === (E = navigator?.serviceWorker) || void 0 === E
                      ? void 0
                      : E.controller) || null
                  );
                })() === I.activeServiceWorker
              )
                try {
                  yield I.sender._send(
                    "keyChanged",
                    { key: _ },
                    I.serviceWorkerReceiverAvailable ? 800 : 50
                  );
                } catch {}
            })();
          }
          _isAvailable() {
            return (0, f.Z)(function* () {
              try {
                if (!indexedDB) return !1;
                const _ = yield la();
                return yield Co(_, pl, "1"), yield Gs(_, pl), !0;
              } catch {}
              return !1;
            })();
          }
          _withPendingWrite(_) {
            var I = this;
            return (0, f.Z)(function* () {
              I.pendingWrites++;
              try {
                yield _();
              } finally {
                I.pendingWrites--;
              }
            })();
          }
          _set(_, I) {
            var S = this;
            return (0, f.Z)(function* () {
              return S._withPendingWrite(
                (0, f.Z)(function* () {
                  return (
                    yield S._withRetries((N) => Co(N, _, I)),
                    (S.localCache[_] = I),
                    S.notifyServiceWorker(_)
                  );
                })
              );
            })();
          }
          _get(_) {
            var I = this;
            return (0, f.Z)(function* () {
              const S = yield I._withRetries((N) =>
                (function pr(E, g) {
                  return El.apply(this, arguments);
                })(N, _)
              );
              return (I.localCache[_] = S), S;
            })();
          }
          _remove(_) {
            var I = this;
            return (0, f.Z)(function* () {
              return I._withPendingWrite(
                (0, f.Z)(function* () {
                  return (
                    yield I._withRetries((S) => Gs(S, _)),
                    delete I.localCache[_],
                    I.notifyServiceWorker(_)
                  );
                })
              );
            })();
          }
          _poll() {
            var _ = this;
            return (0, f.Z)(function* () {
              const I = yield _._withRetries((ie) => {
                const Le = Ft(ie, !1).getAll();
                return new Yi(Le).toPromise();
              });
              if (!I) return [];
              if (0 !== _.pendingWrites) return [];
              const S = [],
                N = new Set();
              for (const { fbase_key: ie, value: Le } of I)
                N.add(ie),
                  JSON.stringify(_.localCache[ie]) !== JSON.stringify(Le) &&
                    (_.notifyListeners(ie, Le), S.push(ie));
              for (const ie of Object.keys(_.localCache))
                _.localCache[ie] &&
                  !N.has(ie) &&
                  (_.notifyListeners(ie, null), S.push(ie));
              return S;
            })();
          }
          notifyListeners(_, I) {
            this.localCache[_] = I;
            const S = this.listeners[_];
            if (S) for (const N of Array.from(S)) N(I);
          }
          startPolling() {
            var _ = this;
            this.stopPolling(),
              (this.pollTimer = setInterval(
                (0, f.Z)(function* () {
                  return _._poll();
                }),
                800
              ));
          }
          stopPolling() {
            this.pollTimer &&
              (clearInterval(this.pollTimer), (this.pollTimer = null));
          }
          _addListener(_, I) {
            0 === Object.keys(this.listeners).length && this.startPolling(),
              this.listeners[_] ||
                ((this.listeners[_] = new Set()), this._get(_)),
              this.listeners[_].add(I);
          }
          _removeListener(_, I) {
            this.listeners[_] &&
              (this.listeners[_].delete(I),
              0 === this.listeners[_].size && delete this.listeners[_]),
              0 === Object.keys(this.listeners).length && this.stopPolling();
          }
        }
        return (E.type = "LOCAL"), E;
      })();
      function wl(E, g) {
        return ze(E, "POST", "/v2/accounts/mfaSignIn:start", Nt(E, g));
      }
      function Ws() {
        return (Ws = (0, f.Z)(function* (E) {
          return (
            (yield ze(E, "GET", "/v1/recaptchaParams")).recaptchaSiteKey || ""
          );
        })).apply(this, arguments);
      }
      function To(E) {
        return new Promise((g, _) => {
          const I = document.createElement("script");
          I.setAttribute("src", E),
            (I.onload = g),
            (I.onerror = (S) => {
              const N = Ve("internal-error");
              (N.customData = S), _(N);
            }),
            (I.type = "text/javascript"),
            (I.charset = "UTF-8"),
            (function zs() {
              var E, g;
              return null !==
                (g =
                  null === (E = document.getElementsByTagName("head")) ||
                  void 0 === E
                    ? void 0
                    : E[0]) && void 0 !== g
                ? g
                : document;
            })().appendChild(I);
        });
      }
      function Il(E) {
        return `__${E}${Math.floor(1e6 * Math.random())}`;
      }
      const eu = 1e12;
      class tn {
        constructor(g) {
          (this.auth = g), (this.counter = eu), (this._widgets = new Map());
        }
        render(g, _) {
          const I = this.counter;
          return (
            this._widgets.set(I, new Id(g, this.auth.name, _ || {})),
            this.counter++,
            I
          );
        }
        reset(g) {
          var _;
          const I = g || eu;
          null === (_ = this._widgets.get(I)) || void 0 === _ || _.delete(),
            this._widgets.delete(I);
        }
        getResponse(g) {
          var _;
          return (
            (null === (_ = this._widgets.get(g || eu)) || void 0 === _
              ? void 0
              : _.getResponse()) || ""
          );
        }
        execute(g) {
          var _ = this;
          return (0, f.Z)(function* () {
            var I;
            return (
              null === (I = _._widgets.get(g || eu)) ||
                void 0 === I ||
                I.execute(),
              ""
            );
          })();
        }
      }
      class Id {
        constructor(g, _, I) {
          (this.params = I),
            (this.timerId = null),
            (this.deleted = !1),
            (this.responseToken = null),
            (this.clickHandler = () => {
              this.execute();
            });
          const S = "string" == typeof g ? document.getElementById(g) : g;
          te(S, "argument-error", { appName: _ }),
            (this.container = S),
            (this.isVisible = "invisible" !== this.params.size),
            this.isVisible
              ? this.execute()
              : this.container.addEventListener("click", this.clickHandler);
        }
        getResponse() {
          return this.checkIfDeleted(), this.responseToken;
        }
        delete() {
          this.checkIfDeleted(),
            (this.deleted = !0),
            this.timerId && (clearTimeout(this.timerId), (this.timerId = null)),
            this.container.removeEventListener("click", this.clickHandler);
        }
        execute() {
          this.checkIfDeleted(),
            !this.timerId &&
              (this.timerId = window.setTimeout(() => {
                this.responseToken = (function f_(E) {
                  const g = [],
                    _ =
                      "1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
                  for (let I = 0; I < E; I++)
                    g.push(_.charAt(Math.floor(Math.random() * _.length)));
                  return g.join("");
                })(50);
                const { callback: g, "expired-callback": _ } = this.params;
                if (g)
                  try {
                    g(this.responseToken);
                  } catch {}
                this.timerId = window.setTimeout(() => {
                  if (((this.timerId = null), (this.responseToken = null), _))
                    try {
                      _();
                    } catch {}
                  this.isVisible && this.execute();
                }, 6e4);
              }, 500));
        }
        checkIfDeleted() {
          if (this.deleted)
            throw new Error("reCAPTCHA mock was already deleted!");
        }
      }
      const Wn = Il("rcb"),
        Cl = new et(3e4, 6e4);
      class hi {
        constructor() {
          var g;
          (this.hostLanguage = ""),
            (this.counter = 0),
            (this.librarySeparatelyLoaded = !(
              null === (g = Gn().grecaptcha) ||
              void 0 === g ||
              !g.render
            ));
        }
        load(g, _ = "") {
          return (
            te(
              (function Hr(E) {
                return E.length <= 6 && /^\s*[a-zA-Z0-9\-]*\s*$/.test(E);
              })(_),
              g,
              "argument-error"
            ),
            this.shouldResolveImmediately(_)
              ? Promise.resolve(Gn().grecaptcha)
              : new Promise((I, S) => {
                  const N = Gn().setTimeout(() => {
                    S(Ve(g, "network-request-failed"));
                  }, Cl.get());
                  (Gn()[Wn] = () => {
                    Gn().clearTimeout(N), delete Gn()[Wn];
                    const Le = Gn().grecaptcha;
                    if (!Le) return void S(Ve(g, "internal-error"));
                    const ft = Le.render;
                    (Le.render = (vt, Bt) => {
                      const $n = ft(vt, Bt);
                      return this.counter++, $n;
                    }),
                      (this.hostLanguage = _),
                      I(Le);
                  }),
                    To(
                      `https://www.google.com/recaptcha/api.js??${(0, V.xO)({
                        onload: Wn,
                        render: "explicit",
                        hl: _,
                      })}`
                    ).catch(() => {
                      clearTimeout(N), S(Ve(g, "internal-error"));
                    });
                })
          );
        }
        clearedOneInstance() {
          this.counter--;
        }
        shouldResolveImmediately(g) {
          var _;
          return (
            !(null === (_ = Gn().grecaptcha) || void 0 === _ || !_.render) &&
            (g === this.hostLanguage ||
              this.counter > 0 ||
              this.librarySeparatelyLoaded)
          );
        }
      }
      class qs {
        load(g) {
          return (0, f.Z)(function* () {
            return new tn(g);
          })();
        }
        clearedOneInstance() {}
      }
      const np = "recaptcha",
        _0 = { theme: "light", type: "image" };
      class Un {
        constructor(g, _ = Object.assign({}, _0), I) {
          (this.parameters = _),
            (this.type = np),
            (this.destroyed = !1),
            (this.widgetId = null),
            (this.tokenChangeListeners = new Set()),
            (this.renderPromise = null),
            (this.recaptcha = null),
            (this.auth = Ot(I)),
            (this.isInvisible = "invisible" === this.parameters.size),
            te(
              typeof document < "u",
              this.auth,
              "operation-not-supported-in-this-environment"
            );
          const S = "string" == typeof g ? document.getElementById(g) : g;
          te(S, this.auth, "argument-error"),
            (this.container = S),
            (this.parameters.callback = this.makeTokenCallback(
              this.parameters.callback
            )),
            (this._recaptchaLoader = this.auth.settings
              .appVerificationDisabledForTesting
              ? new qs()
              : new hi()),
            this.validateStartingState();
        }
        verify() {
          var g = this;
          return (0, f.Z)(function* () {
            g.assertNotDestroyed();
            const _ = yield g.render(),
              I = g.getAssertedRecaptcha();
            return (
              I.getResponse(_) ||
              new Promise((N) => {
                const ie = (Le) => {
                  !Le || (g.tokenChangeListeners.delete(ie), N(Le));
                };
                g.tokenChangeListeners.add(ie), g.isInvisible && I.execute(_);
              })
            );
          })();
        }
        render() {
          try {
            this.assertNotDestroyed();
          } catch (g) {
            return Promise.reject(g);
          }
          return (
            this.renderPromise ||
              (this.renderPromise = this.makeRenderPromise().catch((g) => {
                throw ((this.renderPromise = null), g);
              })),
            this.renderPromise
          );
        }
        _reset() {
          this.assertNotDestroyed(),
            null !== this.widgetId &&
              this.getAssertedRecaptcha().reset(this.widgetId);
        }
        clear() {
          this.assertNotDestroyed(),
            (this.destroyed = !0),
            this._recaptchaLoader.clearedOneInstance(),
            this.isInvisible ||
              this.container.childNodes.forEach((g) => {
                this.container.removeChild(g);
              });
        }
        validateStartingState() {
          te(!this.parameters.sitekey, this.auth, "argument-error"),
            te(
              this.isInvisible || !this.container.hasChildNodes(),
              this.auth,
              "argument-error"
            ),
            te(
              typeof document < "u",
              this.auth,
              "operation-not-supported-in-this-environment"
            );
        }
        makeTokenCallback(g) {
          return (_) => {
            if (
              (this.tokenChangeListeners.forEach((I) => I(_)),
              "function" == typeof g)
            )
              g(_);
            else if ("string" == typeof g) {
              const I = Gn()[g];
              "function" == typeof I && I(_);
            }
          };
        }
        assertNotDestroyed() {
          te(!this.destroyed, this.auth, "internal-error");
        }
        makeRenderPromise() {
          var g = this;
          return (0, f.Z)(function* () {
            if ((yield g.init(), !g.widgetId)) {
              let _ = g.container;
              if (!g.isInvisible) {
                const I = document.createElement("div");
                _.appendChild(I), (_ = I);
              }
              g.widgetId = g.getAssertedRecaptcha().render(_, g.parameters);
            }
            return g.widgetId;
          })();
        }
        init() {
          var g = this;
          return (0, f.Z)(function* () {
            te($e() && !Ti(), g.auth, "internal-error"),
              yield (function Qi() {
                let E = null;
                return new Promise((g) => {
                  "complete" !== document.readyState
                    ? ((E = () => g()), window.addEventListener("load", E))
                    : g();
                }).catch((g) => {
                  throw (E && window.removeEventListener("load", E), g);
                });
              })(),
              (g.recaptcha = yield g._recaptchaLoader.load(
                g.auth,
                g.auth.languageCode || void 0
              ));
            const _ = yield (function Do(E) {
              return Ws.apply(this, arguments);
            })(g.auth);
            te(_, g.auth, "internal-error"), (g.parameters.sitekey = _);
          })();
        }
        getAssertedRecaptcha() {
          return (
            te(this.recaptcha, this.auth, "internal-error"), this.recaptcha
          );
        }
      }
      class Xn {
        constructor(g, _) {
          (this.verificationId = g), (this.onConfirmation = _);
        }
        confirm(g) {
          const _ = js._fromVerification(this.verificationId, g);
          return this.onConfirmation(_);
        }
      }
      function Ao(E, g, _) {
        return Cd.apply(this, arguments);
      }
      function Cd() {
        return (Cd = (0, f.Z)(function* (E, g, _) {
          const I = Ot(E),
            S = yield Ks(I, g, (0, V.m9)(_));
          return new Xn(S, (N) => ia(I, N));
        })).apply(this, arguments);
      }
      function Sr(E, g, _) {
        return fi.apply(this, arguments);
      }
      function fi() {
        return (fi = (0, f.Z)(function* (E, g, _) {
          const I = (0, V.m9)(E);
          yield Tr(!1, I, "phone");
          const S = yield Ks(I.auth, g, (0, V.m9)(_));
          return new Xn(S, (N) => sd(I, N));
        })).apply(this, arguments);
      }
      function bd(E, g, _) {
        return da.apply(this, arguments);
      }
      function da() {
        return (da = (0, f.Z)(function* (E, g, _) {
          const I = (0, V.m9)(E),
            S = yield Ks(I.auth, g, (0, V.m9)(_));
          return new Xn(S, (N) => $f(I, N));
        })).apply(this, arguments);
      }
      function Ks(E, g, _) {
        return ha.apply(this, arguments);
      }
      function ha() {
        return (ha = (0, f.Z)(function* (E, g, _) {
          var I;
          const S = yield _.verify();
          try {
            let N;
            if (
              (te("string" == typeof S, E, "argument-error"),
              te(_.type === np, E, "argument-error"),
              (N = "string" == typeof g ? { phoneNumber: g } : g),
              "session" in N)
            ) {
              const ie = N.session;
              if ("phoneNumber" in N)
                return (
                  te("enroll" === ie.type, E, "internal-error"),
                  (yield Xf(E, {
                    idToken: ie.credential,
                    phoneEnrollmentInfo: {
                      phoneNumber: N.phoneNumber,
                      recaptchaToken: S,
                    },
                  })).phoneSessionInfo.sessionInfo
                );
              {
                te("signin" === ie.type, E, "internal-error");
                const Le =
                  (null === (I = N.multiFactorHint) || void 0 === I
                    ? void 0
                    : I.uid) || N.multiFactorUid;
                return (
                  te(Le, E, "missing-multi-factor-info"),
                  (yield wl(E, {
                    mfaPendingCredential: ie.credential,
                    mfaEnrollmentId: Le,
                    phoneSignInInfo: { recaptchaToken: S },
                  })).phoneResponseInfo.sessionInfo
                );
              }
            }
            {
              const { sessionInfo: ie } = yield r0(E, {
                phoneNumber: N.phoneNumber,
                recaptchaToken: S,
              });
              return ie;
            }
          } finally {
            _._reset();
          }
        })).apply(this, arguments);
      }
      function ln(E, g) {
        return Dd.apply(this, arguments);
      }
      function Dd() {
        return (Dd = (0, f.Z)(function* (E, g) {
          yield Ka((0, V.m9)(E), g);
        })).apply(this, arguments);
      }
      let tu = (() => {
        class E {
          constructor(_) {
            (this.providerId = E.PROVIDER_ID), (this.auth = Ot(_));
          }
          verifyPhoneNumber(_, I) {
            return Ks(this.auth, _, (0, V.m9)(I));
          }
          static credential(_, I) {
            return js._fromVerification(_, I);
          }
          static credentialFromResult(_) {
            return E.credentialFromTaggedObject(_);
          }
          static credentialFromError(_) {
            return E.credentialFromTaggedObject(_.customData || {});
          }
          static credentialFromTaggedObject({ _tokenResponse: _ }) {
            if (!_) return null;
            const { phoneNumber: I, temporaryProof: S } = _;
            return I && S ? js._fromTokenResponse(I, S) : null;
          }
        }
        return (E.PROVIDER_ID = "phone"), (E.PHONE_SIGN_IN_METHOD = "phone"), E;
      })();
      function fa(E, g) {
        return g
          ? ne(g)
          : (te(E._popupRedirectResolver, E, "argument-error"),
            E._popupRedirectResolver);
      }
      class Dl extends Tt {
        constructor(g) {
          super("custom", "custom"), (this.params = g);
        }
        _getIdTokenResponse(g) {
          return Bs(g, this._buildIdpRequest());
        }
        _linkToIdToken(g, _) {
          return Bs(g, this._buildIdpRequest(_));
        }
        _getReauthenticationResolver(g) {
          return Bs(g, this._buildIdpRequest());
        }
        _buildIdpRequest(g) {
          const _ = {
            requestUri: this.params.requestUri,
            sessionId: this.params.sessionId,
            postBody: this.params.postBody,
            tenantId: this.params.tenantId,
            pendingToken: this.params.pendingToken,
            returnSecureToken: !0,
            returnIdpCredential: !0,
          };
          return g && (_.idToken = g), _;
        }
      }
      function er(E) {
        return ms(E.auth, new Dl(E), E.bypassAuthState);
      }
      function Tl(E) {
        const { auth: g, user: _ } = E;
        return te(_, g, "internal-error"), ra(_, new Dl(E), E.bypassAuthState);
      }
      function Ro(E) {
        return Td.apply(this, arguments);
      }
      function Td() {
        return (Td = (0, f.Z)(function* (E) {
          const { auth: g, user: _ } = E;
          return (
            te(_, g, "internal-error"), Ka(_, new Dl(E), E.bypassAuthState)
          );
        })).apply(this, arguments);
      }
      class rp {
        constructor(g, _, I, S, N = !1) {
          (this.auth = g),
            (this.resolver = I),
            (this.user = S),
            (this.bypassAuthState = N),
            (this.pendingPromise = null),
            (this.eventManager = null),
            (this.filter = Array.isArray(_) ? _ : [_]);
        }
        execute() {
          var g = this;
          return new Promise(
            (function () {
              var _ = (0, f.Z)(function* (I, S) {
                g.pendingPromise = { resolve: I, reject: S };
                try {
                  (g.eventManager = yield g.resolver._initialize(g.auth)),
                    yield g.onExecution(),
                    g.eventManager.registerConsumer(g);
                } catch (N) {
                  g.reject(N);
                }
              });
              return function (I, S) {
                return _.apply(this, arguments);
              };
            })()
          );
        }
        onAuthEvent(g) {
          var _ = this;
          return (0, f.Z)(function* () {
            const {
              urlResponse: I,
              sessionId: S,
              postBody: N,
              tenantId: ie,
              error: Le,
              type: ft,
            } = g;
            if (Le) return void _.reject(Le);
            const vt = {
              auth: _.auth,
              requestUri: I,
              sessionId: S,
              tenantId: ie || void 0,
              postBody: N || void 0,
              user: _.user,
              bypassAuthState: _.bypassAuthState,
            };
            try {
              _.resolve(yield _.getIdpTask(ft)(vt));
            } catch (Bt) {
              _.reject(Bt);
            }
          })();
        }
        onError(g) {
          this.reject(g);
        }
        getIdpTask(g) {
          switch (g) {
            case "signInViaPopup":
            case "signInViaRedirect":
              return er;
            case "linkViaPopup":
            case "linkViaRedirect":
              return Ro;
            case "reauthViaPopup":
            case "reauthViaRedirect":
              return Tl;
            default:
              rt(this.auth, "internal-error");
          }
        }
        resolve(g) {
          De(this.pendingPromise, "Pending promise was never set"),
            this.pendingPromise.resolve(g),
            this.unregisterAndCleanUp();
        }
        reject(g) {
          De(this.pendingPromise, "Pending promise was never set"),
            this.pendingPromise.reject(g),
            this.unregisterAndCleanUp();
        }
        unregisterAndCleanUp() {
          this.eventManager && this.eventManager.unregisterConsumer(this),
            (this.pendingPromise = null),
            this.cleanUp();
        }
      }
      const Ar = new et(2e3, 1e4);
      function ws(E, g, _) {
        return nu.apply(this, arguments);
      }
      function nu() {
        return (nu = (0, f.Z)(function* (E, g, _) {
          const I = Ot(E);
          Ae(E, g, ps);
          const S = fa(I, _);
          return new ga(I, "signInViaPopup", g, S).executeNotNull();
        })).apply(this, arguments);
      }
      function p_(E, g, _) {
        return Sd.apply(this, arguments);
      }
      function Sd() {
        return (Sd = (0, f.Z)(function* (E, g, _) {
          const I = (0, V.m9)(E);
          Ae(I.auth, g, ps);
          const S = fa(I.auth, _);
          return new ga(I.auth, "reauthViaPopup", g, S, I).executeNotNull();
        })).apply(this, arguments);
      }
      function ip(E, g, _) {
        return pa.apply(this, arguments);
      }
      function pa() {
        return (pa = (0, f.Z)(function* (E, g, _) {
          const I = (0, V.m9)(E);
          Ae(I.auth, g, ps);
          const S = fa(I.auth, _);
          return new ga(I.auth, "linkViaPopup", g, S, I).executeNotNull();
        })).apply(this, arguments);
      }
      let ga = (() => {
        class E extends rp {
          constructor(_, I, S, N, ie) {
            super(_, I, N, ie),
              (this.provider = S),
              (this.authWindow = null),
              (this.pollId = null),
              E.currentPopupAction && E.currentPopupAction.cancel(),
              (E.currentPopupAction = this);
          }
          executeNotNull() {
            var _ = this;
            return (0, f.Z)(function* () {
              const I = yield _.execute();
              return te(I, _.auth, "internal-error"), I;
            })();
          }
          onExecution() {
            var _ = this;
            return (0, f.Z)(function* () {
              De(
                1 === _.filter.length,
                "Popup operations only handle one event"
              );
              const I = Ja();
              (_.authWindow = yield _.resolver._openPopup(
                _.auth,
                _.provider,
                _.filter[0],
                I
              )),
                (_.authWindow.associatedEvent = I),
                _.resolver._originValidation(_.auth).catch((S) => {
                  _.reject(S);
                }),
                _.resolver._isIframeWebStorageSupported(_.auth, (S) => {
                  S || _.reject(Ve(_.auth, "web-storage-unsupported"));
                }),
                _.pollUserCancellation();
            })();
          }
          get eventId() {
            var _;
            return (
              (null === (_ = this.authWindow) || void 0 === _
                ? void 0
                : _.associatedEvent) || null
            );
          }
          cancel() {
            this.reject(Ve(this.auth, "cancelled-popup-request"));
          }
          cleanUp() {
            this.authWindow && this.authWindow.close(),
              this.pollId && window.clearTimeout(this.pollId),
              (this.authWindow = null),
              (this.pollId = null),
              (E.currentPopupAction = null);
          }
          pollUserCancellation() {
            const _ = () => {
              var I, S;
              this.pollId =
                null !==
                  (S =
                    null === (I = this.authWindow) || void 0 === I
                      ? void 0
                      : I.window) &&
                void 0 !== S &&
                S.closed
                  ? window.setTimeout(() => {
                      (this.pollId = null),
                        this.reject(Ve(this.auth, "popup-closed-by-user"));
                    }, 2e3)
                  : window.setTimeout(_, Ar.get());
            };
            _();
          }
        }
        return (E.currentPopupAction = null), E;
      })();
      const Is = new Map();
      class Sl extends rp {
        constructor(g, _, I = !1) {
          super(
            g,
            [
              "signInViaRedirect",
              "linkViaRedirect",
              "reauthViaRedirect",
              "unknown",
            ],
            _,
            void 0,
            I
          ),
            (this.eventId = null);
        }
        execute() {
          var g = () => super.execute,
            _ = this;
          return (0, f.Z)(function* () {
            let I = Is.get(_.auth._key());
            if (!I) {
              try {
                const N = (yield (function ru(E, g) {
                  return ma.apply(this, arguments);
                })(_.resolver, _.auth))
                  ? yield g().call(_)
                  : null;
                I = () => Promise.resolve(N);
              } catch (S) {
                I = () => Promise.reject(S);
              }
              Is.set(_.auth._key(), I);
            }
            return (
              _.bypassAuthState ||
                Is.set(_.auth._key(), () => Promise.resolve(null)),
              I()
            );
          })();
        }
        onAuthEvent(g) {
          var _ = () => super.onAuthEvent,
            I = this;
          return (0, f.Z)(function* () {
            if ("signInViaRedirect" === g.type) return _().call(I, g);
            if ("unknown" !== g.type) {
              if (g.eventId) {
                const S = yield I.auth._redirectUserForId(g.eventId);
                if (S) return (I.user = S), _().call(I, g);
                I.resolve(null);
              }
            } else I.resolve(null);
          })();
        }
        onExecution() {
          return (0, f.Z)(function* () {})();
        }
        cleanUp() {}
      }
      function ma() {
        return (ma = (0, f.Z)(function* (E, g) {
          const _ = sp(g),
            I = pi(E);
          if (!(yield I._isAvailable())) return !1;
          const S = "true" === (yield I._get(_));
          return yield I._remove(_), S;
        })).apply(this, arguments);
      }
      function Cs(E, g) {
        return an.apply(this, arguments);
      }
      function an() {
        return (an = (0, f.Z)(function* (E, g) {
          return pi(E)._set(sp(g), "true");
        })).apply(this, arguments);
      }
      function _a() {
        Is.clear();
      }
      function ya(E, g) {
        Is.set(E._key(), g);
      }
      function pi(E) {
        return ne(E._redirectPersistence);
      }
      function sp(E) {
        return on("pendingRedirect", E.config.apiKey, E.name);
      }
      function or(E, g, _) {
        return (function Ad(E, g, _) {
          return Al.apply(this, arguments);
        })(E, g, _);
      }
      function Al() {
        return (Al = (0, f.Z)(function* (E, g, _) {
          const I = Ot(E);
          Ae(E, g, ps);
          const S = fa(I, _);
          return yield Cs(S, I), S._openRedirect(I, g, "signInViaRedirect");
        })).apply(this, arguments);
      }
      function va(E, g, _) {
        return (function bs(E, g, _) {
          return Rl.apply(this, arguments);
        })(E, g, _);
      }
      function Rl() {
        return (Rl = (0, f.Z)(function* (E, g, _) {
          const I = (0, V.m9)(E);
          Ae(I.auth, g, ps);
          const S = fa(I.auth, _);
          yield Cs(S, I.auth);
          const N = yield Md(I);
          return S._openRedirect(I.auth, g, "reauthViaRedirect", N);
        })).apply(this, arguments);
      }
      function Ml(E, g, _) {
        return (function m_(E, g, _) {
          return Mo.apply(this, arguments);
        })(E, g, _);
      }
      function Mo() {
        return (Mo = (0, f.Z)(function* (E, g, _) {
          const I = (0, V.m9)(E);
          Ae(I.auth, g, ps);
          const S = fa(I.auth, _);
          yield Tr(!1, I, g.providerId), yield Cs(S, I.auth);
          const N = yield Md(I);
          return S._openRedirect(I.auth, g, "linkViaRedirect", N);
        })).apply(this, arguments);
      }
      function Zs(E, g) {
        return iu.apply(this, arguments);
      }
      function iu() {
        return (iu = (0, f.Z)(function* (E, g) {
          return yield Ot(E)._initializationPromise, Ys(E, g, !1);
        })).apply(this, arguments);
      }
      function Ys(E, g) {
        return Rd.apply(this, arguments);
      }
      function Rd() {
        return (Rd = (0, f.Z)(function* (E, g, _ = !1) {
          const I = Ot(E),
            S = fa(I, g),
            ie = yield new Sl(I, S, _).execute();
          return (
            ie &&
              !_ &&
              (delete ie.user._redirectEventId,
              yield I._persistUserIfCurrent(ie.user),
              yield I._setRedirectUser(null, g)),
            ie
          );
        })).apply(this, arguments);
      }
      function Md(E) {
        return xo.apply(this, arguments);
      }
      function xo() {
        return (xo = (0, f.Z)(function* (E) {
          const g = Ja(`${E.uid}:::`);
          return (
            (E._redirectEventId = g),
            yield E.auth._setRedirectUser(E),
            yield E.auth._persistUserIfCurrent(E),
            g
          );
        })).apply(this, arguments);
      }
      class xd {
        constructor(g) {
          (this.auth = g),
            (this.cachedEventUids = new Set()),
            (this.consumers = new Set()),
            (this.queuedRedirectEvent = null),
            (this.hasHandledPotentialRedirect = !1),
            (this.lastProcessedEventTime = Date.now());
        }
        registerConsumer(g) {
          this.consumers.add(g),
            this.queuedRedirectEvent &&
              this.isEventForConsumer(this.queuedRedirectEvent, g) &&
              (this.sendToConsumer(this.queuedRedirectEvent, g),
              this.saveEventToCache(this.queuedRedirectEvent),
              (this.queuedRedirectEvent = null));
        }
        unregisterConsumer(g) {
          this.consumers.delete(g);
        }
        onEvent(g) {
          if (this.hasEventBeenHandled(g)) return !1;
          let _ = !1;
          return (
            this.consumers.forEach((I) => {
              this.isEventForConsumer(g, I) &&
                ((_ = !0), this.sendToConsumer(g, I), this.saveEventToCache(g));
            }),
            this.hasHandledPotentialRedirect ||
              !(function Ea(E) {
                switch (E.type) {
                  case "signInViaRedirect":
                  case "linkViaRedirect":
                  case "reauthViaRedirect":
                    return !0;
                  case "unknown":
                    return ap(E);
                  default:
                    return !1;
                }
              })(g) ||
              ((this.hasHandledPotentialRedirect = !0),
              _ || ((this.queuedRedirectEvent = g), (_ = !0))),
            _
          );
        }
        sendToConsumer(g, _) {
          var I;
          if (g.error && !ap(g)) {
            const S =
              (null === (I = g.error.code) || void 0 === I
                ? void 0
                : I.split("auth/")[1]) || "internal-error";
            _.onError(Ve(this.auth, S));
          } else _.onAuthEvent(g);
        }
        isEventForConsumer(g, _) {
          const I =
            null === _.eventId || (!!g.eventId && g.eventId === _.eventId);
          return _.filter.includes(g.type) && I;
        }
        hasEventBeenHandled(g) {
          return (
            Date.now() - this.lastProcessedEventTime >= 6e5 &&
              this.cachedEventUids.clear(),
            this.cachedEventUids.has(op(g))
          );
        }
        saveEventToCache(g) {
          this.cachedEventUids.add(op(g)),
            (this.lastProcessedEventTime = Date.now());
        }
      }
      function op(E) {
        return [E.type, E.eventId, E.sessionId, E.tenantId]
          .filter((g) => g)
          .join("-");
      }
      function ap({ type: E, error: g }) {
        return "unknown" === E && "auth/no-auth-event" === g?.code;
      }
      function wa(E) {
        return su.apply(this, arguments);
      }
      function su() {
        return (su = (0, f.Z)(function* (E, g = {}) {
          return ze(E, "GET", "/v1/projects", g);
        })).apply(this, arguments);
      }
      const Nd = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,
        up = /^https?/;
      function xl() {
        return (xl = (0, f.Z)(function* (E) {
          if (E.config.emulator) return;
          const { authorizedDomains: g } = yield wa(E);
          for (const _ of g)
            try {
              if (y0(_)) return;
            } catch {}
          rt(E, "unauthorized-domain");
        })).apply(this, arguments);
      }
      function y0(E) {
        const g = ae(),
          { protocol: _, hostname: I } = new URL(g);
        if (E.startsWith("chrome-extension://")) {
          const ie = new URL(E);
          return "" === ie.hostname && "" === I
            ? "chrome-extension:" === _ &&
                E.replace("chrome-extension://", "") ===
                  g.replace("chrome-extension://", "")
            : "chrome-extension:" === _ && ie.hostname === I;
        }
        if (!up.test(_)) return !1;
        if (Nd.test(E)) return I === E;
        const S = E.replace(/\./g, "\\.");
        return new RegExp("^(.+\\." + S + "|" + S + ")$", "i").test(I);
      }
      const __ = new et(3e4, 6e4);
      function lp() {
        const E = Gn().___jsl;
        if (E?.H)
          for (const g of Object.keys(E.H))
            if (
              ((E.H[g].r = E.H[g].r || []),
              (E.H[g].L = E.H[g].L || []),
              (E.H[g].r = [...E.H[g].L]),
              E.CP)
            )
              for (let _ = 0; _ < E.CP.length; _++) E.CP[_] = null;
      }
      let Ds = null;
      function ou(E) {
        return (
          (Ds =
            Ds ||
            (function Nl(E) {
              return new Promise((g, _) => {
                var I, S, N;
                function ie() {
                  lp(),
                    gapi.load("gapi.iframes", {
                      callback: () => {
                        g(gapi.iframes.getContext());
                      },
                      ontimeout: () => {
                        lp(), _(Ve(E, "network-request-failed"));
                      },
                      timeout: __.get(),
                    });
                }
                if (
                  null !==
                    (S =
                      null === (I = Gn().gapi) || void 0 === I
                        ? void 0
                        : I.iframes) &&
                  void 0 !== S &&
                  S.Iframe
                )
                  g(gapi.iframes.getContext());
                else {
                  if (null === (N = Gn().gapi) || void 0 === N || !N.load) {
                    const Le = Il("iframefcb");
                    return (
                      (Gn()[Le] = () => {
                        gapi.load ? ie() : _(Ve(E, "network-request-failed"));
                      }),
                      To(
                        `https://apis.google.com/js/api.js?onload=${Le}`
                      ).catch((ft) => _(ft))
                    );
                  }
                  ie();
                }
              }).catch((g) => {
                throw ((Ds = null), g);
              });
            })(E)),
          Ds
        );
      }
      const Oo = new et(5e3, 15e3),
        v_ = {
          style: {
            position: "absolute",
            top: "-100px",
            width: "1px",
            height: "1px",
          },
          "aria-hidden": "true",
          tabindex: "-1",
        },
        Qs = new Map([
          ["identitytoolkit.googleapis.com", "p"],
          ["staging-identitytoolkit.sandbox.googleapis.com", "s"],
          ["test-identitytoolkit.sandbox.googleapis.com", "t"],
        ]);
      function E_(E) {
        const g = E.config;
        te(g.authDomain, E, "auth-domain-config-required");
        const _ = g.emulator
            ? Vt(g, "emulator/auth/iframe")
            : `https://${E.config.authDomain}/__/auth/iframe`,
          I = { apiKey: g.apiKey, appName: E.name, v: P.SDK_VERSION },
          S = Qs.get(E.config.apiHost);
        S && (I.eid = S);
        const N = E._getFrameworks();
        return (
          N.length && (I.fw = N.join(",")), `${_}?${(0, V.xO)(I).slice(1)}`
        );
      }
      function ko() {
        return (
          (ko = (0, f.Z)(function* (E) {
            const g = yield ou(E),
              _ = Gn().gapi;
            return (
              te(_, E, "internal-error"),
              g.open(
                {
                  where: document.body,
                  url: E_(E),
                  messageHandlersFilter: _.iframes.CROSS_ORIGIN_IFRAMES_FILTER,
                  attributes: v_,
                  dontclear: !0,
                },
                (I) =>
                  new Promise(
                    (function () {
                      var S = (0, f.Z)(function* (N, ie) {
                        yield I.restyle({ setHideOnLeave: !1 });
                        const Le = Ve(E, "network-request-failed"),
                          ft = Gn().setTimeout(() => {
                            ie(Le);
                          }, Oo.get());
                        function vt() {
                          Gn().clearTimeout(ft), N(I);
                        }
                        I.ping(vt).then(vt, () => {
                          ie(Le);
                        });
                      });
                      return function (N, ie) {
                        return S.apply(this, arguments);
                      };
                    })()
                  )
              )
            );
          })),
          ko.apply(this, arguments)
        );
      }
      const Od = {
        location: "yes",
        resizable: "yes",
        statusbar: "yes",
        toolbar: "no",
      };
      class uu {
        constructor(g) {
          (this.window = g), (this.associatedEvent = null);
        }
        close() {
          if (this.window)
            try {
              this.window.close();
            } catch {}
        }
      }
      function Xi(E, g, _, I, S, N) {
        te(E.config.authDomain, E, "auth-domain-config-required"),
          te(E.config.apiKey, E, "invalid-api-key");
        const ie = {
          apiKey: E.config.apiKey,
          appName: E.name,
          authType: _,
          redirectUrl: I,
          v: P.SDK_VERSION,
          eventId: S,
        };
        if (g instanceof ps) {
          g.setDefaultLanguage(E.languageCode),
            (ie.providerId = g.providerId || ""),
            (0, V.xb)(g.getCustomParameters()) ||
              (ie.customParameters = JSON.stringify(g.getCustomParameters()));
          for (const [ft, vt] of Object.entries(N || {})) ie[ft] = vt;
        }
        if (g instanceof gs) {
          const ft = g.getScopes().filter((vt) => "" !== vt);
          ft.length > 0 && (ie.scopes = ft.join(","));
        }
        E.tenantId && (ie.tid = E.tenantId);
        const Le = ie;
        for (const ft of Object.keys(Le)) void 0 === Le[ft] && delete Le[ft];
        return `${(function kl({ config: E }) {
          return E.emulator
            ? Vt(E, "emulator/auth/handler")
            : `https://${E.authDomain}/__/auth/handler`;
        })(E)}?${(0, V.xO)(Le).slice(1)}`;
      }
      const Fl = "webStorageSupport",
        hp = class I_ {
          constructor() {
            (this.eventManagers = {}),
              (this.iframes = {}),
              (this.originValidationPromises = {}),
              (this._redirectPersistence = _l),
              (this._completeRedirectFn = Ys),
              (this._overrideRedirectResult = ya);
          }
          _openPopup(g, _, I, S) {
            var N = this;
            return (0, f.Z)(function* () {
              var ie;
              De(
                null === (ie = N.eventManagers[g._key()]) || void 0 === ie
                  ? void 0
                  : ie.manager,
                "_initialize() not called before _openPopup()"
              );
              const Le = Xi(g, _, I, ae(), S);
              return (function Pl(E, g, _, I = 500, S = 600) {
                const N = Math.max(
                    (window.screen.availHeight - S) / 2,
                    0
                  ).toString(),
                  ie = Math.max(
                    (window.screen.availWidth - I) / 2,
                    0
                  ).toString();
                let Le = "";
                const ft = Object.assign(Object.assign({}, Od), {
                    width: I.toString(),
                    height: S.toString(),
                    top: N,
                    left: ie,
                  }),
                  vt = (0, V.z$)().toLowerCase();
                _ && (Le = J(vt) ? "_blank" : _),
                  x(vt) &&
                    ((g = g || "http://localhost"), (ft.scrollbars = "yes"));
                const Bt = Object.entries(ft).reduce(
                  (Oi, [Si, Ll]) => `${Oi}${Si}=${Ll},`,
                  ""
                );
                if (
                  (function Tn(E = (0, V.z$)()) {
                    var g;
                    return (
                      mt(E) &&
                      !(
                        null === (g = window.navigator) ||
                        void 0 === g ||
                        !g.standalone
                      )
                    );
                  })(vt) &&
                  "_self" !== Le
                )
                  return (
                    (function kd(E, g) {
                      const _ = document.createElement("a");
                      (_.href = E), (_.target = g);
                      const I = document.createEvent("MouseEvent");
                      I.initMouseEvent(
                        "click",
                        !0,
                        !0,
                        window,
                        1,
                        0,
                        0,
                        0,
                        0,
                        !1,
                        !1,
                        !1,
                        !1,
                        1,
                        null
                      ),
                        _.dispatchEvent(I);
                    })(g || "", Le),
                    new uu(null)
                  );
                const $n = window.open(g || "", Le, Bt);
                te($n, E, "popup-blocked");
                try {
                  $n.focus();
                } catch {}
                return new uu($n);
              })(g, Le, Ja());
            })();
          }
          _openRedirect(g, _, I, S) {
            var N = this;
            return (0, f.Z)(function* () {
              return (
                yield N._originValidation(g),
                (function pt(E) {
                  Gn().location.href = E;
                })(Xi(g, _, I, ae(), S)),
                new Promise(() => {})
              );
            })();
          }
          _initialize(g) {
            const _ = g._key();
            if (this.eventManagers[_]) {
              const { manager: S, promise: N } = this.eventManagers[_];
              return S
                ? Promise.resolve(S)
                : (De(N, "If manager is not set, promise should be"), N);
            }
            const I = this.initAndGetManager(g);
            return (
              (this.eventManagers[_] = { promise: I }),
              I.catch(() => {
                delete this.eventManagers[_];
              }),
              I
            );
          }
          initAndGetManager(g) {
            var _ = this;
            return (0, f.Z)(function* () {
              const I = yield (function cp(E) {
                  return ko.apply(this, arguments);
                })(g),
                S = new xd(g);
              return (
                I.register(
                  "authEvent",
                  (N) => (
                    te(N?.authEvent, g, "invalid-auth-event"),
                    { status: S.onEvent(N.authEvent) ? "ACK" : "ERROR" }
                  ),
                  gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER
                ),
                (_.eventManagers[g._key()] = { manager: S }),
                (_.iframes[g._key()] = I),
                S
              );
            })();
          }
          _isIframeWebStorageSupported(g, _) {
            this.iframes[g._key()].send(
              Fl,
              { type: Fl },
              (S) => {
                var N;
                const ie =
                  null === (N = S?.[0]) || void 0 === N ? void 0 : N[Fl];
                void 0 !== ie && _(!!ie), rt(g, "internal-error");
              },
              gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER
            );
          }
          _originValidation(g) {
            const _ = g._key();
            return (
              this.originValidationPromises[_] ||
                (this.originValidationPromises[_] = (function Po(E) {
                  return xl.apply(this, arguments);
                })(g)),
              this.originValidationPromises[_]
            );
          }
          get _shouldInitProactively() {
            return Dn() || k() || mt();
          }
        };
      class es extends class C_ {
        constructor(g) {
          this.factorId = g;
        }
        _process(g, _, I) {
          switch (_.type) {
            case "enroll":
              return this._finalizeEnroll(g, _.credential, I);
            case "signin":
              return this._finalizeSignIn(g, _.credential);
            default:
              return ye("unexpected MultiFactorSessionType");
          }
        }
      } {
        constructor(g) {
          super("phone"), (this.credential = g);
        }
        static _fromCredential(g) {
          return new es(g);
        }
        _finalizeEnroll(g, _, I) {
          return (function s_(E, g) {
            return ze(
              E,
              "POST",
              "/v2/accounts/mfaEnrollment:finalize",
              Nt(E, g)
            );
          })(g, {
            idToken: _,
            displayName: I,
            phoneVerificationInfo: this.credential._makeVerificationRequest(),
          });
        }
        _finalizeSignIn(g, _) {
          return (function bo(E, g) {
            return ze(E, "POST", "/v2/accounts/mfaSignIn:finalize", Nt(E, g));
          })(g, {
            mfaPendingCredential: _,
            phoneVerificationInfo: this.credential._makeVerificationRequest(),
          });
        }
      }
      let lu = (() => {
        class E {
          constructor() {}
          static assertion(_) {
            return es._fromCredential(_);
          }
        }
        return (E.FACTOR_ID = "phone"), E;
      })();
      var fp = "@firebase/auth";
      class v0 {
        constructor(g) {
          (this.auth = g), (this.internalListeners = new Map());
        }
        getUid() {
          var g;
          return (
            this.assertAuthConfigured(),
            (null === (g = this.auth.currentUser) || void 0 === g
              ? void 0
              : g.uid) || null
          );
        }
        getToken(g) {
          var _ = this;
          return (0, f.Z)(function* () {
            return (
              _.assertAuthConfigured(),
              yield _.auth._initializationPromise,
              _.auth.currentUser
                ? { accessToken: yield _.auth.currentUser.getIdToken(g) }
                : null
            );
          })();
        }
        addAuthTokenListener(g) {
          if ((this.assertAuthConfigured(), this.internalListeners.has(g)))
            return;
          const _ = this.auth.onIdTokenChanged((I) => {
            var S;
            g(
              (null === (S = I) || void 0 === S
                ? void 0
                : S.stsTokenManager.accessToken) || null
            );
          });
          this.internalListeners.set(g, _), this.updateProactiveRefresh();
        }
        removeAuthTokenListener(g) {
          this.assertAuthConfigured();
          const _ = this.internalListeners.get(g);
          !_ ||
            (this.internalListeners.delete(g),
            _(),
            this.updateProactiveRefresh());
        }
        assertAuthConfigured() {
          te(
            this.auth._initializationPromise,
            "dependent-sdk-initialized-before-auth"
          );
        }
        updateProactiveRefresh() {
          this.internalListeners.size > 0
            ? this.auth._startProactiveRefresh()
            : this.auth._stopProactiveRefresh();
        }
      }
      function D_(E = (0, P.getApp)()) {
        const g = (0, P._getProvider)(E, "auth");
        return g.isInitialized()
          ? g.getImmediate()
          : (function se(E, g) {
              const _ = (0, P._getProvider)(E, "auth");
              if (_.isInitialized()) {
                const S = _.getImmediate(),
                  N = _.getOptions();
                if ((0, V.vZ)(N, g ?? {})) return S;
                rt(S, "already-initialized");
              }
              return _.initialize({ options: g });
            })(E, { popupRedirectResolver: hp, persistence: [tp, l_, _l] });
      }
      !(function w0(E) {
        (0, P._registerComponent)(
          new _e.wA(
            "auth",
            (g, { options: _ }) => {
              const I = g.getProvider("app").getImmediate(),
                S = g.getProvider("heartbeat"),
                { apiKey: N, authDomain: ie } = I.options;
              return ((Le, ft) => {
                te(N && !N.includes(":"), "invalid-api-key", {
                  appName: Le.name,
                }),
                  te(!ie?.includes(":"), "argument-error", {
                    appName: Le.name,
                  });
                const vt = {
                    apiKey: N,
                    authDomain: ie,
                    clientPlatform: E,
                    apiHost: "identitytoolkit.googleapis.com",
                    tokenApiHost: "securetoken.googleapis.com",
                    apiScheme: "https",
                    sdkClientVersion: me(E),
                  },
                  Bt = new He(Le, ft, vt);
                return (
                  (function ve(E, g) {
                    const _ = g?.persistence || [],
                      I = (Array.isArray(_) ? _ : [_]).map(ne);
                    g?.errorMap && E._updateErrorMap(g.errorMap),
                      E._initializeWithPersistence(I, g?.popupRedirectResolver);
                  })(Bt, _),
                  Bt
                );
              })(I, S);
            },
            "PUBLIC"
          )
            .setInstantiationMode("EXPLICIT")
            .setInstanceCreatedCallback((g, _, I) => {
              g.getProvider("auth-internal").initialize();
            })
        ),
          (0, P._registerComponent)(
            new _e.wA(
              "auth-internal",
              (g) => {
                const _ = Ot(g.getProvider("auth").getImmediate());
                return new v0(_);
              },
              "PRIVATE"
            ).setInstantiationMode("EXPLICIT")
          ),
          (0, P.registerVersion)(
            fp,
            "0.20.5",
            (function E0(E) {
              switch (E) {
                case "Node":
                  return "node";
                case "ReactNative":
                  return "rn";
                case "Worker":
                  return "webworker";
                case "Cordova":
                  return "cordova";
                default:
                  return;
              }
            })(E)
          ),
          (0, P.registerVersion)(fp, "0.20.5", "esm2017");
      })("Browser");
    },
    2090: (wt, Oe, M) => {
      M.d(Oe, {
        $s: () => bn,
        BH: () => Be,
        DV: () => ze,
        G6: () => te,
        GJ: () => zt,
        L: () => he,
        LL: () => ae,
        Mn: () => Ae,
        Pz: () => Dt,
        Sg: () => Ue,
        UG: () => ge,
        UI: () => yt,
        US: () => _e,
        Yr: () => Xe,
        ZB: () => H,
        ZR: () => ve,
        b$: () => rt,
        cI: () => Gt,
        d: () => Ve,
        dS: () => bt,
        eu: () => De,
        g5: () => P,
        gK: () => Rt,
        gQ: () => Yn,
        h$: () => ce,
        hl: () => ye,
        hu: () => V,
        jU: () => de,
        m9: () => gn,
        ne: () => Me,
        p$: () => G,
        pd: () => xn,
        r3: () => Nt,
        ru: () => at,
        tV: () => Ce,
        uI: () => tt,
        ug: () => qe,
        vZ: () => Zt,
        w1: () => Ne,
        w9: () => pn,
        xO: () => Mn,
        xb: () => lt,
        z$: () => Re,
        zI: () => X,
        zd: () => On,
      });
      const V = function (j, $) {
          if (!j) throw P($);
        },
        P = function (j) {
          return new Error(
            "Firebase Database (${JSCORE_VERSION}) INTERNAL ASSERT FAILED: " + j
          );
        },
        re = function (j) {
          const $ = [];
          let U = 0;
          for (let z = 0; z < j.length; z++) {
            let q = j.charCodeAt(z);
            q < 128
              ? ($[U++] = q)
              : q < 2048
              ? (($[U++] = (q >> 6) | 192), ($[U++] = (63 & q) | 128))
              : 55296 == (64512 & q) &&
                z + 1 < j.length &&
                56320 == (64512 & j.charCodeAt(z + 1))
              ? ((q = 65536 + ((1023 & q) << 10) + (1023 & j.charCodeAt(++z))),
                ($[U++] = (q >> 18) | 240),
                ($[U++] = ((q >> 12) & 63) | 128),
                ($[U++] = ((q >> 6) & 63) | 128),
                ($[U++] = (63 & q) | 128))
              : (($[U++] = (q >> 12) | 224),
                ($[U++] = ((q >> 6) & 63) | 128),
                ($[U++] = (63 & q) | 128));
          }
          return $;
        },
        _e = {
          byteToCharMap_: null,
          charToByteMap_: null,
          byteToCharMapWebSafe_: null,
          charToByteMapWebSafe_: null,
          ENCODED_VALS_BASE:
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
          get ENCODED_VALS() {
            return this.ENCODED_VALS_BASE + "+/=";
          },
          get ENCODED_VALS_WEBSAFE() {
            return this.ENCODED_VALS_BASE + "-_.";
          },
          HAS_NATIVE_SUPPORT: "function" == typeof atob,
          encodeByteArray(j, $) {
            if (!Array.isArray(j))
              throw Error("encodeByteArray takes an array as a parameter");
            this.init_();
            const U = $ ? this.byteToCharMapWebSafe_ : this.byteToCharMap_,
              z = [];
            for (let q = 0; q < j.length; q += 3) {
              const ke = j[q],
                st = q + 1 < j.length,
                Pt = st ? j[q + 1] : 0,
                sn = q + 2 < j.length,
                on = sn ? j[q + 2] : 0;
              let x = ((15 & Pt) << 2) | (on >> 6),
                k = 63 & on;
              sn || ((k = 64), st || (x = 64)),
                z.push(U[ke >> 2], U[((3 & ke) << 4) | (Pt >> 4)], U[x], U[k]);
            }
            return z.join("");
          },
          encodeString(j, $) {
            return this.HAS_NATIVE_SUPPORT && !$
              ? btoa(j)
              : this.encodeByteArray(re(j), $);
          },
          decodeString(j, $) {
            return this.HAS_NATIVE_SUPPORT && !$
              ? atob(j)
              : (function (j) {
                  const $ = [];
                  let U = 0,
                    z = 0;
                  for (; U < j.length; ) {
                    const q = j[U++];
                    if (q < 128) $[z++] = String.fromCharCode(q);
                    else if (q > 191 && q < 224) {
                      const ke = j[U++];
                      $[z++] = String.fromCharCode(((31 & q) << 6) | (63 & ke));
                    } else if (q > 239 && q < 365) {
                      const sn =
                        (((7 & q) << 18) |
                          ((63 & j[U++]) << 12) |
                          ((63 & j[U++]) << 6) |
                          (63 & j[U++])) -
                        65536;
                      ($[z++] = String.fromCharCode(55296 + (sn >> 10))),
                        ($[z++] = String.fromCharCode(56320 + (1023 & sn)));
                    } else {
                      const ke = j[U++],
                        st = j[U++];
                      $[z++] = String.fromCharCode(
                        ((15 & q) << 12) | ((63 & ke) << 6) | (63 & st)
                      );
                    }
                  }
                  return $.join("");
                })(this.decodeStringToByteArray(j, $));
          },
          decodeStringToByteArray(j, $) {
            this.init_();
            const U = $ ? this.charToByteMapWebSafe_ : this.charToByteMap_,
              z = [];
            for (let q = 0; q < j.length; ) {
              const ke = U[j.charAt(q++)],
                Pt = q < j.length ? U[j.charAt(q)] : 0;
              ++q;
              const on = q < j.length ? U[j.charAt(q)] : 64;
              ++q;
              const L = q < j.length ? U[j.charAt(q)] : 64;
              if ((++q, null == ke || null == Pt || null == on || null == L))
                throw Error();
              z.push((ke << 2) | (Pt >> 4)),
                64 !== on &&
                  (z.push(((Pt << 4) & 240) | (on >> 2)),
                  64 !== L && z.push(((on << 6) & 192) | L));
            }
            return z;
          },
          init_() {
            if (!this.byteToCharMap_) {
              (this.byteToCharMap_ = {}),
                (this.charToByteMap_ = {}),
                (this.byteToCharMapWebSafe_ = {}),
                (this.charToByteMapWebSafe_ = {});
              for (let j = 0; j < this.ENCODED_VALS.length; j++)
                (this.byteToCharMap_[j] = this.ENCODED_VALS.charAt(j)),
                  (this.charToByteMap_[this.byteToCharMap_[j]] = j),
                  (this.byteToCharMapWebSafe_[j] =
                    this.ENCODED_VALS_WEBSAFE.charAt(j)),
                  (this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[j]] =
                    j),
                  j >= this.ENCODED_VALS_BASE.length &&
                    ((this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(j)] =
                      j),
                    (this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(j)] =
                      j));
            }
          },
        },
        ce = function (j) {
          const $ = re(j);
          return _e.encodeByteArray($, !0);
        },
        he = function (j) {
          return ce(j).replace(/\./g, "");
        },
        Ce = function (j) {
          try {
            return _e.decodeString(j, !0);
          } catch ($) {
            console.error("base64Decode failed: ", $);
          }
          return null;
        };
      function G(j) {
        return H(void 0, j);
      }
      function H(j, $) {
        if (!($ instanceof Object)) return $;
        switch ($.constructor) {
          case Date:
            return new Date($.getTime());
          case Object:
            void 0 === j && (j = {});
            break;
          case Array:
            j = [];
            break;
          default:
            return $;
        }
        for (const U in $)
          !$.hasOwnProperty(U) || !Q(U) || (j[U] = H(j[U], $[U]));
        return j;
      }
      function Q(j) {
        return "__proto__" !== j;
      }
      class Be {
        constructor() {
          (this.reject = () => {}),
            (this.resolve = () => {}),
            (this.promise = new Promise(($, U) => {
              (this.resolve = $), (this.reject = U);
            }));
        }
        wrapCallback($) {
          return (U, z) => {
            U ? this.reject(U) : this.resolve(z),
              "function" == typeof $ &&
                (this.promise.catch(() => {}), 1 === $.length ? $(U) : $(U, z));
          };
        }
      }
      function Ue(j, $) {
        if (j.uid)
          throw new Error(
            'The "uid" field is no longer supported by mockUserToken. Please use "sub" instead for Firebase Auth User ID.'
          );
        const z = $ || "demo-project",
          q = j.iat || 0,
          ke = j.sub || j.user_id;
        if (!ke)
          throw new Error(
            "mockUserToken must contain 'sub' or 'user_id' field!"
          );
        const st = Object.assign(
          {
            iss: `https://securetoken.google.com/${z}`,
            aud: z,
            iat: q,
            exp: q + 3600,
            auth_time: q,
            sub: ke,
            user_id: ke,
            firebase: { sign_in_provider: "custom", identities: {} },
          },
          j
        );
        return [
          he(JSON.stringify({ alg: "none", type: "JWT" })),
          he(JSON.stringify(st)),
          "",
        ].join(".");
      }
      function Re() {
        return typeof navigator < "u" && "string" == typeof navigator.userAgent
          ? navigator.userAgent
          : "";
      }
      function tt() {
        return (
          typeof window < "u" &&
          !!(window.cordova || window.phonegap || window.PhoneGap) &&
          /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(Re())
        );
      }
      function ge() {
        try {
          return (
            "[object process]" ===
            Object.prototype.toString.call(global.process)
          );
        } catch {
          return !1;
        }
      }
      function de() {
        return "object" == typeof self && self.self === self;
      }
      function at() {
        const j =
          "object" == typeof chrome
            ? chrome.runtime
            : "object" == typeof browser
            ? browser.runtime
            : void 0;
        return "object" == typeof j && void 0 !== j.id;
      }
      function rt() {
        return (
          "object" == typeof navigator && "ReactNative" === navigator.product
        );
      }
      function Ve() {
        return Re().indexOf("Electron/") >= 0;
      }
      function Ne() {
        const j = Re();
        return j.indexOf("MSIE ") >= 0 || j.indexOf("Trident/") >= 0;
      }
      function Ae() {
        return Re().indexOf("MSAppHost/") >= 0;
      }
      function Xe() {
        return !1;
      }
      function te() {
        return (
          !ge() &&
          navigator.userAgent.includes("Safari") &&
          !navigator.userAgent.includes("Chrome")
        );
      }
      function ye() {
        return "object" == typeof indexedDB;
      }
      function De() {
        return new Promise((j, $) => {
          try {
            let U = !0;
            const z = "validate-browser-context-for-indexeddb-analytics-module",
              q = self.indexedDB.open(z);
            (q.onsuccess = () => {
              q.result.close(), U || self.indexedDB.deleteDatabase(z), j(!0);
            }),
              (q.onupgradeneeded = () => {
                U = !1;
              }),
              (q.onerror = () => {
                var ke;
                $(
                  (null === (ke = q.error) || void 0 === ke
                    ? void 0
                    : ke.message) || ""
                );
              });
          } catch (U) {
            $(U);
          }
        });
      }
      function X() {
        return !(typeof navigator > "u" || !navigator.cookieEnabled);
      }
      class ve extends Error {
        constructor($, U, z) {
          super(U),
            (this.code = $),
            (this.customData = z),
            (this.name = "FirebaseError"),
            Object.setPrototypeOf(this, ve.prototype),
            Error.captureStackTrace &&
              Error.captureStackTrace(this, ae.prototype.create);
        }
      }
      class ae {
        constructor($, U, z) {
          (this.service = $), (this.serviceName = U), (this.errors = z);
        }
        create($, ...U) {
          const z = U[0] || {},
            q = `${this.service}/${$}`,
            ke = this.errors[$],
            st = ke
              ? (function $e(j, $) {
                  return j.replace(ht, (U, z) => {
                    const q = $[z];
                    return null != q ? String(q) : `<${z}?>`;
                  });
                })(ke, z)
              : "Error";
          return new ve(q, `${this.serviceName}: ${st} (${q}).`, z);
        }
      }
      const ht = /\{\$([^}]+)}/g;
      function Gt(j) {
        return JSON.parse(j);
      }
      function Dt(j) {
        return JSON.stringify(j);
      }
      const et = function (j) {
          let $ = {},
            U = {},
            z = {},
            q = "";
          try {
            const ke = j.split(".");
            ($ = Gt(Ce(ke[0]) || "")),
              (U = Gt(Ce(ke[1]) || "")),
              (q = ke[2]),
              (z = U.d || {}),
              delete U.d;
          } catch {}
          return { header: $, claims: U, data: z, signature: q };
        },
        pn = function (j) {
          const U = et(j).claims;
          return !!U && "object" == typeof U && U.hasOwnProperty("iat");
        },
        zt = function (j) {
          const $ = et(j).claims;
          return "object" == typeof $ && !0 === $.admin;
        };
      function Nt(j, $) {
        return Object.prototype.hasOwnProperty.call(j, $);
      }
      function ze(j, $) {
        if (Object.prototype.hasOwnProperty.call(j, $)) return j[$];
      }
      function lt(j) {
        for (const $ in j)
          if (Object.prototype.hasOwnProperty.call(j, $)) return !1;
        return !0;
      }
      function yt(j, $, U) {
        const z = {};
        for (const q in j)
          Object.prototype.hasOwnProperty.call(j, q) &&
            (z[q] = $.call(U, j[q], q, j));
        return z;
      }
      function Zt(j, $) {
        if (j === $) return !0;
        const U = Object.keys(j),
          z = Object.keys($);
        for (const q of U) {
          if (!z.includes(q)) return !1;
          const ke = j[q],
            st = $[q];
          if ($t(ke) && $t(st)) {
            if (!Zt(ke, st)) return !1;
          } else if (ke !== st) return !1;
        }
        for (const q of z) if (!U.includes(q)) return !1;
        return !0;
      }
      function $t(j) {
        return null !== j && "object" == typeof j;
      }
      function Mn(j) {
        const $ = [];
        for (const [U, z] of Object.entries(j))
          Array.isArray(z)
            ? z.forEach((q) => {
                $.push(encodeURIComponent(U) + "=" + encodeURIComponent(q));
              })
            : $.push(encodeURIComponent(U) + "=" + encodeURIComponent(z));
        return $.length ? "&" + $.join("&") : "";
      }
      function On(j) {
        const $ = {};
        return (
          j
            .replace(/^\?/, "")
            .split("&")
            .forEach((z) => {
              if (z) {
                const [q, ke] = z.split("=");
                $[decodeURIComponent(q)] = decodeURIComponent(ke);
              }
            }),
          $
        );
      }
      function xn(j) {
        const $ = j.indexOf("?");
        if (!$) return "";
        const U = j.indexOf("#", $);
        return j.substring($, U > 0 ? U : void 0);
      }
      class Yn {
        constructor() {
          (this.chain_ = []),
            (this.buf_ = []),
            (this.W_ = []),
            (this.pad_ = []),
            (this.inbuf_ = 0),
            (this.total_ = 0),
            (this.blockSize = 64),
            (this.pad_[0] = 128);
          for (let $ = 1; $ < this.blockSize; ++$) this.pad_[$] = 0;
          this.reset();
        }
        reset() {
          (this.chain_[0] = 1732584193),
            (this.chain_[1] = 4023233417),
            (this.chain_[2] = 2562383102),
            (this.chain_[3] = 271733878),
            (this.chain_[4] = 3285377520),
            (this.inbuf_ = 0),
            (this.total_ = 0);
        }
        compress_($, U) {
          U || (U = 0);
          const z = this.W_;
          if ("string" == typeof $)
            for (let L = 0; L < 16; L++)
              (z[L] =
                ($.charCodeAt(U) << 24) |
                ($.charCodeAt(U + 1) << 16) |
                ($.charCodeAt(U + 2) << 8) |
                $.charCodeAt(U + 3)),
                (U += 4);
          else
            for (let L = 0; L < 16; L++)
              (z[L] =
                ($[U] << 24) | ($[U + 1] << 16) | ($[U + 2] << 8) | $[U + 3]),
                (U += 4);
          for (let L = 16; L < 80; L++) {
            const x = z[L - 3] ^ z[L - 8] ^ z[L - 14] ^ z[L - 16];
            z[L] = 4294967295 & ((x << 1) | (x >>> 31));
          }
          let on,
            ue,
            q = this.chain_[0],
            ke = this.chain_[1],
            st = this.chain_[2],
            Pt = this.chain_[3],
            sn = this.chain_[4];
          for (let L = 0; L < 80; L++) {
            L < 40
              ? L < 20
                ? ((on = Pt ^ (ke & (st ^ Pt))), (ue = 1518500249))
                : ((on = ke ^ st ^ Pt), (ue = 1859775393))
              : L < 60
              ? ((on = (ke & st) | (Pt & (ke | st))), (ue = 2400959708))
              : ((on = ke ^ st ^ Pt), (ue = 3395469782));
            const x =
              (((q << 5) | (q >>> 27)) + on + sn + ue + z[L]) & 4294967295;
            (sn = Pt),
              (Pt = st),
              (st = 4294967295 & ((ke << 30) | (ke >>> 2))),
              (ke = q),
              (q = x);
          }
          (this.chain_[0] = (this.chain_[0] + q) & 4294967295),
            (this.chain_[1] = (this.chain_[1] + ke) & 4294967295),
            (this.chain_[2] = (this.chain_[2] + st) & 4294967295),
            (this.chain_[3] = (this.chain_[3] + Pt) & 4294967295),
            (this.chain_[4] = (this.chain_[4] + sn) & 4294967295);
        }
        update($, U) {
          if (null == $) return;
          void 0 === U && (U = $.length);
          const z = U - this.blockSize;
          let q = 0;
          const ke = this.buf_;
          let st = this.inbuf_;
          for (; q < U; ) {
            if (0 === st)
              for (; q <= z; ) this.compress_($, q), (q += this.blockSize);
            if ("string" == typeof $) {
              for (; q < U; )
                if (
                  ((ke[st] = $.charCodeAt(q)), ++st, ++q, st === this.blockSize)
                ) {
                  this.compress_(ke), (st = 0);
                  break;
                }
            } else
              for (; q < U; )
                if (((ke[st] = $[q]), ++st, ++q, st === this.blockSize)) {
                  this.compress_(ke), (st = 0);
                  break;
                }
          }
          (this.inbuf_ = st), (this.total_ += U);
        }
        digest() {
          const $ = [];
          let U = 8 * this.total_;
          this.update(
            this.pad_,
            this.inbuf_ < 56
              ? 56 - this.inbuf_
              : this.blockSize - (this.inbuf_ - 56)
          );
          for (let q = this.blockSize - 1; q >= 56; q--)
            (this.buf_[q] = 255 & U), (U /= 256);
          this.compress_(this.buf_);
          let z = 0;
          for (let q = 0; q < 5; q++)
            for (let ke = 24; ke >= 0; ke -= 8)
              ($[z] = (this.chain_[q] >> ke) & 255), ++z;
          return $;
        }
      }
      function Me(j, $) {
        const U = new fe(j, $);
        return U.subscribe.bind(U);
      }
      class fe {
        constructor($, U) {
          (this.observers = []),
            (this.unsubscribes = []),
            (this.observerCount = 0),
            (this.task = Promise.resolve()),
            (this.finalized = !1),
            (this.onNoObservers = U),
            this.task
              .then(() => {
                $(this);
              })
              .catch((z) => {
                this.error(z);
              });
        }
        next($) {
          this.forEachObserver((U) => {
            U.next($);
          });
        }
        error($) {
          this.forEachObserver((U) => {
            U.error($);
          }),
            this.close($);
        }
        complete() {
          this.forEachObserver(($) => {
            $.complete();
          }),
            this.close();
        }
        subscribe($, U, z) {
          let q;
          if (void 0 === $ && void 0 === U && void 0 === z)
            throw new Error("Missing Observer.");
          (q = (function Ke(j, $) {
            if ("object" != typeof j || null === j) return !1;
            for (const U of $)
              if (U in j && "function" == typeof j[U]) return !0;
            return !1;
          })($, ["next", "error", "complete"])
            ? $
            : { next: $, error: U, complete: z }),
            void 0 === q.next && (q.next = ct),
            void 0 === q.error && (q.error = ct),
            void 0 === q.complete && (q.complete = ct);
          const ke = this.unsubscribeOne.bind(this, this.observers.length);
          return (
            this.finalized &&
              this.task.then(() => {
                try {
                  this.finalError ? q.error(this.finalError) : q.complete();
                } catch {}
              }),
            this.observers.push(q),
            ke
          );
        }
        unsubscribeOne($) {
          void 0 === this.observers ||
            void 0 === this.observers[$] ||
            (delete this.observers[$],
            (this.observerCount -= 1),
            0 === this.observerCount &&
              void 0 !== this.onNoObservers &&
              this.onNoObservers(this));
        }
        forEachObserver($) {
          if (!this.finalized)
            for (let U = 0; U < this.observers.length; U++) this.sendOne(U, $);
        }
        sendOne($, U) {
          this.task.then(() => {
            if (void 0 !== this.observers && void 0 !== this.observers[$])
              try {
                U(this.observers[$]);
              } catch (z) {
                typeof console < "u" && console.error && console.error(z);
              }
          });
        }
        close($) {
          this.finalized ||
            ((this.finalized = !0),
            void 0 !== $ && (this.finalError = $),
            this.task.then(() => {
              (this.observers = void 0), (this.onNoObservers = void 0);
            }));
        }
      }
      function ct() {}
      function Rt(j, $) {
        return `${j} failed: ${$} argument `;
      }
      const bt = function (j) {
          const $ = [];
          let U = 0;
          for (let z = 0; z < j.length; z++) {
            let q = j.charCodeAt(z);
            if (q >= 55296 && q <= 56319) {
              const ke = q - 55296;
              z++,
                V(z < j.length, "Surrogate pair missing trail surrogate."),
                (q = 65536 + (ke << 10) + (j.charCodeAt(z) - 56320));
            }
            q < 128
              ? ($[U++] = q)
              : q < 2048
              ? (($[U++] = (q >> 6) | 192), ($[U++] = (63 & q) | 128))
              : q < 65536
              ? (($[U++] = (q >> 12) | 224),
                ($[U++] = ((q >> 6) & 63) | 128),
                ($[U++] = (63 & q) | 128))
              : (($[U++] = (q >> 18) | 240),
                ($[U++] = ((q >> 12) & 63) | 128),
                ($[U++] = ((q >> 6) & 63) | 128),
                ($[U++] = (63 & q) | 128));
          }
          return $;
        },
        qe = function (j) {
          let $ = 0;
          for (let U = 0; U < j.length; U++) {
            const z = j.charCodeAt(U);
            z < 128
              ? $++
              : z < 2048
              ? ($ += 2)
              : z >= 55296 && z <= 56319
              ? (($ += 4), U++)
              : ($ += 3);
          }
          return $;
        };
      function bn(j, $ = 1e3, U = 2) {
        const z = $ * Math.pow(U, j),
          q = Math.round(0.5 * z * (Math.random() - 0.5) * 2);
        return Math.min(144e5, z + q);
      }
      function gn(j) {
        return j && j._delegate ? j._delegate : j;
      }
    },
    7799: (wt, Oe, M) => {
      var f = M(4650);
      let V = null;
      function P() {
        return V;
      }
      const ce = new f.OlP("DocumentToken");
      let he = (() => {
        class n {
          historyGo(t) {
            throw new Error("Not implemented");
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵprov = f.Yz7({
            token: n,
            factory: function () {
              return (function Ce() {
                return (0, f.LFG)(H);
              })();
            },
            providedIn: "platform",
          })),
          n
        );
      })();
      const G = new f.OlP("Location Initialized");
      let H = (() => {
        class n extends he {
          constructor(t) {
            super(), (this._doc = t), this._init();
          }
          _init() {
            (this.location = window.location), (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return P().getBaseHref(this._doc);
          }
          onPopState(t) {
            const r = P().getGlobalEventTarget(this._doc, "window");
            return (
              r.addEventListener("popstate", t, !1),
              () => r.removeEventListener("popstate", t)
            );
          }
          onHashChange(t) {
            const r = P().getGlobalEventTarget(this._doc, "window");
            return (
              r.addEventListener("hashchange", t, !1),
              () => r.removeEventListener("hashchange", t)
            );
          }
          get href() {
            return this.location.href;
          }
          get protocol() {
            return this.location.protocol;
          }
          get hostname() {
            return this.location.hostname;
          }
          get port() {
            return this.location.port;
          }
          get pathname() {
            return this.location.pathname;
          }
          get search() {
            return this.location.search;
          }
          get hash() {
            return this.location.hash;
          }
          set pathname(t) {
            this.location.pathname = t;
          }
          pushState(t, r, i) {
            Q() ? this._history.pushState(t, r, i) : (this.location.hash = i);
          }
          replaceState(t, r, i) {
            Q()
              ? this._history.replaceState(t, r, i)
              : (this.location.hash = i);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo(t = 0) {
            this._history.go(t);
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.LFG(ce));
          }),
          (n.ɵprov = f.Yz7({
            token: n,
            factory: function () {
              return (function Be() {
                return new H((0, f.LFG)(ce));
              })();
            },
            providedIn: "platform",
          })),
          n
        );
      })();
      function Q() {
        return !!window.history.pushState;
      }
      function Ue(n, e) {
        if (0 == n.length) return e;
        if (0 == e.length) return n;
        let t = 0;
        return (
          n.endsWith("/") && t++,
          e.startsWith("/") && t++,
          2 == t ? n + e.substring(1) : 1 == t ? n + e : n + "/" + e
        );
      }
      function Re(n) {
        const e = n.match(/#|\?|$/),
          t = (e && e.index) || n.length;
        return n.slice(0, t - ("/" === n[t - 1] ? 1 : 0)) + n.slice(t);
      }
      function tt(n) {
        return n && "?" !== n[0] ? "?" + n : n;
      }
      let ge = (() => {
        class n {
          historyGo(t) {
            throw new Error("Not implemented");
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵprov = f.Yz7({
            token: n,
            factory: function () {
              return (function de() {
                const n = (0, f.LFG)(ce).location;
                return new rt((0, f.LFG)(he), (n && n.origin) || "");
              })();
            },
            providedIn: "root",
          })),
          n
        );
      })();
      const at = new f.OlP("appBaseHref");
      let rt = (() => {
          class n extends ge {
            constructor(t, r) {
              if (
                (super(),
                (this._platformLocation = t),
                (this._removeListenerFns = []),
                null == r && (r = this._platformLocation.getBaseHrefFromDOM()),
                null == r)
              )
                throw new Error(
                  "No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document."
                );
              this._baseHref = r;
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(t) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(t),
                this._platformLocation.onHashChange(t)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(t) {
              return Ue(this._baseHref, t);
            }
            path(t = !1) {
              const r =
                  this._platformLocation.pathname +
                  tt(this._platformLocation.search),
                i = this._platformLocation.hash;
              return i && t ? `${r}${i}` : r;
            }
            pushState(t, r, i, a) {
              const l = this.prepareExternalUrl(i + tt(a));
              this._platformLocation.pushState(t, r, l);
            }
            replaceState(t, r, i, a) {
              const l = this.prepareExternalUrl(i + tt(a));
              this._platformLocation.replaceState(t, r, l);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(t = 0) {
              this._platformLocation.historyGo?.(t);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(f.LFG(he), f.LFG(at, 8));
            }),
            (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Ve = (() => {
          class n extends ge {
            constructor(t, r) {
              super(),
                (this._platformLocation = t),
                (this._baseHref = ""),
                (this._removeListenerFns = []),
                null != r && (this._baseHref = r);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(t) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(t),
                this._platformLocation.onHashChange(t)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(t = !1) {
              let r = this._platformLocation.hash;
              return null == r && (r = "#"), r.length > 0 ? r.substring(1) : r;
            }
            prepareExternalUrl(t) {
              const r = Ue(this._baseHref, t);
              return r.length > 0 ? "#" + r : r;
            }
            pushState(t, r, i, a) {
              let l = this.prepareExternalUrl(i + tt(a));
              0 == l.length && (l = this._platformLocation.pathname),
                this._platformLocation.pushState(t, r, l);
            }
            replaceState(t, r, i, a) {
              let l = this.prepareExternalUrl(i + tt(a));
              0 == l.length && (l = this._platformLocation.pathname),
                this._platformLocation.replaceState(t, r, l);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(t = 0) {
              this._platformLocation.historyGo?.(t);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(f.LFG(he), f.LFG(at, 8));
            }),
            (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Ne = (() => {
          class n {
            constructor(t) {
              (this._subject = new f.vpe()),
                (this._urlChangeListeners = []),
                (this._urlChangeSubscription = null),
                (this._locationStrategy = t);
              const r = this._locationStrategy.getBaseHref();
              (this._baseHref = Re(te(r))),
                this._locationStrategy.onPopState((i) => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: i.state,
                    type: i.type,
                  });
                });
            }
            ngOnDestroy() {
              this._urlChangeSubscription?.unsubscribe(),
                (this._urlChangeListeners = []);
            }
            path(t = !1) {
              return this.normalize(this._locationStrategy.path(t));
            }
            getState() {
              return this._locationStrategy.getState();
            }
            isCurrentPathEqualTo(t, r = "") {
              return this.path() == this.normalize(t + tt(r));
            }
            normalize(t) {
              return n.stripTrailingSlash(
                (function Xe(n, e) {
                  return n && e.startsWith(n) ? e.substring(n.length) : e;
                })(this._baseHref, te(t))
              );
            }
            prepareExternalUrl(t) {
              return (
                t && "/" !== t[0] && (t = "/" + t),
                this._locationStrategy.prepareExternalUrl(t)
              );
            }
            go(t, r = "", i = null) {
              this._locationStrategy.pushState(i, "", t, r),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(t + tt(r)),
                  i
                );
            }
            replaceState(t, r = "", i = null) {
              this._locationStrategy.replaceState(i, "", t, r),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(t + tt(r)),
                  i
                );
            }
            forward() {
              this._locationStrategy.forward();
            }
            back() {
              this._locationStrategy.back();
            }
            historyGo(t = 0) {
              this._locationStrategy.historyGo?.(t);
            }
            onUrlChange(t) {
              return (
                this._urlChangeListeners.push(t),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe((r) => {
                    this._notifyUrlChangeListeners(r.url, r.state);
                  })),
                () => {
                  const r = this._urlChangeListeners.indexOf(t);
                  this._urlChangeListeners.splice(r, 1),
                    0 === this._urlChangeListeners.length &&
                      (this._urlChangeSubscription?.unsubscribe(),
                      (this._urlChangeSubscription = null));
                }
              );
            }
            _notifyUrlChangeListeners(t = "", r) {
              this._urlChangeListeners.forEach((i) => i(t, r));
            }
            subscribe(t, r, i) {
              return this._subject.subscribe({
                next: t,
                error: r,
                complete: i,
              });
            }
          }
          return (
            (n.normalizeQueryParams = tt),
            (n.joinWithSlash = Ue),
            (n.stripTrailingSlash = Re),
            (n.ɵfac = function (t) {
              return new (t || n)(f.LFG(ge));
            }),
            (n.ɵprov = f.Yz7({
              token: n,
              factory: function () {
                return (function Ae() {
                  return new Ne((0, f.LFG)(ge));
                })();
              },
              providedIn: "root",
            })),
            n
          );
        })();
      function te(n) {
        return n.replace(/\/index.html$/, "");
      }
      const ye = {
        ADP: [void 0, void 0, 0],
        AFN: [void 0, "\u060b", 0],
        ALL: [void 0, void 0, 0],
        AMD: [void 0, "\u058f", 2],
        AOA: [void 0, "Kz"],
        ARS: [void 0, "$"],
        AUD: ["A$", "$"],
        AZN: [void 0, "\u20bc"],
        BAM: [void 0, "KM"],
        BBD: [void 0, "$"],
        BDT: [void 0, "\u09f3"],
        BHD: [void 0, void 0, 3],
        BIF: [void 0, void 0, 0],
        BMD: [void 0, "$"],
        BND: [void 0, "$"],
        BOB: [void 0, "Bs"],
        BRL: ["R$"],
        BSD: [void 0, "$"],
        BWP: [void 0, "P"],
        BYN: [void 0, void 0, 2],
        BYR: [void 0, void 0, 0],
        BZD: [void 0, "$"],
        CAD: ["CA$", "$", 2],
        CHF: [void 0, void 0, 2],
        CLF: [void 0, void 0, 4],
        CLP: [void 0, "$", 0],
        CNY: ["CN\xa5", "\xa5"],
        COP: [void 0, "$", 2],
        CRC: [void 0, "\u20a1", 2],
        CUC: [void 0, "$"],
        CUP: [void 0, "$"],
        CZK: [void 0, "K\u010d", 2],
        DJF: [void 0, void 0, 0],
        DKK: [void 0, "kr", 2],
        DOP: [void 0, "$"],
        EGP: [void 0, "E\xa3"],
        ESP: [void 0, "\u20a7", 0],
        EUR: ["\u20ac"],
        FJD: [void 0, "$"],
        FKP: [void 0, "\xa3"],
        GBP: ["\xa3"],
        GEL: [void 0, "\u20be"],
        GHS: [void 0, "GH\u20b5"],
        GIP: [void 0, "\xa3"],
        GNF: [void 0, "FG", 0],
        GTQ: [void 0, "Q"],
        GYD: [void 0, "$", 2],
        HKD: ["HK$", "$"],
        HNL: [void 0, "L"],
        HRK: [void 0, "kn"],
        HUF: [void 0, "Ft", 2],
        IDR: [void 0, "Rp", 2],
        ILS: ["\u20aa"],
        INR: ["\u20b9"],
        IQD: [void 0, void 0, 0],
        IRR: [void 0, void 0, 0],
        ISK: [void 0, "kr", 0],
        ITL: [void 0, void 0, 0],
        JMD: [void 0, "$"],
        JOD: [void 0, void 0, 3],
        JPY: ["\xa5", void 0, 0],
        KHR: [void 0, "\u17db"],
        KMF: [void 0, "CF", 0],
        KPW: [void 0, "\u20a9", 0],
        KRW: ["\u20a9", void 0, 0],
        KWD: [void 0, void 0, 3],
        KYD: [void 0, "$"],
        KZT: [void 0, "\u20b8"],
        LAK: [void 0, "\u20ad", 0],
        LBP: [void 0, "L\xa3", 0],
        LKR: [void 0, "Rs"],
        LRD: [void 0, "$"],
        LTL: [void 0, "Lt"],
        LUF: [void 0, void 0, 0],
        LVL: [void 0, "Ls"],
        LYD: [void 0, void 0, 3],
        MGA: [void 0, "Ar", 0],
        MGF: [void 0, void 0, 0],
        MMK: [void 0, "K", 0],
        MNT: [void 0, "\u20ae", 2],
        MRO: [void 0, void 0, 0],
        MUR: [void 0, "Rs", 2],
        MXN: ["MX$", "$"],
        MYR: [void 0, "RM"],
        NAD: [void 0, "$"],
        NGN: [void 0, "\u20a6"],
        NIO: [void 0, "C$"],
        NOK: [void 0, "kr", 2],
        NPR: [void 0, "Rs"],
        NZD: ["NZ$", "$"],
        OMR: [void 0, void 0, 3],
        PHP: ["\u20b1"],
        PKR: [void 0, "Rs", 2],
        PLN: [void 0, "z\u0142"],
        PYG: [void 0, "\u20b2", 0],
        RON: [void 0, "lei"],
        RSD: [void 0, void 0, 0],
        RUB: [void 0, "\u20bd"],
        RWF: [void 0, "RF", 0],
        SBD: [void 0, "$"],
        SEK: [void 0, "kr", 2],
        SGD: [void 0, "$"],
        SHP: [void 0, "\xa3"],
        SLE: [void 0, void 0, 2],
        SLL: [void 0, void 0, 0],
        SOS: [void 0, void 0, 0],
        SRD: [void 0, "$"],
        SSP: [void 0, "\xa3"],
        STD: [void 0, void 0, 0],
        STN: [void 0, "Db"],
        SYP: [void 0, "\xa3", 0],
        THB: [void 0, "\u0e3f"],
        TMM: [void 0, void 0, 0],
        TND: [void 0, void 0, 3],
        TOP: [void 0, "T$"],
        TRL: [void 0, void 0, 0],
        TRY: [void 0, "\u20ba"],
        TTD: [void 0, "$"],
        TWD: ["NT$", "$", 2],
        TZS: [void 0, void 0, 2],
        UAH: [void 0, "\u20b4"],
        UGX: [void 0, void 0, 0],
        USD: ["$"],
        UYI: [void 0, void 0, 0],
        UYU: [void 0, "$"],
        UYW: [void 0, void 0, 4],
        UZS: [void 0, void 0, 2],
        VEF: [void 0, "Bs", 2],
        VND: ["\u20ab", void 0, 0],
        VUV: [void 0, void 0, 0],
        XAF: ["FCFA", void 0, 0],
        XCD: ["EC$", "$"],
        XOF: ["F\u202fCFA", void 0, 0],
        XPF: ["CFPF", void 0, 0],
        XXX: ["\xa4"],
        YER: [void 0, void 0, 0],
        ZAR: [void 0, "R"],
        ZMK: [void 0, void 0, 0],
        ZMW: [void 0, "ZK"],
        ZWD: [void 0, void 0, 0],
      };
      var De = (() => (
          ((De = De || {})[(De.Decimal = 0)] = "Decimal"),
          (De[(De.Percent = 1)] = "Percent"),
          (De[(De.Currency = 2)] = "Currency"),
          (De[(De.Scientific = 3)] = "Scientific"),
          De
        ))(),
        ae = (() => (
          ((ae = ae || {})[(ae.Decimal = 0)] = "Decimal"),
          (ae[(ae.Group = 1)] = "Group"),
          (ae[(ae.List = 2)] = "List"),
          (ae[(ae.PercentSign = 3)] = "PercentSign"),
          (ae[(ae.PlusSign = 4)] = "PlusSign"),
          (ae[(ae.MinusSign = 5)] = "MinusSign"),
          (ae[(ae.Exponential = 6)] = "Exponential"),
          (ae[(ae.SuperscriptingExponent = 7)] = "SuperscriptingExponent"),
          (ae[(ae.PerMille = 8)] = "PerMille"),
          (ae[(ae.Infinity = 9)] = "Infinity"),
          (ae[(ae.NaN = 10)] = "NaN"),
          (ae[(ae.TimeSeparator = 11)] = "TimeSeparator"),
          (ae[(ae.CurrencyDecimal = 12)] = "CurrencyDecimal"),
          (ae[(ae.CurrencyGroup = 13)] = "CurrencyGroup"),
          ae
        ))();
      function lt(n, e) {
        const t = (0, f.cg1)(n),
          r = t[f.wAp.NumberSymbols][e];
        if (typeof r > "u") {
          if (e === ae.CurrencyDecimal)
            return t[f.wAp.NumberSymbols][ae.Decimal];
          if (e === ae.CurrencyGroup) return t[f.wAp.NumberSymbols][ae.Group];
        }
        return r;
      }
      const we = /^(\d+)?\.((\d+)(-(\d+))?)?$/;
      function He(n, e, t, r, i) {
        const l = (function pe(n, e = "-") {
          const t = {
              minInt: 1,
              minFrac: 0,
              maxFrac: 0,
              posPre: "",
              posSuf: "",
              negPre: "",
              negSuf: "",
              gSize: 0,
              lgSize: 0,
            },
            r = n.split(";"),
            i = r[0],
            a = r[1],
            l =
              -1 !== i.indexOf(".")
                ? i.split(".")
                : [
                    i.substring(0, i.lastIndexOf("0") + 1),
                    i.substring(i.lastIndexOf("0") + 1),
                  ],
            h = l[0],
            m = l[1] || "";
          t.posPre = h.substring(0, h.indexOf("#"));
          for (let b = 0; b < m.length; b++) {
            const D = m.charAt(b);
            "0" === D
              ? (t.minFrac = t.maxFrac = b + 1)
              : "#" === D
              ? (t.maxFrac = b + 1)
              : (t.posSuf += D);
          }
          const v = h.split(",");
          if (
            ((t.gSize = v[1] ? v[1].length : 0),
            (t.lgSize = v[2] || v[1] ? (v[2] || v[1]).length : 0),
            a)
          ) {
            const b = i.length - t.posPre.length - t.posSuf.length,
              D = a.indexOf("#");
            (t.negPre = a.substring(0, D).replace(/'/g, "")),
              (t.negSuf = a.slice(D + b).replace(/'/g, ""));
          } else (t.negPre = e + t.posPre), (t.negSuf = t.posSuf);
          return t;
        })(
          (function yt(n, e) {
            return (0, f.cg1)(n)[f.wAp.NumberFormats][e];
          })(e, De.Currency),
          lt(e, ae.MinusSign)
        );
        return (
          (l.minFrac = (function Rt(n) {
            let e;
            const t = ye[n];
            return t && (e = t[2]), "number" == typeof e ? e : 2;
          })(r)),
          (l.maxFrac = l.minFrac),
          (function nt(n, e, t, r, i, a, l = !1) {
            let h = "",
              m = !1;
            if (isFinite(n)) {
              let v = (function ut(n) {
                let r,
                  i,
                  a,
                  l,
                  h,
                  e = Math.abs(n) + "",
                  t = 0;
                for (
                  (i = e.indexOf(".")) > -1 && (e = e.replace(".", "")),
                    (a = e.search(/e/i)) > 0
                      ? (i < 0 && (i = a),
                        (i += +e.slice(a + 1)),
                        (e = e.substring(0, a)))
                      : i < 0 && (i = e.length),
                    a = 0;
                  "0" === e.charAt(a);
                  a++
                );
                if (a === (h = e.length)) (r = [0]), (i = 1);
                else {
                  for (h--; "0" === e.charAt(h); ) h--;
                  for (i -= a, r = [], l = 0; a <= h; a++, l++)
                    r[l] = Number(e.charAt(a));
                }
                return (
                  i > 22 && ((r = r.splice(0, 21)), (t = i - 1), (i = 1)),
                  { digits: r, exponent: t, integerLen: i }
                );
              })(n);
              l &&
                (v = (function Fe(n) {
                  if (0 === n.digits[0]) return n;
                  const e = n.digits.length - n.integerLen;
                  return (
                    n.exponent
                      ? (n.exponent += 2)
                      : (0 === e
                          ? n.digits.push(0, 0)
                          : 1 === e && n.digits.push(0),
                        (n.integerLen += 2)),
                    n
                  );
                })(v));
              let b = e.minInt,
                D = e.minFrac,
                R = e.maxFrac;
              if (a) {
                const It = a.match(we);
                if (null === It)
                  throw new Error(`${a} is not a valid digit info`);
                const Lt = It[1],
                  St = It[3],
                  rn = It[5];
                null != Lt && (b = hn(Lt)),
                  null != St && (D = hn(St)),
                  null != rn ? (R = hn(rn)) : null != St && D > R && (R = D);
              }
              !(function Sn(n, e, t) {
                if (e > t)
                  throw new Error(
                    `The minimum number of digits after fraction (${e}) is higher than the maximum (${t}).`
                  );
                let r = n.digits,
                  i = r.length - n.integerLen;
                const a = Math.min(Math.max(e, i), t);
                let l = a + n.integerLen,
                  h = r[l];
                if (l > 0) {
                  r.splice(Math.max(n.integerLen, l));
                  for (let D = l; D < r.length; D++) r[D] = 0;
                } else {
                  (i = Math.max(0, i)),
                    (n.integerLen = 1),
                    (r.length = Math.max(1, (l = a + 1))),
                    (r[0] = 0);
                  for (let D = 1; D < l; D++) r[D] = 0;
                }
                if (h >= 5)
                  if (l - 1 < 0) {
                    for (let D = 0; D > l; D--) r.unshift(0), n.integerLen++;
                    r.unshift(1), n.integerLen++;
                  } else r[l - 1]++;
                for (; i < Math.max(0, a); i++) r.push(0);
                let m = 0 !== a;
                const v = e + n.integerLen,
                  b = r.reduceRight(function (D, R, F, B) {
                    return (
                      (B[F] = (R += D) < 10 ? R : R - 10),
                      m && (0 === B[F] && F >= v ? B.pop() : (m = !1)),
                      R >= 10 ? 1 : 0
                    );
                  }, 0);
                b && (r.unshift(b), n.integerLen++);
              })(v, D, R);
              let F = v.digits,
                B = v.integerLen;
              const le = v.exponent;
              let Ee = [];
              for (m = F.every((It) => !It); B < b; B++) F.unshift(0);
              for (; B < 0; B++) F.unshift(0);
              B > 0 ? (Ee = F.splice(B, F.length)) : ((Ee = F), (F = [0]));
              const dt = [];
              for (
                F.length >= e.lgSize &&
                dt.unshift(F.splice(-e.lgSize, F.length).join(""));
                F.length > e.gSize;

              )
                dt.unshift(F.splice(-e.gSize, F.length).join(""));
              F.length && dt.unshift(F.join("")),
                (h = dt.join(lt(t, r))),
                Ee.length && (h += lt(t, i) + Ee.join("")),
                le && (h += lt(t, ae.Exponential) + "+" + le);
            } else h = lt(t, ae.Infinity);
            return (
              (h =
                n < 0 && !m
                  ? e.negPre + h + e.negSuf
                  : e.posPre + h + e.posSuf),
              h
            );
          })(n, l, e, ae.CurrencyGroup, ae.CurrencyDecimal, i)
            .replace("\xa4", t)
            .replace("\xa4", "")
            .trim()
        );
      }
      function hn(n) {
        const e = parseInt(n);
        if (isNaN(e))
          throw new Error("Invalid integer literal when parsing " + n);
        return e;
      }
      function Jo(n, e) {
        e = encodeURIComponent(e);
        for (const t of n.split(";")) {
          const r = t.indexOf("="),
            [i, a] = -1 == r ? [t, ""] : [t.slice(0, r), t.slice(r + 1)];
          if (i.trim() === e) return decodeURIComponent(a);
        }
        return null;
      }
      class go {
        constructor(e, t, r, i) {
          (this.$implicit = e),
            (this.ngForOf = t),
            (this.index = r),
            (this.count = i);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let ui = (() => {
        class n {
          constructor(t, r, i) {
            (this._viewContainer = t),
              (this._template = r),
              (this._differs = i),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForOf(t) {
            (this._ngForOf = t), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(t) {
            this._trackByFn = t;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          set ngForTemplate(t) {
            t && (this._template = t);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const t = this._ngForOf;
              !this._differ &&
                t &&
                (this._differ = this._differs
                  .find(t)
                  .create(this.ngForTrackBy));
            }
            if (this._differ) {
              const t = this._differ.diff(this._ngForOf);
              t && this._applyChanges(t);
            }
          }
          _applyChanges(t) {
            const r = this._viewContainer;
            t.forEachOperation((i, a, l) => {
              if (null == i.previousIndex)
                r.createEmbeddedView(
                  this._template,
                  new go(i.item, this._ngForOf, -1, -1),
                  null === l ? void 0 : l
                );
              else if (null == l) r.remove(null === a ? void 0 : a);
              else if (null !== a) {
                const h = r.get(a);
                r.move(h, l), br(h, i);
              }
            });
            for (let i = 0, a = r.length; i < a; i++) {
              const h = r.get(i).context;
              (h.index = i), (h.count = a), (h.ngForOf = this._ngForOf);
            }
            t.forEachIdentityChange((i) => {
              br(r.get(i.currentIndex), i);
            });
          }
          static ngTemplateContextGuard(t, r) {
            return !0;
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.Y36(f.s_b), f.Y36(f.Rgc), f.Y36(f.ZZ4));
          }),
          (n.ɵdir = f.lG2({
            type: n,
            selectors: [["", "ngFor", "", "ngForOf", ""]],
            inputs: {
              ngForOf: "ngForOf",
              ngForTrackBy: "ngForTrackBy",
              ngForTemplate: "ngForTemplate",
            },
            standalone: !0,
          })),
          n
        );
      })();
      function br(n, e) {
        n.context.$implicit = e.item;
      }
      let Dr = (() => {
        class n {
          constructor(t, r) {
            (this._viewContainer = t),
              (this._context = new li()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = r);
          }
          set ngIf(t) {
            (this._context.$implicit = this._context.ngIf = t),
              this._updateView();
          }
          set ngIfThen(t) {
            zu("ngIfThen", t),
              (this._thenTemplateRef = t),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(t) {
            zu("ngIfElse", t),
              (this._elseTemplateRef = t),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context
                  )));
          }
          static ngTemplateContextGuard(t, r) {
            return !0;
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.Y36(f.s_b), f.Y36(f.Rgc));
          }),
          (n.ɵdir = f.lG2({
            type: n,
            selectors: [["", "ngIf", ""]],
            inputs: {
              ngIf: "ngIf",
              ngIfThen: "ngIfThen",
              ngIfElse: "ngIfElse",
            },
            standalone: !0,
          })),
          n
        );
      })();
      class li {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function zu(n, e) {
        if (e && !e.createEmbeddedView)
          throw new Error(
            `${n} must be a TemplateRef, but received '${(0, f.AaK)(e)}'.`
          );
      }
      function Ki(n, e) {
        return new f.vHH(2100, !1);
      }
      class hs {
        createSubscription(e, t) {
          return e.subscribe({
            next: t,
            error: (r) => {
              throw r;
            },
          });
        }
        dispose(e) {
          e.unsubscribe();
        }
      }
      class r0 {
        createSubscription(e, t) {
          return e.then(t, (r) => {
            throw r;
          });
        }
        dispose(e) {}
      }
      const Ff = new r0(),
        s0 = new hs();
      let Ku = (() => {
          class n {
            constructor(t) {
              (this._latestValue = null),
                (this._subscription = null),
                (this._obj = null),
                (this._strategy = null),
                (this._ref = t);
            }
            ngOnDestroy() {
              this._subscription && this._dispose(), (this._ref = null);
            }
            transform(t) {
              return this._obj
                ? t !== this._obj
                  ? (this._dispose(), this.transform(t))
                  : this._latestValue
                : (t && this._subscribe(t), this._latestValue);
            }
            _subscribe(t) {
              (this._obj = t),
                (this._strategy = this._selectStrategy(t)),
                (this._subscription = this._strategy.createSubscription(
                  t,
                  (r) => this._updateLatestValue(t, r)
                ));
            }
            _selectStrategy(t) {
              if ((0, f.QGY)(t)) return Ff;
              if ((0, f.F4k)(t)) return s0;
              throw Ki();
            }
            _dispose() {
              this._strategy.dispose(this._subscription),
                (this._latestValue = null),
                (this._subscription = null),
                (this._obj = null);
            }
            _updateLatestValue(t, r) {
              t === this._obj &&
                ((this._latestValue = r), this._ref.markForCheck());
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(f.Y36(f.sBO, 16));
            }),
            (n.ɵpipe = f.Yjl({
              name: "async",
              type: n,
              pure: !1,
              standalone: !0,
            })),
            n
          );
        })(),
        Yu = (() => {
          class n {
            constructor(t, r = "USD") {
              (this._locale = t), (this._defaultCurrencyCode = r);
            }
            transform(t, r = this._defaultCurrencyCode, i = "symbol", a, l) {
              if (
                !(function Qu(n) {
                  return !(null == n || "" === n || n != n);
                })(t)
              )
                return null;
              (l = l || this._locale),
                "boolean" == typeof i && (i = i ? "symbol" : "code");
              let h = r || this._defaultCurrencyCode;
              "code" !== i &&
                (h =
                  "symbol" === i || "symbol-narrow" === i
                    ? (function ct(n, e, t = "en") {
                        const r =
                            (function Mn(n) {
                              return (0, f.cg1)(n)[f.wAp.Currencies];
                            })(t)[n] ||
                            ye[n] ||
                            [],
                          i = r[1];
                        return "narrow" === e && "string" == typeof i
                          ? i
                          : r[0] || n;
                      })(h, "symbol" === i ? "wide" : "narrow", l)
                    : i);
              try {
                return He(
                  (function Ju(n) {
                    if (
                      "string" == typeof n &&
                      !isNaN(Number(n) - parseFloat(n))
                    )
                      return Number(n);
                    if ("number" != typeof n)
                      throw new Error(`${n} is not a number`);
                    return n;
                  })(t),
                  l,
                  h,
                  r,
                  a
                );
              } catch (m) {
                throw Ki();
              }
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(f.Y36(f.soG, 16), f.Y36(f.EJc, 16));
            }),
            (n.ɵpipe = f.Yjl({
              name: "currency",
              type: n,
              pure: !0,
              standalone: !0,
            })),
            n
          );
        })();
      let Xu = (() => {
        class n {}
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = f.oAB({ type: n })),
          (n.ɵinj = f.cJS({})),
          n
        );
      })();
      const di = "browser";
      function tl(n) {
        return n === di;
      }
      function Bf(n) {
        return "server" === n;
      }
      let qa = (() => {
        class n {}
        return (
          (n.ɵprov = (0, f.Yz7)({
            token: n,
            providedIn: "root",
            factory: () => new Di((0, f.LFG)(ce), window),
          })),
          n
        );
      })();
      class Di {
        constructor(e, t) {
          (this.document = e), (this.window = t), (this.offset = () => [0, 0]);
        }
        setOffset(e) {
          this.offset = Array.isArray(e) ? () => e : e;
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.pageXOffset, this.window.pageYOffset]
            : [0, 0];
        }
        scrollToPosition(e) {
          this.supportsScrolling() && this.window.scrollTo(e[0], e[1]);
        }
        scrollToAnchor(e) {
          if (!this.supportsScrolling()) return;
          const t = (function Ka(n, e) {
            const t = n.getElementById(e) || n.getElementsByName(e)[0];
            if (t) return t;
            if (
              "function" == typeof n.createTreeWalker &&
              n.body &&
              (n.body.createShadowRoot || n.body.attachShadow)
            ) {
              const r = n.createTreeWalker(n.body, NodeFilter.SHOW_ELEMENT);
              let i = r.currentNode;
              for (; i; ) {
                const a = i.shadowRoot;
                if (a) {
                  const l =
                    a.getElementById(e) || a.querySelector(`[name="${e}"]`);
                  if (l) return l;
                }
                i = r.nextNode();
              }
            }
            return null;
          })(this.document, e);
          t && (this.scrollToElement(t), t.focus());
        }
        setHistoryScrollRestoration(e) {
          if (this.supportScrollRestoration()) {
            const t = this.window.history;
            t && t.scrollRestoration && (t.scrollRestoration = e);
          }
        }
        scrollToElement(e) {
          const t = e.getBoundingClientRect(),
            r = t.left + this.window.pageXOffset,
            i = t.top + this.window.pageYOffset,
            a = this.offset();
          this.window.scrollTo(r - a[0], i - a[1]);
        }
        supportScrollRestoration() {
          try {
            if (!this.supportsScrolling()) return !1;
            const e =
              nl(this.window.history) ||
              nl(Object.getPrototypeOf(this.window.history));
            return !(!e || (!e.writable && !e.set));
          } catch {
            return !1;
          }
        }
        supportsScrolling() {
          try {
            return (
              !!this.window &&
              !!this.window.scrollTo &&
              "pageXOffset" in this.window
            );
          } catch {
            return !1;
          }
        }
      }
      function nl(n) {
        return Object.getOwnPropertyDescriptor(n, "scrollRestoration");
      }
      class Tr {}
      class ra extends class rl extends class _e {} {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      } {
        static makeCurrent() {
          !(function Ie(n) {
            V || (V = n);
          })(new ra());
        }
        onAndCancel(e, t, r) {
          return (
            e.addEventListener(t, r, !1),
            () => {
              e.removeEventListener(t, r, !1);
            }
          );
        }
        dispatchEvent(e, t) {
          e.dispatchEvent(t);
        }
        remove(e) {
          e.parentNode && e.parentNode.removeChild(e);
        }
        createElement(e, t) {
          return (t = t || this.getDefaultDocument()).createElement(e);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(e) {
          return e.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(e) {
          return e instanceof DocumentFragment;
        }
        getGlobalEventTarget(e, t) {
          return "window" === t
            ? window
            : "document" === t
            ? e
            : "body" === t
            ? e.body
            : null;
        }
        getBaseHref(e) {
          const t = (function ms() {
            return (
              (_o = _o || document.querySelector("base")),
              _o ? _o.getAttribute("href") : null
            );
          })();
          return null == t
            ? null
            : (function ia(n) {
                (yo = yo || document.createElement("a")),
                  yo.setAttribute("href", n);
                const e = yo.pathname;
                return "/" === e.charAt(0) ? e : `/${e}`;
              })(t);
        }
        resetBaseElement() {
          _o = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(e) {
          return Jo(document.cookie, e);
        }
      }
      let yo,
        _o = null;
      const Ht = new f.OlP("TRANSITION_ID"),
        jf = [
          {
            provide: f.ip1,
            useFactory: function sd(n, e, t) {
              return () => {
                t.get(f.CZH).donePromise.then(() => {
                  const r = P(),
                    i = e.querySelectorAll(`style[ng-transition="${n}"]`);
                  for (let a = 0; a < i.length; a++) r.remove(i[a]);
                });
              };
            },
            deps: [Ht, ce, f.zs3],
            multi: !0,
          },
        ];
      let od = (() => {
        class n {
          build() {
            return new XMLHttpRequest();
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const il = new f.OlP("EventManagerPlugins");
      let vo = (() => {
        class n {
          constructor(t, r) {
            (this._zone = r),
              (this._eventNameToPlugin = new Map()),
              t.forEach((i) => (i.manager = this)),
              (this._plugins = t.slice().reverse());
          }
          addEventListener(t, r, i) {
            return this._findPluginFor(r).addEventListener(t, r, i);
          }
          addGlobalEventListener(t, r, i) {
            return this._findPluginFor(r).addGlobalEventListener(t, r, i);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(t) {
            const r = this._eventNameToPlugin.get(t);
            if (r) return r;
            const i = this._plugins;
            for (let a = 0; a < i.length; a++) {
              const l = i[a];
              if (l.supports(t)) return this._eventNameToPlugin.set(t, l), l;
            }
            throw new Error(`No event manager plugin found for event ${t}`);
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.LFG(il), f.LFG(f.R0b));
          }),
          (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class Hf {
        constructor(e) {
          this._doc = e;
        }
        addGlobalEventListener(e, t, r) {
          const i = P().getGlobalEventTarget(this._doc, e);
          if (!i)
            throw new Error(`Unsupported event target ${i} for event ${t}`);
          return this.addEventListener(i, t, r);
        }
      }
      let sl = (() => {
          class n {
            constructor() {
              this._stylesSet = new Set();
            }
            addStyles(t) {
              const r = new Set();
              t.forEach((i) => {
                this._stylesSet.has(i) || (this._stylesSet.add(i), r.add(i));
              }),
                this.onStylesAdded(r);
            }
            onStylesAdded(t) {}
            getAllStyles() {
              return Array.from(this._stylesSet);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        je = (() => {
          class n extends sl {
            constructor(t) {
              super(),
                (this._doc = t),
                (this._hostNodes = new Map()),
                this._hostNodes.set(t.head, []);
            }
            _addStylesToHost(t, r, i) {
              t.forEach((a) => {
                const l = this._doc.createElement("style");
                (l.textContent = a), i.push(r.appendChild(l));
              });
            }
            addHost(t) {
              const r = [];
              this._addStylesToHost(this._stylesSet, t, r),
                this._hostNodes.set(t, r);
            }
            removeHost(t) {
              const r = this._hostNodes.get(t);
              r && r.forEach(mn), this._hostNodes.delete(t);
            }
            onStylesAdded(t) {
              this._hostNodes.forEach((r, i) => {
                this._addStylesToHost(t, i, r);
              });
            }
            ngOnDestroy() {
              this._hostNodes.forEach((t) => t.forEach(mn));
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(f.LFG(ce));
            }),
            (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      function mn(n) {
        P().remove(n);
      }
      const Eo = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: "http://www.w3.org/1999/xhtml",
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
          math: "http://www.w3.org/1998/MathML/",
        },
        ol = /%COMP%/g;
      function Ya(n, e, t) {
        for (let r = 0; r < e.length; r++) {
          let i = e[r];
          Array.isArray(i) ? Ya(n, i, t) : ((i = i.replace(ol, n)), t.push(i));
        }
        return t;
      }
      function Gf(n) {
        return (e) => {
          if ("__ngUnwrap__" === e) return n;
          !1 === n(e) && (e.preventDefault(), (e.returnValue = !1));
        };
      }
      let sa = (() => {
        class n {
          constructor(t, r, i) {
            (this.eventManager = t),
              (this.sharedStylesHost = r),
              (this.appId = i),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new fr(t));
          }
          createRenderer(t, r) {
            if (!t || !r) return this.defaultRenderer;
            switch (r.encapsulation) {
              case f.ifc.Emulated: {
                let i = this.rendererByCompId.get(r.id);
                return (
                  i ||
                    ((i = new vs(
                      this.eventManager,
                      this.sharedStylesHost,
                      r,
                      this.appId
                    )),
                    this.rendererByCompId.set(r.id, i)),
                  i.applyToHost(t),
                  i
                );
              }
              case 1:
              case f.ifc.ShadowDom:
                return new t_(this.eventManager, this.sharedStylesHost, t, r);
              default:
                if (!this.rendererByCompId.has(r.id)) {
                  const i = Ya(r.id, r.styles, []);
                  this.sharedStylesHost.addStyles(i),
                    this.rendererByCompId.set(r.id, this.defaultRenderer);
                }
                return this.defaultRenderer;
            }
          }
          begin() {}
          end() {}
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.LFG(vo), f.LFG(je), f.LFG(f.AFp));
          }),
          (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class fr {
        constructor(e) {
          (this.eventManager = e),
            (this.data = Object.create(null)),
            (this.destroyNode = null);
        }
        destroy() {}
        createElement(e, t) {
          return t
            ? document.createElementNS(Eo[t] || t, e)
            : document.createElement(e);
        }
        createComment(e) {
          return document.createComment(e);
        }
        createText(e) {
          return document.createTextNode(e);
        }
        appendChild(e, t) {
          (ys(e) ? e.content : e).appendChild(t);
        }
        insertBefore(e, t, r) {
          e && (ys(e) ? e.content : e).insertBefore(t, r);
        }
        removeChild(e, t) {
          e && e.removeChild(t);
        }
        selectRootElement(e, t) {
          let r = "string" == typeof e ? document.querySelector(e) : e;
          if (!r)
            throw new Error(`The selector "${e}" did not match any elements`);
          return t || (r.textContent = ""), r;
        }
        parentNode(e) {
          return e.parentNode;
        }
        nextSibling(e) {
          return e.nextSibling;
        }
        setAttribute(e, t, r, i) {
          if (i) {
            t = i + ":" + t;
            const a = Eo[i];
            a ? e.setAttributeNS(a, t, r) : e.setAttribute(t, r);
          } else e.setAttribute(t, r);
        }
        removeAttribute(e, t, r) {
          if (r) {
            const i = Eo[r];
            i ? e.removeAttributeNS(i, t) : e.removeAttribute(`${r}:${t}`);
          } else e.removeAttribute(t);
        }
        addClass(e, t) {
          e.classList.add(t);
        }
        removeClass(e, t) {
          e.classList.remove(t);
        }
        setStyle(e, t, r, i) {
          i & (f.JOm.DashCase | f.JOm.Important)
            ? e.style.setProperty(t, r, i & f.JOm.Important ? "important" : "")
            : (e.style[t] = r);
        }
        removeStyle(e, t, r) {
          r & f.JOm.DashCase ? e.style.removeProperty(t) : (e.style[t] = "");
        }
        setProperty(e, t, r) {
          e[t] = r;
        }
        setValue(e, t) {
          e.nodeValue = t;
        }
        listen(e, t, r) {
          return "string" == typeof e
            ? this.eventManager.addGlobalEventListener(e, t, Gf(r))
            : this.eventManager.addEventListener(e, t, Gf(r));
        }
      }
      function ys(n) {
        return "TEMPLATE" === n.tagName && void 0 !== n.content;
      }
      class vs extends fr {
        constructor(e, t, r, i) {
          super(e), (this.component = r);
          const a = Ya(i + "-" + r.id, r.styles, []);
          t.addStyles(a),
            (this.contentAttr = (function Za(n) {
              return "_ngcontent-%COMP%".replace(ol, n);
            })(i + "-" + r.id)),
            (this.hostAttr = (function al(n) {
              return "_nghost-%COMP%".replace(ol, n);
            })(i + "-" + r.id));
        }
        applyToHost(e) {
          super.setAttribute(e, this.hostAttr, "");
        }
        createElement(e, t) {
          const r = super.createElement(e, t);
          return super.setAttribute(r, this.contentAttr, ""), r;
        }
      }
      class t_ extends fr {
        constructor(e, t, r, i) {
          super(e),
            (this.sharedStylesHost = t),
            (this.hostEl = r),
            (this.shadowRoot = r.attachShadow({ mode: "open" })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const a = Ya(i.id, i.styles, []);
          for (let l = 0; l < a.length; l++) {
            const h = document.createElement("style");
            (h.textContent = a[l]), this.shadowRoot.appendChild(h);
          }
        }
        nodeOrShadowRoot(e) {
          return e === this.hostEl ? this.shadowRoot : e;
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
        appendChild(e, t) {
          return super.appendChild(this.nodeOrShadowRoot(e), t);
        }
        insertBefore(e, t, r) {
          return super.insertBefore(this.nodeOrShadowRoot(e), t, r);
        }
        removeChild(e, t) {
          return super.removeChild(this.nodeOrShadowRoot(e), t);
        }
        parentNode(e) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(e))
          );
        }
      }
      let ul = (() => {
        class n extends Hf {
          constructor(t) {
            super(t);
          }
          supports(t) {
            return !0;
          }
          addEventListener(t, r, i) {
            return (
              t.addEventListener(r, i, !1),
              () => this.removeEventListener(t, r, i)
            );
          }
          removeEventListener(t, r, i) {
            return t.removeEventListener(r, i);
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.LFG(ce));
          }),
          (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const Wf = ["alt", "control", "meta", "shift"],
        cd = {
          "\b": "Backspace",
          "\t": "Tab",
          "\x7f": "Delete",
          "\x1b": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS",
        },
        oa = {
          A: "1",
          B: "2",
          C: "3",
          D: "4",
          E: "5",
          F: "6",
          G: "7",
          H: "8",
          I: "9",
          J: "*",
          K: "+",
          M: "-",
          N: ".",
          O: "/",
          "`": "0",
          "\x90": "NumLock",
        },
        zf = {
          alt: (n) => n.altKey,
          control: (n) => n.ctrlKey,
          meta: (n) => n.metaKey,
          shift: (n) => n.shiftKey,
        };
      let Qa = (() => {
        class n extends Hf {
          constructor(t) {
            super(t);
          }
          supports(t) {
            return null != n.parseEventName(t);
          }
          addEventListener(t, r, i) {
            const a = n.parseEventName(r),
              l = n.eventCallback(a.fullKey, i, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() => P().onAndCancel(t, a.domEventName, l));
          }
          static parseEventName(t) {
            const r = t.toLowerCase().split("."),
              i = r.shift();
            if (0 === r.length || ("keydown" !== i && "keyup" !== i))
              return null;
            const a = n._normalizeKey(r.pop());
            let l = "";
            if (
              (Wf.forEach((m) => {
                const v = r.indexOf(m);
                v > -1 && (r.splice(v, 1), (l += m + "."));
              }),
              (l += a),
              0 != r.length || 0 === a.length)
            )
              return null;
            const h = {};
            return (h.domEventName = i), (h.fullKey = l), h;
          }
          static getEventFullKey(t) {
            let r = "",
              i = (function n_(n) {
                let e = n.key;
                if (null == e) {
                  if (((e = n.keyIdentifier), null == e)) return "Unidentified";
                  e.startsWith("U+") &&
                    ((e = String.fromCharCode(parseInt(e.substring(2), 16))),
                    3 === n.location && oa.hasOwnProperty(e) && (e = oa[e]));
                }
                return cd[e] || e;
              })(t);
            return (
              (i = i.toLowerCase()),
              " " === i ? (i = "space") : "." === i && (i = "dot"),
              Wf.forEach((a) => {
                a != i && (0, zf[a])(t) && (r += a + ".");
              }),
              (r += i),
              r
            );
          }
          static eventCallback(t, r, i) {
            return (a) => {
              n.getEventFullKey(a) === t && i.runGuarded(() => r(a));
            };
          }
          static _normalizeKey(t) {
            return "esc" === t ? "escape" : t;
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.LFG(ce));
          }),
          (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const Yf = (0, f.eFA)(f._c5, "browser", [
          { provide: f.Lbi, useValue: di },
          {
            provide: f.g9A,
            useValue: function Kf() {
              ra.makeCurrent();
            },
            multi: !0,
          },
          {
            provide: ce,
            useFactory: function Zf() {
              return (0, f.RDi)(document), document;
            },
            deps: [],
          },
        ]),
        dl = new f.OlP(""),
        Or = [
          {
            provide: f.rWj,
            useClass: class $f {
              addToWindow(e) {
                (f.dqk.getAngularTestability = (r, i = !0) => {
                  const a = e.findTestabilityInTree(r, i);
                  if (null == a)
                    throw new Error("Could not find testability for element.");
                  return a;
                }),
                  (f.dqk.getAllAngularTestabilities = () =>
                    e.getAllTestabilities()),
                  (f.dqk.getAllAngularRootElements = () =>
                    e.getAllRootElements()),
                  f.dqk.frameworkStabilizers ||
                    (f.dqk.frameworkStabilizers = []),
                  f.dqk.frameworkStabilizers.push((r) => {
                    const i = f.dqk.getAllAngularTestabilities();
                    let a = i.length,
                      l = !1;
                    const h = function (m) {
                      (l = l || m), a--, 0 == a && r(l);
                    };
                    i.forEach(function (m) {
                      m.whenStable(h);
                    });
                  });
              }
              findTestabilityInTree(e, t, r) {
                return null == t
                  ? null
                  : e.getTestability(t) ??
                      (r
                        ? P().isShadowRoot(t)
                          ? this.findTestabilityInTree(e, t.host, !0)
                          : this.findTestabilityInTree(e, t.parentElement, !0)
                        : null);
              }
            },
            deps: [],
          },
          { provide: f.lri, useClass: f.dDg, deps: [f.R0b, f.eoX, f.rWj] },
          { provide: f.dDg, useClass: f.dDg, deps: [f.R0b, f.eoX, f.rWj] },
        ],
        Yr = [
          { provide: f.zSh, useValue: "root" },
          {
            provide: f.qLn,
            useFactory: function ll() {
              return new f.qLn();
            },
            deps: [],
          },
          { provide: il, useClass: ul, multi: !0, deps: [ce, f.R0b, f.Lbi] },
          { provide: il, useClass: Qa, multi: !0, deps: [ce] },
          { provide: sa, useClass: sa, deps: [vo, je, f.AFp] },
          { provide: f.FYo, useExisting: sa },
          { provide: sl, useExisting: je },
          { provide: je, useClass: je, deps: [ce] },
          { provide: vo, useClass: vo, deps: [il, f.R0b] },
          { provide: Tr, useClass: od, deps: [] },
          [],
        ];
      let qn = (() => {
          class n {
            constructor(t) {}
            static withServerTransition(t) {
              return {
                ngModule: n,
                providers: [
                  { provide: f.AFp, useValue: t.appId },
                  { provide: Ht, useExisting: f.AFp },
                  jf,
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(f.LFG(dl, 12));
            }),
            (n.ɵmod = f.oAB({ type: n })),
            (n.ɵinj = f.cJS({
              providers: [...Yr, ...Or],
              imports: [Xu, f.hGG],
            })),
            n
          );
        })(),
        hl = (() => {
          class n {
            constructor(t) {
              this._doc = t;
            }
            getTitle() {
              return this._doc.title;
            }
            setTitle(t) {
              this._doc.title = t || "";
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(f.LFG(ce));
            }),
            (n.ɵprov = f.Yz7({
              token: n,
              factory: function (t) {
                let r = null;
                return (
                  (r = t
                    ? new t()
                    : (function i_() {
                        return new hl((0, f.LFG)(ce));
                      })()),
                  r
                );
              },
              providedIn: "root",
            })),
            n
          );
        })();
      typeof window < "u" && window;
      var jn = M(8996),
        Gn = M(7669);
      function pt(...n) {
        const e = (0, Gn.yG)(n);
        return (0, jn.D)(n, e);
      }
      var Ti = M(7579);
      class $r extends Ti.x {
        constructor(e) {
          super(), (this._value = e);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(e) {
          const t = super._subscribe(e);
          return !t.closed && e.next(this._value), t;
        }
        getValue() {
          const { hasError: e, thrownError: t, _value: r } = this;
          if (e) throw t;
          return this._throwIfClosed(), r;
        }
        next(e) {
          super.next((this._value = e));
        }
      }
      var kr = M(9751);
      const { isArray: vd } = Array,
        { getPrototypeOf: yl, prototype: Xa, keys: c_ } = Object;
      function ua(n) {
        if (1 === n.length) {
          const e = n[0];
          if (vd(e)) return { args: e, keys: null };
          if (
            (function Ed(n) {
              return n && "object" == typeof n && yl(n) === Xa;
            })(e)
          ) {
            const t = c_(e);
            return { args: t.map((r) => e[r]), keys: t };
          }
        }
        return { args: n, keys: null };
      }
      var Yi = M(4671),
        Ft = M(4004);
      const { isArray: d_ } = Array;
      function Co(n) {
        return (0, Ft.U)((e) =>
          (function la(n, e) {
            return d_(e) ? n(...e) : n(e);
          })(n, e)
        );
      }
      function vl(n, e) {
        return n.reduce((t, r, i) => ((t[r] = e[i]), t), {});
      }
      var pr = M(5403),
        El = M(9672);
      function Gs(...n) {
        const e = (0, Gn.yG)(n),
          t = (0, Gn.jO)(n),
          { args: r, keys: i } = ua(n);
        if (0 === r.length) return (0, jn.D)([], e);
        const a = new kr.y(
          (function h_(n, e, t = Yi.y) {
            return (r) => {
              wd(
                e,
                () => {
                  const { length: i } = n,
                    a = new Array(i);
                  let l = i,
                    h = i;
                  for (let m = 0; m < i; m++)
                    wd(
                      e,
                      () => {
                        const v = (0, jn.D)(n[m], e);
                        let b = !1;
                        v.subscribe(
                          (0, pr.x)(
                            r,
                            (D) => {
                              (a[m] = D),
                                b || ((b = !0), h--),
                                h || r.next(t(a.slice()));
                            },
                            () => {
                              --l || r.complete();
                            }
                          )
                        );
                      },
                      r
                    );
                },
                r
              );
            };
          })(r, e, i ? (l) => vl(i, l) : Yi.y)
        );
        return t ? a.pipe(Co(t)) : a;
      }
      function wd(n, e, t) {
        n ? (0, El.f)(t, n, e) : e();
      }
      var ca = M(8189);
      function wl(...n) {
        return (function tp() {
          return (0, ca.J)(1);
        })()((0, jn.D)(n, (0, Gn.yG)(n)));
      }
      var bo = M(8421);
      function Do(n) {
        return new kr.y((e) => {
          (0, bo.Xf)(n()).subscribe(e);
        });
      }
      var Ws = M(9635),
        zs = M(576);
      function To(n, e) {
        const t = (0, zs.m)(n) ? n : () => n,
          r = (i) => i.error(t());
        return new kr.y(e ? (i) => e.schedule(r, 0, i) : r);
      }
      const Pi = (0, M(3888).d)(
        (n) =>
          function () {
            n(this),
              (this.name = "EmptyError"),
              (this.message = "no elements in sequence");
          }
      );
      var So = M(515),
        eu = M(727),
        tn = M(4482);
      function Id() {
        return (0, tn.e)((n, e) => {
          let t = null;
          n._refCount++;
          const r = (0, pr.x)(e, void 0, void 0, void 0, () => {
            if (!n || n._refCount <= 0 || 0 < --n._refCount)
              return void (t = null);
            const i = n._connection,
              a = t;
            (t = null),
              i && (!a || i === a) && i.unsubscribe(),
              e.unsubscribe();
          });
          n.subscribe(r), r.closed || (t = n.connect());
        });
      }
      class f_ extends kr.y {
        constructor(e, t) {
          super(),
            (this.source = e),
            (this.subjectFactory = t),
            (this._subject = null),
            (this._refCount = 0),
            (this._connection = null),
            (0, tn.A)(e) && (this.lift = e.lift);
        }
        _subscribe(e) {
          return this.getSubject().subscribe(e);
        }
        getSubject() {
          const e = this._subject;
          return (
            (!e || e.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        _teardown() {
          this._refCount = 0;
          const { _connection: e } = this;
          (this._subject = this._connection = null), e?.unsubscribe();
        }
        connect() {
          let e = this._connection;
          if (!e) {
            e = this._connection = new eu.w0();
            const t = this.getSubject();
            e.add(
              this.source.subscribe(
                (0, pr.x)(
                  t,
                  void 0,
                  () => {
                    this._teardown(), t.complete();
                  },
                  (r) => {
                    this._teardown(), t.error(r);
                  },
                  () => this._teardown()
                )
              )
            ),
              e.closed && ((this._connection = null), (e = eu.w0.EMPTY));
          }
          return e;
        }
        refCount() {
          return Id()(this);
        }
      }
      function Wn(n, e) {
        return (0, tn.e)((t, r) => {
          let i = null,
            a = 0,
            l = !1;
          const h = () => l && !i && r.complete();
          t.subscribe(
            (0, pr.x)(
              r,
              (m) => {
                i?.unsubscribe();
                let v = 0;
                const b = a++;
                (0, bo.Xf)(n(m, b)).subscribe(
                  (i = (0, pr.x)(
                    r,
                    (D) => r.next(e ? e(m, D, b, v++) : D),
                    () => {
                      (i = null), h();
                    }
                  ))
                );
              },
              () => {
                (l = !0), h();
              }
            )
          );
        });
      }
      function Cl(n) {
        return n <= 0
          ? () => So.E
          : (0, tn.e)((e, t) => {
              let r = 0;
              e.subscribe(
                (0, pr.x)(t, (i) => {
                  ++r <= n && (t.next(i), n <= r && t.complete());
                })
              );
            });
      }
      function bl(...n) {
        const e = (0, Gn.yG)(n);
        return (0, tn.e)((t, r) => {
          (e ? wl(n, t, e) : wl(n, t)).subscribe(r);
        });
      }
      function hi(n, e) {
        return (0, tn.e)((t, r) => {
          let i = 0;
          t.subscribe((0, pr.x)(r, (a) => n.call(e, a, i++) && r.next(a)));
        });
      }
      var Hr = M(5577);
      function qs(n) {
        return (0, tn.e)((e, t) => {
          let r = !1;
          e.subscribe(
            (0, pr.x)(
              t,
              (i) => {
                (r = !0), t.next(i);
              },
              () => {
                r || t.next(n), t.complete();
              }
            )
          );
        });
      }
      function np(n = _0) {
        return (0, tn.e)((e, t) => {
          let r = !1;
          e.subscribe(
            (0, pr.x)(
              t,
              (i) => {
                (r = !0), t.next(i);
              },
              () => (r ? t.complete() : t.error(n()))
            )
          );
        });
      }
      function _0() {
        return new Pi();
      }
      function Un(n, e) {
        const t = arguments.length >= 2;
        return (r) =>
          r.pipe(
            n ? hi((i, a) => n(i, a, r)) : Yi.y,
            Cl(1),
            t ? qs(e) : np(() => new Pi())
          );
      }
      function Qi(n, e) {
        return (0, zs.m)(e) ? (0, Hr.z)(n, e, 1) : (0, Hr.z)(n, 1);
      }
      var Xn = M(8505);
      function Ao(n) {
        return (0, tn.e)((e, t) => {
          let a,
            r = null,
            i = !1;
          (r = e.subscribe(
            (0, pr.x)(t, void 0, void 0, (l) => {
              (a = (0, bo.Xf)(n(l, Ao(n)(e)))),
                r ? (r.unsubscribe(), (r = null), a.subscribe(t)) : (i = !0);
            })
          )),
            i && (r.unsubscribe(), (r = null), a.subscribe(t));
        });
      }
      function Cd(n, e, t, r, i) {
        return (a, l) => {
          let h = t,
            m = e,
            v = 0;
          a.subscribe(
            (0, pr.x)(
              l,
              (b) => {
                const D = v++;
                (m = h ? n(m, b, D) : ((h = !0), b)), r && l.next(m);
              },
              i &&
                (() => {
                  h && l.next(m), l.complete();
                })
            )
          );
        };
      }
      function Sr(n, e) {
        return (0, tn.e)(Cd(n, e, arguments.length >= 2, !0));
      }
      function fi(n) {
        return n <= 0
          ? () => So.E
          : (0, tn.e)((e, t) => {
              let r = [];
              e.subscribe(
                (0, pr.x)(
                  t,
                  (i) => {
                    r.push(i), n < r.length && r.shift();
                  },
                  () => {
                    for (const i of r) t.next(i);
                    t.complete();
                  },
                  void 0,
                  () => {
                    r = null;
                  }
                )
              );
            });
      }
      function bd(n, e) {
        const t = arguments.length >= 2;
        return (r) =>
          r.pipe(
            n ? hi((i, a) => n(i, a, r)) : Yi.y,
            fi(1),
            t ? qs(e) : np(() => new Pi())
          );
      }
      function ha(n) {
        return (0, tn.e)((e, t) => {
          try {
            e.subscribe(t);
          } finally {
            t.add(n);
          }
        });
      }
      const ln = "primary";
      class Dd {
        constructor(e) {
          this.params = e || {};
        }
        has(e) {
          return Object.prototype.hasOwnProperty.call(this.params, e);
        }
        get(e) {
          if (this.has(e)) {
            const t = this.params[e];
            return Array.isArray(t) ? t[0] : t;
          }
          return null;
        }
        getAll(e) {
          if (this.has(e)) {
            const t = this.params[e];
            return Array.isArray(t) ? t : [t];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function tu(n) {
        return new Dd(n);
      }
      function fa(n, e, t) {
        const r = t.path.split("/");
        if (
          r.length > n.length ||
          ("full" === t.pathMatch && (e.hasChildren() || r.length < n.length))
        )
          return null;
        const i = {};
        for (let a = 0; a < r.length; a++) {
          const l = r[a],
            h = n[a];
          if (l.startsWith(":")) i[l.substring(1)] = h;
          else if (l !== h.path) return null;
        }
        return { consumed: n.slice(0, r.length), posParams: i };
      }
      function er(n, e) {
        const t = n ? Object.keys(n) : void 0,
          r = e ? Object.keys(e) : void 0;
        if (!t || !r || t.length != r.length) return !1;
        let i;
        for (let a = 0; a < t.length; a++)
          if (((i = t[a]), !Tl(n[i], e[i]))) return !1;
        return !0;
      }
      function Tl(n, e) {
        if (Array.isArray(n) && Array.isArray(e)) {
          if (n.length !== e.length) return !1;
          const t = [...n].sort(),
            r = [...e].sort();
          return t.every((i, a) => r[a] === i);
        }
        return n === e;
      }
      function Ro(n) {
        return Array.prototype.concat.apply([], n);
      }
      function Td(n) {
        return n.length > 0 ? n[n.length - 1] : null;
      }
      function Ar(n, e) {
        for (const t in n) n.hasOwnProperty(t) && e(n[t], t);
      }
      function ws(n) {
        return (0, f.CqO)(n)
          ? n
          : (0, f.QGY)(n)
          ? (0, jn.D)(Promise.resolve(n))
          : pt(n);
      }
      const Sd = {
          exact: function g_(n, e, t) {
            if (
              !pi(n.segments, e.segments) ||
              !ma(n.segments, e.segments, t) ||
              n.numberOfChildren !== e.numberOfChildren
            )
              return !1;
            for (const r in e.children)
              if (!n.children[r] || !g_(n.children[r], e.children[r], t))
                return !1;
            return !0;
          },
          subset: Sl,
        },
        ip = {
          exact: function ga(n, e) {
            return er(n, e);
          },
          subset: function Is(n, e) {
            return (
              Object.keys(e).length <= Object.keys(n).length &&
              Object.keys(e).every((t) => Tl(n[t], e[t]))
            );
          },
          ignored: () => !0,
        };
      function pa(n, e, t) {
        return (
          Sd[t.paths](n.root, e.root, t.matrixParams) &&
          ip[t.queryParams](n.queryParams, e.queryParams) &&
          !("exact" === t.fragment && n.fragment !== e.fragment)
        );
      }
      function Sl(n, e, t) {
        return ru(n, e, e.segments, t);
      }
      function ru(n, e, t, r) {
        if (n.segments.length > t.length) {
          const i = n.segments.slice(0, t.length);
          return !(!pi(i, t) || e.hasChildren() || !ma(i, t, r));
        }
        if (n.segments.length === t.length) {
          if (!pi(n.segments, t) || !ma(n.segments, t, r)) return !1;
          for (const i in e.children)
            if (!n.children[i] || !Sl(n.children[i], e.children[i], r))
              return !1;
          return !0;
        }
        {
          const i = t.slice(0, n.segments.length),
            a = t.slice(n.segments.length);
          return (
            !!(pi(n.segments, i) && ma(n.segments, i, r) && n.children[ln]) &&
            ru(n.children[ln], e, a, r)
          );
        }
      }
      function ma(n, e, t) {
        return e.every((r, i) => ip[t](n[i].parameters, r.parameters));
      }
      class Cs {
        constructor(e, t, r) {
          (this.root = e), (this.queryParams = t), (this.fragment = r);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = tu(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return Al.serialize(this);
        }
      }
      class an {
        constructor(e, t) {
          (this.segments = e),
            (this.children = t),
            (this.parent = null),
            Ar(t, (r, i) => (r.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return va(this);
        }
      }
      class _a {
        constructor(e, t) {
          (this.path = e), (this.parameters = t);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = tu(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return Ys(this);
        }
      }
      function pi(n, e) {
        return n.length === e.length && n.every((t, r) => t.path === e[r].path);
      }
      class or {}
      class Ad {
        parse(e) {
          const t = new wa(e);
          return new Cs(
            t.parseRootSegment(),
            t.parseQueryParams(),
            t.parseFragment()
          );
        }
        serialize(e) {
          const t = `/${bs(e.root, !0)}`,
            r = (function Md(n) {
              const e = Object.keys(n)
                .map((t) => {
                  const r = n[t];
                  return Array.isArray(r)
                    ? r.map((i) => `${Ml(t)}=${Ml(i)}`).join("&")
                    : `${Ml(t)}=${Ml(r)}`;
                })
                .filter((t) => !!t);
              return e.length ? `?${e.join("&")}` : "";
            })(e.queryParams);
          return `${t}${r}${
            "string" == typeof e.fragment
              ? `#${(function m_(n) {
                  return encodeURI(n);
                })(e.fragment)}`
              : ""
          }`;
        }
      }
      const Al = new Ad();
      function va(n) {
        return n.segments.map((e) => Ys(e)).join("/");
      }
      function bs(n, e) {
        if (!n.hasChildren()) return va(n);
        if (e) {
          const t = n.children[ln] ? bs(n.children[ln], !1) : "",
            r = [];
          return (
            Ar(n.children, (i, a) => {
              a !== ln && r.push(`${a}:${bs(i, !1)}`);
            }),
            r.length > 0 ? `${t}(${r.join("//")})` : t
          );
        }
        {
          const t = (function sp(n, e) {
            let t = [];
            return (
              Ar(n.children, (r, i) => {
                i === ln && (t = t.concat(e(r, i)));
              }),
              Ar(n.children, (r, i) => {
                i !== ln && (t = t.concat(e(r, i)));
              }),
              t
            );
          })(n, (r, i) =>
            i === ln ? [bs(n.children[ln], !1)] : [`${i}:${bs(r, !1)}`]
          );
          return 1 === Object.keys(n.children).length && null != n.children[ln]
            ? `${va(n)}/${t[0]}`
            : `${va(n)}/(${t.join("//")})`;
        }
      }
      function Rl(n) {
        return encodeURIComponent(n)
          .replace(/%40/g, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",");
      }
      function Ml(n) {
        return Rl(n).replace(/%3B/gi, ";");
      }
      function Mo(n) {
        return Rl(n)
          .replace(/\(/g, "%28")
          .replace(/\)/g, "%29")
          .replace(/%26/gi, "&");
      }
      function Zs(n) {
        return decodeURIComponent(n);
      }
      function iu(n) {
        return Zs(n.replace(/\+/g, "%20"));
      }
      function Ys(n) {
        return `${Mo(n.path)}${(function Rd(n) {
          return Object.keys(n)
            .map((e) => `;${Mo(e)}=${Mo(n[e])}`)
            .join("");
        })(n.parameters)}`;
      }
      const xo = /^[^\/()?;=#]+/;
      function No(n) {
        const e = n.match(xo);
        return e ? e[0] : "";
      }
      const xd = /^[^=?&#]+/,
        ap = /^[^&#]+/;
      class wa {
        constructor(e) {
          (this.url = e), (this.remaining = e);
        }
        parseRootSegment() {
          return (
            this.consumeOptional("/"),
            "" === this.remaining ||
            this.peekStartsWith("?") ||
            this.peekStartsWith("#")
              ? new an([], {})
              : new an([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const e = {};
          if (this.consumeOptional("?"))
            do {
              this.parseQueryParam(e);
            } while (this.consumeOptional("&"));
          return e;
        }
        parseFragment() {
          return this.consumeOptional("#")
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ("" === this.remaining) return {};
          this.consumeOptional("/");
          const e = [];
          for (
            this.peekStartsWith("(") || e.push(this.parseSegment());
            this.peekStartsWith("/") &&
            !this.peekStartsWith("//") &&
            !this.peekStartsWith("/(");

          )
            this.capture("/"), e.push(this.parseSegment());
          let t = {};
          this.peekStartsWith("/(") &&
            (this.capture("/"), (t = this.parseParens(!0)));
          let r = {};
          return (
            this.peekStartsWith("(") && (r = this.parseParens(!1)),
            (e.length > 0 || Object.keys(t).length > 0) &&
              (r[ln] = new an(e, t)),
            r
          );
        }
        parseSegment() {
          const e = No(this.remaining);
          if ("" === e && this.peekStartsWith(";")) throw new f.vHH(4009, !1);
          return this.capture(e), new _a(Zs(e), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const e = {};
          for (; this.consumeOptional(";"); ) this.parseParam(e);
          return e;
        }
        parseParam(e) {
          const t = No(this.remaining);
          if (!t) return;
          this.capture(t);
          let r = "";
          if (this.consumeOptional("=")) {
            const i = No(this.remaining);
            i && ((r = i), this.capture(r));
          }
          e[Zs(t)] = Zs(r);
        }
        parseQueryParam(e) {
          const t = (function op(n) {
            const e = n.match(xd);
            return e ? e[0] : "";
          })(this.remaining);
          if (!t) return;
          this.capture(t);
          let r = "";
          if (this.consumeOptional("=")) {
            const l = (function Ea(n) {
              const e = n.match(ap);
              return e ? e[0] : "";
            })(this.remaining);
            l && ((r = l), this.capture(r));
          }
          const i = iu(t),
            a = iu(r);
          if (e.hasOwnProperty(i)) {
            let l = e[i];
            Array.isArray(l) || ((l = [l]), (e[i] = l)), l.push(a);
          } else e[i] = a;
        }
        parseParens(e) {
          const t = {};
          for (
            this.capture("(");
            !this.consumeOptional(")") && this.remaining.length > 0;

          ) {
            const r = No(this.remaining),
              i = this.remaining[r.length];
            if ("/" !== i && ")" !== i && ";" !== i) throw new f.vHH(4010, !1);
            let a;
            r.indexOf(":") > -1
              ? ((a = r.slice(0, r.indexOf(":"))),
                this.capture(a),
                this.capture(":"))
              : e && (a = ln);
            const l = this.parseChildren();
            (t[a] = 1 === Object.keys(l).length ? l[ln] : new an([], l)),
              this.consumeOptional("//");
          }
          return t;
        }
        peekStartsWith(e) {
          return this.remaining.startsWith(e);
        }
        consumeOptional(e) {
          return (
            !!this.peekStartsWith(e) &&
            ((this.remaining = this.remaining.substring(e.length)), !0)
          );
        }
        capture(e) {
          if (!this.consumeOptional(e)) throw new f.vHH(4011, !1);
        }
      }
      function su(n) {
        return n.segments.length > 0 ? new an([], { [ln]: n }) : n;
      }
      function Nd(n) {
        const e = {};
        for (const r of Object.keys(n.children)) {
          const a = Nd(n.children[r]);
          (a.segments.length > 0 || a.hasChildren()) && (e[r] = a);
        }
        return (function up(n) {
          if (1 === n.numberOfChildren && n.children[ln]) {
            const e = n.children[ln];
            return new an(n.segments.concat(e.segments), e.children);
          }
          return n;
        })(new an(n.segments, e));
      }
      function Po(n) {
        return n instanceof Cs;
      }
      function Nl(n, e, t, r, i) {
        if (0 === t.length) return Oo(e.root, e.root, e.root, r, i);
        const a = (function v_(n) {
          if ("string" == typeof n[0] && 1 === n.length && "/" === n[0])
            return new Pd(!0, 0, n);
          let e = 0,
            t = !1;
          const r = n.reduce((i, a, l) => {
            if ("object" == typeof a && null != a) {
              if (a.outlets) {
                const h = {};
                return (
                  Ar(a.outlets, (m, v) => {
                    h[v] = "string" == typeof m ? m.split("/") : m;
                  }),
                  [...i, { outlets: h }]
                );
              }
              if (a.segmentPath) return [...i, a.segmentPath];
            }
            return "string" != typeof a
              ? [...i, a]
              : 0 === l
              ? (a.split("/").forEach((h, m) => {
                  (0 == m && "." === h) ||
                    (0 == m && "" === h
                      ? (t = !0)
                      : ".." === h
                      ? e++
                      : "" != h && i.push(h));
                }),
                i)
              : [...i, a];
          }, []);
          return new Pd(t, e, r);
        })(t);
        return a.toRoot()
          ? Oo(e.root, e.root, new an([], {}), r, i)
          : (function l(m) {
              const v = (function cp(n, e, t, r) {
                  if (n.isAbsolute) return new Qs(e.root, !0, 0);
                  if (-1 === r) return new Qs(t, t === e.root, 0);
                  return (function ko(n, e, t) {
                    let r = n,
                      i = e,
                      a = t;
                    for (; a > i; ) {
                      if (((a -= i), (r = r.parent), !r))
                        throw new f.vHH(4005, !1);
                      i = r.segments.length;
                    }
                    return new Qs(r, !1, i - a);
                  })(t, r + (Ds(n.commands[0]) ? 0 : 1), n.numberOfDoubleDots);
                })(a, e, n.snapshot?._urlSegment, m),
                b = v.processChildren
                  ? au(v.segmentGroup, v.index, a.commands)
                  : Js(v.segmentGroup, v.index, a.commands);
              return Oo(e.root, v.segmentGroup, b, r, i);
            })(n.snapshot?._lastPathIndex);
      }
      function Ds(n) {
        return (
          "object" == typeof n && null != n && !n.outlets && !n.segmentPath
        );
      }
      function ou(n) {
        return "object" == typeof n && null != n && n.outlets;
      }
      function Oo(n, e, t, r, i) {
        let l,
          a = {};
        r &&
          Ar(r, (m, v) => {
            a[v] = Array.isArray(m) ? m.map((b) => `${b}`) : `${m}`;
          }),
          (l = n === e ? t : y_(n, e, t));
        const h = su(Nd(l));
        return new Cs(h, a, i);
      }
      function y_(n, e, t) {
        const r = {};
        return (
          Ar(n.children, (i, a) => {
            r[a] = i === e ? t : y_(i, e, t);
          }),
          new an(n.segments, r)
        );
      }
      class Pd {
        constructor(e, t, r) {
          if (
            ((this.isAbsolute = e),
            (this.numberOfDoubleDots = t),
            (this.commands = r),
            e && r.length > 0 && Ds(r[0]))
          )
            throw new f.vHH(4003, !1);
          const i = r.find(ou);
          if (i && i !== Td(r)) throw new f.vHH(4004, !1);
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            "/" == this.commands[0]
          );
        }
      }
      class Qs {
        constructor(e, t, r) {
          (this.segmentGroup = e), (this.processChildren = t), (this.index = r);
        }
      }
      function Js(n, e, t) {
        if (
          (n || (n = new an([], {})),
          0 === n.segments.length && n.hasChildren())
        )
          return au(n, e, t);
        const r = (function w_(n, e, t) {
            let r = 0,
              i = e;
            const a = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; i < n.segments.length; ) {
              if (r >= t.length) return a;
              const l = n.segments[i],
                h = t[r];
              if (ou(h)) break;
              const m = `${h}`,
                v = r < t.length - 1 ? t[r + 1] : null;
              if (i > 0 && void 0 === m) break;
              if (m && v && "object" == typeof v && void 0 === v.outlets) {
                if (!kd(m, v, l)) return a;
                r += 2;
              } else {
                if (!kd(m, {}, l)) return a;
                r++;
              }
              i++;
            }
            return { match: !0, pathIndex: i, commandIndex: r };
          })(n, e, t),
          i = t.slice(r.commandIndex);
        if (r.match && r.pathIndex < n.segments.length) {
          const a = new an(n.segments.slice(0, r.pathIndex), {});
          return (
            (a.children[ln] = new an(
              n.segments.slice(r.pathIndex),
              n.children
            )),
            au(a, 0, i)
          );
        }
        return r.match && 0 === i.length
          ? new an(n.segments, {})
          : r.match && !n.hasChildren()
          ? dp(n, e, t)
          : r.match
          ? au(n, 0, i)
          : dp(n, e, t);
      }
      function au(n, e, t) {
        if (0 === t.length) return new an(n.segments, {});
        {
          const r = (function Od(n) {
              return ou(n[0]) ? n[0].outlets : { [ln]: n };
            })(t),
            i = {};
          return (
            Ar(r, (a, l) => {
              "string" == typeof a && (a = [a]),
                null !== a && (i[l] = Js(n.children[l], e, a));
            }),
            Ar(n.children, (a, l) => {
              void 0 === r[l] && (i[l] = a);
            }),
            new an(n.segments, i)
          );
        }
      }
      function dp(n, e, t) {
        const r = n.segments.slice(0, e);
        let i = 0;
        for (; i < t.length; ) {
          const a = t[i];
          if (ou(a)) {
            const m = uu(a.outlets);
            return new an(r, m);
          }
          if (0 === i && Ds(t[0])) {
            r.push(new _a(n.segments[e].path, Pl(t[0]))), i++;
            continue;
          }
          const l = ou(a) ? a.outlets[ln] : `${a}`,
            h = i < t.length - 1 ? t[i + 1] : null;
          l && h && Ds(h)
            ? (r.push(new _a(l, Pl(h))), (i += 2))
            : (r.push(new _a(l, {})), i++);
        }
        return new an(r, {});
      }
      function uu(n) {
        const e = {};
        return (
          Ar(n, (t, r) => {
            "string" == typeof t && (t = [t]),
              null !== t && (e[r] = dp(new an([], {}), 0, t));
          }),
          e
        );
      }
      function Pl(n) {
        const e = {};
        return Ar(n, (t, r) => (e[r] = `${t}`)), e;
      }
      function kd(n, e, t) {
        return n == t.path && er(e, t.parameters);
      }
      class Ji {
        constructor(e, t) {
          (this.id = e), (this.url = t);
        }
      }
      class Ol extends Ji {
        constructor(e, t, r = "imperative", i = null) {
          super(e, t),
            (this.type = 0),
            (this.navigationTrigger = r),
            (this.restoredState = i);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Xi extends Ji {
        constructor(e, t, r) {
          super(e, t), (this.urlAfterRedirects = r), (this.type = 1);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class kl extends Ji {
        constructor(e, t, r, i) {
          super(e, t), (this.reason = r), (this.code = i), (this.type = 2);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Fl extends Ji {
        constructor(e, t, r, i) {
          super(e, t), (this.error = r), (this.target = i), (this.type = 3);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class I_ extends Ji {
        constructor(e, t, r, i) {
          super(e, t),
            (this.urlAfterRedirects = r),
            (this.state = i),
            (this.type = 4);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class hp extends Ji {
        constructor(e, t, r, i) {
          super(e, t),
            (this.urlAfterRedirects = r),
            (this.state = i),
            (this.type = 7);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class C_ extends Ji {
        constructor(e, t, r, i, a) {
          super(e, t),
            (this.urlAfterRedirects = r),
            (this.state = i),
            (this.shouldActivate = a),
            (this.type = 8);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class es extends Ji {
        constructor(e, t, r, i) {
          super(e, t),
            (this.urlAfterRedirects = r),
            (this.state = i),
            (this.type = 5);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class lu extends Ji {
        constructor(e, t, r, i) {
          super(e, t),
            (this.urlAfterRedirects = r),
            (this.state = i),
            (this.type = 6);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class fp {
        constructor(e) {
          (this.route = e), (this.type = 9);
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class b_ {
        constructor(e) {
          (this.route = e), (this.type = 10);
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class v0 {
        constructor(e) {
          (this.snapshot = e), (this.type = 11);
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class E0 {
        constructor(e) {
          (this.snapshot = e), (this.type = 12);
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class w0 {
        constructor(e) {
          (this.snapshot = e), (this.type = 13);
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class D_ {
        constructor(e) {
          (this.snapshot = e), (this.type = 14);
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class E {
        constructor(e, t, r) {
          (this.routerEvent = e),
            (this.position = t),
            (this.anchor = r),
            (this.type = 15);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      class _ {
        constructor(e) {
          this._root = e;
        }
        get root() {
          return this._root.value;
        }
        parent(e) {
          const t = this.pathFromRoot(e);
          return t.length > 1 ? t[t.length - 2] : null;
        }
        children(e) {
          const t = I(e, this._root);
          return t ? t.children.map((r) => r.value) : [];
        }
        firstChild(e) {
          const t = I(e, this._root);
          return t && t.children.length > 0 ? t.children[0].value : null;
        }
        siblings(e) {
          const t = S(e, this._root);
          return t.length < 2
            ? []
            : t[t.length - 2].children
                .map((i) => i.value)
                .filter((i) => i !== e);
        }
        pathFromRoot(e) {
          return S(e, this._root).map((t) => t.value);
        }
      }
      function I(n, e) {
        if (n === e.value) return e;
        for (const t of e.children) {
          const r = I(n, t);
          if (r) return r;
        }
        return null;
      }
      function S(n, e) {
        if (n === e.value) return [e];
        for (const t of e.children) {
          const r = S(n, t);
          if (r.length) return r.unshift(e), r;
        }
        return [];
      }
      class N {
        constructor(e, t) {
          (this.value = e), (this.children = t);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function ie(n) {
        const e = {};
        return n && n.children.forEach((t) => (e[t.value.outlet] = t)), e;
      }
      class Le extends _ {
        constructor(e, t) {
          super(e), (this.snapshot = t), Fd(this, e);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function ft(n, e) {
        const t = (function vt(n, e) {
            const l = new Si([], {}, {}, "", {}, ln, e, null, n.root, -1, {});
            return new Ll("", new N(l, []));
          })(n, e),
          r = new $r([new _a("", {})]),
          i = new $r({}),
          a = new $r({}),
          l = new $r({}),
          h = new $r(""),
          m = new Bt(r, i, l, h, a, ln, e, t.root);
        return (m.snapshot = t.root), new Le(new N(m, []), t);
      }
      class Bt {
        constructor(e, t, r, i, a, l, h, m) {
          (this.url = e),
            (this.params = t),
            (this.queryParams = r),
            (this.fragment = i),
            (this.data = a),
            (this.outlet = l),
            (this.component = h),
            (this._futureSnapshot = m);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe((0, Ft.U)((e) => tu(e)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(
                (0, Ft.U)((e) => tu(e))
              )),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function $n(n, e = "emptyOnly") {
        const t = n.pathFromRoot;
        let r = 0;
        if ("always" !== e)
          for (r = t.length - 1; r >= 1; ) {
            const i = t[r],
              a = t[r - 1];
            if (i.routeConfig && "" === i.routeConfig.path) r--;
            else {
              if (a.component) break;
              r--;
            }
          }
        return (function Oi(n) {
          return n.reduce(
            (e, t) => ({
              params: { ...e.params, ...t.params },
              data: { ...e.data, ...t.data },
              resolve: {
                ...t.data,
                ...e.resolve,
                ...t.routeConfig?.data,
                ...t._resolvedData,
              },
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(t.slice(r));
      }
      class Si {
        constructor(e, t, r, i, a, l, h, m, v, b, D, R) {
          (this.url = e),
            (this.params = t),
            (this.queryParams = r),
            (this.fragment = i),
            (this.data = a),
            (this.outlet = l),
            (this.component = h),
            (this.routeConfig = m),
            (this._urlSegment = v),
            (this._lastPathIndex = b),
            (this._correctedLastPathIndex = R ?? b),
            (this._resolve = D);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = tu(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = tu(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map((r) => r.toString())
            .join("/")}', path:'${
            this.routeConfig ? this.routeConfig.path : ""
          }')`;
        }
      }
      class Ll extends _ {
        constructor(e, t) {
          super(t), (this.url = e), Fd(this, t);
        }
        toString() {
          return Ld(this._root);
        }
      }
      function Fd(n, e) {
        (e.value._routerState = n), e.children.forEach((t) => Fd(n, t));
      }
      function Ld(n) {
        const e =
          n.children.length > 0 ? ` { ${n.children.map(Ld).join(", ")} } ` : "";
        return `${n.value}${e}`;
      }
      function Ia(n) {
        if (n.snapshot) {
          const e = n.snapshot,
            t = n._futureSnapshot;
          (n.snapshot = t),
            er(e.queryParams, t.queryParams) ||
              n.queryParams.next(t.queryParams),
            e.fragment !== t.fragment && n.fragment.next(t.fragment),
            er(e.params, t.params) || n.params.next(t.params),
            (function Dl(n, e) {
              if (n.length !== e.length) return !1;
              for (let t = 0; t < n.length; ++t) if (!er(n[t], e[t])) return !1;
              return !0;
            })(e.url, t.url) || n.url.next(t.url),
            er(e.data, t.data) || n.data.next(t.data);
        } else
          (n.snapshot = n._futureSnapshot), n.data.next(n._futureSnapshot.data);
      }
      function Ca(n, e) {
        const t =
          er(n.params, e.params) &&
          (function ya(n, e) {
            return (
              pi(n, e) && n.every((t, r) => er(t.parameters, e[r].parameters))
            );
          })(n.url, e.url);
        return (
          t &&
          !(!n.parent != !e.parent) &&
          (!n.parent || Ca(n.parent, e.parent))
        );
      }
      function du(n, e, t) {
        if (t && n.shouldReuseRoute(e.value, t.value.snapshot)) {
          const r = t.value;
          r._futureSnapshot = e.value;
          const i = (function T_(n, e, t) {
            return e.children.map((r) => {
              for (const i of t.children)
                if (n.shouldReuseRoute(r.value, i.value.snapshot))
                  return du(n, r, i);
              return du(n, r);
            });
          })(n, e, t);
          return new N(r, i);
        }
        {
          if (n.shouldAttach(e.value)) {
            const a = n.retrieve(e.value);
            if (null !== a) {
              const l = a.route;
              return (
                (l.value._futureSnapshot = e.value),
                (l.children = e.children.map((h) => du(n, h))),
                l
              );
            }
          }
          const r = (function Vl(n) {
              return new Bt(
                new $r(n.url),
                new $r(n.params),
                new $r(n.queryParams),
                new $r(n.fragment),
                new $r(n.data),
                n.outlet,
                n.component,
                n
              );
            })(e.value),
            i = e.children.map((a) => du(n, a));
          return new N(r, i);
        }
      }
      const Ul = "ngNavigationCancelingError";
      function pp(n, e) {
        const { redirectTo: t, navigationBehaviorOptions: r } = Po(e)
            ? { redirectTo: e, navigationBehaviorOptions: void 0 }
            : e,
          i = Bl(!1, 0, e);
        return (i.url = t), (i.navigationBehaviorOptions = r), i;
      }
      function Bl(n, e, t) {
        const r = new Error("NavigationCancelingError: " + (n || ""));
        return (r[Ul] = !0), (r.cancellationCode = e), t && (r.url = t), r;
      }
      function gp(n) {
        return S_(n) && Po(n.url);
      }
      function S_(n) {
        return n && n[Ul];
      }
      class mp {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.injector = null),
            (this.children = new Vd()),
            (this.attachRef = null);
        }
      }
      class Vd {
        constructor() {
          this.contexts = new Map();
        }
        onChildOutletCreated(e, t) {
          const r = this.getOrCreateContext(e);
          (r.outlet = t), this.contexts.set(e, r);
        }
        onChildOutletDestroyed(e) {
          const t = this.getContext(e);
          t && ((t.outlet = null), (t.attachRef = null));
        }
        onOutletDeactivated() {
          const e = this.contexts;
          return (this.contexts = new Map()), e;
        }
        onOutletReAttached(e) {
          this.contexts = e;
        }
        getOrCreateContext(e) {
          let t = this.getContext(e);
          return t || ((t = new mp()), this.contexts.set(e, t)), t;
        }
        getContext(e) {
          return this.contexts.get(e) || null;
        }
      }
      const jl = !1;
      let A_ = (() => {
        class n {
          constructor(t, r, i, a, l) {
            (this.parentContexts = t),
              (this.location = r),
              (this.changeDetector = a),
              (this.environmentInjector = l),
              (this.activated = null),
              (this._activatedRoute = null),
              (this.activateEvents = new f.vpe()),
              (this.deactivateEvents = new f.vpe()),
              (this.attachEvents = new f.vpe()),
              (this.detachEvents = new f.vpe()),
              (this.name = i || ln),
              t.onChildOutletCreated(this.name, this);
          }
          ngOnDestroy() {
            this.parentContexts.getContext(this.name)?.outlet === this &&
              this.parentContexts.onChildOutletDestroyed(this.name);
          }
          ngOnInit() {
            if (!this.activated) {
              const t = this.parentContexts.getContext(this.name);
              t &&
                t.route &&
                (t.attachRef
                  ? this.attach(t.attachRef, t.route)
                  : this.activateWith(t.route, t.injector));
            }
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new f.vHH(4012, jl);
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new f.vHH(4012, jl);
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute
              ? this._activatedRoute.snapshot.data
              : {};
          }
          detach() {
            if (!this.activated) throw new f.vHH(4012, jl);
            this.location.detach();
            const t = this.activated;
            return (
              (this.activated = null),
              (this._activatedRoute = null),
              this.detachEvents.emit(t.instance),
              t
            );
          }
          attach(t, r) {
            (this.activated = t),
              (this._activatedRoute = r),
              this.location.insert(t.hostView),
              this.attachEvents.emit(t.instance);
          }
          deactivate() {
            if (this.activated) {
              const t = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(t);
            }
          }
          activateWith(t, r) {
            if (this.isActivated) throw new f.vHH(4013, jl);
            this._activatedRoute = t;
            const i = this.location,
              l = t._futureSnapshot.component,
              h = this.parentContexts.getOrCreateContext(this.name).children,
              m = new Er(t, h, i.injector);
            if (
              r &&
              (function tT(n) {
                return !!n.resolveComponentFactory;
              })(r)
            ) {
              const v = r.resolveComponentFactory(l);
              this.activated = i.createComponent(v, i.length, m);
            } else
              this.activated = i.createComponent(l, {
                index: i.length,
                injector: m,
                environmentInjector: r ?? this.environmentInjector,
              });
            this.changeDetector.markForCheck(),
              this.activateEvents.emit(this.activated.instance);
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(
              f.Y36(Vd),
              f.Y36(f.s_b),
              f.$8M("name"),
              f.Y36(f.sBO),
              f.Y36(f.lqb)
            );
          }),
          (n.ɵdir = f.lG2({
            type: n,
            selectors: [["router-outlet"]],
            outputs: {
              activateEvents: "activate",
              deactivateEvents: "deactivate",
              attachEvents: "attach",
              detachEvents: "detach",
            },
            exportAs: ["outlet"],
          })),
          n
        );
      })();
      class Er {
        constructor(e, t, r) {
          (this.route = e), (this.childContexts = t), (this.parent = r);
        }
        get(e, t) {
          return e === Bt
            ? this.route
            : e === Vd
            ? this.childContexts
            : this.parent.get(e, t);
        }
      }
      let R_ = (() => {
        class n {}
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵcmp = f.Xpm({
            type: n,
            selectors: [["ng-component"]],
            decls: 1,
            vars: 0,
            template: function (t, r) {
              1 & t && f._UZ(0, "router-outlet");
            },
            dependencies: [A_],
            encapsulation: 2,
          })),
          n
        );
      })();
      function _p(n, e) {
        return (
          n.providers &&
            !n._injector &&
            (n._injector = (0, f.MMx)(n.providers, e, `Route: ${n.path}`)),
          n._injector ?? e
        );
      }
      function hu(n) {
        const e = n.children && n.children.map(hu),
          t = e ? { ...n, children: e } : { ...n };
        return (
          !t.component &&
            !t.loadComponent &&
            (e || t.loadChildren) &&
            t.outlet &&
            t.outlet !== ln &&
            (t.component = R_),
          t
        );
      }
      function Ai(n) {
        return n.outlet || ln;
      }
      function x_(n, e) {
        const t = n.filter((r) => Ai(r) === e);
        return t.push(...n.filter((r) => Ai(r) !== e)), t;
      }
      function N_(n) {
        if (!n) return null;
        if (n.routeConfig?._injector) return n.routeConfig._injector;
        for (let e = n.parent; e; e = e.parent) {
          const t = e.routeConfig;
          if (t?._loadedInjector) return t._loadedInjector;
          if (t?._injector) return t._injector;
        }
        return null;
      }
      class iT {
        constructor(e, t, r, i) {
          (this.routeReuseStrategy = e),
            (this.futureState = t),
            (this.currState = r),
            (this.forwardEvent = i);
        }
        activate(e) {
          const t = this.futureState._root,
            r = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(t, r, e),
            Ia(this.futureState.root),
            this.activateChildRoutes(t, r, e);
        }
        deactivateChildRoutes(e, t, r) {
          const i = ie(t);
          e.children.forEach((a) => {
            const l = a.value.outlet;
            this.deactivateRoutes(a, i[l], r), delete i[l];
          }),
            Ar(i, (a, l) => {
              this.deactivateRouteAndItsChildren(a, r);
            });
        }
        deactivateRoutes(e, t, r) {
          const i = e.value,
            a = t ? t.value : null;
          if (i === a)
            if (i.component) {
              const l = r.getContext(i.outlet);
              l && this.deactivateChildRoutes(e, t, l.children);
            } else this.deactivateChildRoutes(e, t, r);
          else a && this.deactivateRouteAndItsChildren(t, r);
        }
        deactivateRouteAndItsChildren(e, t) {
          e.value.component &&
          this.routeReuseStrategy.shouldDetach(e.value.snapshot)
            ? this.detachAndStoreRouteSubtree(e, t)
            : this.deactivateRouteAndOutlet(e, t);
        }
        detachAndStoreRouteSubtree(e, t) {
          const r = t.getContext(e.value.outlet),
            i = r && e.value.component ? r.children : t,
            a = ie(e);
          for (const l of Object.keys(a))
            this.deactivateRouteAndItsChildren(a[l], i);
          if (r && r.outlet) {
            const l = r.outlet.detach(),
              h = r.children.onOutletDeactivated();
            this.routeReuseStrategy.store(e.value.snapshot, {
              componentRef: l,
              route: e,
              contexts: h,
            });
          }
        }
        deactivateRouteAndOutlet(e, t) {
          const r = t.getContext(e.value.outlet),
            i = r && e.value.component ? r.children : t,
            a = ie(e);
          for (const l of Object.keys(a))
            this.deactivateRouteAndItsChildren(a[l], i);
          r &&
            r.outlet &&
            (r.outlet.deactivate(),
            r.children.onOutletDeactivated(),
            (r.attachRef = null),
            (r.resolver = null),
            (r.route = null));
        }
        activateChildRoutes(e, t, r) {
          const i = ie(t);
          e.children.forEach((a) => {
            this.activateRoutes(a, i[a.value.outlet], r),
              this.forwardEvent(new D_(a.value.snapshot));
          }),
            e.children.length && this.forwardEvent(new E0(e.value.snapshot));
        }
        activateRoutes(e, t, r) {
          const i = e.value,
            a = t ? t.value : null;
          if ((Ia(i), i === a))
            if (i.component) {
              const l = r.getOrCreateContext(i.outlet);
              this.activateChildRoutes(e, t, l.children);
            } else this.activateChildRoutes(e, t, r);
          else if (i.component) {
            const l = r.getOrCreateContext(i.outlet);
            if (this.routeReuseStrategy.shouldAttach(i.snapshot)) {
              const h = this.routeReuseStrategy.retrieve(i.snapshot);
              this.routeReuseStrategy.store(i.snapshot, null),
                l.children.onOutletReAttached(h.contexts),
                (l.attachRef = h.componentRef),
                (l.route = h.route.value),
                l.outlet && l.outlet.attach(h.componentRef, h.route.value),
                Ia(h.route.value),
                this.activateChildRoutes(e, null, l.children);
            } else {
              const h = N_(i.snapshot),
                m = h?.get(f._Vd) ?? null;
              (l.attachRef = null),
                (l.route = i),
                (l.resolver = m),
                (l.injector = h),
                l.outlet && l.outlet.activateWith(i, l.injector),
                this.activateChildRoutes(e, null, l.children);
            }
          } else this.activateChildRoutes(e, null, r);
        }
      }
      class P_ {
        constructor(e) {
          (this.path = e), (this.route = this.path[this.path.length - 1]);
        }
      }
      class Ud {
        constructor(e, t) {
          (this.component = e), (this.route = t);
        }
      }
      function O_(n, e, t) {
        const r = n._root;
        return fu(r, e ? e._root : null, t, [r.value]);
      }
      function yp(n, e, t) {
        return (N_(e) ?? t).get(n);
      }
      function fu(
        n,
        e,
        t,
        r,
        i = { canDeactivateChecks: [], canActivateChecks: [] }
      ) {
        const a = ie(e);
        return (
          n.children.forEach((l) => {
            (function C0(
              n,
              e,
              t,
              r,
              i = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
              const a = n.value,
                l = e ? e.value : null,
                h = t ? t.getContext(n.value.outlet) : null;
              if (l && a.routeConfig === l.routeConfig) {
                const m = (function b0(n, e, t) {
                  if ("function" == typeof t) return t(n, e);
                  switch (t) {
                    case "pathParamsChange":
                      return !pi(n.url, e.url);
                    case "pathParamsOrQueryParamsChange":
                      return (
                        !pi(n.url, e.url) || !er(n.queryParams, e.queryParams)
                      );
                    case "always":
                      return !0;
                    case "paramsOrQueryParamsChange":
                      return !Ca(n, e) || !er(n.queryParams, e.queryParams);
                    default:
                      return !Ca(n, e);
                  }
                })(l, a, a.routeConfig.runGuardsAndResolvers);
                m
                  ? i.canActivateChecks.push(new P_(r))
                  : ((a.data = l.data), (a._resolvedData = l._resolvedData)),
                  fu(n, e, a.component ? (h ? h.children : null) : t, r, i),
                  m &&
                    h &&
                    h.outlet &&
                    h.outlet.isActivated &&
                    i.canDeactivateChecks.push(new Ud(h.outlet.component, l));
              } else
                l && Ts(e, h, i),
                  i.canActivateChecks.push(new P_(r)),
                  fu(n, null, a.component ? (h ? h.children : null) : t, r, i);
            })(l, a[l.value.outlet], t, r.concat([l.value]), i),
              delete a[l.value.outlet];
          }),
          Ar(a, (l, h) => Ts(l, t.getContext(h), i)),
          i
        );
      }
      function Ts(n, e, t) {
        const r = ie(n),
          i = n.value;
        Ar(r, (a, l) => {
          Ts(a, i.component ? (e ? e.children.getContext(l) : null) : e, t);
        }),
          t.canDeactivateChecks.push(
            new Ud(
              i.component && e && e.outlet && e.outlet.isActivated
                ? e.outlet.component
                : null,
              i
            )
          );
      }
      function Bd(n) {
        return "function" == typeof n;
      }
      const wp = Symbol("INITIAL_VALUE");
      function $l() {
        return Wn((n) =>
          Gs(n.map((e) => e.pipe(Cl(1), bl(wp)))).pipe(
            (0, Ft.U)((e) => {
              for (const t of e)
                if (!0 !== t) {
                  if (t === wp) return wp;
                  if (!1 === t || t instanceof Cs) return t;
                }
              return !0;
            }),
            hi((e) => e !== wp),
            Cl(1)
          )
        );
      }
      function S0(n) {
        return (0, Ws.z)(
          (0, Xn.b)((e) => {
            if (Po(e)) throw pp(0, e);
          }),
          (0, Ft.U)((e) => !0 === e)
        );
      }
      const R0 = {
        matched: !1,
        consumedSegments: [],
        remainingSegments: [],
        parameters: {},
        positionalParamSegments: {},
      };
      function M0(n, e, t, r, i) {
        const a = gu(n, e, t);
        return a.matched
          ? (function A0(n, e, t, r) {
              const i = e.canMatch;
              return i && 0 !== i.length
                ? pt(
                    i.map((l) => {
                      const h = n.get(l),
                        m = (function pu(n) {
                          return n && Bd(n.canMatch);
                        })(h)
                          ? h.canMatch(e, t)
                          : h(e, t);
                      return ws(m);
                    })
                  ).pipe($l(), S0())
                : pt(!0);
            })((r = _p(e, r)), e, t).pipe(
              (0, Ft.U)((l) => (!0 === l ? a : { ...R0 }))
            )
          : pt(a);
      }
      function gu(n, e, t) {
        if ("" === e.path)
          return "full" === e.pathMatch && (n.hasChildren() || t.length > 0)
            ? { ...R0 }
            : {
                matched: !0,
                consumedSegments: [],
                remainingSegments: t,
                parameters: {},
                positionalParamSegments: {},
              };
        const i = (e.matcher || fa)(t, n, e);
        if (!i) return { ...R0 };
        const a = {};
        Ar(i.posParams, (h, m) => {
          a[m] = h.path;
        });
        const l =
          i.consumed.length > 0
            ? { ...a, ...i.consumed[i.consumed.length - 1].parameters }
            : a;
        return {
          matched: !0,
          consumedSegments: i.consumed,
          remainingSegments: t.slice(i.consumed.length),
          parameters: l,
          positionalParamSegments: i.posParams ?? {},
        };
      }
      function Ip(n, e, t, r, i = "corrected") {
        if (
          t.length > 0 &&
          (function hT(n, e, t) {
            return t.some((r) => $d(n, e, r) && Ai(r) !== ln);
          })(n, t, r)
        ) {
          const l = new an(
            e,
            (function jd(n, e, t, r) {
              const i = {};
              (i[ln] = r),
                (r._sourceSegment = n),
                (r._segmentIndexShift = e.length);
              for (const a of t)
                if ("" === a.path && Ai(a) !== ln) {
                  const l = new an([], {});
                  (l._sourceSegment = n),
                    (l._segmentIndexShift = e.length),
                    (i[Ai(a)] = l);
                }
              return i;
            })(n, e, r, new an(t, n.children))
          );
          return (
            (l._sourceSegment = n),
            (l._segmentIndexShift = e.length),
            { segmentGroup: l, slicedSegments: [] }
          );
        }
        if (
          0 === t.length &&
          (function BP(n, e, t) {
            return t.some((r) => $d(n, e, r));
          })(n, t, r)
        ) {
          const l = new an(
            n.segments,
            (function Gl(n, e, t, r, i, a) {
              const l = {};
              for (const h of r)
                if ($d(n, t, h) && !i[Ai(h)]) {
                  const m = new an([], {});
                  (m._sourceSegment = n),
                    (m._segmentIndexShift =
                      "legacy" === a ? n.segments.length : e.length),
                    (l[Ai(h)] = m);
                }
              return { ...i, ...l };
            })(n, e, t, r, n.children, i)
          );
          return (
            (l._sourceSegment = n),
            (l._segmentIndexShift = e.length),
            { segmentGroup: l, slicedSegments: t }
          );
        }
        const a = new an(n.segments, n.children);
        return (
          (a._sourceSegment = n),
          (a._segmentIndexShift = e.length),
          { segmentGroup: a, slicedSegments: t }
        );
      }
      function $d(n, e, t) {
        return (
          (!(n.hasChildren() || e.length > 0) || "full" !== t.pathMatch) &&
          "" === t.path
        );
      }
      function x0(n, e, t, r) {
        return (
          !!(Ai(n) === r || (r !== ln && $d(e, t, n))) &&
          ("**" === n.path || gu(e, n, t).matched)
        );
      }
      function N0(n, e, t) {
        return 0 === e.length && !n.children[t];
      }
      const Cp = !1;
      class Hd {
        constructor(e) {
          this.segmentGroup = e || null;
        }
      }
      class U_ {
        constructor(e) {
          this.urlTree = e;
        }
      }
      function mu(n) {
        return To(new Hd(n));
      }
      function P0(n) {
        return To(new U_(n));
      }
      class $P {
        constructor(e, t, r, i, a) {
          (this.injector = e),
            (this.configLoader = t),
            (this.urlSerializer = r),
            (this.urlTree = i),
            (this.config = a),
            (this.allowRedirects = !0);
        }
        apply() {
          const e = Ip(this.urlTree.root, [], [], this.config).segmentGroup,
            t = new an(e.segments, e.children);
          return this.expandSegmentGroup(this.injector, this.config, t, ln)
            .pipe(
              (0, Ft.U)((a) =>
                this.createUrlTree(
                  Nd(a),
                  this.urlTree.queryParams,
                  this.urlTree.fragment
                )
              )
            )
            .pipe(
              Ao((a) => {
                if (a instanceof U_)
                  return (this.allowRedirects = !1), this.match(a.urlTree);
                throw a instanceof Hd ? this.noMatchError(a) : a;
              })
            );
        }
        match(e) {
          return this.expandSegmentGroup(this.injector, this.config, e.root, ln)
            .pipe(
              (0, Ft.U)((i) =>
                this.createUrlTree(Nd(i), e.queryParams, e.fragment)
              )
            )
            .pipe(
              Ao((i) => {
                throw i instanceof Hd ? this.noMatchError(i) : i;
              })
            );
        }
        noMatchError(e) {
          return new f.vHH(4002, Cp);
        }
        createUrlTree(e, t, r) {
          const i = su(e);
          return new Cs(i, t, r);
        }
        expandSegmentGroup(e, t, r, i) {
          return 0 === r.segments.length && r.hasChildren()
            ? this.expandChildren(e, t, r).pipe((0, Ft.U)((a) => new an([], a)))
            : this.expandSegment(e, r, t, r.segments, i, !0);
        }
        expandChildren(e, t, r) {
          const i = [];
          for (const a of Object.keys(r.children))
            "primary" === a ? i.unshift(a) : i.push(a);
          return (0, jn.D)(i).pipe(
            Qi((a) => {
              const l = r.children[a],
                h = x_(t, a);
              return this.expandSegmentGroup(e, h, l, a).pipe(
                (0, Ft.U)((m) => ({ segment: m, outlet: a }))
              );
            }),
            Sr((a, l) => ((a[l.outlet] = l.segment), a), {}),
            bd()
          );
        }
        expandSegment(e, t, r, i, a, l) {
          return (0, jn.D)(r).pipe(
            Qi((h) =>
              this.expandSegmentAgainstRoute(e, t, r, h, i, a, l).pipe(
                Ao((v) => {
                  if (v instanceof Hd) return pt(null);
                  throw v;
                })
              )
            ),
            Un((h) => !!h),
            Ao((h, m) => {
              if (h instanceof Pi || "EmptyError" === h.name)
                return N0(t, i, a) ? pt(new an([], {})) : mu(t);
              throw h;
            })
          );
        }
        expandSegmentAgainstRoute(e, t, r, i, a, l, h) {
          return x0(i, t, a, l)
            ? void 0 === i.redirectTo
              ? this.matchSegmentAgainstRoute(e, t, i, a, l)
              : h && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(e, t, r, i, a, l)
              : mu(t)
            : mu(t);
        }
        expandSegmentAgainstRouteUsingRedirect(e, t, r, i, a, l) {
          return "**" === i.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(e, r, i, l)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                e,
                t,
                r,
                i,
                a,
                l
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(e, t, r, i) {
          const a = this.applyRedirectCommands([], r.redirectTo, {});
          return r.redirectTo.startsWith("/")
            ? P0(a)
            : this.lineralizeSegments(r, a).pipe(
                (0, Hr.z)((l) => {
                  const h = new an(l, {});
                  return this.expandSegment(e, h, t, l, i, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(e, t, r, i, a, l) {
          const {
            matched: h,
            consumedSegments: m,
            remainingSegments: v,
            positionalParamSegments: b,
          } = gu(t, i, a);
          if (!h) return mu(t);
          const D = this.applyRedirectCommands(m, i.redirectTo, b);
          return i.redirectTo.startsWith("/")
            ? P0(D)
            : this.lineralizeSegments(i, D).pipe(
                (0, Hr.z)((R) =>
                  this.expandSegment(e, t, r, R.concat(v), l, !1)
                )
              );
        }
        matchSegmentAgainstRoute(e, t, r, i, a) {
          return "**" === r.path
            ? ((e = _p(r, e)),
              r.loadChildren
                ? (r._loadedRoutes
                    ? pt({
                        routes: r._loadedRoutes,
                        injector: r._loadedInjector,
                      })
                    : this.configLoader.loadChildren(e, r)
                  ).pipe(
                    (0, Ft.U)(
                      (h) => (
                        (r._loadedRoutes = h.routes),
                        (r._loadedInjector = h.injector),
                        new an(i, {})
                      )
                    )
                  )
                : pt(new an(i, {})))
            : M0(t, r, i, e).pipe(
                Wn(
                  ({ matched: l, consumedSegments: h, remainingSegments: m }) =>
                    l
                      ? this.getChildConfig((e = r._injector ?? e), r, i).pipe(
                          (0, Hr.z)((b) => {
                            const D = b.injector ?? e,
                              R = b.routes,
                              { segmentGroup: F, slicedSegments: B } = Ip(
                                t,
                                h,
                                m,
                                R
                              ),
                              le = new an(F.segments, F.children);
                            if (0 === B.length && le.hasChildren())
                              return this.expandChildren(D, R, le).pipe(
                                (0, Ft.U)((Lt) => new an(h, Lt))
                              );
                            if (0 === R.length && 0 === B.length)
                              return pt(new an(h, {}));
                            const Ee = Ai(r) === a;
                            return this.expandSegment(
                              D,
                              le,
                              R,
                              B,
                              Ee ? ln : a,
                              !0
                            ).pipe(
                              (0, Ft.U)(
                                (It) =>
                                  new an(h.concat(It.segments), It.children)
                              )
                            );
                          })
                        )
                      : mu(t)
                )
              );
        }
        getChildConfig(e, t, r) {
          return t.children
            ? pt({ routes: t.children, injector: e })
            : t.loadChildren
            ? void 0 !== t._loadedRoutes
              ? pt({ routes: t._loadedRoutes, injector: t._loadedInjector })
              : (function T0(n, e, t, r) {
                  const i = e.canLoad;
                  return void 0 === i || 0 === i.length
                    ? pt(!0)
                    : pt(
                        i.map((l) => {
                          const h = n.get(l),
                            m = (function vp(n) {
                              return n && Bd(n.canLoad);
                            })(h)
                              ? h.canLoad(e, t)
                              : h(e, t);
                          return ws(m);
                        })
                      ).pipe($l(), S0());
                })(e, t, r).pipe(
                  (0, Hr.z)((i) =>
                    i
                      ? this.configLoader.loadChildren(e, t).pipe(
                          (0, Xn.b)((a) => {
                            (t._loadedRoutes = a.routes),
                              (t._loadedInjector = a.injector);
                          })
                        )
                      : (function B_(n) {
                          return To(Bl(Cp, 3));
                        })()
                  )
                )
            : pt({ routes: [], injector: e });
        }
        lineralizeSegments(e, t) {
          let r = [],
            i = t.root;
          for (;;) {
            if (((r = r.concat(i.segments)), 0 === i.numberOfChildren))
              return pt(r);
            if (i.numberOfChildren > 1 || !i.children[ln])
              return To(new f.vHH(4e3, Cp));
            i = i.children[ln];
          }
        }
        applyRedirectCommands(e, t, r) {
          return this.applyRedirectCreateUrlTree(
            t,
            this.urlSerializer.parse(t),
            e,
            r
          );
        }
        applyRedirectCreateUrlTree(e, t, r, i) {
          const a = this.createSegmentGroup(e, t.root, r, i);
          return new Cs(
            a,
            this.createQueryParams(t.queryParams, this.urlTree.queryParams),
            t.fragment
          );
        }
        createQueryParams(e, t) {
          const r = {};
          return (
            Ar(e, (i, a) => {
              if ("string" == typeof i && i.startsWith(":")) {
                const h = i.substring(1);
                r[a] = t[h];
              } else r[a] = i;
            }),
            r
          );
        }
        createSegmentGroup(e, t, r, i) {
          const a = this.createSegments(e, t.segments, r, i);
          let l = {};
          return (
            Ar(t.children, (h, m) => {
              l[m] = this.createSegmentGroup(e, h, r, i);
            }),
            new an(a, l)
          );
        }
        createSegments(e, t, r, i) {
          return t.map((a) =>
            a.path.startsWith(":")
              ? this.findPosParam(e, a, i)
              : this.findOrReturn(a, r)
          );
        }
        findPosParam(e, t, r) {
          const i = r[t.path.substring(1)];
          if (!i) throw new f.vHH(4001, Cp);
          return i;
        }
        findOrReturn(e, t) {
          let r = 0;
          for (const i of t) {
            if (i.path === e.path) return t.splice(r), i;
            r++;
          }
          return e;
        }
      }
      class HP {}
      class zP {
        constructor(e, t, r, i, a, l, h, m) {
          (this.injector = e),
            (this.rootComponentType = t),
            (this.config = r),
            (this.urlTree = i),
            (this.url = a),
            (this.paramsInheritanceStrategy = l),
            (this.relativeLinkResolution = h),
            (this.urlSerializer = m);
        }
        recognize() {
          const e = Ip(
            this.urlTree.root,
            [],
            [],
            this.config.filter((t) => void 0 === t.redirectTo),
            this.relativeLinkResolution
          ).segmentGroup;
          return this.processSegmentGroup(
            this.injector,
            this.config,
            e,
            ln
          ).pipe(
            (0, Ft.U)((t) => {
              if (null === t) return null;
              const r = new Si(
                  [],
                  Object.freeze({}),
                  Object.freeze({ ...this.urlTree.queryParams }),
                  this.urlTree.fragment,
                  {},
                  ln,
                  this.rootComponentType,
                  null,
                  this.urlTree.root,
                  -1,
                  {}
                ),
                i = new N(r, t),
                a = new Ll(this.url, i);
              return this.inheritParamsAndData(a._root), a;
            })
          );
        }
        inheritParamsAndData(e) {
          const t = e.value,
            r = $n(t, this.paramsInheritanceStrategy);
          (t.params = Object.freeze(r.params)),
            (t.data = Object.freeze(r.data)),
            e.children.forEach((i) => this.inheritParamsAndData(i));
        }
        processSegmentGroup(e, t, r, i) {
          return 0 === r.segments.length && r.hasChildren()
            ? this.processChildren(e, t, r)
            : this.processSegment(e, t, r, r.segments, i);
        }
        processChildren(e, t, r) {
          return (0, jn.D)(Object.keys(r.children)).pipe(
            Qi((i) => {
              const a = r.children[i],
                l = x_(t, i);
              return this.processSegmentGroup(e, l, a, i);
            }),
            Sr((i, a) => (i && a ? (i.push(...a), i) : null)),
            (function da(n, e = !1) {
              return (0, tn.e)((t, r) => {
                let i = 0;
                t.subscribe(
                  (0, pr.x)(r, (a) => {
                    const l = n(a, i++);
                    (l || e) && r.next(a), !l && r.complete();
                  })
                );
              });
            })((i) => null !== i),
            qs(null),
            bd(),
            (0, Ft.U)((i) => {
              if (null === i) return null;
              const a = G_(i);
              return (
                (function pT(n) {
                  n.sort((e, t) =>
                    e.value.outlet === ln
                      ? -1
                      : t.value.outlet === ln
                      ? 1
                      : e.value.outlet.localeCompare(t.value.outlet)
                  );
                })(a),
                a
              );
            })
          );
        }
        processSegment(e, t, r, i, a) {
          return (0, jn.D)(t).pipe(
            Qi((l) =>
              this.processSegmentAgainstRoute(l._injector ?? e, l, r, i, a)
            ),
            Un((l) => !!l),
            Ao((l) => {
              if (l instanceof Pi) return N0(r, i, a) ? pt([]) : pt(null);
              throw l;
            })
          );
        }
        processSegmentAgainstRoute(e, t, r, i, a) {
          if (t.redirectTo || !x0(t, r, i, a)) return pt(null);
          let l;
          if ("**" === t.path) {
            const h = i.length > 0 ? Td(i).parameters : {},
              m = bp(r) + i.length;
            l = pt({
              snapshot: new Si(
                i,
                h,
                Object.freeze({ ...this.urlTree.queryParams }),
                this.urlTree.fragment,
                Dp(t),
                Ai(t),
                t.component ?? t._loadedComponent ?? null,
                t,
                W_(r),
                m,
                Wl(t),
                m
              ),
              consumedSegments: [],
              remainingSegments: [],
            });
          } else
            l = M0(r, t, i, e).pipe(
              (0, Ft.U)(
                ({
                  matched: h,
                  consumedSegments: m,
                  remainingSegments: v,
                  parameters: b,
                }) => {
                  if (!h) return null;
                  const D = bp(r) + m.length;
                  return {
                    snapshot: new Si(
                      m,
                      b,
                      Object.freeze({ ...this.urlTree.queryParams }),
                      this.urlTree.fragment,
                      Dp(t),
                      Ai(t),
                      t.component ?? t._loadedComponent ?? null,
                      t,
                      W_(r),
                      D,
                      Wl(t),
                      D
                    ),
                    consumedSegments: m,
                    remainingSegments: v,
                  };
                }
              )
            );
          return l.pipe(
            Wn((h) => {
              if (null === h) return pt(null);
              const {
                snapshot: m,
                consumedSegments: v,
                remainingSegments: b,
              } = h;
              e = t._injector ?? e;
              const D = t._loadedInjector ?? e,
                R = (function O0(n) {
                  return n.children
                    ? n.children
                    : n.loadChildren
                    ? n._loadedRoutes
                    : [];
                })(t),
                { segmentGroup: F, slicedSegments: B } = Ip(
                  r,
                  v,
                  b,
                  R.filter((Ee) => void 0 === Ee.redirectTo),
                  this.relativeLinkResolution
                );
              if (0 === B.length && F.hasChildren())
                return this.processChildren(D, R, F).pipe(
                  (0, Ft.U)((Ee) => (null === Ee ? null : [new N(m, Ee)]))
                );
              if (0 === R.length && 0 === B.length) return pt([new N(m, [])]);
              const le = Ai(t) === a;
              return this.processSegment(D, R, F, B, le ? ln : a).pipe(
                (0, Ft.U)((Ee) => (null === Ee ? null : [new N(m, Ee)]))
              );
            })
          );
        }
      }
      function H_(n) {
        const e = n.value.routeConfig;
        return e && "" === e.path && void 0 === e.redirectTo;
      }
      function G_(n) {
        const e = [],
          t = new Set();
        for (const r of n) {
          if (!H_(r)) {
            e.push(r);
            continue;
          }
          const i = e.find((a) => r.value.routeConfig === a.value.routeConfig);
          void 0 !== i ? (i.children.push(...r.children), t.add(i)) : e.push(r);
        }
        for (const r of t) {
          const i = G_(r.children);
          e.push(new N(r.value, i));
        }
        return e.filter((r) => !t.has(r));
      }
      function W_(n) {
        let e = n;
        for (; e._sourceSegment; ) e = e._sourceSegment;
        return e;
      }
      function bp(n) {
        let e = n,
          t = e._segmentIndexShift ?? 0;
        for (; e._sourceSegment; )
          (e = e._sourceSegment), (t += e._segmentIndexShift ?? 0);
        return t - 1;
      }
      function Dp(n) {
        return n.data || {};
      }
      function Wl(n) {
        return n.resolve || {};
      }
      const z_ = Symbol("RouteTitle");
      function L0(n) {
        return "string" == typeof n.title || null === n.title;
      }
      function Gd(n) {
        return Wn((e) => {
          const t = n(e);
          return t ? (0, jn.D)(t).pipe((0, Ft.U)(() => e)) : pt(e);
        });
      }
      class CT extends class IT {
        shouldDetach(e) {
          return !1;
        }
        store(e, t) {}
        shouldAttach(e) {
          return !1;
        }
        retrieve(e) {
          return null;
        }
        shouldReuseRoute(e, t) {
          return e.routeConfig === t.routeConfig;
        }
      } {}
      const K_ = new f.OlP("ROUTES");
      let Z_ = (() => {
        class n {
          constructor(t, r) {
            (this.injector = t),
              (this.compiler = r),
              (this.componentLoaders = new WeakMap()),
              (this.childrenLoaders = new WeakMap());
          }
          loadComponent(t) {
            if (this.componentLoaders.get(t))
              return this.componentLoaders.get(t);
            if (t._loadedComponent) return pt(t._loadedComponent);
            this.onLoadStartListener && this.onLoadStartListener(t);
            const r = ws(t.loadComponent()).pipe(
                (0, Xn.b)((a) => {
                  this.onLoadEndListener && this.onLoadEndListener(t),
                    (t._loadedComponent = a);
                }),
                ha(() => {
                  this.componentLoaders.delete(t);
                })
              ),
              i = new f_(r, () => new Ti.x()).pipe(Id());
            return this.componentLoaders.set(t, i), i;
          }
          loadChildren(t, r) {
            if (this.childrenLoaders.get(r)) return this.childrenLoaders.get(r);
            if (r._loadedRoutes)
              return pt({
                routes: r._loadedRoutes,
                injector: r._loadedInjector,
              });
            this.onLoadStartListener && this.onLoadStartListener(r);
            const a = this.loadModuleFactoryOrRoutes(r.loadChildren).pipe(
                (0, Ft.U)((h) => {
                  this.onLoadEndListener && this.onLoadEndListener(r);
                  let m,
                    v,
                    b = !1;
                  Array.isArray(h)
                    ? (v = h)
                    : ((m = h.create(t).injector),
                      (v = Ro(m.get(K_, [], f.XFs.Self | f.XFs.Optional))));
                  return { routes: v.map(hu), injector: m };
                }),
                ha(() => {
                  this.childrenLoaders.delete(r);
                })
              ),
              l = new f_(a, () => new Ti.x()).pipe(Id());
            return this.childrenLoaders.set(r, l), l;
          }
          loadModuleFactoryOrRoutes(t) {
            return ws(t()).pipe(
              (0, Hr.z)((r) =>
                r instanceof f.YKP || Array.isArray(r)
                  ? pt(r)
                  : (0, jn.D)(this.compiler.compileModuleAsync(r))
              )
            );
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.LFG(f.zs3), f.LFG(f.Sil));
          }),
          (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class Y_ {
        shouldProcessUrl(e) {
          return !0;
        }
        extract(e) {
          return e;
        }
        merge(e, t) {
          return e;
        }
      }
      function Q_(n) {
        throw n;
      }
      function Qr(n, e, t) {
        return e.parse("/");
      }
      const zd = {
          paths: "exact",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "exact",
        },
        J_ = {
          paths: "subset",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "subset",
        };
      let Fr = (() => {
        class n {
          constructor(t, r, i, a, l, h, m) {
            (this.rootComponentType = t),
              (this.urlSerializer = r),
              (this.rootContexts = i),
              (this.location = a),
              (this.config = m),
              (this.lastSuccessfulNavigation = null),
              (this.currentNavigation = null),
              (this.disposed = !1),
              (this.navigationId = 0),
              (this.currentPageId = 0),
              (this.isNgZoneEnabled = !1),
              (this.events = new Ti.x()),
              (this.errorHandler = Q_),
              (this.malformedUriErrorHandler = Qr),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1),
              (this.afterPreactivation = () => pt(void 0)),
              (this.urlHandlingStrategy = new Y_()),
              (this.routeReuseStrategy = new CT()),
              (this.onSameUrlNavigation = "ignore"),
              (this.paramsInheritanceStrategy = "emptyOnly"),
              (this.urlUpdateStrategy = "deferred"),
              (this.relativeLinkResolution = "corrected"),
              (this.canceledNavigationResolution = "replace"),
              (this.configLoader = l.get(Z_)),
              (this.configLoader.onLoadEndListener = (R) =>
                this.triggerEvent(new b_(R))),
              (this.configLoader.onLoadStartListener = (R) =>
                this.triggerEvent(new fp(R))),
              (this.ngModule = l.get(f.h0i)),
              (this.console = l.get(f.c2e));
            const D = l.get(f.R0b);
            (this.isNgZoneEnabled =
              D instanceof f.R0b && f.R0b.isInAngularZone()),
              this.resetConfig(m),
              (this.currentUrlTree = (function p_() {
                return new Cs(new an([], {}), {}, null);
              })()),
              (this.rawUrlTree = this.currentUrlTree),
              (this.browserUrlTree = this.currentUrlTree),
              (this.routerState = ft(
                this.currentUrlTree,
                this.rootComponentType
              )),
              (this.transitions = new $r({
                id: 0,
                targetPageId: 0,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.currentUrlTree,
                extractedUrl: this.urlHandlingStrategy.extract(
                  this.currentUrlTree
                ),
                urlAfterRedirects: this.urlHandlingStrategy.extract(
                  this.currentUrlTree
                ),
                rawUrl: this.currentUrlTree,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: "imperative",
                restoredState: null,
                currentSnapshot: this.routerState.snapshot,
                targetSnapshot: null,
                currentRouterState: this.routerState,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              (this.navigations = this.setupNavigations(this.transitions)),
              this.processNavigations();
          }
          get browserPageId() {
            return this.location.getState()?.ɵrouterPageId;
          }
          setupNavigations(t) {
            const r = this.events;
            return t.pipe(
              hi((i) => 0 !== i.id),
              (0, Ft.U)((i) => ({
                ...i,
                extractedUrl: this.urlHandlingStrategy.extract(i.rawUrl),
              })),
              Wn((i) => {
                let a = !1,
                  l = !1;
                return pt(i).pipe(
                  (0, Xn.b)((h) => {
                    this.currentNavigation = {
                      id: h.id,
                      initialUrl: h.rawUrl,
                      extractedUrl: h.extractedUrl,
                      trigger: h.source,
                      extras: h.extras,
                      previousNavigation: this.lastSuccessfulNavigation
                        ? {
                            ...this.lastSuccessfulNavigation,
                            previousNavigation: null,
                          }
                        : null,
                    };
                  }),
                  Wn((h) => {
                    const m = this.browserUrlTree.toString(),
                      v =
                        !this.navigated ||
                        h.extractedUrl.toString() !== m ||
                        m !== this.currentUrlTree.toString();
                    if (
                      ("reload" === this.onSameUrlNavigation || v) &&
                      this.urlHandlingStrategy.shouldProcessUrl(h.rawUrl)
                    )
                      return (
                        X_(h.source) && (this.browserUrlTree = h.extractedUrl),
                        pt(h).pipe(
                          Wn((D) => {
                            const R = this.transitions.getValue();
                            return (
                              r.next(
                                new Ol(
                                  D.id,
                                  this.serializeUrl(D.extractedUrl),
                                  D.source,
                                  D.restoredState
                                )
                              ),
                              R !== this.transitions.getValue()
                                ? So.E
                                : Promise.resolve(D)
                            );
                          }),
                          (function j_(n, e, t, r) {
                            return Wn((i) =>
                              (function jP(n, e, t, r, i) {
                                return new $P(n, e, t, r, i).apply();
                              })(n, e, t, i.extractedUrl, r).pipe(
                                (0, Ft.U)((a) => ({
                                  ...i,
                                  urlAfterRedirects: a,
                                }))
                              )
                            );
                          })(
                            this.ngModule.injector,
                            this.configLoader,
                            this.urlSerializer,
                            this.config
                          ),
                          (0, Xn.b)((D) => {
                            (this.currentNavigation = {
                              ...this.currentNavigation,
                              finalUrl: D.urlAfterRedirects,
                            }),
                              (i.urlAfterRedirects = D.urlAfterRedirects);
                          }),
                          (function mT(n, e, t, r, i, a) {
                            return (0, Hr.z)((l) =>
                              (function WP(
                                n,
                                e,
                                t,
                                r,
                                i,
                                a,
                                l = "emptyOnly",
                                h = "legacy"
                              ) {
                                return new zP(n, e, t, r, i, l, h, a)
                                  .recognize()
                                  .pipe(
                                    Wn((m) =>
                                      null === m
                                        ? (function GP(n) {
                                            return new kr.y((e) => e.error(n));
                                          })(new HP())
                                        : pt(m)
                                    )
                                  );
                              })(
                                n,
                                e,
                                t,
                                l.urlAfterRedirects,
                                r.serialize(l.urlAfterRedirects),
                                r,
                                i,
                                a
                              ).pipe(
                                (0, Ft.U)((h) => ({ ...l, targetSnapshot: h }))
                              )
                            );
                          })(
                            this.ngModule.injector,
                            this.rootComponentType,
                            this.config,
                            this.urlSerializer,
                            this.paramsInheritanceStrategy,
                            this.relativeLinkResolution
                          ),
                          (0, Xn.b)((D) => {
                            if (
                              ((i.targetSnapshot = D.targetSnapshot),
                              "eager" === this.urlUpdateStrategy)
                            ) {
                              if (!D.extras.skipLocationChange) {
                                const F = this.urlHandlingStrategy.merge(
                                  D.urlAfterRedirects,
                                  D.rawUrl
                                );
                                this.setBrowserUrl(F, D);
                              }
                              this.browserUrlTree = D.urlAfterRedirects;
                            }
                            const R = new I_(
                              D.id,
                              this.serializeUrl(D.extractedUrl),
                              this.serializeUrl(D.urlAfterRedirects),
                              D.targetSnapshot
                            );
                            r.next(R);
                          })
                        )
                      );
                    if (
                      v &&
                      this.rawUrlTree &&
                      this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)
                    ) {
                      const {
                          id: R,
                          extractedUrl: F,
                          source: B,
                          restoredState: le,
                          extras: Ee,
                        } = h,
                        dt = new Ol(R, this.serializeUrl(F), B, le);
                      r.next(dt);
                      const It = ft(F, this.rootComponentType).snapshot;
                      return pt(
                        (i = {
                          ...h,
                          targetSnapshot: It,
                          urlAfterRedirects: F,
                          extras: {
                            ...Ee,
                            skipLocationChange: !1,
                            replaceUrl: !1,
                          },
                        })
                      );
                    }
                    return (this.rawUrlTree = h.rawUrl), h.resolve(null), So.E;
                  }),
                  (0, Xn.b)((h) => {
                    const m = new hp(
                      h.id,
                      this.serializeUrl(h.extractedUrl),
                      this.serializeUrl(h.urlAfterRedirects),
                      h.targetSnapshot
                    );
                    this.triggerEvent(m);
                  }),
                  (0, Ft.U)(
                    (h) =>
                      (i = {
                        ...h,
                        guards: O_(
                          h.targetSnapshot,
                          h.currentSnapshot,
                          this.rootContexts
                        ),
                      })
                  ),
                  (function D0(n, e) {
                    return (0, Hr.z)((t) => {
                      const {
                        targetSnapshot: r,
                        currentSnapshot: i,
                        guards: {
                          canActivateChecks: a,
                          canDeactivateChecks: l,
                        },
                      } = t;
                      return 0 === l.length && 0 === a.length
                        ? pt({ ...t, guardsResult: !0 })
                        : (function Hl(n, e, t, r) {
                            return (0, jn.D)(n).pipe(
                              (0, Hr.z)((i) =>
                                (function dT(n, e, t, r, i) {
                                  const a =
                                    e && e.routeConfig
                                      ? e.routeConfig.canDeactivate
                                      : null;
                                  return a && 0 !== a.length
                                    ? pt(
                                        a.map((h) => {
                                          const m = yp(h, e, i);
                                          return ws(
                                            (function Ep(n) {
                                              return n && Bd(n.canDeactivate);
                                            })(m)
                                              ? m.canDeactivate(n, e, t, r)
                                              : m(n, e, t, r)
                                          ).pipe(Un());
                                        })
                                      ).pipe($l())
                                    : pt(!0);
                                })(i.component, i.route, t, e, r)
                              ),
                              Un((i) => !0 !== i, !0)
                            );
                          })(l, r, i, n).pipe(
                            (0, Hr.z)((h) =>
                              h &&
                              (function k_(n) {
                                return "boolean" == typeof n;
                              })(h)
                                ? (function aT(n, e, t, r) {
                                    return (0, jn.D)(e).pipe(
                                      Qi((i) =>
                                        wl(
                                          (function lT(n, e) {
                                            return (
                                              null !== n && e && e(new v0(n)),
                                              pt(!0)
                                            );
                                          })(i.route.parent, r),
                                          (function uT(n, e) {
                                            return (
                                              null !== n && e && e(new w0(n)),
                                              pt(!0)
                                            );
                                          })(i.route, r),
                                          (function V_(n, e, t) {
                                            const r = e[e.length - 1],
                                              a = e
                                                .slice(0, e.length - 1)
                                                .reverse()
                                                .map((l) =>
                                                  (function UP(n) {
                                                    const e = n.routeConfig
                                                      ? n.routeConfig
                                                          .canActivateChild
                                                      : null;
                                                    return e && 0 !== e.length
                                                      ? { node: n, guards: e }
                                                      : null;
                                                  })(l)
                                                )
                                                .filter((l) => null !== l)
                                                .map((l) =>
                                                  Do(() =>
                                                    pt(
                                                      l.guards.map((m) => {
                                                        const v = yp(
                                                          m,
                                                          l.node,
                                                          t
                                                        );
                                                        return ws(
                                                          (function F_(n) {
                                                            return (
                                                              n &&
                                                              Bd(
                                                                n.canActivateChild
                                                              )
                                                            );
                                                          })(v)
                                                            ? v.canActivateChild(
                                                                r,
                                                                n
                                                              )
                                                            : v(r, n)
                                                        ).pipe(Un());
                                                      })
                                                    ).pipe($l())
                                                  )
                                                );
                                            return pt(a).pipe($l());
                                          })(n, i.path, t),
                                          (function cT(n, e, t) {
                                            const r = e.routeConfig
                                              ? e.routeConfig.canActivate
                                              : null;
                                            if (!r || 0 === r.length)
                                              return pt(!0);
                                            const i = r.map((a) =>
                                              Do(() => {
                                                const l = yp(a, e, t);
                                                return ws(
                                                  (function sT(n) {
                                                    return (
                                                      n && Bd(n.canActivate)
                                                    );
                                                  })(l)
                                                    ? l.canActivate(e, n)
                                                    : l(e, n)
                                                ).pipe(Un());
                                              })
                                            );
                                            return pt(i).pipe($l());
                                          })(n, i.route, t)
                                        )
                                      ),
                                      Un((i) => !0 !== i, !0)
                                    );
                                  })(r, a, n, e)
                                : pt(h)
                            ),
                            (0, Ft.U)((h) => ({ ...t, guardsResult: h }))
                          );
                    });
                  })(this.ngModule.injector, (h) => this.triggerEvent(h)),
                  (0, Xn.b)((h) => {
                    if (((i.guardsResult = h.guardsResult), Po(h.guardsResult)))
                      throw pp(0, h.guardsResult);
                    const m = new C_(
                      h.id,
                      this.serializeUrl(h.extractedUrl),
                      this.serializeUrl(h.urlAfterRedirects),
                      h.targetSnapshot,
                      !!h.guardsResult
                    );
                    this.triggerEvent(m);
                  }),
                  hi(
                    (h) =>
                      !!h.guardsResult ||
                      (this.restoreHistory(h),
                      this.cancelNavigationTransition(h, "", 3),
                      !1)
                  ),
                  Gd((h) => {
                    if (h.guards.canActivateChecks.length)
                      return pt(h).pipe(
                        (0, Xn.b)((m) => {
                          const v = new es(
                            m.id,
                            this.serializeUrl(m.extractedUrl),
                            this.serializeUrl(m.urlAfterRedirects),
                            m.targetSnapshot
                          );
                          this.triggerEvent(v);
                        }),
                        Wn((m) => {
                          let v = !1;
                          return pt(m).pipe(
                            (function _T(n, e) {
                              return (0, Hr.z)((t) => {
                                const {
                                  targetSnapshot: r,
                                  guards: { canActivateChecks: i },
                                } = t;
                                if (!i.length) return pt(t);
                                let a = 0;
                                return (0, jn.D)(i).pipe(
                                  Qi((l) =>
                                    (function F0(n, e, t, r) {
                                      const i = n.routeConfig,
                                        a = n._resolve;
                                      return (
                                        void 0 !== i?.title &&
                                          !L0(i) &&
                                          (a[z_] = i.title),
                                        (function yT(n, e, t, r) {
                                          const i = (function vT(n) {
                                            return [
                                              ...Object.keys(n),
                                              ...Object.getOwnPropertySymbols(
                                                n
                                              ),
                                            ];
                                          })(n);
                                          if (0 === i.length) return pt({});
                                          const a = {};
                                          return (0, jn.D)(i).pipe(
                                            (0, Hr.z)((l) =>
                                              (function ET(n, e, t, r) {
                                                const i = yp(n, e, r);
                                                return ws(
                                                  i.resolve
                                                    ? i.resolve(e, t)
                                                    : i(e, t)
                                                );
                                              })(n[l], e, t, r).pipe(
                                                Un(),
                                                (0, Xn.b)((h) => {
                                                  a[l] = h;
                                                })
                                              )
                                            ),
                                            fi(1),
                                            (function Ks(n) {
                                              return (0, Ft.U)(() => n);
                                            })(a),
                                            Ao((l) =>
                                              l instanceof Pi ? So.E : To(l)
                                            )
                                          );
                                        })(a, n, e, r).pipe(
                                          (0, Ft.U)(
                                            (l) => (
                                              (n._resolvedData = l),
                                              (n.data = $n(n, t).resolve),
                                              i &&
                                                L0(i) &&
                                                (n.data[z_] = i.title),
                                              null
                                            )
                                          )
                                        )
                                      );
                                    })(l.route, r, n, e)
                                  ),
                                  (0, Xn.b)(() => a++),
                                  fi(1),
                                  (0, Hr.z)((l) =>
                                    a === i.length ? pt(t) : So.E
                                  )
                                );
                              });
                            })(
                              this.paramsInheritanceStrategy,
                              this.ngModule.injector
                            ),
                            (0, Xn.b)({
                              next: () => (v = !0),
                              complete: () => {
                                v ||
                                  (this.restoreHistory(m),
                                  this.cancelNavigationTransition(m, "", 2));
                              },
                            })
                          );
                        }),
                        (0, Xn.b)((m) => {
                          const v = new lu(
                            m.id,
                            this.serializeUrl(m.extractedUrl),
                            this.serializeUrl(m.urlAfterRedirects),
                            m.targetSnapshot
                          );
                          this.triggerEvent(v);
                        })
                      );
                  }),
                  Gd((h) => {
                    const m = (v) => {
                      const b = [];
                      v.routeConfig?.loadComponent &&
                        !v.routeConfig._loadedComponent &&
                        b.push(
                          this.configLoader.loadComponent(v.routeConfig).pipe(
                            (0, Xn.b)((D) => {
                              v.component = D;
                            }),
                            (0, Ft.U)(() => {})
                          )
                        );
                      for (const D of v.children) b.push(...m(D));
                      return b;
                    };
                    return Gs(m(h.targetSnapshot.root)).pipe(qs(), Cl(1));
                  }),
                  Gd(() => this.afterPreactivation()),
                  (0, Ft.U)((h) => {
                    const m = (function cu(n, e, t) {
                      const r = du(n, e._root, t ? t._root : void 0);
                      return new Le(r, e);
                    })(
                      this.routeReuseStrategy,
                      h.targetSnapshot,
                      h.currentRouterState
                    );
                    return (i = { ...h, targetRouterState: m });
                  }),
                  (0, Xn.b)((h) => {
                    (this.currentUrlTree = h.urlAfterRedirects),
                      (this.rawUrlTree = this.urlHandlingStrategy.merge(
                        h.urlAfterRedirects,
                        h.rawUrl
                      )),
                      (this.routerState = h.targetRouterState),
                      "deferred" === this.urlUpdateStrategy &&
                        (h.extras.skipLocationChange ||
                          this.setBrowserUrl(this.rawUrlTree, h),
                        (this.browserUrlTree = h.urlAfterRedirects));
                  }),
                  ((n, e, t) =>
                    (0, Ft.U)(
                      (r) => (
                        new iT(
                          e,
                          r.targetRouterState,
                          r.currentRouterState,
                          t
                        ).activate(n),
                        r
                      )
                    ))(this.rootContexts, this.routeReuseStrategy, (h) =>
                    this.triggerEvent(h)
                  ),
                  (0, Xn.b)({
                    next() {
                      a = !0;
                    },
                    complete() {
                      a = !0;
                    },
                  }),
                  ha(() => {
                    a || l || this.cancelNavigationTransition(i, "", 1),
                      this.currentNavigation?.id === i.id &&
                        (this.currentNavigation = null);
                  }),
                  Ao((h) => {
                    if (((l = !0), S_(h))) {
                      gp(h) ||
                        ((this.navigated = !0), this.restoreHistory(i, !0));
                      const m = new kl(
                        i.id,
                        this.serializeUrl(i.extractedUrl),
                        h.message,
                        h.cancellationCode
                      );
                      if ((r.next(m), gp(h))) {
                        const v = this.urlHandlingStrategy.merge(
                            h.url,
                            this.rawUrlTree
                          ),
                          b = {
                            skipLocationChange: i.extras.skipLocationChange,
                            replaceUrl:
                              "eager" === this.urlUpdateStrategy ||
                              X_(i.source),
                          };
                        this.scheduleNavigation(v, "imperative", null, b, {
                          resolve: i.resolve,
                          reject: i.reject,
                          promise: i.promise,
                        });
                      } else i.resolve(!1);
                    } else {
                      this.restoreHistory(i, !0);
                      const m = new Fl(
                        i.id,
                        this.serializeUrl(i.extractedUrl),
                        h,
                        i.targetSnapshot ?? void 0
                      );
                      r.next(m);
                      try {
                        i.resolve(this.errorHandler(h));
                      } catch (v) {
                        i.reject(v);
                      }
                    }
                    return So.E;
                  })
                );
              })
            );
          }
          resetRootComponentType(t) {
            (this.rootComponentType = t),
              (this.routerState.root.component = this.rootComponentType);
          }
          setTransition(t) {
            this.transitions.next({ ...this.transitions.value, ...t });
          }
          initialNavigation() {
            this.setUpLocationChangeListener(),
              0 === this.navigationId &&
                this.navigateByUrl(this.location.path(!0), { replaceUrl: !0 });
          }
          setUpLocationChangeListener() {
            this.locationSubscription ||
              (this.locationSubscription = this.location.subscribe((t) => {
                const r = "popstate" === t.type ? "popstate" : "hashchange";
                "popstate" === r &&
                  setTimeout(() => {
                    const i = { replaceUrl: !0 },
                      a = t.state?.navigationId ? t.state : null;
                    if (a) {
                      const h = { ...a };
                      delete h.navigationId,
                        delete h.ɵrouterPageId,
                        0 !== Object.keys(h).length && (i.state = h);
                    }
                    const l = this.parseUrl(t.url);
                    this.scheduleNavigation(l, r, a, i);
                  }, 0);
              }));
          }
          get url() {
            return this.serializeUrl(this.currentUrlTree);
          }
          getCurrentNavigation() {
            return this.currentNavigation;
          }
          triggerEvent(t) {
            this.events.next(t);
          }
          resetConfig(t) {
            (this.config = t.map(hu)),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1);
          }
          ngOnDestroy() {
            this.dispose();
          }
          dispose() {
            this.transitions.complete(),
              this.locationSubscription &&
                (this.locationSubscription.unsubscribe(),
                (this.locationSubscription = void 0)),
              (this.disposed = !0);
          }
          createUrlTree(t, r = {}) {
            const {
                relativeTo: i,
                queryParams: a,
                fragment: l,
                queryParamsHandling: h,
                preserveFragment: m,
              } = r,
              v = i || this.routerState.root,
              b = m ? this.currentUrlTree.fragment : l;
            let D = null;
            switch (h) {
              case "merge":
                D = { ...this.currentUrlTree.queryParams, ...a };
                break;
              case "preserve":
                D = this.currentUrlTree.queryParams;
                break;
              default:
                D = a || null;
            }
            return (
              null !== D && (D = this.removeEmptyProps(D)),
              Nl(v, this.currentUrlTree, t, D, b ?? null)
            );
          }
          navigateByUrl(t, r = { skipLocationChange: !1 }) {
            const i = Po(t) ? t : this.parseUrl(t),
              a = this.urlHandlingStrategy.merge(i, this.rawUrlTree);
            return this.scheduleNavigation(a, "imperative", null, r);
          }
          navigate(t, r = { skipLocationChange: !1 }) {
            return (
              (function bT(n) {
                for (let e = 0; e < n.length; e++) {
                  if (null == n[e]) throw new f.vHH(4008, false);
                }
              })(t),
              this.navigateByUrl(this.createUrlTree(t, r), r)
            );
          }
          serializeUrl(t) {
            return this.urlSerializer.serialize(t);
          }
          parseUrl(t) {
            let r;
            try {
              r = this.urlSerializer.parse(t);
            } catch (i) {
              r = this.malformedUriErrorHandler(i, this.urlSerializer, t);
            }
            return r;
          }
          isActive(t, r) {
            let i;
            if (((i = !0 === r ? { ...zd } : !1 === r ? { ...J_ } : r), Po(t)))
              return pa(this.currentUrlTree, t, i);
            const a = this.parseUrl(t);
            return pa(this.currentUrlTree, a, i);
          }
          removeEmptyProps(t) {
            return Object.keys(t).reduce((r, i) => {
              const a = t[i];
              return null != a && (r[i] = a), r;
            }, {});
          }
          processNavigations() {
            this.navigations.subscribe(
              (t) => {
                (this.navigated = !0),
                  (this.lastSuccessfulId = t.id),
                  (this.currentPageId = t.targetPageId),
                  this.events.next(
                    new Xi(
                      t.id,
                      this.serializeUrl(t.extractedUrl),
                      this.serializeUrl(this.currentUrlTree)
                    )
                  ),
                  (this.lastSuccessfulNavigation = this.currentNavigation),
                  this.titleStrategy?.updateTitle(this.routerState.snapshot),
                  t.resolve(!0);
              },
              (t) => {
                this.console.warn(`Unhandled Navigation Error: ${t}`);
              }
            );
          }
          scheduleNavigation(t, r, i, a, l) {
            if (this.disposed) return Promise.resolve(!1);
            let h, m, v;
            l
              ? ((h = l.resolve), (m = l.reject), (v = l.promise))
              : (v = new Promise((R, F) => {
                  (h = R), (m = F);
                }));
            const b = ++this.navigationId;
            let D;
            return (
              "computed" === this.canceledNavigationResolution
                ? (0 === this.currentPageId && (i = this.location.getState()),
                  (D =
                    i && i.ɵrouterPageId
                      ? i.ɵrouterPageId
                      : a.replaceUrl || a.skipLocationChange
                      ? this.browserPageId ?? 0
                      : (this.browserPageId ?? 0) + 1))
                : (D = 0),
              this.setTransition({
                id: b,
                targetPageId: D,
                source: r,
                restoredState: i,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.rawUrlTree,
                rawUrl: t,
                extras: a,
                resolve: h,
                reject: m,
                promise: v,
                currentSnapshot: this.routerState.snapshot,
                currentRouterState: this.routerState,
              }),
              v.catch((R) => Promise.reject(R))
            );
          }
          setBrowserUrl(t, r) {
            const i = this.urlSerializer.serialize(t),
              a = {
                ...r.extras.state,
                ...this.generateNgRouterState(r.id, r.targetPageId),
              };
            this.location.isCurrentPathEqualTo(i) || r.extras.replaceUrl
              ? this.location.replaceState(i, "", a)
              : this.location.go(i, "", a);
          }
          restoreHistory(t, r = !1) {
            if ("computed" === this.canceledNavigationResolution) {
              const i = this.currentPageId - t.targetPageId;
              ("popstate" !== t.source &&
                "eager" !== this.urlUpdateStrategy &&
                this.currentUrlTree !== this.currentNavigation?.finalUrl) ||
              0 === i
                ? this.currentUrlTree === this.currentNavigation?.finalUrl &&
                  0 === i &&
                  (this.resetState(t),
                  (this.browserUrlTree = t.currentUrlTree),
                  this.resetUrlToCurrentUrlTree())
                : this.location.historyGo(i);
            } else
              "replace" === this.canceledNavigationResolution &&
                (r && this.resetState(t), this.resetUrlToCurrentUrlTree());
          }
          resetState(t) {
            (this.routerState = t.currentRouterState),
              (this.currentUrlTree = t.currentUrlTree),
              (this.rawUrlTree = this.urlHandlingStrategy.merge(
                this.currentUrlTree,
                t.rawUrl
              ));
          }
          resetUrlToCurrentUrlTree() {
            this.location.replaceState(
              this.urlSerializer.serialize(this.rawUrlTree),
              "",
              this.generateNgRouterState(
                this.lastSuccessfulId,
                this.currentPageId
              )
            );
          }
          cancelNavigationTransition(t, r, i) {
            const a = new kl(t.id, this.serializeUrl(t.extractedUrl), r, i);
            this.triggerEvent(a), t.resolve(!1);
          }
          generateNgRouterState(t, r) {
            return "computed" === this.canceledNavigationResolution
              ? { navigationId: t, ɵrouterPageId: r }
              : { navigationId: t };
          }
        }
        return (
          (n.ɵfac = function (t) {
            f.$Z();
          }),
          (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function X_(n) {
        return "imperative" !== n;
      }
      let _u = (() => {
          class n {
            constructor(t, r, i) {
              (this.router = t),
                (this.route = r),
                (this.locationStrategy = i),
                (this.commands = null),
                (this.href = null),
                (this.onChanges = new Ti.x()),
                (this.subscription = t.events.subscribe((a) => {
                  a instanceof Xi && this.updateTargetUrlAndHref();
                }));
            }
            set routerLink(t) {
              this.commands = null != t ? (Array.isArray(t) ? t : [t]) : null;
            }
            ngOnChanges(t) {
              this.updateTargetUrlAndHref(), this.onChanges.next(this);
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            onClick(t, r, i, a, l) {
              if (
                0 !== t ||
                r ||
                i ||
                a ||
                l ||
                ("string" == typeof this.target && "_self" != this.target) ||
                null === this.urlTree
              )
                return !0;
              const h = {
                skipLocationChange: (0, f.D6c)(this.skipLocationChange),
                replaceUrl: (0, f.D6c)(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, h), !1;
            }
            updateTargetUrlAndHref() {
              this.href =
                null !== this.urlTree
                  ? this.locationStrategy.prepareExternalUrl(
                      this.router.serializeUrl(this.urlTree)
                    )
                  : null;
            }
            get urlTree() {
              return null === this.commands
                ? null
                : this.router.createUrlTree(this.commands, {
                    relativeTo:
                      void 0 !== this.relativeTo ? this.relativeTo : this.route,
                    queryParams: this.queryParams,
                    fragment: this.fragment,
                    queryParamsHandling: this.queryParamsHandling,
                    preserveFragment: (0, f.D6c)(this.preserveFragment),
                  });
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(f.Y36(Fr), f.Y36(Bt), f.Y36(ge));
            }),
            (n.ɵdir = f.lG2({
              type: n,
              selectors: [
                ["a", "routerLink", ""],
                ["area", "routerLink", ""],
              ],
              hostVars: 2,
              hostBindings: function (t, r) {
                1 & t &&
                  f.NdJ("click", function (a) {
                    return r.onClick(
                      a.button,
                      a.ctrlKey,
                      a.shiftKey,
                      a.altKey,
                      a.metaKey
                    );
                  }),
                  2 & t && f.uIk("target", r.target)("href", r.href, f.LSH);
              },
              inputs: {
                target: "target",
                queryParams: "queryParams",
                fragment: "fragment",
                queryParamsHandling: "queryParamsHandling",
                preserveFragment: "preserveFragment",
                skipLocationChange: "skipLocationChange",
                replaceUrl: "replaceUrl",
                state: "state",
                relativeTo: "relativeTo",
                routerLink: "routerLink",
              },
              features: [f.TTD],
            })),
            n
          );
        })(),
        U0 = (() => {
          class n {
            buildTitle(t) {
              let r,
                i = t.root;
              for (; void 0 !== i; )
                (r = this.getResolvedTitleForRoute(i) ?? r),
                  (i = i.children.find((a) => a.outlet === ln));
              return r;
            }
            getResolvedTitleForRoute(t) {
              return t.data[z_];
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵprov = f.Yz7({
              token: n,
              factory: function () {
                return (0, f.f3M)(TT);
              },
              providedIn: "root",
            })),
            n
          );
        })(),
        TT = (() => {
          class n extends U0 {
            constructor(t) {
              super(), (this.title = t);
            }
            updateTitle(t) {
              const r = this.buildTitle(t);
              void 0 !== r && this.title.setTitle(r);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(f.LFG(hl));
            }),
            (n.ɵprov = f.Yz7({
              token: n,
              factory: n.ɵfac,
              providedIn: "root",
            })),
            n
          );
        })();
      class B0 {}
      let j0 = (() => {
        class n {
          constructor(t, r, i, a, l) {
            (this.router = t),
              (this.injector = i),
              (this.preloadingStrategy = a),
              (this.loader = l);
          }
          setUpPreloading() {
            this.subscription = this.router.events
              .pipe(
                hi((t) => t instanceof Xi),
                Qi(() => this.preload())
              )
              .subscribe(() => {});
          }
          preload() {
            return this.processRoutes(this.injector, this.router.config);
          }
          ngOnDestroy() {
            this.subscription && this.subscription.unsubscribe();
          }
          processRoutes(t, r) {
            const i = [];
            for (const a of r) {
              a.providers &&
                !a._injector &&
                (a._injector = (0, f.MMx)(a.providers, t, `Route: ${a.path}`));
              const l = a._injector ?? t,
                h = a._loadedInjector ?? l;
              (a.loadChildren && !a._loadedRoutes) ||
              (a.loadComponent && !a._loadedComponent)
                ? i.push(this.preloadConfig(l, a))
                : (a.children || a._loadedRoutes) &&
                  i.push(this.processRoutes(h, a.children ?? a._loadedRoutes));
            }
            return (0, jn.D)(i).pipe((0, ca.J)());
          }
          preloadConfig(t, r) {
            return this.preloadingStrategy.preload(r, () => {
              let i;
              i =
                r.loadChildren && void 0 === r.canLoad
                  ? this.loader.loadChildren(t, r)
                  : pt(null);
              const a = i.pipe(
                (0, Hr.z)((l) =>
                  null === l
                    ? pt(void 0)
                    : ((r._loadedRoutes = l.routes),
                      (r._loadedInjector = l.injector),
                      this.processRoutes(l.injector ?? t, l.routes))
                )
              );
              if (r.loadComponent && !r._loadedComponent) {
                const l = this.loader.loadComponent(r);
                return (0, jn.D)([a, l]).pipe((0, ca.J)());
              }
              return a;
            });
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(
              f.LFG(Fr),
              f.LFG(f.Sil),
              f.LFG(f.lqb),
              f.LFG(B0),
              f.LFG(Z_)
            );
          }),
          (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const yu = new f.OlP("");
      let Fo = (() => {
        class n {
          constructor(t, r, i = {}) {
            (this.router = t),
              (this.viewportScroller = r),
              (this.options = i),
              (this.lastId = 0),
              (this.lastSource = "imperative"),
              (this.restoredId = 0),
              (this.store = {}),
              (i.scrollPositionRestoration =
                i.scrollPositionRestoration || "disabled"),
              (i.anchorScrolling = i.anchorScrolling || "disabled");
          }
          init() {
            "disabled" !== this.options.scrollPositionRestoration &&
              this.viewportScroller.setHistoryScrollRestoration("manual"),
              (this.routerEventsSubscription = this.createScrollEvents()),
              (this.scrollEventsSubscription = this.consumeScrollEvents());
          }
          createScrollEvents() {
            return this.router.events.subscribe((t) => {
              t instanceof Ol
                ? ((this.store[this.lastId] =
                    this.viewportScroller.getScrollPosition()),
                  (this.lastSource = t.navigationTrigger),
                  (this.restoredId = t.restoredState
                    ? t.restoredState.navigationId
                    : 0))
                : t instanceof Xi &&
                  ((this.lastId = t.id),
                  this.scheduleScrollEvent(
                    t,
                    this.router.parseUrl(t.urlAfterRedirects).fragment
                  ));
            });
          }
          consumeScrollEvents() {
            return this.router.events.subscribe((t) => {
              t instanceof E &&
                (t.position
                  ? "top" === this.options.scrollPositionRestoration
                    ? this.viewportScroller.scrollToPosition([0, 0])
                    : "enabled" === this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition(t.position)
                  : t.anchor && "enabled" === this.options.anchorScrolling
                  ? this.viewportScroller.scrollToAnchor(t.anchor)
                  : "disabled" !== this.options.scrollPositionRestoration &&
                    this.viewportScroller.scrollToPosition([0, 0]));
            });
          }
          scheduleScrollEvent(t, r) {
            this.router.triggerEvent(
              new E(
                t,
                "popstate" === this.lastSource
                  ? this.store[this.restoredId]
                  : null,
                r
              )
            );
          }
          ngOnDestroy() {
            this.routerEventsSubscription &&
              this.routerEventsSubscription.unsubscribe(),
              this.scrollEventsSubscription &&
                this.scrollEventsSubscription.unsubscribe();
          }
        }
        return (
          (n.ɵfac = function (t) {
            f.$Z();
          }),
          (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const $0 = new f.OlP("ROUTER_CONFIGURATION", {
          providedIn: "root",
          factory: () => ({}),
        }),
        ST = new f.OlP("ROUTER_FORROOT_GUARD"),
        ty = new f.OlP(""),
        YP = [
          Ne,
          { provide: or, useClass: Ad },
          {
            provide: Fr,
            useFactory: function MT(n, e, t, r, i, a, l, h = {}, m, v) {
              const b = new Fr(null, n, e, t, r, i, Ro(a));
              return (
                m && (b.urlHandlingStrategy = m),
                v && (b.routeReuseStrategy = v),
                (b.titleStrategy = l),
                (function G0(n, e) {
                  n.errorHandler && (e.errorHandler = n.errorHandler),
                    n.malformedUriErrorHandler &&
                      (e.malformedUriErrorHandler = n.malformedUriErrorHandler),
                    n.onSameUrlNavigation &&
                      (e.onSameUrlNavigation = n.onSameUrlNavigation),
                    n.paramsInheritanceStrategy &&
                      (e.paramsInheritanceStrategy =
                        n.paramsInheritanceStrategy),
                    n.relativeLinkResolution &&
                      (e.relativeLinkResolution = n.relativeLinkResolution),
                    n.urlUpdateStrategy &&
                      (e.urlUpdateStrategy = n.urlUpdateStrategy),
                    n.canceledNavigationResolution &&
                      (e.canceledNavigationResolution =
                        n.canceledNavigationResolution);
                })(h, b),
                b
              );
            },
            deps: [
              or,
              Vd,
              Ne,
              f.zs3,
              f.Sil,
              K_,
              U0,
              $0,
              [class gi {}, new f.FiY()],
              [class wT {}, new f.FiY()],
            ],
          },
          Vd,
          {
            provide: Bt,
            useFactory: function iy(n) {
              return n.routerState.root;
            },
            deps: [Fr],
          },
          Z_,
        ];
      function Xs() {
        return new f.PXZ("Router", Fr);
      }
      let ny = (() => {
        class n {
          constructor(t, r) {}
          static forRoot(t, r) {
            return {
              ngModule: n,
              providers: [
                YP,
                [],
                zl(t),
                {
                  provide: ST,
                  useFactory: RT,
                  deps: [[Fr, new f.FiY(), new f.tp0()]],
                },
                { provide: $0, useValue: r || {} },
                r?.useHash
                  ? { provide: ge, useClass: Ve }
                  : { provide: ge, useClass: rt },
                {
                  provide: yu,
                  useFactory: () => {
                    const n = (0, f.f3M)(Fr),
                      e = (0, f.f3M)(qa),
                      t = (0, f.f3M)($0);
                    return (
                      t.scrollOffset && e.setOffset(t.scrollOffset),
                      new Fo(n, e, t)
                    );
                  },
                },
                r?.preloadingStrategy ? NT(r.preloadingStrategy) : [],
                { provide: f.PXZ, multi: !0, useFactory: Xs },
                r?.initialNavigation ? QP(r) : [],
                [
                  { provide: oy, useFactory: sy },
                  { provide: f.tb, multi: !0, useExisting: oy },
                ],
              ],
            };
          }
          static forChild(t) {
            return { ngModule: n, providers: [zl(t)] };
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.LFG(ST, 8), f.LFG(Fr, 8));
          }),
          (n.ɵmod = f.oAB({ type: n })),
          (n.ɵinj = f.cJS({})),
          n
        );
      })();
      function RT(n) {
        return "guarded";
      }
      function zl(n) {
        return [
          { provide: f.deG, multi: !0, useValue: n },
          { provide: K_, multi: !0, useValue: n },
        ];
      }
      function sy() {
        const n = (0, f.f3M)(f.zs3);
        return (e) => {
          const t = n.get(f.z2F);
          if (e !== t.components[0]) return;
          const r = n.get(Fr),
            i = n.get(Tp);
          null === n.get(ay, null, f.XFs.Optional) && r.initialNavigation(),
            n.get(ty, null, f.XFs.Optional)?.setUpPreloading(),
            n.get(yu, null, f.XFs.Optional)?.init(),
            r.resetRootComponentType(t.componentTypes[0]),
            i.next(),
            i.complete();
        };
      }
      const oy = new f.OlP("");
      function QP(n) {
        return [
          "disabled" === n.initialNavigation
            ? [
                {
                  provide: f.ip1,
                  multi: !0,
                  useFactory: () => {
                    const n = (0, f.f3M)(Fr);
                    return () => {
                      n.setUpLocationChangeListener();
                    };
                  },
                },
                { provide: ay, useValue: "disabled" },
              ]
            : [],
          "enabledBlocking" === n.initialNavigation
            ? [
                { provide: ay, useValue: "enabledBlocking" },
                {
                  provide: f.ip1,
                  multi: !0,
                  deps: [f.zs3],
                  useFactory: (n) => {
                    const e = n.get(G, Promise.resolve(null));
                    let t = !1;
                    return () =>
                      e.then(
                        () =>
                          new Promise((i) => {
                            const a = n.get(Fr),
                              l = n.get(Tp);
                            (function r(i) {
                              n.get(Fr)
                                .events.pipe(
                                  hi(
                                    (l) =>
                                      l instanceof Xi ||
                                      l instanceof kl ||
                                      l instanceof Fl
                                  ),
                                  (0, Ft.U)(
                                    (l) =>
                                      l instanceof Xi ||
                                      (l instanceof kl &&
                                        (0 === l.code || 1 === l.code) &&
                                        null)
                                  ),
                                  hi((l) => null !== l),
                                  Cl(1)
                                )
                                .subscribe(() => {
                                  i();
                                });
                            })(() => {
                              i(!0), (t = !0);
                            }),
                              (a.afterPreactivation = () => (
                                i(!0), t || l.closed ? pt(void 0) : l
                              )),
                              a.initialNavigation();
                          })
                      );
                  },
                },
              ]
            : [],
        ];
      }
      const Tp = new f.OlP("", { factory: () => new Ti.x() }),
        ay = new f.OlP("");
      function NT(n) {
        return [
          j0,
          { provide: ty, useExisting: j0 },
          { provide: B0, useExisting: n },
        ];
      }
      let z0 = (() => {
          class n {
            constructor(t, r) {
              (this._renderer = t),
                (this._elementRef = r),
                (this.onChange = (i) => {}),
                (this.onTouched = () => {});
            }
            setProperty(t, r) {
              this._renderer.setProperty(this._elementRef.nativeElement, t, r);
            }
            registerOnTouched(t) {
              this.onTouched = t;
            }
            registerOnChange(t) {
              this.onChange = t;
            }
            setDisabledState(t) {
              this.setProperty("disabled", t);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(f.Y36(f.Qsj), f.Y36(f.SBq));
            }),
            (n.ɵdir = f.lG2({ type: n })),
            n
          );
        })(),
        vu = (() => {
          class n extends z0 {}
          return (
            (n.ɵfac = (function () {
              let e;
              return function (r) {
                return (e || (e = f.n5z(n)))(r || n);
              };
            })()),
            (n.ɵdir = f.lG2({ type: n, features: [f.qOj] })),
            n
          );
        })();
      const Ss = new f.OlP("NgValueAccessor"),
        dy = { provide: Ss, useExisting: (0, f.Gpc)(() => qd), multi: !0 },
        kT = new f.OlP("CompositionEventMode");
      let qd = (() => {
        class n extends z0 {
          constructor(t, r, i) {
            super(t, r),
              (this._compositionMode = i),
              (this._composing = !1),
              null == this._compositionMode &&
                (this._compositionMode = !(function OT() {
                  const n = P() ? P().getUserAgent() : "";
                  return /android (\d+)/.test(n.toLowerCase());
                })());
          }
          writeValue(t) {
            this.setProperty("value", t ?? "");
          }
          _handleInput(t) {
            (!this._compositionMode ||
              (this._compositionMode && !this._composing)) &&
              this.onChange(t);
          }
          _compositionStart() {
            this._composing = !0;
          }
          _compositionEnd(t) {
            (this._composing = !1), this._compositionMode && this.onChange(t);
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.Y36(f.Qsj), f.Y36(f.SBq), f.Y36(kT, 8));
          }),
          (n.ɵdir = f.lG2({
            type: n,
            selectors: [
              ["input", "formControlName", "", 3, "type", "checkbox"],
              ["textarea", "formControlName", ""],
              ["input", "formControl", "", 3, "type", "checkbox"],
              ["textarea", "formControl", ""],
              ["input", "ngModel", "", 3, "type", "checkbox"],
              ["textarea", "ngModel", ""],
              ["", "ngDefaultControl", ""],
            ],
            hostBindings: function (t, r) {
              1 & t &&
                f.NdJ("input", function (a) {
                  return r._handleInput(a.target.value);
                })("blur", function () {
                  return r.onTouched();
                })("compositionstart", function () {
                  return r._compositionStart();
                })("compositionend", function (a) {
                  return r._compositionEnd(a.target.value);
                });
            },
            features: [f._Bn([dy]), f.qOj],
          })),
          n
        );
      })();
      const Gr = new f.OlP("NgValidators"),
        ba = new f.OlP("NgAsyncValidators");
      function Ap(n) {
        return null != n;
      }
      function yy(n) {
        return (0, f.QGY)(n) ? (0, jn.D)(n) : n;
      }
      function Rp(n) {
        let e = {};
        return (
          n.forEach((t) => {
            e = null != t ? { ...e, ...t } : e;
          }),
          0 === Object.keys(e).length ? null : e
        );
      }
      function Kl(n, e) {
        return e.map((t) => t(n));
      }
      function vy(n) {
        return n.map((e) =>
          (function FT(n) {
            return !n.validate;
          })(e)
            ? e
            : (t) => e.validate(t)
        );
      }
      function Ey(n) {
        return null != n
          ? (function Z0(n) {
              if (!n) return null;
              const e = n.filter(Ap);
              return 0 == e.length
                ? null
                : function (t) {
                    return Rp(Kl(t, e));
                  };
            })(vy(n))
          : null;
      }
      function Qd(n) {
        return null != n
          ? (function wy(n) {
              if (!n) return null;
              const e = n.filter(Ap);
              return 0 == e.length
                ? null
                : function (t) {
                    return (function PT(...n) {
                      const e = (0, Gn.jO)(n),
                        { args: t, keys: r } = ua(n),
                        i = new kr.y((a) => {
                          const { length: l } = t;
                          if (!l) return void a.complete();
                          const h = new Array(l);
                          let m = l,
                            v = l;
                          for (let b = 0; b < l; b++) {
                            let D = !1;
                            (0, bo.Xf)(t[b]).subscribe(
                              (0, pr.x)(
                                a,
                                (R) => {
                                  D || ((D = !0), v--), (h[b] = R);
                                },
                                () => m--,
                                void 0,
                                () => {
                                  (!m || !D) &&
                                    (v || a.next(r ? vl(r, h) : h),
                                    a.complete());
                                }
                              )
                            );
                          }
                        });
                      return e ? i.pipe(Co(e)) : i;
                    })(Kl(t, e).map(yy)).pipe((0, Ft.U)(Rp));
                  };
            })(vy(n))
          : null;
      }
      function Iy(n, e) {
        return null === n ? [e] : Array.isArray(n) ? [...n, e] : [n, e];
      }
      function LT(n) {
        return n._rawValidators;
      }
      function Cy(n) {
        return n._rawAsyncValidators;
      }
      function by(n) {
        return n ? (Array.isArray(n) ? n : [n]) : [];
      }
      function Jd(n, e) {
        return Array.isArray(n) ? n.includes(e) : n === e;
      }
      function Y0(n, e) {
        const t = by(e);
        return (
          by(n).forEach((i) => {
            Jd(t, i) || t.push(i);
          }),
          t
        );
      }
      function Q0(n, e) {
        return by(e).filter((t) => !Jd(n, t));
      }
      class ts {
        constructor() {
          (this._rawValidators = []),
            (this._rawAsyncValidators = []),
            (this._onDestroyCallbacks = []);
        }
        get value() {
          return this.control ? this.control.value : null;
        }
        get valid() {
          return this.control ? this.control.valid : null;
        }
        get invalid() {
          return this.control ? this.control.invalid : null;
        }
        get pending() {
          return this.control ? this.control.pending : null;
        }
        get disabled() {
          return this.control ? this.control.disabled : null;
        }
        get enabled() {
          return this.control ? this.control.enabled : null;
        }
        get errors() {
          return this.control ? this.control.errors : null;
        }
        get pristine() {
          return this.control ? this.control.pristine : null;
        }
        get dirty() {
          return this.control ? this.control.dirty : null;
        }
        get touched() {
          return this.control ? this.control.touched : null;
        }
        get status() {
          return this.control ? this.control.status : null;
        }
        get untouched() {
          return this.control ? this.control.untouched : null;
        }
        get statusChanges() {
          return this.control ? this.control.statusChanges : null;
        }
        get valueChanges() {
          return this.control ? this.control.valueChanges : null;
        }
        get path() {
          return null;
        }
        _setValidators(e) {
          (this._rawValidators = e || []),
            (this._composedValidatorFn = Ey(this._rawValidators));
        }
        _setAsyncValidators(e) {
          (this._rawAsyncValidators = e || []),
            (this._composedAsyncValidatorFn = Qd(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn || null;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn || null;
        }
        _registerOnDestroy(e) {
          this._onDestroyCallbacks.push(e);
        }
        _invokeOnDestroyCallbacks() {
          this._onDestroyCallbacks.forEach((e) => e()),
            (this._onDestroyCallbacks = []);
        }
        reset(e) {
          this.control && this.control.reset(e);
        }
        hasError(e, t) {
          return !!this.control && this.control.hasError(e, t);
        }
        getError(e, t) {
          return this.control ? this.control.getError(e, t) : null;
        }
      }
      class mi extends ts {
        get formDirective() {
          return null;
        }
        get path() {
          return null;
        }
      }
      class Vo extends ts {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null);
        }
      }
      class J0 {
        constructor(e) {
          this._cd = e;
        }
        get isTouched() {
          return !!this._cd?.control?.touched;
        }
        get isUntouched() {
          return !!this._cd?.control?.untouched;
        }
        get isPristine() {
          return !!this._cd?.control?.pristine;
        }
        get isDirty() {
          return !!this._cd?.control?.dirty;
        }
        get isValid() {
          return !!this._cd?.control?.valid;
        }
        get isInvalid() {
          return !!this._cd?.control?.invalid;
        }
        get isPending() {
          return !!this._cd?.control?.pending;
        }
        get isSubmitted() {
          return !!this._cd?.submitted;
        }
      }
      let X0 = (() => {
          class n extends J0 {
            constructor(t) {
              super(t);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(f.Y36(Vo, 2));
            }),
            (n.ɵdir = f.lG2({
              type: n,
              selectors: [
                ["", "formControlName", ""],
                ["", "ngModel", ""],
                ["", "formControl", ""],
              ],
              hostVars: 14,
              hostBindings: function (t, r) {
                2 & t &&
                  f.ekj("ng-untouched", r.isUntouched)(
                    "ng-touched",
                    r.isTouched
                  )("ng-pristine", r.isPristine)("ng-dirty", r.isDirty)(
                    "ng-valid",
                    r.isValid
                  )("ng-invalid", r.isInvalid)("ng-pending", r.isPending);
              },
              features: [f.qOj],
            })),
            n
          );
        })(),
        Dy = (() => {
          class n extends J0 {
            constructor(t) {
              super(t);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(f.Y36(mi, 10));
            }),
            (n.ɵdir = f.lG2({
              type: n,
              selectors: [
                ["", "formGroupName", ""],
                ["", "formArrayName", ""],
                ["", "ngModelGroup", ""],
                ["", "formGroup", ""],
                ["form", 3, "ngNoForm", ""],
                ["", "ngForm", ""],
              ],
              hostVars: 16,
              hostBindings: function (t, r) {
                2 & t &&
                  f.ekj("ng-untouched", r.isUntouched)(
                    "ng-touched",
                    r.isTouched
                  )("ng-pristine", r.isPristine)("ng-dirty", r.isDirty)(
                    "ng-valid",
                    r.isValid
                  )("ng-invalid", r.isInvalid)("ng-pending", r.isPending)(
                    "ng-submitted",
                    r.isSubmitted
                  );
              },
              features: [f.qOj],
            })),
            n
          );
        })();
      const Xd = "VALID",
        Zl = "INVALID",
        Da = "PENDING",
        eh = "DISABLED";
      function iI(n) {
        return (th(n) ? n.validators : n) || null;
      }
      function GT(n) {
        return Array.isArray(n) ? Ey(n) : n || null;
      }
      function sI(n, e) {
        return (th(e) ? e.asyncValidators : n) || null;
      }
      function oI(n) {
        return Array.isArray(n) ? Qd(n) : n || null;
      }
      function th(n) {
        return null != n && !Array.isArray(n) && "object" == typeof n;
      }
      function WT(n, e, t) {
        const r = n.controls;
        if (!(e ? Object.keys(r) : r).length) throw new f.vHH(1e3, "");
        if (!r[t]) throw new f.vHH(1001, "");
      }
      function aI(n, e, t) {
        n._forEachChild((r, i) => {
          if (void 0 === t[i]) throw new f.vHH(1002, "");
        });
      }
      class Bo {
        constructor(e, t) {
          (this._pendingDirty = !1),
            (this._hasOwnPendingAsyncValidator = !1),
            (this._pendingTouched = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            (this._rawValidators = e),
            (this._rawAsyncValidators = t),
            (this._composedValidatorFn = GT(this._rawValidators)),
            (this._composedAsyncValidatorFn = oI(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(e) {
          this._rawValidators = this._composedValidatorFn = e;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(e) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = e;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === Xd;
        }
        get invalid() {
          return this.status === Zl;
        }
        get pending() {
          return this.status == Da;
        }
        get disabled() {
          return this.status === eh;
        }
        get enabled() {
          return this.status !== eh;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : "change";
        }
        setValidators(e) {
          (this._rawValidators = e), (this._composedValidatorFn = GT(e));
        }
        setAsyncValidators(e) {
          (this._rawAsyncValidators = e),
            (this._composedAsyncValidatorFn = oI(e));
        }
        addValidators(e) {
          this.setValidators(Y0(e, this._rawValidators));
        }
        addAsyncValidators(e) {
          this.setAsyncValidators(Y0(e, this._rawAsyncValidators));
        }
        removeValidators(e) {
          this.setValidators(Q0(e, this._rawValidators));
        }
        removeAsyncValidators(e) {
          this.setAsyncValidators(Q0(e, this._rawAsyncValidators));
        }
        hasValidator(e) {
          return Jd(this._rawValidators, e);
        }
        hasAsyncValidator(e) {
          return Jd(this._rawAsyncValidators, e);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(e = {}) {
          (this.touched = !0),
            this._parent && !e.onlySelf && this._parent.markAsTouched(e);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild((e) => e.markAllAsTouched());
        }
        markAsUntouched(e = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((t) => {
              t.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !e.onlySelf && this._parent._updateTouched(e);
        }
        markAsDirty(e = {}) {
          (this.pristine = !1),
            this._parent && !e.onlySelf && this._parent.markAsDirty(e);
        }
        markAsPristine(e = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((t) => {
              t.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !e.onlySelf && this._parent._updatePristine(e);
        }
        markAsPending(e = {}) {
          (this.status = Da),
            !1 !== e.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !e.onlySelf && this._parent.markAsPending(e);
        }
        disable(e = {}) {
          const t = this._parentMarkedDirty(e.onlySelf);
          (this.status = eh),
            (this.errors = null),
            this._forEachChild((r) => {
              r.disable({ ...e, onlySelf: !0 });
            }),
            this._updateValue(),
            !1 !== e.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors({ ...e, skipPristineCheck: t }),
            this._onDisabledChange.forEach((r) => r(!0));
        }
        enable(e = {}) {
          const t = this._parentMarkedDirty(e.onlySelf);
          (this.status = Xd),
            this._forEachChild((r) => {
              r.enable({ ...e, onlySelf: !0 });
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: e.emitEvent,
            }),
            this._updateAncestors({ ...e, skipPristineCheck: t }),
            this._onDisabledChange.forEach((r) => r(!1));
        }
        _updateAncestors(e) {
          this._parent &&
            !e.onlySelf &&
            (this._parent.updateValueAndValidity(e),
            e.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(e) {
          this._parent = e;
        }
        getRawValue() {
          return this.value;
        }
        updateValueAndValidity(e = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status === Xd || this.status === Da) &&
                this._runAsyncValidator(e.emitEvent)),
            !1 !== e.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !e.onlySelf &&
              this._parent.updateValueAndValidity(e);
        }
        _updateTreeValidity(e = { emitEvent: !0 }) {
          this._forEachChild((t) => t._updateTreeValidity(e)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: e.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? eh : Xd;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(e) {
          if (this.asyncValidator) {
            (this.status = Da), (this._hasOwnPendingAsyncValidator = !0);
            const t = yy(this.asyncValidator(this));
            this._asyncValidationSubscription = t.subscribe((r) => {
              (this._hasOwnPendingAsyncValidator = !1),
                this.setErrors(r, { emitEvent: e });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(),
            (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(e, t = {}) {
          (this.errors = e), this._updateControlsErrors(!1 !== t.emitEvent);
        }
        get(e) {
          let t = e;
          return null == t ||
            (Array.isArray(t) || (t = t.split(".")), 0 === t.length)
            ? null
            : t.reduce((r, i) => r && r._find(i), this);
        }
        getError(e, t) {
          const r = t ? this.get(t) : this;
          return r && r.errors ? r.errors[e] : null;
        }
        hasError(e, t) {
          return !!this.getError(e, t);
        }
        get root() {
          let e = this;
          for (; e._parent; ) e = e._parent;
          return e;
        }
        _updateControlsErrors(e) {
          (this.status = this._calculateStatus()),
            e && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(e);
        }
        _initObservables() {
          (this.valueChanges = new f.vpe()), (this.statusChanges = new f.vpe());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? eh
            : this.errors
            ? Zl
            : this._hasOwnPendingAsyncValidator ||
              this._anyControlsHaveStatus(Da)
            ? Da
            : this._anyControlsHaveStatus(Zl)
            ? Zl
            : Xd;
        }
        _anyControlsHaveStatus(e) {
          return this._anyControls((t) => t.status === e);
        }
        _anyControlsDirty() {
          return this._anyControls((e) => e.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((e) => e.touched);
        }
        _updatePristine(e = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !e.onlySelf && this._parent._updatePristine(e);
        }
        _updateTouched(e = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !e.onlySelf && this._parent._updateTouched(e);
        }
        _registerOnCollectionChange(e) {
          this._onCollectionChange = e;
        }
        _setUpdateStrategy(e) {
          th(e) && null != e.updateOn && (this._updateOn = e.updateOn);
        }
        _parentMarkedDirty(e) {
          return (
            !e &&
            !(!this._parent || !this._parent.dirty) &&
            !this._parent._anyControlsDirty()
          );
        }
        _find(e) {
          return null;
        }
      }
      class xp extends Bo {
        constructor(e, t, r) {
          super(iI(t), sI(r, t)),
            (this.controls = e),
            this._initObservables(),
            this._setUpdateStrategy(t),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        registerControl(e, t) {
          return this.controls[e]
            ? this.controls[e]
            : ((this.controls[e] = t),
              t.setParent(this),
              t._registerOnCollectionChange(this._onCollectionChange),
              t);
        }
        addControl(e, t, r = {}) {
          this.registerControl(e, t),
            this.updateValueAndValidity({ emitEvent: r.emitEvent }),
            this._onCollectionChange();
        }
        removeControl(e, t = {}) {
          this.controls[e] &&
            this.controls[e]._registerOnCollectionChange(() => {}),
            delete this.controls[e],
            this.updateValueAndValidity({ emitEvent: t.emitEvent }),
            this._onCollectionChange();
        }
        setControl(e, t, r = {}) {
          this.controls[e] &&
            this.controls[e]._registerOnCollectionChange(() => {}),
            delete this.controls[e],
            t && this.registerControl(e, t),
            this.updateValueAndValidity({ emitEvent: r.emitEvent }),
            this._onCollectionChange();
        }
        contains(e) {
          return this.controls.hasOwnProperty(e) && this.controls[e].enabled;
        }
        setValue(e, t = {}) {
          aI(this, 0, e),
            Object.keys(e).forEach((r) => {
              WT(this, !0, r),
                this.controls[r].setValue(e[r], {
                  onlySelf: !0,
                  emitEvent: t.emitEvent,
                });
            }),
            this.updateValueAndValidity(t);
        }
        patchValue(e, t = {}) {
          null != e &&
            (Object.keys(e).forEach((r) => {
              const i = this.controls[r];
              i && i.patchValue(e[r], { onlySelf: !0, emitEvent: t.emitEvent });
            }),
            this.updateValueAndValidity(t));
        }
        reset(e = {}, t = {}) {
          this._forEachChild((r, i) => {
            r.reset(e[i], { onlySelf: !0, emitEvent: t.emitEvent });
          }),
            this._updatePristine(t),
            this._updateTouched(t),
            this.updateValueAndValidity(t);
        }
        getRawValue() {
          return this._reduceChildren(
            {},
            (e, t, r) => ((e[r] = t.getRawValue()), e)
          );
        }
        _syncPendingControls() {
          let e = this._reduceChildren(
            !1,
            (t, r) => !!r._syncPendingControls() || t
          );
          return e && this.updateValueAndValidity({ onlySelf: !0 }), e;
        }
        _forEachChild(e) {
          Object.keys(this.controls).forEach((t) => {
            const r = this.controls[t];
            r && e(r, t);
          });
        }
        _setUpControls() {
          this._forEachChild((e) => {
            e.setParent(this),
              e._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(e) {
          for (const [t, r] of Object.entries(this.controls))
            if (this.contains(t) && e(r)) return !0;
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (t, r, i) => ((r.enabled || this.disabled) && (t[i] = r.value), t)
          );
        }
        _reduceChildren(e, t) {
          let r = e;
          return (
            this._forEachChild((i, a) => {
              r = t(r, i, a);
            }),
            r
          );
        }
        _allControlsDisabled() {
          for (const e of Object.keys(this.controls))
            if (this.controls[e].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _find(e) {
          return this.controls.hasOwnProperty(e) ? this.controls[e] : null;
        }
      }
      function nh(n, e) {
        kp(n, e),
          e.valueAccessor.writeValue(n.value),
          n.disabled && e.valueAccessor.setDisabledState?.(!0),
          (function uI(n, e) {
            e.valueAccessor.registerOnChange((t) => {
              (n._pendingValue = t),
                (n._pendingChange = !0),
                (n._pendingDirty = !0),
                "change" === n.updateOn && Lp(n, e);
            });
          })(n, e),
          (function oO(n, e) {
            const t = (r, i) => {
              e.valueAccessor.writeValue(r), i && e.viewToModelUpdate(r);
            };
            n.registerOnChange(t),
              e._registerOnDestroy(() => {
                n._unregisterOnChange(t);
              });
          })(n, e),
          (function lI(n, e) {
            e.valueAccessor.registerOnTouched(() => {
              (n._pendingTouched = !0),
                "blur" === n.updateOn && n._pendingChange && Lp(n, e),
                "submit" !== n.updateOn && n.markAsTouched();
            });
          })(n, e),
          (function ZT(n, e) {
            if (e.valueAccessor.setDisabledState) {
              const t = (r) => {
                e.valueAccessor.setDisabledState(r);
              };
              n.registerOnDisabledChange(t),
                e._registerOnDestroy(() => {
                  n._unregisterOnDisabledChange(t);
                });
            }
          })(n, e);
      }
      function Pp(n, e, t = !0) {
        const r = () => {};
        e.valueAccessor &&
          (e.valueAccessor.registerOnChange(r),
          e.valueAccessor.registerOnTouched(r)),
          Fp(n, e),
          n &&
            (e._invokeOnDestroyCallbacks(),
            n._registerOnCollectionChange(() => {}));
      }
      function Op(n, e) {
        n.forEach((t) => {
          t.registerOnValidatorChange && t.registerOnValidatorChange(e);
        });
      }
      function kp(n, e) {
        const t = LT(n);
        null !== e.validator
          ? n.setValidators(Iy(t, e.validator))
          : "function" == typeof t && n.setValidators([t]);
        const r = Cy(n);
        null !== e.asyncValidator
          ? n.setAsyncValidators(Iy(r, e.asyncValidator))
          : "function" == typeof r && n.setAsyncValidators([r]);
        const i = () => n.updateValueAndValidity();
        Op(e._rawValidators, i), Op(e._rawAsyncValidators, i);
      }
      function Fp(n, e) {
        let t = !1;
        if (null !== n) {
          if (null !== e.validator) {
            const i = LT(n);
            if (Array.isArray(i) && i.length > 0) {
              const a = i.filter((l) => l !== e.validator);
              a.length !== i.length && ((t = !0), n.setValidators(a));
            }
          }
          if (null !== e.asyncValidator) {
            const i = Cy(n);
            if (Array.isArray(i) && i.length > 0) {
              const a = i.filter((l) => l !== e.asyncValidator);
              a.length !== i.length && ((t = !0), n.setAsyncValidators(a));
            }
          }
        }
        const r = () => {};
        return Op(e._rawValidators, r), Op(e._rawAsyncValidators, r), t;
      }
      function Lp(n, e) {
        n._pendingDirty && n.markAsDirty(),
          n.setValue(n._pendingValue, { emitModelToViewChange: !1 }),
          e.viewToModelUpdate(n._pendingValue),
          (n._pendingChange = !1);
      }
      function JT(n, e) {
        const t = n.indexOf(e);
        t > -1 && n.splice(t, 1);
      }
      function Py(n) {
        return (
          "object" == typeof n &&
          null !== n &&
          2 === Object.keys(n).length &&
          "value" in n &&
          "disabled" in n
        );
      }
      const Up = class extends Bo {
        constructor(e = null, t, r) {
          super(iI(t), sI(r, t)),
            (this.defaultValue = null),
            (this._onChange = []),
            (this._pendingChange = !1),
            this._applyFormState(e),
            this._setUpdateStrategy(t),
            this._initObservables(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            }),
            th(t) &&
              (t.nonNullable || t.initialValueIsDefault) &&
              (this.defaultValue = Py(e) ? e.value : e);
        }
        setValue(e, t = {}) {
          (this.value = this._pendingValue = e),
            this._onChange.length &&
              !1 !== t.emitModelToViewChange &&
              this._onChange.forEach((r) =>
                r(this.value, !1 !== t.emitViewToModelChange)
              ),
            this.updateValueAndValidity(t);
        }
        patchValue(e, t = {}) {
          this.setValue(e, t);
        }
        reset(e = this.defaultValue, t = {}) {
          this._applyFormState(e),
            this.markAsPristine(t),
            this.markAsUntouched(t),
            this.setValue(this.value, t),
            (this._pendingChange = !1);
        }
        _updateValue() {}
        _anyControls(e) {
          return !1;
        }
        _allControlsDisabled() {
          return this.disabled;
        }
        registerOnChange(e) {
          this._onChange.push(e);
        }
        _unregisterOnChange(e) {
          JT(this._onChange, e);
        }
        registerOnDisabledChange(e) {
          this._onDisabledChange.push(e);
        }
        _unregisterOnDisabledChange(e) {
          JT(this._onDisabledChange, e);
        }
        _forEachChild(e) {}
        _syncPendingControls() {
          return !(
            "submit" !== this.updateOn ||
            (this._pendingDirty && this.markAsDirty(),
            this._pendingTouched && this.markAsTouched(),
            !this._pendingChange) ||
            (this.setValue(this._pendingValue, {
              onlySelf: !0,
              emitModelToViewChange: !1,
            }),
            0)
          );
        }
        _applyFormState(e) {
          Py(e)
            ? ((this.value = this._pendingValue = e.value),
              e.disabled
                ? this.disable({ onlySelf: !0, emitEvent: !1 })
                : this.enable({ onlySelf: !0, emitEvent: !1 }))
            : (this.value = this._pendingValue = e);
        }
      };
      let fI = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵdir = f.lG2({
              type: n,
              selectors: [
                ["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""],
              ],
              hostAttrs: ["novalidate", ""],
            })),
            n
          );
        })(),
        $p = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = f.oAB({ type: n })),
            (n.ɵinj = f.cJS({})),
            n
          );
        })();
      const gI = new f.OlP("NgModelWithFormControlWarning"),
        fO = { provide: mi, useExisting: (0, f.Gpc)(() => Ly) };
      let Ly = (() => {
        class n extends mi {
          constructor(t, r) {
            super(),
              (this.validators = t),
              (this.asyncValidators = r),
              (this.submitted = !1),
              (this._onCollectionChange = () => this._updateDomValue()),
              (this.directives = []),
              (this.form = null),
              (this.ngSubmit = new f.vpe()),
              this._setValidators(t),
              this._setAsyncValidators(r);
          }
          ngOnChanges(t) {
            this._checkFormPresent(),
              t.hasOwnProperty("form") &&
                (this._updateValidators(),
                this._updateDomValue(),
                this._updateRegistrations(),
                (this._oldForm = this.form));
          }
          ngOnDestroy() {
            this.form &&
              (Fp(this.form, this),
              this.form._onCollectionChange === this._onCollectionChange &&
                this.form._registerOnCollectionChange(() => {}));
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          addControl(t) {
            const r = this.form.get(t.path);
            return (
              nh(r, t),
              r.updateValueAndValidity({ emitEvent: !1 }),
              this.directives.push(t),
              r
            );
          }
          getControl(t) {
            return this.form.get(t.path);
          }
          removeControl(t) {
            Pp(t.control || null, t, !1),
              (function xy(n, e) {
                const t = n.indexOf(e);
                t > -1 && n.splice(t, 1);
              })(this.directives, t);
          }
          addFormGroup(t) {
            this._setUpFormContainer(t);
          }
          removeFormGroup(t) {
            this._cleanUpFormContainer(t);
          }
          getFormGroup(t) {
            return this.form.get(t.path);
          }
          addFormArray(t) {
            this._setUpFormContainer(t);
          }
          removeFormArray(t) {
            this._cleanUpFormContainer(t);
          }
          getFormArray(t) {
            return this.form.get(t.path);
          }
          updateModel(t, r) {
            this.form.get(t.path).setValue(r);
          }
          onSubmit(t) {
            return (
              (this.submitted = !0),
              (function Ry(n, e) {
                n._syncPendingControls(),
                  e.forEach((t) => {
                    const r = t.control;
                    "submit" === r.updateOn &&
                      r._pendingChange &&
                      (t.viewToModelUpdate(r._pendingValue),
                      (r._pendingChange = !1));
                  });
              })(this.form, this.directives),
              this.ngSubmit.emit(t),
              !1
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(t) {
            this.form.reset(t), (this.submitted = !1);
          }
          _updateDomValue() {
            this.directives.forEach((t) => {
              const r = t.control,
                i = this.form.get(t.path);
              r !== i &&
                (Pp(r || null, t),
                ((n) => n instanceof Up)(i) && (nh(i, t), (t.control = i)));
            }),
              this.form._updateTreeValidity({ emitEvent: !1 });
          }
          _setUpFormContainer(t) {
            const r = this.form.get(t.path);
            (function Vp(n, e) {
              kp(n, e);
            })(r, t),
              r.updateValueAndValidity({ emitEvent: !1 });
          }
          _cleanUpFormContainer(t) {
            if (this.form) {
              const r = this.form.get(t.path);
              r &&
                (function YT(n, e) {
                  return Fp(n, e);
                })(r, t) &&
                r.updateValueAndValidity({ emitEvent: !1 });
            }
          }
          _updateRegistrations() {
            this.form._registerOnCollectionChange(this._onCollectionChange),
              this._oldForm &&
                this._oldForm._registerOnCollectionChange(() => {});
          }
          _updateValidators() {
            kp(this.form, this), this._oldForm && Fp(this._oldForm, this);
          }
          _checkFormPresent() {}
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.Y36(Gr, 10), f.Y36(ba, 10));
          }),
          (n.ɵdir = f.lG2({
            type: n,
            selectors: [["", "formGroup", ""]],
            hostBindings: function (t, r) {
              1 & t &&
                f.NdJ("submit", function (a) {
                  return r.onSubmit(a);
                })("reset", function () {
                  return r.onReset();
                });
            },
            inputs: { form: ["formGroup", "form"] },
            outputs: { ngSubmit: "ngSubmit" },
            exportAs: ["ngForm"],
            features: [f._Bn([fO]), f.qOj, f.TTD],
          })),
          n
        );
      })();
      const jy = { provide: Vo, useExisting: (0, f.Gpc)(() => Hp) };
      let Hp = (() => {
          class n extends Vo {
            constructor(t, r, i, a, l) {
              super(),
                (this._ngModelWarningConfig = l),
                (this._added = !1),
                (this.update = new f.vpe()),
                (this._ngModelWarningSent = !1),
                (this._parent = t),
                this._setValidators(r),
                this._setAsyncValidators(i),
                (this.valueAccessor = (function My(n, e) {
                  if (!e) return null;
                  let t, r, i;
                  return (
                    Array.isArray(e),
                    e.forEach((a) => {
                      a.constructor === qd
                        ? (t = a)
                        : (function As(n) {
                            return Object.getPrototypeOf(n.constructor) === vu;
                          })(a)
                        ? (r = a)
                        : (i = a);
                    }),
                    i || r || t || null
                  );
                })(0, a));
            }
            set isDisabled(t) {}
            ngOnChanges(t) {
              this._added || this._setUpControl(),
                (function Ql(n, e) {
                  if (!n.hasOwnProperty("model")) return !1;
                  const t = n.model;
                  return !!t.isFirstChange() || !Object.is(e, t.currentValue);
                })(t, this.viewModel) &&
                  ((this.viewModel = this.model),
                  this.formDirective.updateModel(this, this.model));
            }
            ngOnDestroy() {
              this.formDirective && this.formDirective.removeControl(this);
            }
            viewToModelUpdate(t) {
              (this.viewModel = t), this.update.emit(t);
            }
            get path() {
              return (function Np(n, e) {
                return [...e.path, n];
              })(
                null == this.name ? this.name : this.name.toString(),
                this._parent
              );
            }
            get formDirective() {
              return this._parent ? this._parent.formDirective : null;
            }
            _checkParentType() {}
            _setUpControl() {
              this._checkParentType(),
                (this.control = this.formDirective.addControl(this)),
                (this._added = !0);
            }
          }
          return (
            (n._ngModelWarningSentOnce = !1),
            (n.ɵfac = function (t) {
              return new (t || n)(
                f.Y36(mi, 13),
                f.Y36(Gr, 10),
                f.Y36(ba, 10),
                f.Y36(Ss, 10),
                f.Y36(gI, 8)
              );
            }),
            (n.ɵdir = f.lG2({
              type: n,
              selectors: [["", "formControlName", ""]],
              inputs: {
                name: ["formControlName", "name"],
                isDisabled: ["disabled", "isDisabled"],
                model: ["ngModel", "model"],
              },
              outputs: { update: "ngModelChange" },
              features: [f._Bn([jy]), f.qOj, f.TTD],
            })),
            n
          );
        })(),
        uS = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = f.oAB({ type: n })),
            (n.ɵinj = f.cJS({ imports: [$p] })),
            n
          );
        })(),
        DI = (() => {
          class n {
            static withConfig(t) {
              return {
                ngModule: n,
                providers: [
                  { provide: gI, useValue: t.warnOnNgModelWithFormControl },
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = f.oAB({ type: n })),
            (n.ɵinj = f.cJS({ imports: [uS] })),
            n
          );
        })();
      class Kp extends Bo {
        constructor(e, t, r) {
          super(iI(t), sI(r, t)),
            (this.controls = e),
            this._initObservables(),
            this._setUpdateStrategy(t),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        at(e) {
          return this.controls[this._adjustIndex(e)];
        }
        push(e, t = {}) {
          this.controls.push(e),
            this._registerControl(e),
            this.updateValueAndValidity({ emitEvent: t.emitEvent }),
            this._onCollectionChange();
        }
        insert(e, t, r = {}) {
          this.controls.splice(e, 0, t),
            this._registerControl(t),
            this.updateValueAndValidity({ emitEvent: r.emitEvent });
        }
        removeAt(e, t = {}) {
          let r = this._adjustIndex(e);
          r < 0 && (r = 0),
            this.controls[r] &&
              this.controls[r]._registerOnCollectionChange(() => {}),
            this.controls.splice(r, 1),
            this.updateValueAndValidity({ emitEvent: t.emitEvent });
        }
        setControl(e, t, r = {}) {
          let i = this._adjustIndex(e);
          i < 0 && (i = 0),
            this.controls[i] &&
              this.controls[i]._registerOnCollectionChange(() => {}),
            this.controls.splice(i, 1),
            t && (this.controls.splice(i, 0, t), this._registerControl(t)),
            this.updateValueAndValidity({ emitEvent: r.emitEvent }),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(e, t = {}) {
          aI(this, 0, e),
            e.forEach((r, i) => {
              WT(this, !1, i),
                this.at(i).setValue(r, {
                  onlySelf: !0,
                  emitEvent: t.emitEvent,
                });
            }),
            this.updateValueAndValidity(t);
        }
        patchValue(e, t = {}) {
          null != e &&
            (e.forEach((r, i) => {
              this.at(i) &&
                this.at(i).patchValue(r, {
                  onlySelf: !0,
                  emitEvent: t.emitEvent,
                });
            }),
            this.updateValueAndValidity(t));
        }
        reset(e = [], t = {}) {
          this._forEachChild((r, i) => {
            r.reset(e[i], { onlySelf: !0, emitEvent: t.emitEvent });
          }),
            this._updatePristine(t),
            this._updateTouched(t),
            this.updateValueAndValidity(t);
        }
        getRawValue() {
          return this.controls.map((e) => e.getRawValue());
        }
        clear(e = {}) {
          this.controls.length < 1 ||
            (this._forEachChild((t) => t._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity({ emitEvent: e.emitEvent }));
        }
        _adjustIndex(e) {
          return e < 0 ? e + this.length : e;
        }
        _syncPendingControls() {
          let e = this.controls.reduce(
            (t, r) => !!r._syncPendingControls() || t,
            !1
          );
          return e && this.updateValueAndValidity({ onlySelf: !0 }), e;
        }
        _forEachChild(e) {
          this.controls.forEach((t, r) => {
            e(t, r);
          });
        }
        _updateValue() {
          this.value = this.controls
            .filter((e) => e.enabled || this.disabled)
            .map((e) => e.value);
        }
        _anyControls(e) {
          return this.controls.some((t) => t.enabled && e(t));
        }
        _setUpControls() {
          this._forEachChild((e) => this._registerControl(e));
        }
        _allControlsDisabled() {
          for (const e of this.controls) if (e.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(e) {
          e.setParent(this),
            e._registerOnCollectionChange(this._onCollectionChange);
        }
        _find(e) {
          return this.at(e) ?? null;
        }
      }
      function TI(n) {
        return (
          !!n &&
          (void 0 !== n.asyncValidators ||
            void 0 !== n.validators ||
            void 0 !== n.updateOn)
        );
      }
      let cS = (() => {
        class n {
          constructor() {
            this.useNonNullable = !1;
          }
          get nonNullable() {
            const t = new n();
            return (t.useNonNullable = !0), t;
          }
          group(t, r = null) {
            const i = this._reduceControls(t);
            let a = {};
            return (
              TI(r)
                ? (a = r)
                : null !== r &&
                  ((a.validators = r.validator),
                  (a.asyncValidators = r.asyncValidator)),
              new xp(i, a)
            );
          }
          control(t, r, i) {
            let a = {};
            return this.useNonNullable
              ? (TI(r)
                  ? (a = r)
                  : ((a.validators = r), (a.asyncValidators = i)),
                new Up(t, { ...a, nonNullable: !0 }))
              : new Up(t, r, i);
          }
          array(t, r, i) {
            const a = t.map((l) => this._createControl(l));
            return new Kp(a, r, i);
          }
          _reduceControls(t) {
            const r = {};
            return (
              Object.keys(t).forEach((i) => {
                r[i] = this._createControl(t[i]);
              }),
              r
            );
          }
          _createControl(t) {
            return t instanceof Up || t instanceof Bo
              ? t
              : Array.isArray(t)
              ? this.control(
                  t[0],
                  t.length > 1 ? t[1] : null,
                  t.length > 2 ? t[2] : null
                )
              : this.control(t);
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac, providedIn: DI })),
          n
        );
      })();
      class SI {}
      class AI {}
      class to {
        constructor(e) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            e
              ? (this.lazyInit =
                  "string" == typeof e
                    ? () => {
                        (this.headers = new Map()),
                          e.split("\n").forEach((t) => {
                            const r = t.indexOf(":");
                            if (r > 0) {
                              const i = t.slice(0, r),
                                a = i.toLowerCase(),
                                l = t.slice(r + 1).trim();
                              this.maybeSetNormalizedName(i, a),
                                this.headers.has(a)
                                  ? this.headers.get(a).push(l)
                                  : this.headers.set(a, [l]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.keys(e).forEach((t) => {
                            let r = e[t];
                            const i = t.toLowerCase();
                            "string" == typeof r && (r = [r]),
                              r.length > 0 &&
                                (this.headers.set(i, r),
                                this.maybeSetNormalizedName(t, i));
                          });
                      })
              : (this.headers = new Map());
        }
        has(e) {
          return this.init(), this.headers.has(e.toLowerCase());
        }
        get(e) {
          this.init();
          const t = this.headers.get(e.toLowerCase());
          return t && t.length > 0 ? t[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(e) {
          return this.init(), this.headers.get(e.toLowerCase()) || null;
        }
        append(e, t) {
          return this.clone({ name: e, value: t, op: "a" });
        }
        set(e, t) {
          return this.clone({ name: e, value: t, op: "s" });
        }
        delete(e, t) {
          return this.clone({ name: e, value: t, op: "d" });
        }
        maybeSetNormalizedName(e, t) {
          this.normalizedNames.has(t) || this.normalizedNames.set(t, e);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof to
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach((e) => this.applyUpdate(e)),
              (this.lazyUpdate = null)));
        }
        copyFrom(e) {
          e.init(),
            Array.from(e.headers.keys()).forEach((t) => {
              this.headers.set(t, e.headers.get(t)),
                this.normalizedNames.set(t, e.normalizedNames.get(t));
            });
        }
        clone(e) {
          const t = new to();
          return (
            (t.lazyInit =
              this.lazyInit && this.lazyInit instanceof to
                ? this.lazyInit
                : this),
            (t.lazyUpdate = (this.lazyUpdate || []).concat([e])),
            t
          );
        }
        applyUpdate(e) {
          const t = e.name.toLowerCase();
          switch (e.op) {
            case "a":
            case "s":
              let r = e.value;
              if (("string" == typeof r && (r = [r]), 0 === r.length)) return;
              this.maybeSetNormalizedName(e.name, t);
              const i = ("a" === e.op ? this.headers.get(t) : void 0) || [];
              i.push(...r), this.headers.set(t, i);
              break;
            case "d":
              const a = e.value;
              if (a) {
                let l = this.headers.get(t);
                if (!l) return;
                (l = l.filter((h) => -1 === a.indexOf(h))),
                  0 === l.length
                    ? (this.headers.delete(t), this.normalizedNames.delete(t))
                    : this.headers.set(t, l);
              } else this.headers.delete(t), this.normalizedNames.delete(t);
          }
        }
        forEach(e) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((t) =>
              e(this.normalizedNames.get(t), this.headers.get(t))
            );
        }
      }
      class pS {
        encodeKey(e) {
          return RI(e);
        }
        encodeValue(e) {
          return RI(e);
        }
        decodeKey(e) {
          return decodeURIComponent(e);
        }
        decodeValue(e) {
          return decodeURIComponent(e);
        }
      }
      const Yy = /%(\d[a-f0-9])/gi,
        gS = {
          40: "@",
          "3A": ":",
          24: "$",
          "2C": ",",
          "3B": ";",
          "3D": "=",
          "3F": "?",
          "2F": "/",
        };
      function RI(n) {
        return encodeURIComponent(n).replace(Yy, (e, t) => gS[t] ?? e);
      }
      function Qy(n) {
        return `${n}`;
      }
      class jo {
        constructor(e = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = e.encoder || new pS()),
            e.fromString)
          ) {
            if (e.fromObject)
              throw new Error("Cannot specify both fromString and fromObject.");
            this.map = (function no(n, e) {
              const t = new Map();
              return (
                n.length > 0 &&
                  n
                    .replace(/^\?/, "")
                    .split("&")
                    .forEach((i) => {
                      const a = i.indexOf("="),
                        [l, h] =
                          -1 == a
                            ? [e.decodeKey(i), ""]
                            : [
                                e.decodeKey(i.slice(0, a)),
                                e.decodeValue(i.slice(a + 1)),
                              ],
                        m = t.get(l) || [];
                      m.push(h), t.set(l, m);
                    }),
                t
              );
            })(e.fromString, this.encoder);
          } else
            e.fromObject
              ? ((this.map = new Map()),
                Object.keys(e.fromObject).forEach((t) => {
                  const r = e.fromObject[t],
                    i = Array.isArray(r) ? r.map(Qy) : [Qy(r)];
                  this.map.set(t, i);
                }))
              : (this.map = null);
        }
        has(e) {
          return this.init(), this.map.has(e);
        }
        get(e) {
          this.init();
          const t = this.map.get(e);
          return t ? t[0] : null;
        }
        getAll(e) {
          return this.init(), this.map.get(e) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(e, t) {
          return this.clone({ param: e, value: t, op: "a" });
        }
        appendAll(e) {
          const t = [];
          return (
            Object.keys(e).forEach((r) => {
              const i = e[r];
              Array.isArray(i)
                ? i.forEach((a) => {
                    t.push({ param: r, value: a, op: "a" });
                  })
                : t.push({ param: r, value: i, op: "a" });
            }),
            this.clone(t)
          );
        }
        set(e, t) {
          return this.clone({ param: e, value: t, op: "s" });
        }
        delete(e, t) {
          return this.clone({ param: e, value: t, op: "d" });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((e) => {
                const t = this.encoder.encodeKey(e);
                return this.map
                  .get(e)
                  .map((r) => t + "=" + this.encoder.encodeValue(r))
                  .join("&");
              })
              .filter((e) => "" !== e)
              .join("&")
          );
        }
        clone(e) {
          const t = new jo({ encoder: this.encoder });
          return (
            (t.cloneFrom = this.cloneFrom || this),
            (t.updates = (this.updates || []).concat(e)),
            t
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach((e) => this.map.set(e, this.cloneFrom.map.get(e))),
              this.updates.forEach((e) => {
                switch (e.op) {
                  case "a":
                  case "s":
                    const t =
                      ("a" === e.op ? this.map.get(e.param) : void 0) || [];
                    t.push(Qy(e.value)), this.map.set(e.param, t);
                    break;
                  case "d":
                    if (void 0 === e.value) {
                      this.map.delete(e.param);
                      break;
                    }
                    {
                      let r = this.map.get(e.param) || [];
                      const i = r.indexOf(Qy(e.value));
                      -1 !== i && r.splice(i, 1),
                        r.length > 0
                          ? this.map.set(e.param, r)
                          : this.map.delete(e.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class mS {
        constructor() {
          this.map = new Map();
        }
        set(e, t) {
          return this.map.set(e, t), this;
        }
        get(e) {
          return (
            this.map.has(e) || this.map.set(e, e.defaultValue()),
            this.map.get(e)
          );
        }
        delete(e) {
          return this.map.delete(e), this;
        }
        has(e) {
          return this.map.has(e);
        }
        keys() {
          return this.map.keys();
        }
      }
      function Zp(n) {
        return typeof ArrayBuffer < "u" && n instanceof ArrayBuffer;
      }
      function MI(n) {
        return typeof Blob < "u" && n instanceof Blob;
      }
      function xI(n) {
        return typeof FormData < "u" && n instanceof FormData;
      }
      class wu {
        constructor(e, t, r, i) {
          let a;
          if (
            ((this.url = t),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = "json"),
            (this.method = e.toUpperCase()),
            (function _S(n) {
              switch (n) {
                case "DELETE":
                case "GET":
                case "HEAD":
                case "OPTIONS":
                case "JSONP":
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || i
              ? ((this.body = void 0 !== r ? r : null), (a = i))
              : (a = r),
            a &&
              ((this.reportProgress = !!a.reportProgress),
              (this.withCredentials = !!a.withCredentials),
              a.responseType && (this.responseType = a.responseType),
              a.headers && (this.headers = a.headers),
              a.context && (this.context = a.context),
              a.params && (this.params = a.params)),
            this.headers || (this.headers = new to()),
            this.context || (this.context = new mS()),
            this.params)
          ) {
            const l = this.params.toString();
            if (0 === l.length) this.urlWithParams = t;
            else {
              const h = t.indexOf("?");
              this.urlWithParams =
                t + (-1 === h ? "?" : h < t.length - 1 ? "&" : "") + l;
            }
          } else (this.params = new jo()), (this.urlWithParams = t);
        }
        serializeBody() {
          return null === this.body
            ? null
            : Zp(this.body) ||
              MI(this.body) ||
              xI(this.body) ||
              (function Yp(n) {
                return (
                  typeof URLSearchParams < "u" && n instanceof URLSearchParams
                );
              })(this.body) ||
              "string" == typeof this.body
            ? this.body
            : this.body instanceof jo
            ? this.body.toString()
            : "object" == typeof this.body ||
              "boolean" == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || xI(this.body)
            ? null
            : MI(this.body)
            ? this.body.type || null
            : Zp(this.body)
            ? null
            : "string" == typeof this.body
            ? "text/plain"
            : this.body instanceof jo
            ? "application/x-www-form-urlencoded;charset=UTF-8"
            : "object" == typeof this.body ||
              "number" == typeof this.body ||
              "boolean" == typeof this.body
            ? "application/json"
            : null;
        }
        clone(e = {}) {
          const t = e.method || this.method,
            r = e.url || this.url,
            i = e.responseType || this.responseType,
            a = void 0 !== e.body ? e.body : this.body,
            l =
              void 0 !== e.withCredentials
                ? e.withCredentials
                : this.withCredentials,
            h =
              void 0 !== e.reportProgress
                ? e.reportProgress
                : this.reportProgress;
          let m = e.headers || this.headers,
            v = e.params || this.params;
          const b = e.context ?? this.context;
          return (
            void 0 !== e.setHeaders &&
              (m = Object.keys(e.setHeaders).reduce(
                (D, R) => D.set(R, e.setHeaders[R]),
                m
              )),
            e.setParams &&
              (v = Object.keys(e.setParams).reduce(
                (D, R) => D.set(R, e.setParams[R]),
                v
              )),
            new wu(t, r, a, {
              params: v,
              headers: m,
              context: b,
              reportProgress: h,
              responseType: i,
              withCredentials: l,
            })
          );
        }
      }
      var wr = (() => (
        ((wr = wr || {})[(wr.Sent = 0)] = "Sent"),
        (wr[(wr.UploadProgress = 1)] = "UploadProgress"),
        (wr[(wr.ResponseHeader = 2)] = "ResponseHeader"),
        (wr[(wr.DownloadProgress = 3)] = "DownloadProgress"),
        (wr[(wr.Response = 4)] = "Response"),
        (wr[(wr.User = 5)] = "User"),
        wr
      ))();
      class Qp {
        constructor(e, t = 200, r = "OK") {
          (this.headers = e.headers || new to()),
            (this.status = void 0 !== e.status ? e.status : t),
            (this.statusText = e.statusText || r),
            (this.url = e.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class sh extends Qp {
        constructor(e = {}) {
          super(e), (this.type = wr.ResponseHeader);
        }
        clone(e = {}) {
          return new sh({
            headers: e.headers || this.headers,
            status: void 0 !== e.status ? e.status : this.status,
            statusText: e.statusText || this.statusText,
            url: e.url || this.url || void 0,
          });
        }
      }
      class oh extends Qp {
        constructor(e = {}) {
          super(e),
            (this.type = wr.Response),
            (this.body = void 0 !== e.body ? e.body : null);
        }
        clone(e = {}) {
          return new oh({
            body: void 0 !== e.body ? e.body : this.body,
            headers: e.headers || this.headers,
            status: void 0 !== e.status ? e.status : this.status,
            statusText: e.statusText || this.statusText,
            url: e.url || this.url || void 0,
          });
        }
      }
      class yS extends Qp {
        constructor(e) {
          super(e, 0, "Unknown Error"),
            (this.name = "HttpErrorResponse"),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${e.url || "(unknown url)"}`
                : `Http failure response for ${e.url || "(unknown url)"}: ${
                    e.status
                  } ${e.statusText}`),
            (this.error = e.error || null);
        }
      }
      function NI(n, e) {
        return {
          body: e,
          headers: n.headers,
          context: n.context,
          observe: n.observe,
          params: n.params,
          reportProgress: n.reportProgress,
          responseType: n.responseType,
          withCredentials: n.withCredentials,
        };
      }
      let Jp = (() => {
        class n {
          constructor(t) {
            this.handler = t;
          }
          request(t, r, i = {}) {
            let a;
            if (t instanceof wu) a = t;
            else {
              let m, v;
              (m = i.headers instanceof to ? i.headers : new to(i.headers)),
                i.params &&
                  (v =
                    i.params instanceof jo
                      ? i.params
                      : new jo({ fromObject: i.params })),
                (a = new wu(t, r, void 0 !== i.body ? i.body : null, {
                  headers: m,
                  context: i.context,
                  params: v,
                  reportProgress: i.reportProgress,
                  responseType: i.responseType || "json",
                  withCredentials: i.withCredentials,
                }));
            }
            const l = pt(a).pipe(Qi((m) => this.handler.handle(m)));
            if (t instanceof wu || "events" === i.observe) return l;
            const h = l.pipe(hi((m) => m instanceof oh));
            switch (i.observe || "body") {
              case "body":
                switch (a.responseType) {
                  case "arraybuffer":
                    return h.pipe(
                      (0, Ft.U)((m) => {
                        if (null !== m.body && !(m.body instanceof ArrayBuffer))
                          throw new Error("Response is not an ArrayBuffer.");
                        return m.body;
                      })
                    );
                  case "blob":
                    return h.pipe(
                      (0, Ft.U)((m) => {
                        if (null !== m.body && !(m.body instanceof Blob))
                          throw new Error("Response is not a Blob.");
                        return m.body;
                      })
                    );
                  case "text":
                    return h.pipe(
                      (0, Ft.U)((m) => {
                        if (null !== m.body && "string" != typeof m.body)
                          throw new Error("Response is not a string.");
                        return m.body;
                      })
                    );
                  default:
                    return h.pipe((0, Ft.U)((m) => m.body));
                }
              case "response":
                return h;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${i.observe}}`
                );
            }
          }
          delete(t, r = {}) {
            return this.request("DELETE", t, r);
          }
          get(t, r = {}) {
            return this.request("GET", t, r);
          }
          head(t, r = {}) {
            return this.request("HEAD", t, r);
          }
          jsonp(t, r) {
            return this.request("JSONP", t, {
              params: new jo().append(r, "JSONP_CALLBACK"),
              observe: "body",
              responseType: "json",
            });
          }
          options(t, r = {}) {
            return this.request("OPTIONS", t, r);
          }
          patch(t, r, i = {}) {
            return this.request("PATCH", t, NI(i, r));
          }
          post(t, r, i = {}) {
            return this.request("POST", t, NI(i, r));
          }
          put(t, r, i = {}) {
            return this.request("PUT", t, NI(i, r));
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.LFG(SI));
          }),
          (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class vS {
        constructor(e, t) {
          (this.next = e), (this.interceptor = t);
        }
        handle(e) {
          return this.interceptor.intercept(e, this.next);
        }
      }
      const PI = new f.OlP("HTTP_INTERCEPTORS");
      let OI = (() => {
        class n {
          intercept(t, r) {
            return r.handle(t);
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const ev = /^\)\]\}',?\n/;
      let LI = (() => {
        class n {
          constructor(t) {
            this.xhrFactory = t;
          }
          handle(t) {
            if ("JSONP" === t.method)
              throw new Error(
                "Attempted to construct Jsonp request without HttpClientJsonpModule installed."
              );
            return new kr.y((r) => {
              const i = this.xhrFactory.build();
              if (
                (i.open(t.method, t.urlWithParams),
                t.withCredentials && (i.withCredentials = !0),
                t.headers.forEach((F, B) => i.setRequestHeader(F, B.join(","))),
                t.headers.has("Accept") ||
                  i.setRequestHeader(
                    "Accept",
                    "application/json, text/plain, */*"
                  ),
                !t.headers.has("Content-Type"))
              ) {
                const F = t.detectContentTypeHeader();
                null !== F && i.setRequestHeader("Content-Type", F);
              }
              if (t.responseType) {
                const F = t.responseType.toLowerCase();
                i.responseType = "json" !== F ? F : "text";
              }
              const a = t.serializeBody();
              let l = null;
              const h = () => {
                  if (null !== l) return l;
                  const F = i.statusText || "OK",
                    B = new to(i.getAllResponseHeaders()),
                    le =
                      (function FI(n) {
                        return "responseURL" in n && n.responseURL
                          ? n.responseURL
                          : /^X-Request-URL:/m.test(n.getAllResponseHeaders())
                          ? n.getResponseHeader("X-Request-URL")
                          : null;
                      })(i) || t.url;
                  return (
                    (l = new sh({
                      headers: B,
                      status: i.status,
                      statusText: F,
                      url: le,
                    })),
                    l
                  );
                },
                m = () => {
                  let { headers: F, status: B, statusText: le, url: Ee } = h(),
                    dt = null;
                  204 !== B &&
                    (dt =
                      typeof i.response > "u" ? i.responseText : i.response),
                    0 === B && (B = dt ? 200 : 0);
                  let It = B >= 200 && B < 300;
                  if ("json" === t.responseType && "string" == typeof dt) {
                    const Lt = dt;
                    dt = dt.replace(ev, "");
                    try {
                      dt = "" !== dt ? JSON.parse(dt) : null;
                    } catch (St) {
                      (dt = Lt),
                        It && ((It = !1), (dt = { error: St, text: dt }));
                    }
                  }
                  It
                    ? (r.next(
                        new oh({
                          body: dt,
                          headers: F,
                          status: B,
                          statusText: le,
                          url: Ee || void 0,
                        })
                      ),
                      r.complete())
                    : r.error(
                        new yS({
                          error: dt,
                          headers: F,
                          status: B,
                          statusText: le,
                          url: Ee || void 0,
                        })
                      );
                },
                v = (F) => {
                  const { url: B } = h(),
                    le = new yS({
                      error: F,
                      status: i.status || 0,
                      statusText: i.statusText || "Unknown Error",
                      url: B || void 0,
                    });
                  r.error(le);
                };
              let b = !1;
              const D = (F) => {
                  b || (r.next(h()), (b = !0));
                  let B = { type: wr.DownloadProgress, loaded: F.loaded };
                  F.lengthComputable && (B.total = F.total),
                    "text" === t.responseType &&
                      !!i.responseText &&
                      (B.partialText = i.responseText),
                    r.next(B);
                },
                R = (F) => {
                  let B = { type: wr.UploadProgress, loaded: F.loaded };
                  F.lengthComputable && (B.total = F.total), r.next(B);
                };
              return (
                i.addEventListener("load", m),
                i.addEventListener("error", v),
                i.addEventListener("timeout", v),
                i.addEventListener("abort", v),
                t.reportProgress &&
                  (i.addEventListener("progress", D),
                  null !== a &&
                    i.upload &&
                    i.upload.addEventListener("progress", R)),
                i.send(a),
                r.next({ type: wr.Sent }),
                () => {
                  i.removeEventListener("error", v),
                    i.removeEventListener("abort", v),
                    i.removeEventListener("load", m),
                    i.removeEventListener("timeout", v),
                    t.reportProgress &&
                      (i.removeEventListener("progress", D),
                      null !== a &&
                        i.upload &&
                        i.upload.removeEventListener("progress", R)),
                    i.readyState !== i.DONE && i.abort();
                }
              );
            });
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.LFG(Tr));
          }),
          (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const tv = new f.OlP("XSRF_COOKIE_NAME"),
        Iu = new f.OlP("XSRF_HEADER_NAME");
      class VI {}
      let IO = (() => {
          class n {
            constructor(t, r, i) {
              (this.doc = t),
                (this.platform = r),
                (this.cookieName = i),
                (this.lastCookieString = ""),
                (this.lastToken = null),
                (this.parseCount = 0);
            }
            getToken() {
              if ("server" === this.platform) return null;
              const t = this.doc.cookie || "";
              return (
                t !== this.lastCookieString &&
                  (this.parseCount++,
                  (this.lastToken = Jo(t, this.cookieName)),
                  (this.lastCookieString = t)),
                this.lastToken
              );
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(f.LFG(ce), f.LFG(f.Lbi), f.LFG(tv));
            }),
            (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        nv = (() => {
          class n {
            constructor(t, r) {
              (this.tokenService = t), (this.headerName = r);
            }
            intercept(t, r) {
              const i = t.url.toLowerCase();
              if (
                "GET" === t.method ||
                "HEAD" === t.method ||
                i.startsWith("http://") ||
                i.startsWith("https://")
              )
                return r.handle(t);
              const a = this.tokenService.getToken();
              return (
                null !== a &&
                  !t.headers.has(this.headerName) &&
                  (t = t.clone({ headers: t.headers.set(this.headerName, a) })),
                r.handle(t)
              );
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(f.LFG(VI), f.LFG(Iu));
            }),
            (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        CO = (() => {
          class n {
            constructor(t, r) {
              (this.backend = t), (this.injector = r), (this.chain = null);
            }
            handle(t) {
              if (null === this.chain) {
                const r = this.injector.get(PI, []);
                this.chain = r.reduceRight(
                  (i, a) => new vS(i, a),
                  this.backend
                );
              }
              return this.chain.handle(t);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(f.LFG(AI), f.LFG(f.zs3));
            }),
            (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        CS = (() => {
          class n {
            static disable() {
              return {
                ngModule: n,
                providers: [{ provide: nv, useClass: OI }],
              };
            }
            static withOptions(t = {}) {
              return {
                ngModule: n,
                providers: [
                  t.cookieName ? { provide: tv, useValue: t.cookieName } : [],
                  t.headerName ? { provide: Iu, useValue: t.headerName } : [],
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = f.oAB({ type: n })),
            (n.ɵinj = f.cJS({
              providers: [
                nv,
                { provide: PI, useExisting: nv, multi: !0 },
                { provide: VI, useClass: IO },
                { provide: tv, useValue: "XSRF-TOKEN" },
                { provide: Iu, useValue: "X-XSRF-TOKEN" },
              ],
            })),
            n
          );
        })(),
        bS = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = f.oAB({ type: n })),
            (n.ɵinj = f.cJS({
              providers: [
                Jp,
                { provide: SI, useClass: CO },
                LI,
                { provide: AI, useExisting: LI },
              ],
              imports: [
                CS.withOptions({
                  cookieName: "XSRF-TOKEN",
                  headerName: "X-XSRF-TOKEN",
                }),
              ],
            })),
            n
          );
        })();
      var Wr = M(2011),
        rv = M(655),
        Cu = M(5363),
        TS = M(6063);
      class SS extends Ti.x {
        constructor(e = 1 / 0, t = 1 / 0, r = TS.l) {
          super(),
            (this._bufferSize = e),
            (this._windowTime = t),
            (this._timestampProvider = r),
            (this._buffer = []),
            (this._infiniteTimeWindow = !0),
            (this._infiniteTimeWindow = t === 1 / 0),
            (this._bufferSize = Math.max(1, e)),
            (this._windowTime = Math.max(1, t));
        }
        next(e) {
          const {
            isStopped: t,
            _buffer: r,
            _infiniteTimeWindow: i,
            _timestampProvider: a,
            _windowTime: l,
          } = this;
          t || (r.push(e), !i && r.push(a.now() + l)),
            this._trimBuffer(),
            super.next(e);
        }
        _subscribe(e) {
          this._throwIfClosed(), this._trimBuffer();
          const t = this._innerSubscribe(e),
            { _infiniteTimeWindow: r, _buffer: i } = this,
            a = i.slice();
          for (let l = 0; l < a.length && !e.closed; l += r ? 1 : 2)
            e.next(a[l]);
          return this._checkFinalizedStatuses(e), t;
        }
        _trimBuffer() {
          const {
              _bufferSize: e,
              _timestampProvider: t,
              _buffer: r,
              _infiniteTimeWindow: i,
            } = this,
            a = (i ? 1 : 2) * e;
          if ((e < 1 / 0 && a < r.length && r.splice(0, r.length - a), !i)) {
            const l = t.now();
            let h = 0;
            for (let m = 1; m < r.length && r[m] <= l; m += 2) h = m;
            h && r.splice(0, h + 1);
          }
        }
      }
      var AS = M(3099);
      function iv(n, e, t) {
        let r,
          i = !1;
        return (
          n && "object" == typeof n
            ? ({
                bufferSize: r = 1 / 0,
                windowTime: e = 1 / 0,
                refCount: i = !1,
                scheduler: t,
              } = n)
            : (r = n ?? 1 / 0),
          (0, AS.B)({
            connector: () => new SS(r, e, t),
            resetOnError: !0,
            resetOnComplete: !1,
            resetOnRefCountZero: i,
          })
        );
      }
      var ot = M(4027),
        eg = M(7982),
        tg = M(6451);
      function Ra(n, e) {
        return (0, zs.m)(e) ? Wn(() => n, e) : Wn(() => n);
      }
      var UI = M(9468),
        gr = M(5867);
      class ki {
        constructor(e) {
          return e;
        }
      }
      class ro {
        constructor() {
          return (0, gr.C6)();
        }
      }
      const is = new f.OlP("angularfire2._apps"),
        ah = {
          provide: ki,
          useFactory: function RS(n) {
            return n && 1 === n.length ? n[0] : new ki((0, gr.Mq)());
          },
          deps: [[new f.FiY(), is]],
        },
        Jr = { provide: ro, deps: [[new f.FiY(), is]] };
      function bu(n) {
        return (e, t) => {
          const r = e.runOutsideAngular(() => n(t));
          return new ki(r);
        };
      }
      let ng = (() => {
        class n {
          constructor(t) {
            (0, gr.KN)("angularfire", ot.q4.full, "core"),
              (0, gr.KN)("angularfire", ot.q4.full, "app"),
              (0, gr.KN)("angular", f.q4F.full, t.toString());
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.LFG(f.Lbi));
          }),
          (n.ɵmod = f.oAB({ type: n })),
          (n.ɵinj = f.cJS({ providers: [ah, Jr] })),
          n
        );
      })();
      function ss(n, ...e) {
        return {
          ngModule: ng,
          providers: [
            {
              provide: is,
              useFactory: bu(n),
              multi: !0,
              deps: [f.R0b, f.zs3, ot.HU, ...e],
            },
          ],
        };
      }
      const ec = (0, ot.u3)(gr.ZF, !0);
      var Te = M(5861),
        wn = M(9681),
        Fi = M(4859),
        ee = M(2090),
        Li = M(1877);
      const sv = new Map(),
        $I = { activated: !1, tokenObservers: [] },
        HI = { initialized: !1, enabled: !1 };
      function Rr(n) {
        return sv.get(n) || $I;
      }
      function os(n, e) {
        sv.set(n, e);
      }
      function fh() {
        return HI;
      }
      class OS {
        constructor(e, t, r, i, a) {
          if (
            ((this.operation = e),
            (this.retryPolicy = t),
            (this.getWaitDuration = r),
            (this.lowerBound = i),
            (this.upperBound = a),
            (this.pending = null),
            (this.nextErrorWaitInterval = i),
            i > a)
          )
            throw new Error(
              "Proactive refresh lower bound greater than upper bound!"
            );
        }
        start() {
          (this.nextErrorWaitInterval = this.lowerBound),
            this.process(!0).catch(() => {});
        }
        stop() {
          this.pending &&
            (this.pending.reject("cancelled"), (this.pending = null));
        }
        isRunning() {
          return !!this.pending;
        }
        process(e) {
          var t = this;
          return (0, Te.Z)(function* () {
            t.stop();
            try {
              (t.pending = new ee.BH()),
                yield (function av(n) {
                  return new Promise((e) => {
                    setTimeout(e, n);
                  });
                })(t.getNextRun(e)),
                t.pending.resolve(),
                yield t.pending.promise,
                (t.pending = new ee.BH()),
                yield t.operation(),
                t.pending.resolve(),
                yield t.pending.promise,
                t.process(!0).catch(() => {});
            } catch (r) {
              t.retryPolicy(r) ? t.process(!1).catch(() => {}) : t.stop();
            }
          })();
        }
        getNextRun(e) {
          if (e)
            return (
              (this.nextErrorWaitInterval = this.lowerBound),
              this.getWaitDuration()
            );
          {
            const t = this.nextErrorWaitInterval;
            return (
              (this.nextErrorWaitInterval *= 2),
              this.nextErrorWaitInterval > this.upperBound &&
                (this.nextErrorWaitInterval = this.upperBound),
              t
            );
          }
        }
      }
      const _i = new ee.LL("appCheck", "AppCheck", {
        "already-initialized":
          "You have already called initializeAppCheck() for FirebaseApp {$appName} with different options. To avoid this error, call initializeAppCheck() with the same options as when it was originally called. This will return the already initialized instance.",
        "use-before-activation":
          "App Check is being used before initializeAppCheck() is called for FirebaseApp {$appName}. Call initializeAppCheck() before instantiating other Firebase services.",
        "fetch-network-error":
          "Fetch failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.",
        "fetch-parse-error":
          "Fetch client could not parse response. Original error: {$originalErrorMessage}.",
        "fetch-status-error":
          "Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.",
        "storage-open":
          "Error thrown when opening storage. Original error: {$originalErrorMessage}.",
        "storage-get":
          "Error thrown when reading from storage. Original error: {$originalErrorMessage}.",
        "storage-set":
          "Error thrown when writing to storage. Original error: {$originalErrorMessage}.",
        "recaptcha-error": "ReCAPTCHA error.",
        throttled:
          "Requests throttled due to {$httpStatus} error. Attempts allowed again after {$time}",
      });
      function ph(n) {
        if (!Rr(n).activated)
          throw _i.create("use-before-activation", { appName: n.name });
      }
      function mh(n, e) {
        return _h.apply(this, arguments);
      }
      function _h() {
        return (_h = (0, Te.Z)(function* ({ url: n, body: e }, t) {
          var r, i;
          const a = { "Content-Type": "application/json" },
            l = t.getImmediate({ optional: !0 });
          if (l) {
            const F = yield l.getHeartbeatsHeader();
            F && (a["X-Firebase-Client"] = F);
          }
          const h = { method: "POST", body: JSON.stringify(e), headers: a };
          let m, v;
          try {
            m = yield fetch(n, h);
          } catch (F) {
            throw _i.create("fetch-network-error", {
              originalErrorMessage:
                null === (r = F) || void 0 === r ? void 0 : r.message,
            });
          }
          if (200 !== m.status)
            throw _i.create("fetch-status-error", { httpStatus: m.status });
          try {
            v = yield m.json();
          } catch (F) {
            throw _i.create("fetch-parse-error", {
              originalErrorMessage:
                null === (i = F) || void 0 === i ? void 0 : i.message,
            });
          }
          const b = v.ttl.match(/^([\d.]+)(s)$/);
          if (!b || !b[2] || isNaN(Number(b[1])))
            throw _i.create("fetch-parse-error", {
              originalErrorMessage: `ttl field (timeToLive) is not in standard Protobuf Duration format: ${v.ttl}`,
            });
          const D = 1e3 * Number(b[1]),
            R = Date.now();
          return {
            token: v.token,
            expireTimeMillis: R + D,
            issuedAtTimeMillis: R,
          };
        })).apply(this, arguments);
      }
      function lv(n, e) {
        const { projectId: t, appId: r, apiKey: i } = n.options;
        return {
          url: `https://content-firebaseappcheck.googleapis.com/v1/projects/${t}/apps/${r}:exchangeDebugToken?key=${i}`,
          body: { debug_token: e },
        };
      }
      const Tu = "firebase-app-check-store";
      let sg = null;
      function dv() {
        return (
          sg ||
          ((sg = new Promise((n, e) => {
            var t;
            try {
              const r = indexedDB.open("firebase-app-check-database", 1);
              (r.onsuccess = (i) => {
                n(i.target.result);
              }),
                (r.onerror = (i) => {
                  var a;
                  e(
                    _i.create("storage-open", {
                      originalErrorMessage:
                        null === (a = i.target.error) || void 0 === a
                          ? void 0
                          : a.message,
                    })
                  );
                }),
                (r.onupgradeneeded = (i) => {
                  0 === i.oldVersion &&
                    i.target.result.createObjectStore(Tu, {
                      keyPath: "compositeKey",
                    });
                });
            } catch (r) {
              e(
                _i.create("storage-open", {
                  originalErrorMessage:
                    null === (t = r) || void 0 === t ? void 0 : t.message,
                })
              );
            }
          })),
          sg)
        );
      }
      function hv() {
        return (hv = (0, Te.Z)(function* (n, e) {
          const r = (yield dv()).transaction(Tu, "readwrite"),
            a = r.objectStore(Tu).put({ compositeKey: n, value: e });
          return new Promise((l, h) => {
            (a.onsuccess = (m) => {
              l();
            }),
              (r.onerror = (m) => {
                var v;
                h(
                  _i.create("storage-set", {
                    originalErrorMessage:
                      null === (v = m.target.error) || void 0 === v
                        ? void 0
                        : v.message,
                  })
                );
              });
          });
        })).apply(this, arguments);
      }
      const tc = new Li.Yd("@firebase/app-check");
      function gv(n, e) {
        return (0, ee.hl)()
          ? (function ZI(n, e) {
              return (function QI(n, e) {
                return hv.apply(this, arguments);
              })(
                (function pv(n) {
                  return `${n.options.appId}-${n.name}`;
                })(n),
                e
              );
            })(n, e).catch((t) => {
              tc.warn(`Failed to write token to IndexedDB. Error: ${t}`);
            })
          : Promise.resolve();
      }
      function mv() {
        return fh().enabled;
      }
      function FS() {
        return _v.apply(this, arguments);
      }
      function _v() {
        return (_v = (0, Te.Z)(function* () {
          const n = fh();
          if (n.enabled && n.token) return n.token.promise;
          throw Error(
            "\n            Can't get debug token in production mode.\n        "
          );
        })).apply(this, arguments);
      }
      const eC = { error: "UNKNOWN_ERROR" };
      function VS(n) {
        return ee.US.encodeString(JSON.stringify(n), !1);
      }
      function cr(n) {
        return ug.apply(this, arguments);
      }
      function ug() {
        return (ug = (0, Te.Z)(function* (n, e = !1) {
          const t = n.app;
          ph(t);
          const r = Rr(t);
          let a,
            i = r.token;
          if (!i) {
            const m = yield r.cachedTokenPromise;
            m && vh(m) && (i = m);
          }
          if (!e && i && vh(i)) return { token: i.token };
          let h,
            l = !1;
          if (mv()) {
            r.exchangeTokenPromise ||
              ((r.exchangeTokenPromise = mh(
                lv(t, yield FS()),
                n.heartbeatServiceProvider
              ).then((v) => ((r.exchangeTokenPromise = void 0), v))),
              (l = !0));
            const m = yield r.exchangeTokenPromise;
            return (
              yield gv(t, m),
              os(t, Object.assign(Object.assign({}, r), { token: m })),
              { token: m.token }
            );
          }
          try {
            r.exchangeTokenPromise ||
              ((r.exchangeTokenPromise = r.provider
                .getToken()
                .then((m) => ((r.exchangeTokenPromise = void 0), m))),
              (l = !0)),
              (i = yield r.exchangeTokenPromise);
          } catch (m) {
            "appCheck/throttled" === m.code ? tc.warn(m.message) : tc.error(m),
              (a = m);
          }
          return (
            i
              ? ((h = { token: i.token }),
                os(t, Object.assign(Object.assign({}, r), { token: i })),
                yield gv(t, i))
              : (h = nc(a)),
            l && wv(t, h),
            h
          );
        })).apply(this, arguments);
      }
      function vv(n, e) {
        const t = Rr(n),
          r = t.tokenObservers.filter((i) => i.next !== e);
        0 === r.length &&
          t.tokenRefresher &&
          t.tokenRefresher.isRunning() &&
          t.tokenRefresher.stop(),
          os(n, Object.assign(Object.assign({}, t), { tokenObservers: r }));
      }
      function Ev(n) {
        const { app: e } = n,
          t = Rr(e);
        let r = t.tokenRefresher;
        r ||
          ((r = (function US(n) {
            const { app: e } = n;
            return new OS(
              (0, Te.Z)(function* () {
                let r;
                if (
                  ((r = Rr(e).token ? yield cr(n, !0) : yield cr(n)), r.error)
                )
                  throw r.error;
              }),
              () => !0,
              () => {
                const t = Rr(e);
                if (t.token) {
                  let r =
                    t.token.issuedAtTimeMillis +
                    0.5 *
                      (t.token.expireTimeMillis - t.token.issuedAtTimeMillis) +
                    3e5;
                  return (
                    (r = Math.min(r, t.token.expireTimeMillis - 3e5)),
                    Math.max(0, r - Date.now())
                  );
                }
                return 0;
              },
              3e4,
              96e4
            );
          })(n)),
          os(e, Object.assign(Object.assign({}, t), { tokenRefresher: r }))),
          !r.isRunning() && t.isTokenAutoRefreshEnabled && r.start();
      }
      function wv(n, e) {
        const t = Rr(n).tokenObservers;
        for (const r of t)
          try {
            "EXTERNAL" === r.type && null != e.error
              ? r.error(e.error)
              : r.next(e);
          } catch {}
      }
      function vh(n) {
        return n.expireTimeMillis - Date.now() > 0;
      }
      function nc(n) {
        return { token: VS(eC), error: n };
      }
      class BS {
        constructor(e, t) {
          (this.app = e), (this.heartbeatServiceProvider = t);
        }
        _delete() {
          const { tokenObservers: e } = Rr(this.app);
          for (const t of e) vv(this.app, t.next);
          return Promise.resolve();
        }
      }
      const dC = "app-check-internal";
      !(function hC() {
        (0, wn._registerComponent)(
          new Fi.wA(
            "app-check",
            (n) =>
              (function jS(n, e) {
                return new BS(n, e);
              })(
                n.getProvider("app").getImmediate(),
                n.getProvider("heartbeat")
              ),
            "PUBLIC"
          )
            .setInstantiationMode("EXPLICIT")
            .setInstanceCreatedCallback((n, e, t) => {
              n.getProvider(dC).initialize();
            })
        ),
          (0, wn._registerComponent)(
            new Fi.wA(
              dC,
              (n) =>
                (function tC(n) {
                  return {
                    getToken: (e) => cr(n, e),
                    addTokenListener: (e) =>
                      (function yv(n, e, t, r) {
                        const { app: i } = n,
                          a = Rr(i),
                          l = { next: t, error: r, type: e };
                        if (
                          (os(
                            i,
                            Object.assign(Object.assign({}, a), {
                              tokenObservers: [...a.tokenObservers, l],
                            })
                          ),
                          a.token && vh(a.token))
                        ) {
                          const h = a.token;
                          Promise.resolve()
                            .then(() => {
                              t({ token: h.token }), Ev(n);
                            })
                            .catch(() => {});
                        }
                        a.cachedTokenPromise.then(() => Ev(n));
                      })(n, "INTERNAL", e),
                    removeTokenListener: (e) => vv(n.app, e),
                  };
                })(n.getProvider("app-check").getImmediate()),
              "PUBLIC"
            ).setInstantiationMode("EXPLICIT")
          ),
          (0, wn.registerVersion)("@firebase/app-check", "0.5.12");
      })();
      class xs {
        constructor() {
          return (0, ot.vb)("app-check");
        }
      }
      typeof window < "u" && window;
      var gg = M(127);
      const mC = new f.OlP("angularfire2.auth.use-emulator"),
        _C = new f.OlP("angularfire2.auth.settings"),
        yC = new f.OlP("angularfire2.auth.tenant-id"),
        vC = new f.OlP("angularfire2.auth.langugage-code"),
        EC = new f.OlP("angularfire2.auth.use-device-language"),
        wC = new f.OlP("angularfire.auth.persistence"),
        IC = (n, e, t, r, i, a, l, h) =>
          (0, Wr.cc)(
            `${n.name}.auth`,
            "AngularFireAuth",
            n.name,
            () => {
              const m = e.runOutsideAngular(() => n.auth());
              if (
                (t && m.useEmulator(...t),
                r && (m.tenantId = r),
                (m.languageCode = i),
                a && m.useDeviceLanguage(),
                l)
              )
                for (const [v, b] of Object.entries(l)) m.settings[v] = b;
              return h && m.setPersistence(h), m;
            },
            [t, r, i, a, l, h]
          );
      let bv = (() => {
        class n {
          constructor(t, r, i, a, l, h, m, v, b, D, R, F) {
            const B = new Ti.x(),
              le = pt(void 0).pipe(
                (0, Cu.Q)(l.outsideAngular),
                Wn(() =>
                  a.runOutsideAngular(() =>
                    Promise.resolve().then(M.bind(M, 5881))
                  )
                ),
                (0, Ft.U)(() => (0, Wr.on)(t, a, r)),
                (0, Ft.U)((Ee) => IC(Ee, a, h, v, b, D, m, R)),
                iv({ bufferSize: 1, refCount: !1 })
              );
            if (Bf(i))
              this.authState =
                this.user =
                this.idToken =
                this.idTokenResult =
                this.credential =
                  pt(null);
            else {
              le.pipe(Un()).subscribe();
              const dt = le.pipe(
                  Wn((St) =>
                    St.getRedirectResult().then(
                      (rn) => rn,
                      () => null
                    )
                  ),
                  ot.iC,
                  iv({ bufferSize: 1, refCount: !1 })
                ),
                It = le.pipe(
                  Wn(
                    (St) =>
                      new kr.y((rn) => ({
                        unsubscribe: a.runOutsideAngular(() =>
                          St.onAuthStateChanged(
                            (Cn) => rn.next(Cn),
                            (Cn) => rn.error(Cn),
                            () => rn.complete()
                          )
                        ),
                      }))
                  )
                ),
                Lt = le.pipe(
                  Wn(
                    (St) =>
                      new kr.y((rn) => ({
                        unsubscribe: a.runOutsideAngular(() =>
                          St.onIdTokenChanged(
                            (Cn) => rn.next(Cn),
                            (Cn) => rn.error(Cn),
                            () => rn.complete()
                          )
                        ),
                      }))
                  )
                );
              (this.authState = dt.pipe(
                Ra(It),
                (0, UI.R)(l.outsideAngular),
                (0, Cu.Q)(l.insideAngular)
              )),
                (this.user = dt.pipe(
                  Ra(Lt),
                  (0, UI.R)(l.outsideAngular),
                  (0, Cu.Q)(l.insideAngular)
                )),
                (this.idToken = this.user.pipe(
                  Wn((St) => (St ? (0, jn.D)(St.getIdToken()) : pt(null)))
                )),
                (this.idTokenResult = this.user.pipe(
                  Wn((St) => (St ? (0, jn.D)(St.getIdTokenResult()) : pt(null)))
                )),
                (this.credential = (0, tg.T)(
                  dt,
                  B,
                  this.authState.pipe(hi((St) => !St))
                ).pipe(
                  (0, Ft.U)((St) => (St?.user ? St : null)),
                  (0, UI.R)(l.outsideAngular),
                  (0, Cu.Q)(l.insideAngular)
                ));
            }
            return (0, Wr.pX)(this, le, a, {
              spy: {
                apply: (Ee, dt, It) => {
                  (Ee.startsWith("signIn") || Ee.startsWith("createUser")) &&
                    It.then((Lt) => B.next(Lt));
                },
              },
            });
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(
              f.LFG(Wr.Dh),
              f.LFG(Wr.xv, 8),
              f.LFG(f.Lbi),
              f.LFG(f.R0b),
              f.LFG(ot.HU),
              f.LFG(mC, 8),
              f.LFG(_C, 8),
              f.LFG(yC, 8),
              f.LFG(vC, 8),
              f.LFG(EC, 8),
              f.LFG(wC, 8),
              f.LFG(xs, 8)
            );
          }),
          (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac, providedIn: "any" })),
          n
        );
      })();
      function Dv(n, e = Yi.y) {
        return (
          (n = n ?? bC),
          (0, tn.e)((t, r) => {
            let i,
              a = !0;
            t.subscribe(
              (0, pr.x)(r, (l) => {
                const h = e(l);
                (a || !n(i, h)) && ((a = !1), (i = h), r.next(l));
              })
            );
          })
        );
      }
      function bC(n, e) {
        return n === e;
      }
      function wh() {
        return (0, tn.e)((n, e) => {
          let t,
            r = !1;
          n.subscribe(
            (0, pr.x)(e, (i) => {
              const a = t;
              (t = i), r && e.next([a, i]), (r = !0);
            })
          );
        });
      }
      var Tv = M(6457);
      function DC(n) {
        return new kr.y(function (e) {
          return {
            unsubscribe: (0, Tv.v)(
              n,
              e.next.bind(e),
              e.error.bind(e),
              e.complete.bind(e)
            ),
          };
        });
      }
      class Ih {
        constructor(e) {
          return e;
        }
      }
      class rc {
        constructor() {
          return (0, ot.vb)("auth");
        }
      }
      const Av = new f.OlP("angularfire2.auth-instances");
      function sc(n) {
        return (e, t) => {
          const r = e.runOutsideAngular(() => n(t));
          return new Ih(r);
        };
      }
      const kO = { provide: rc, deps: [[new f.FiY(), Av]] },
        Rv = {
          provide: Ih,
          useFactory: function XS(n, e) {
            const t = (0, ot.JM)("auth", n, e);
            return t && new Ih(t);
          },
          deps: [[new f.FiY(), Av], ki],
        };
      let FO = (() => {
        class n {
          constructor() {
            (0, gr.KN)("angularfire", ot.q4.full, "auth");
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = f.oAB({ type: n })),
          (n.ɵinj = f.cJS({ providers: [Rv, kO] })),
          n
        );
      })();
      function SC(n, ...e) {
        return {
          ngModule: FO,
          providers: [
            {
              provide: Av,
              useFactory: sc(n),
              multi: !0,
              deps: [f.R0b, f.zs3, ot.HU, ro, [new f.FiY(), xs], ...e],
            },
          ],
        };
      }
      const AC = (0, ot.u3)(DC, !0),
        RC = (0, ot.u3)(Tv.n, !0);
      class bh {
        constructor(e) {
          return e;
        }
      }
      const MC = "analytics",
        Ov = ot.nk.async,
        gA = (0, ot.u3)(eg.IH, !0),
        oc = (0, ot.u3)(eg.Kz, !0),
        xC = (0, ot.u3)(eg.Iv, !0);
      let Eg = (() => {
        class n {
          constructor(t, r, i) {
            let a;
            (this.disposables = []),
              (0, gr.KN)("angularfire", ot.q4.full, "user-tracking"),
              (this.initialized = r.runOutsideAngular(
                () =>
                  new Promise((l) => {
                    a = l;
                  })
              )),
              Ov().then(() => {
                const l = i.get(bh);
                l
                  ? (this.disposables = [
                      AC(t).subscribe((h) => {
                        xC(l, h?.uid), a();
                      }),
                    ])
                  : a();
              });
          }
          ngOnDestroy() {
            this.disposables.forEach((t) => t.unsubscribe());
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.LFG(Ih), f.LFG(f.R0b), f.LFG(f.zs3));
          }),
          (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const OC = "firebase_screen_id",
        Fv = "outlet",
        ac = "screen_class",
        kC = "screen_name";
      let bA =
        Math.floor(Math.random() * (Math.pow(2, 32) - 1)) - Math.pow(2, 31);
      const Vv = {},
        DA = (n) => {
          const e = [n[ac], n[Fv]].join("#");
          if (Vv.hasOwnProperty(e)) return Vv[e];
          {
            const t = bA++;
            return (Vv[e] = t), t;
          }
        },
        FC = (n, e, t) =>
          n.events.pipe(hi((i) => i instanceof D_)).pipe(
            Wn((i) => {
              var a;
              const h =
                  (null ===
                    (a = n.parseUrl(
                      n.url.replace(/(?:\().+(?:\))/g, (F) =>
                        F.replace("://", ":///")
                      )
                    ).root.children[i.snapshot.outlet]) || void 0 === a
                    ? void 0
                    : a.toString()) || "",
                m = n.routerState.root.children
                  .map((F) => F)
                  .find((F) => F.outlet === i.snapshot.outlet);
              if (!m) return pt(null);
              let v = m;
              for (; v.firstChild; ) v = v.firstChild;
              const b =
                  v.pathFromRoot
                    .map((F) => {
                      var B;
                      return null === (B = F.routeConfig) || void 0 === B
                        ? void 0
                        : B.path;
                    })
                    .filter((F) => F)
                    .join("/") || "/",
                D = {
                  [kC]: b,
                  page_path: `/${h}`,
                  firebase_event_origin: "auto",
                  firebase_screen: b,
                  [Fv]: i.snapshot.outlet,
                };
              e && (D.page_title = e.getTitle());
              let R = m.component;
              if (R) {
                if (R === R_) {
                  let F = i.snapshot;
                  for (; F.firstChild; ) F = F.firstChild;
                  R = F.component;
                }
              } else R = i.snapshot.component;
              if ("string" == typeof R)
                return pt(Object.assign(Object.assign({}, D), { [ac]: R }));
              if (R) {
                const F = t.resolveComponentFactory(R);
                return pt(
                  Object.assign(Object.assign({}, D), { [ac]: F.selector })
                );
              }
              return pt(null);
            }),
            hi((i) => !!i),
            (0, Ft.U)((i) =>
              Object.assign({ firebase_screen_class: i[ac], [OC]: DA(i) }, i)
            ),
            (function CC(n, e, t, r) {
              return (0, tn.e)((i, a) => {
                let l;
                e && "function" != typeof e
                  ? ({ duration: t, element: l, connector: r } = e)
                  : (l = e);
                const h = new Map(),
                  m = (B) => {
                    h.forEach(B), B(a);
                  },
                  v = (B) => m((le) => le.error(B));
                let b = 0,
                  D = !1;
                const R = new pr.Q(
                  a,
                  (B) => {
                    try {
                      const le = n(B);
                      let Ee = h.get(le);
                      if (!Ee) {
                        h.set(le, (Ee = r ? r() : new Ti.x()));
                        const dt = (function F(B, le) {
                          const Ee = new kr.y((dt) => {
                            b++;
                            const It = le.subscribe(dt);
                            return () => {
                              It.unsubscribe(),
                                0 == --b && D && R.unsubscribe();
                            };
                          });
                          return (Ee.key = B), Ee;
                        })(le, Ee);
                        if ((a.next(dt), t)) {
                          const It = (0, pr.x)(
                            Ee,
                            () => {
                              Ee.complete(), It?.unsubscribe();
                            },
                            void 0,
                            void 0,
                            () => h.delete(le)
                          );
                          R.add((0, bo.Xf)(t(dt)).subscribe(It));
                        }
                      }
                      Ee.next(l ? l(B) : B);
                    } catch (le) {
                      v(le);
                    }
                  },
                  () => m((B) => B.complete()),
                  v,
                  () => h.clear(),
                  () => ((D = !0), 0 === b)
                );
                i.subscribe(R);
              });
            })((i) => i[Fv]),
            (0, Hr.z)((i) =>
              i.pipe(
                Dv((a, l) => JSON.stringify(a) === JSON.stringify(l)),
                bl(void 0),
                wh(),
                (0, Ft.U)(([a, l]) =>
                  a
                    ? Object.assign(
                        {
                          firebase_previous_class: a[ac],
                          firebase_previous_screen: a[kC],
                          firebase_previous_id: a[OC],
                        },
                        l
                      )
                    : l
                )
              )
            )
          );
      let Uv = (() => {
        class n {
          constructor(t, r, i, a, l, h) {
            (0, gr.KN)("angularfire", ot.q4.full, "screen-tracking"),
              Ov().then(() => {
                const m = h.get(bh);
                !t ||
                  !m ||
                  a.runOutsideAngular(() => {
                    this.disposable = FC(t, r, i)
                      .pipe(
                        Wn((v) =>
                          (0, rv.mG)(this, void 0, void 0, function* () {
                            return (
                              l && (yield l.initialized),
                              oc(m, "screen_view", v)
                            );
                          })
                        )
                      )
                      .subscribe();
                  });
              });
          }
          ngOnDestroy() {
            this.disposable && this.disposable.unsubscribe();
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(
              f.LFG(Fr, 8),
              f.LFG(hl, 8),
              f.LFG(f._Vd),
              f.LFG(f.R0b),
              f.LFG(Eg, 8),
              f.LFG(f.zs3)
            );
          }),
          (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const wg = new f.OlP("angularfire2.analytics-instances");
      function SA(n) {
        return (e, t) => {
          if (!ot.nk.sync()) return null;
          const r = e.runOutsideAngular(() => n(t));
          return new bh(r);
        };
      }
      const LC = {
          provide: class pA {
            constructor() {
              return (0, ot.vb)(MC);
            }
          },
          deps: [[new f.FiY(), wg]],
        },
        AA = {
          provide: bh,
          useFactory: function TA(n, e) {
            if (!ot.nk.sync()) return null;
            const t = (0, ot.JM)(MC, n, e);
            return t && new bh(t);
          },
          deps: [[new f.FiY(), wg], ki],
        };
      let RA = (() => {
        class n {
          constructor(t, r) {
            (0, gr.KN)("angularfire", ot.q4.full, "analytics");
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.LFG(Uv, 8), f.LFG(Eg, 8));
          }),
          (n.ɵmod = f.oAB({ type: n })),
          (n.ɵinj = f.cJS({
            providers: [
              AA,
              LC,
              { provide: f.ip1, useValue: ot.nk.async, multi: !0 },
            ],
          })),
          n
        );
      })();
      function MA(n, ...e) {
        return {
          ngModule: RA,
          providers: [
            {
              provide: wg,
              useFactory: SA(n),
              multi: !0,
              deps: [f.R0b, f.zs3, ot.HU, ro, ...e],
            },
          ],
        };
      }
      const jv = new f.OlP("angularfire2.analytics.analyticsCollectionEnabled"),
        VC = new f.OlP("angularfire2.analytics.appVersion"),
        $v = new f.OlP("angularfire2.analytics.appName"),
        xA = new f.OlP("angularfire2.analytics.debugMode"),
        NA = new f.OlP("angularfire2.analytics.config"),
        Ig = "dataLayer";
      let lc = (() => {
          class n {
            constructor(t, r, i, a, l, h, m, v, b) {
              if (
                ((this.analyticsInitialized = new Promise(() => {})), tl(m))
              ) {
                window[Ig] = window[Ig] || [];
                const R = (...le) =>
                    "config" === le[0] &&
                    "firebase" === le[2].origin &&
                    ((this.measurementId = le[1]), !0),
                  F = (le) => {
                    window.gtag = (...Ee) => {
                      le && le(...Ee),
                        "event" === Ee[0] &&
                          Ee[2].send_to === this.measurementId &&
                          (a && (Ee[2].app_name = a),
                          i && (Ee[2].app_version = i)),
                        l && typeof console < "u" && console.info(...Ee),
                        (function (...dt) {
                          window[Ig].push(arguments);
                        })(...Ee);
                    };
                  };
                window[Ig].some(R)
                  ? ((this.analyticsInitialized = Promise.resolve()), F())
                  : (this.analyticsInitialized = new Promise((le) => {
                      F((...Ee) => {
                        R(...Ee) && le();
                      });
                    })),
                  h && this.updateConfig(h),
                  l && this.updateConfig({ debug_mode: 1 });
              } else this.analyticsInitialized = Promise.resolve();
              const D = pt(void 0).pipe(
                (0, Cu.Q)(b.outsideAngular),
                Wn(eg.Gb),
                Wn((R) =>
                  R
                    ? v.runOutsideAngular(() => M.e(643).then(M.bind(M, 8643)))
                    : So.E
                ),
                (0, Ft.U)(() =>
                  (0, Wr.cc)(
                    "analytics",
                    "AngularFireAnalytics",
                    t.name,
                    () => {
                      const R = t.analytics();
                      return !1 === r && R.setAnalyticsCollectionEnabled(!1), R;
                    },
                    [t, r, h, l]
                  )
                ),
                iv({ bufferSize: 1, refCount: !1 })
              );
              return (0, Wr.pX)(this, D, v);
            }
            updateConfig(t) {
              return (0, rv.mG)(this, void 0, void 0, function* () {
                yield this.analyticsInitialized,
                  window.gtag(
                    "config",
                    this.measurementId,
                    Object.assign(Object.assign({}, t), { update: !0 })
                  );
              });
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(
                f.LFG(Wr.Ot),
                f.LFG(jv, 8),
                f.LFG(VC, 8),
                f.LFG($v, 8),
                f.LFG(xA, 8),
                f.LFG(NA, 8),
                f.LFG(f.Lbi),
                f.LFG(f.R0b),
                f.LFG(ot.HU)
              );
            }),
            (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac, providedIn: "any" })),
            n
          );
        })(),
        Cg = (() => {
          class n {
            constructor(t, r, i, a) {
              if (
                ((this.disposables = []),
                gg.Z.registerVersion(
                  "angularfire",
                  ot.q4.full,
                  "compat-user-tracking"
                ),
                Bf(r))
              )
                this.initialized = Promise.resolve();
              else {
                let l;
                (this.initialized = a.runOutsideAngular(
                  () => new Promise((h) => (l = h))
                )),
                  (this.disposables = [
                    i.authState.subscribe((h) => {
                      t.setUserId(h?.uid), l();
                    }),
                    i.credential.subscribe((h) => {
                      if (h) {
                        const m = h.user.isAnonymous
                          ? "anonymous"
                          : h.additionalUserInfo.providerId;
                        h.additionalUserInfo.isNewUser &&
                          t.logEvent("sign_up", { method: m }),
                          t.logEvent("login", { method: m });
                      }
                    }),
                  ]);
              }
            }
            ngOnDestroy() {
              this.disposables.forEach((t) => t.unsubscribe());
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(
                f.LFG(lc),
                f.LFG(f.Lbi),
                f.LFG(bv),
                f.LFG(f.R0b)
              );
            }),
            (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Wv = (() => {
          class n {
            constructor(t, r, i, a, l, h) {
              if (
                (gg.Z.registerVersion(
                  "angularfire",
                  ot.q4.full,
                  "compat-screen-tracking"
                ),
                !r || !t)
              )
                return this;
              l.runOutsideAngular(() => {
                this.disposable = FC(r, i, a)
                  .pipe(
                    Wn((m) =>
                      (0, rv.mG)(this, void 0, void 0, function* () {
                        return (
                          h && (yield h.initialized),
                          yield t.logEvent("screen_view", m)
                        );
                      })
                    )
                  )
                  .subscribe();
              });
            }
            ngOnDestroy() {
              this.disposable && this.disposable.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(
                f.LFG(lc),
                f.LFG(Fr, 8),
                f.LFG(hl, 8),
                f.LFG(f._Vd),
                f.LFG(f.R0b),
                f.LFG(Cg, 8)
              );
            }),
            (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        kA = (() => {
          class n {
            constructor(t, r, i) {
              gg.Z.registerVersion(
                "angularfire",
                ot.q4.full,
                "analytics-compat"
              ),
                t.app.then(() => {});
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(f.LFG(lc), f.LFG(Wv, 8), f.LFG(Cg, 8));
            }),
            (n.ɵmod = f.oAB({ type: n })),
            (n.ɵinj = f.cJS({ providers: [lc] })),
            n
          );
        })();
      var Et,
        FA = M(4986),
        jC = (M(5881), M(3942)),
        $C =
          typeof globalThis < "u"
            ? globalThis
            : typeof window < "u"
            ? window
            : typeof global < "u"
            ? global
            : typeof self < "u"
            ? self
            : {},
        so = {},
        zv = zv || {},
        Xt = $C || self;
      function bg() {}
      function qv(n) {
        var e = typeof n;
        return (
          "array" ==
            (e =
              "object" != e
                ? e
                : n
                ? Array.isArray(n)
                  ? "array"
                  : e
                : "null") ||
          ("object" == e && "number" == typeof n.length)
        );
      }
      function cc(n) {
        var e = typeof n;
        return ("object" == e && null != n) || "function" == e;
      }
      var Dg = "closure_uid_" + ((1e9 * Math.random()) >>> 0),
        LA = 0;
      function VA(n, e, t) {
        return n.call.apply(n.bind, arguments);
      }
      function dk(n, e, t) {
        if (!n) throw Error();
        if (2 < arguments.length) {
          var r = Array.prototype.slice.call(arguments, 2);
          return function () {
            var i = Array.prototype.slice.call(arguments);
            return Array.prototype.unshift.apply(i, r), n.apply(e, i);
          };
        }
        return function () {
          return n.apply(e, arguments);
        };
      }
      function Xr(n, e, t) {
        return (Xr =
          Function.prototype.bind &&
          -1 != Function.prototype.bind.toString().indexOf("native code")
            ? VA
            : dk).apply(null, arguments);
      }
      function Tg(n, e) {
        var t = Array.prototype.slice.call(arguments, 1);
        return function () {
          var r = t.slice();
          return r.push.apply(r, arguments), n.apply(this, r);
        };
      }
      function zr(n, e) {
        function t() {}
        (t.prototype = e.prototype),
          (n.Z = e.prototype),
          (n.prototype = new t()),
          (n.prototype.constructor = n),
          (n.Vb = function (r, i, a) {
            for (
              var l = Array(arguments.length - 2), h = 2;
              h < arguments.length;
              h++
            )
              l[h - 2] = arguments[h];
            return e.prototype[i].apply(r, l);
          });
      }
      function $o() {
        (this.s = this.s), (this.o = this.o);
      }
      var UA = {};
      ($o.prototype.s = !1),
        ($o.prototype.na = function () {
          if (!this.s && ((this.s = !0), this.M(), 0)) {
            var n = (function ck(n) {
              return (
                (Object.prototype.hasOwnProperty.call(n, Dg) && n[Dg]) ||
                (n[Dg] = ++LA)
              );
            })(this);
            delete UA[n];
          }
        }),
        ($o.prototype.M = function () {
          if (this.o) for (; this.o.length; ) this.o.shift()();
        });
      const GC = Array.prototype.indexOf
          ? function (n, e) {
              return Array.prototype.indexOf.call(n, e, void 0);
            }
          : function (n, e) {
              if ("string" == typeof n)
                return "string" != typeof e || 1 != e.length
                  ? -1
                  : n.indexOf(e, 0);
              for (let t = 0; t < n.length; t++)
                if (t in n && n[t] === e) return t;
              return -1;
            },
        WC = Array.prototype.forEach
          ? function (n, e, t) {
              Array.prototype.forEach.call(n, e, t);
            }
          : function (n, e, t) {
              const r = n.length,
                i = "string" == typeof n ? n.split("") : n;
              for (let a = 0; a < r; a++) a in i && e.call(t, i[a], a, n);
            };
      function zC(n) {
        return Array.prototype.concat.apply([], arguments);
      }
      function Kv(n) {
        const e = n.length;
        if (0 < e) {
          const t = Array(e);
          for (let r = 0; r < e; r++) t[r] = n[r];
          return t;
        }
        return [];
      }
      function Sg(n) {
        return /^[\s\xa0]*$/.test(n);
      }
      var ei,
        qC = String.prototype.trim
          ? function (n) {
              return n.trim();
            }
          : function (n) {
              return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(n)[1];
            };
      function Mr(n, e) {
        return -1 != n.indexOf(e);
      }
      function Ag(n, e) {
        return n < e ? -1 : n > e ? 1 : 0;
      }
      e: {
        var Zv = Xt.navigator;
        if (Zv) {
          var Yv = Zv.userAgent;
          if (Yv) {
            ei = Yv;
            break e;
          }
        }
        ei = "";
      }
      function Rg(n, e, t) {
        for (const r in n) e.call(t, n[r], r, n);
      }
      function Qv(n) {
        const e = {};
        for (const t in n) e[t] = n[t];
        return e;
      }
      var KC =
        "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(
          " "
        );
      function jA(n, e) {
        let t, r;
        for (let i = 1; i < arguments.length; i++) {
          for (t in ((r = arguments[i]), r)) n[t] = r[t];
          for (let a = 0; a < KC.length; a++)
            (t = KC[a]),
              Object.prototype.hasOwnProperty.call(r, t) && (n[t] = r[t]);
        }
      }
      function Mg(n) {
        return Mg[" "](n), n;
      }
      Mg[" "] = bg;
      var xg,
        n,
        HA = Mr(ei, "Opera"),
        dc = Mr(ei, "Trident") || Mr(ei, "MSIE"),
        ZC = Mr(ei, "Edge"),
        Su = ZC || dc,
        YC =
          Mr(ei, "Gecko") &&
          !(Mr(ei.toLowerCase(), "webkit") && !Mr(ei, "Edge")) &&
          !(Mr(ei, "Trident") || Mr(ei, "MSIE")) &&
          !Mr(ei, "Edge"),
        Jv = Mr(ei.toLowerCase(), "webkit") && !Mr(ei, "Edge");
      function Ns() {
        var n = Xt.document;
        return n ? n.documentMode : void 0;
      }
      e: {
        var Dh = "",
          Au =
            ((n = ei),
            YC
              ? /rv:([^\);]+)(\)|;)/.exec(n)
              : ZC
              ? /Edge\/([\d\.]+)/.exec(n)
              : dc
              ? /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(n)
              : Jv
              ? /WebKit\/(\S+)/.exec(n)
              : HA
              ? /(?:Version)[ \/]?(\S+)/.exec(n)
              : void 0);
        if ((Au && (Dh = Au ? Au[1] : ""), dc)) {
          var Xv = Ns();
          if (null != Xv && Xv > parseFloat(Dh)) {
            xg = String(Xv);
            break e;
          }
        }
        xg = Dh;
      }
      var GA = {};
      var zA = (Xt.document && dc && (Ns() || parseInt(xg, 10))) || void 0,
        qA = (function () {
          if (!Xt.addEventListener || !Object.defineProperty) return !1;
          var n = !1,
            e = Object.defineProperty({}, "passive", {
              get: function () {
                n = !0;
              },
            });
          try {
            Xt.addEventListener("test", bg, e),
              Xt.removeEventListener("test", bg, e);
          } catch {}
          return n;
        })();
      function qr(n, e) {
        (this.type = n),
          (this.g = this.target = e),
          (this.defaultPrevented = !1);
      }
      function fc(n, e) {
        if (
          (qr.call(this, n ? n.type : ""),
          (this.relatedTarget = this.g = this.target = null),
          (this.button =
            this.screenY =
            this.screenX =
            this.clientY =
            this.clientX =
              0),
          (this.key = ""),
          (this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1),
          (this.state = null),
          (this.pointerId = 0),
          (this.pointerType = ""),
          (this.i = null),
          n)
        ) {
          var t = (this.type = n.type),
            r =
              n.changedTouches && n.changedTouches.length
                ? n.changedTouches[0]
                : null;
          if (
            ((this.target = n.target || n.srcElement),
            (this.g = e),
            (e = n.relatedTarget))
          ) {
            if (YC) {
              e: {
                try {
                  Mg(e.nodeName);
                  var i = !0;
                  break e;
                } catch {}
                i = !1;
              }
              i || (e = null);
            }
          } else
            "mouseover" == t
              ? (e = n.fromElement)
              : "mouseout" == t && (e = n.toElement);
          (this.relatedTarget = e),
            r
              ? ((this.clientX = void 0 !== r.clientX ? r.clientX : r.pageX),
                (this.clientY = void 0 !== r.clientY ? r.clientY : r.pageY),
                (this.screenX = r.screenX || 0),
                (this.screenY = r.screenY || 0))
              : ((this.clientX = void 0 !== n.clientX ? n.clientX : n.pageX),
                (this.clientY = void 0 !== n.clientY ? n.clientY : n.pageY),
                (this.screenX = n.screenX || 0),
                (this.screenY = n.screenY || 0)),
            (this.button = n.button),
            (this.key = n.key || ""),
            (this.ctrlKey = n.ctrlKey),
            (this.altKey = n.altKey),
            (this.shiftKey = n.shiftKey),
            (this.metaKey = n.metaKey),
            (this.pointerId = n.pointerId || 0),
            (this.pointerType =
              "string" == typeof n.pointerType
                ? n.pointerType
                : eE[n.pointerType] || ""),
            (this.state = n.state),
            (this.i = n),
            n.defaultPrevented && fc.Z.h.call(this);
        }
      }
      (qr.prototype.h = function () {
        this.defaultPrevented = !0;
      }),
        zr(fc, qr);
      var eE = { 2: "touch", 3: "pen", 4: "mouse" };
      fc.prototype.h = function () {
        fc.Z.h.call(this);
        var n = this.i;
        n.preventDefault ? n.preventDefault() : (n.returnValue = !1);
      };
      var pc = "closure_listenable_" + ((1e6 * Math.random()) | 0),
        KA = 0;
      function ZA(n, e, t, r, i) {
        (this.listener = n),
          (this.proxy = null),
          (this.src = e),
          (this.type = t),
          (this.capture = !!r),
          (this.ia = i),
          (this.key = ++KA),
          (this.ca = this.fa = !1);
      }
      function tE(n) {
        (n.ca = !0),
          (n.listener = null),
          (n.proxy = null),
          (n.src = null),
          (n.ia = null);
      }
      function gc(n) {
        (this.src = n), (this.g = {}), (this.h = 0);
      }
      function Sh(n, e) {
        var t = e.type;
        if (t in n.g) {
          var a,
            r = n.g[t],
            i = GC(r, e);
          (a = 0 <= i) && Array.prototype.splice.call(r, i, 1),
            a && (tE(e), 0 == n.g[t].length && (delete n.g[t], n.h--));
        }
      }
      function Ng(n, e, t, r) {
        for (var i = 0; i < n.length; ++i) {
          var a = n[i];
          if (!a.ca && a.listener == e && a.capture == !!t && a.ia == r)
            return i;
        }
        return -1;
      }
      gc.prototype.add = function (n, e, t, r, i) {
        var a = n.toString();
        (n = this.g[a]) || ((n = this.g[a] = []), this.h++);
        var l = Ng(n, e, r, i);
        return (
          -1 < l
            ? ((e = n[l]), t || (e.fa = !1))
            : (((e = new ZA(e, this.src, a, !!r, i)).fa = t), n.push(e)),
          e
        );
      };
      var Ah = "closure_lm_" + ((1e6 * Math.random()) | 0),
        Rh = {};
      function QC(n, e, t, r, i) {
        if (r && r.once) return XC(n, e, t, r, i);
        if (Array.isArray(e)) {
          for (var a = 0; a < e.length; a++) QC(n, e[a], t, r, i);
          return null;
        }
        return (
          (t = iE(t)),
          n && n[pc]
            ? n.N(e, t, cc(r) ? !!r.capture : !!r, i)
            : JC(n, e, t, !1, r, i)
        );
      }
      function JC(n, e, t, r, i, a) {
        if (!e) throw Error("Invalid event type");
        var l = cc(i) ? !!i.capture : !!i,
          h = Pg(n);
        if ((h || (n[Ah] = h = new gc(n)), (t = h.add(e, t, r, l, a)).proxy))
          return t;
        if (
          ((r = (function YA() {
            var e = QA;
            return function n(t) {
              return e.call(n.src, n.listener, t);
            };
          })()),
          (t.proxy = r),
          (r.src = n),
          (r.listener = t),
          n.addEventListener)
        )
          qA || (i = l),
            void 0 === i && (i = !1),
            n.addEventListener(e.toString(), r, i);
        else if (n.attachEvent) n.attachEvent(rE(e.toString()), r);
        else {
          if (!n.addListener || !n.removeListener)
            throw Error("addEventListener and attachEvent are unavailable.");
          n.addListener(r);
        }
        return t;
      }
      function XC(n, e, t, r, i) {
        if (Array.isArray(e)) {
          for (var a = 0; a < e.length; a++) XC(n, e[a], t, r, i);
          return null;
        }
        return (
          (t = iE(t)),
          n && n[pc]
            ? n.O(e, t, cc(r) ? !!r.capture : !!r, i)
            : JC(n, e, t, !0, r, i)
        );
      }
      function nE(n, e, t, r, i) {
        if (Array.isArray(e))
          for (var a = 0; a < e.length; a++) nE(n, e[a], t, r, i);
        else
          (r = cc(r) ? !!r.capture : !!r),
            (t = iE(t)),
            n && n[pc]
              ? ((n = n.i),
                (e = String(e).toString()) in n.g &&
                  -1 < (t = Ng((a = n.g[e]), t, r, i)) &&
                  (tE(a[t]),
                  Array.prototype.splice.call(a, t, 1),
                  0 == a.length && (delete n.g[e], n.h--)))
              : n &&
                (n = Pg(n)) &&
                ((e = n.g[e.toString()]),
                (n = -1),
                e && (n = Ng(e, t, r, i)),
                (t = -1 < n ? e[n] : null) && Mh(t));
      }
      function Mh(n) {
        if ("number" != typeof n && n && !n.ca) {
          var e = n.src;
          if (e && e[pc]) Sh(e.i, n);
          else {
            var t = n.type,
              r = n.proxy;
            e.removeEventListener
              ? e.removeEventListener(t, r, n.capture)
              : e.detachEvent
              ? e.detachEvent(rE(t), r)
              : e.addListener && e.removeListener && e.removeListener(r),
              (t = Pg(e))
                ? (Sh(t, n), 0 == t.h && ((t.src = null), (e[Ah] = null)))
                : tE(n);
          }
        }
      }
      function rE(n) {
        return n in Rh ? Rh[n] : (Rh[n] = "on" + n);
      }
      function QA(n, e) {
        if (n.ca) n = !0;
        else {
          e = new fc(e, this);
          var t = n.listener,
            r = n.ia || n.src;
          n.fa && Mh(n), (n = t.call(r, e));
        }
        return n;
      }
      function Pg(n) {
        return (n = n[Ah]) instanceof gc ? n : null;
      }
      var Og = "__closure_events_fn_" + ((1e9 * Math.random()) >>> 0);
      function iE(n) {
        return "function" == typeof n
          ? n
          : (n[Og] ||
              (n[Og] = function (e) {
                return n.handleEvent(e);
              }),
            n[Og]);
      }
      function xr() {
        $o.call(this),
          (this.i = new gc(this)),
          (this.P = this),
          (this.I = null);
      }
      function Lr(n, e) {
        var t,
          r = n.I;
        if (r) for (t = []; r; r = r.I) t.push(r);
        if (((n = n.P), (r = e.type || e), "string" == typeof e))
          e = new qr(e, n);
        else if (e instanceof qr) e.target = e.target || n;
        else {
          var i = e;
          jA((e = new qr(r, n)), i);
        }
        if (((i = !0), t))
          for (var a = t.length - 1; 0 <= a; a--) {
            var l = (e.g = t[a]);
            i = kg(l, r, !0, e) && i;
          }
        if (
          ((i = kg((l = e.g = n), r, !0, e) && i),
          (i = kg(l, r, !1, e) && i),
          t)
        )
          for (a = 0; a < t.length; a++)
            i = kg((l = e.g = t[a]), r, !1, e) && i;
      }
      function kg(n, e, t, r) {
        if (!(e = n.i.g[String(e)])) return !0;
        e = e.concat();
        for (var i = !0, a = 0; a < e.length; ++a) {
          var l = e[a];
          if (l && !l.ca && l.capture == t) {
            var h = l.listener,
              m = l.ia || l.src;
            l.fa && Sh(n.i, l), (i = !1 !== h.call(m, r) && i);
          }
        }
        return i && !r.defaultPrevented;
      }
      zr(xr, $o),
        (xr.prototype[pc] = !0),
        (xr.prototype.removeEventListener = function (n, e, t, r) {
          nE(this, n, e, t, r);
        }),
        (xr.prototype.M = function () {
          if ((xr.Z.M.call(this), this.i)) {
            var e,
              n = this.i;
            for (e in n.g) {
              for (var t = n.g[e], r = 0; r < t.length; r++) tE(t[r]);
              delete n.g[e], n.h--;
            }
          }
          this.I = null;
        }),
        (xr.prototype.N = function (n, e, t, r) {
          return this.i.add(String(n), e, !1, t, r);
        }),
        (xr.prototype.O = function (n, e, t, r) {
          return this.i.add(String(n), e, !0, t, r);
        });
      var Fg = Xt.JSON.stringify;
      function JA() {
        var n = mc;
        let e = null;
        return (
          n.g &&
            ((e = n.g), (n.g = n.g.next), n.g || (n.h = null), (e.next = null)),
          e
        );
      }
      var tb,
        Ru = new (class {
          constructor(n, e) {
            (this.i = n), (this.j = e), (this.h = 0), (this.g = null);
          }
          get() {
            let n;
            return (
              0 < this.h
                ? (this.h--, (n = this.g), (this.g = n.next), (n.next = null))
                : (n = this.i()),
              n
            );
          }
        })(
          () => new XA(),
          (n) => n.reset()
        );
      class XA {
        constructor() {
          this.next = this.g = this.h = null;
        }
        set(e, t) {
          (this.h = e), (this.g = t), (this.next = null);
        }
        reset() {
          this.next = this.g = this.h = null;
        }
      }
      function eR(n) {
        Xt.setTimeout(() => {
          throw n;
        }, 0);
      }
      function eb(n, e) {
        tb ||
          (function nb() {
            var n = Xt.Promise.resolve(void 0);
            tb = function () {
              n.then(tR);
            };
          })(),
          Lg || (tb(), (Lg = !0)),
          mc.add(n, e);
      }
      var Lg = !1,
        mc = new (class yi {
          constructor() {
            this.h = this.g = null;
          }
          add(e, t) {
            const r = Ru.get();
            r.set(e, t),
              this.h ? (this.h.next = r) : (this.g = r),
              (this.h = r);
          }
        })();
      function tR() {
        for (var n; (n = JA()); ) {
          try {
            n.h.call(n.g);
          } catch (t) {
            eR(t);
          }
          var e = Ru;
          e.j(n), 100 > e.h && (e.h++, (n.next = e.g), (e.g = n));
        }
        Lg = !1;
      }
      function _c(n, e) {
        xr.call(this),
          (this.h = n || 1),
          (this.g = e || Xt),
          (this.j = Xr(this.kb, this)),
          (this.l = Date.now());
      }
      function sE(n) {
        (n.da = !1), n.S && (n.g.clearTimeout(n.S), (n.S = null));
      }
      function Vg(n, e, t) {
        if ("function" == typeof n) t && (n = Xr(n, t));
        else {
          if (!n || "function" != typeof n.handleEvent)
            throw Error("Invalid listener argument");
          n = Xr(n.handleEvent, n);
        }
        return 2147483647 < Number(e) ? -1 : Xt.setTimeout(n, e || 0);
      }
      function rb(n) {
        n.g = Vg(() => {
          (n.g = null), n.i && ((n.i = !1), rb(n));
        }, n.j);
        const e = n.h;
        (n.h = null), n.m.apply(null, e);
      }
      zr(_c, xr),
        ((Et = _c.prototype).da = !1),
        (Et.S = null),
        (Et.kb = function () {
          if (this.da) {
            var n = Date.now() - this.l;
            0 < n && n < 0.8 * this.h
              ? (this.S = this.g.setTimeout(this.j, this.h - n))
              : (this.S && (this.g.clearTimeout(this.S), (this.S = null)),
                Lr(this, "tick"),
                this.da && (sE(this), this.start()));
          }
        }),
        (Et.start = function () {
          (this.da = !0),
            this.S ||
              ((this.S = this.g.setTimeout(this.j, this.h)),
              (this.l = Date.now()));
        }),
        (Et.M = function () {
          _c.Z.M.call(this), sE(this), delete this.g;
        });
      class nR extends $o {
        constructor(e, t) {
          super(),
            (this.m = e),
            (this.j = t),
            (this.h = null),
            (this.i = !1),
            (this.g = null);
        }
        l(e) {
          (this.h = arguments), this.g ? (this.i = !0) : rb(this);
        }
        M() {
          super.M(),
            this.g &&
              (Xt.clearTimeout(this.g),
              (this.g = null),
              (this.i = !1),
              (this.h = null));
        }
      }
      function oo(n) {
        $o.call(this), (this.h = n), (this.g = {});
      }
      zr(oo, $o);
      var ib = [];
      function Ug(n, e, t, r) {
        Array.isArray(t) || (t && (ib[0] = t.toString()), (t = ib));
        for (var i = 0; i < t.length; i++) {
          var a = QC(e, t[i], r || n.handleEvent, !1, n.h || n);
          if (!a) break;
          n.g[a.key] = a;
        }
      }
      function oE(n) {
        Rg(
          n.g,
          function (e, t) {
            this.g.hasOwnProperty(t) && Mh(e);
          },
          n
        ),
          (n.g = {});
      }
      function xh() {
        this.g = !0;
      }
      function Nh(n, e, t, r) {
        n.info(function () {
          return (
            "XMLHTTP TEXT (" +
            e +
            "): " +
            (function rR(n, e) {
              if (!n.g) return e;
              if (!e) return null;
              try {
                var t = JSON.parse(e);
                if (t)
                  for (n = 0; n < t.length; n++)
                    if (Array.isArray(t[n])) {
                      var r = t[n];
                      if (!(2 > r.length)) {
                        var i = r[1];
                        if (Array.isArray(i) && !(1 > i.length)) {
                          var a = i[0];
                          if ("noop" != a && "stop" != a && "close" != a)
                            for (var l = 1; l < i.length; l++) i[l] = "";
                        }
                      }
                    }
                return Fg(t);
              } catch {
                return e;
              }
            })(n, t) +
            (r ? " " + r : "")
          );
        });
      }
      (oo.prototype.M = function () {
        oo.Z.M.call(this), oE(this);
      }),
        (oo.prototype.handleEvent = function () {
          throw Error("EventHandler.handleEvent not implemented");
        }),
        (xh.prototype.Aa = function () {
          this.g = !1;
        }),
        (xh.prototype.info = function () {});
      var Ma = {},
        Mu = null;
      function jg() {
        return (Mu = Mu || new xr());
      }
      function uE(n) {
        qr.call(this, Ma.Ma, n);
      }
      function xu(n) {
        const e = jg();
        Lr(e, new uE(e, n));
      }
      function iR(n, e) {
        qr.call(this, Ma.STAT_EVENT, n), (this.stat = e);
      }
      function vi(n) {
        const e = jg();
        Lr(e, new iR(e, n));
      }
      function sR(n, e) {
        qr.call(this, Ma.Na, n), (this.size = e);
      }
      function Ph(n, e) {
        if ("function" != typeof n)
          throw Error("Fn must not be null and must be a function");
        return Xt.setTimeout(function () {
          n();
        }, e);
      }
      (Ma.Ma = "serverreachability"),
        zr(uE, qr),
        (Ma.STAT_EVENT = "statevent"),
        zr(iR, qr),
        (Ma.Na = "timingevent"),
        zr(sR, qr);
      var $g = {
          NO_ERROR: 0,
          lb: 1,
          yb: 2,
          xb: 3,
          sb: 4,
          wb: 5,
          zb: 6,
          Ja: 7,
          TIMEOUT: 8,
          Cb: 9,
        },
        ob = {
          qb: "complete",
          Mb: "success",
          Ka: "error",
          Ja: "abort",
          Eb: "ready",
          Fb: "readystatechange",
          TIMEOUT: "timeout",
          Ab: "incrementaldata",
          Db: "progress",
          tb: "downloadprogress",
          Ub: "uploadprogress",
        };
      function Hg() {}
      function ab() {}
      Hg.prototype.h = null;
      var dE,
        yc = { OPEN: "a", pb: "b", Ka: "c", Bb: "d" };
      function Gg() {
        qr.call(this, "d");
      }
      function cE() {
        qr.call(this, "c");
      }
      function Oh() {}
      function kh(n, e, t, r) {
        (this.l = n),
          (this.j = e),
          (this.m = t),
          (this.X = r || 1),
          (this.V = new oo(this)),
          (this.P = ub),
          (this.W = new _c((n = Su ? 125 : void 0))),
          (this.H = null),
          (this.i = !1),
          (this.s = this.A = this.v = this.K = this.F = this.Y = this.B = null),
          (this.D = []),
          (this.g = null),
          (this.C = 0),
          (this.o = this.u = null),
          (this.N = -1),
          (this.I = !1),
          (this.O = 0),
          (this.L = null),
          (this.aa = this.J = this.$ = this.U = !1),
          (this.h = new hE());
      }
      function hE() {
        (this.i = null), (this.g = ""), (this.h = !1);
      }
      zr(Gg, qr),
        zr(cE, qr),
        zr(Oh, Hg),
        (Oh.prototype.g = function () {
          return new XMLHttpRequest();
        }),
        (Oh.prototype.i = function () {
          return {};
        }),
        (dE = new Oh());
      var ub = 45e3,
        Wg = {},
        Fh = {};
      function fE(n, e, t) {
        (n.K = 1), (n.v = Yg(Ps(e))), (n.s = t), (n.U = !0), lb(n, null);
      }
      function lb(n, e) {
        (n.F = Date.now()), zg(n), (n.A = Ps(n.v));
        var t = n.A,
          r = n.X;
        Array.isArray(r) || (r = [String(r)]),
          as(t.h, "t", r),
          (n.C = 0),
          (t = n.l.H),
          (n.h = new hE()),
          (n.g = Ib(n.l, t ? e : null, !n.s)),
          0 < n.O && (n.L = new nR(Xr(n.Ia, n, n.g), n.O)),
          Ug(n.V, n.g, "readystatechange", n.gb),
          (e = n.H ? Qv(n.H) : {}),
          n.s
            ? (n.u || (n.u = "POST"),
              (e["Content-Type"] = "application/x-www-form-urlencoded"),
              n.g.ea(n.A, n.u, n.s, e))
            : ((n.u = "GET"), n.g.ea(n.A, n.u, null, e)),
          xu(1),
          (function Bg(n, e, t, r, i, a) {
            n.info(function () {
              if (n.g)
                if (a)
                  for (var l = "", h = a.split("&"), m = 0; m < h.length; m++) {
                    var v = h[m].split("=");
                    if (1 < v.length) {
                      var b = v[0];
                      v = v[1];
                      var D = b.split("_");
                      l =
                        2 <= D.length && "type" == D[1]
                          ? l + (b + "=") + v + "&"
                          : l + (b + "=redacted&");
                    }
                  }
                else l = null;
              else l = a;
              return (
                "XMLHTTP REQ (" +
                r +
                ") [attempt " +
                i +
                "]: " +
                e +
                "\n" +
                t +
                "\n" +
                l
              );
            });
          })(n.j, n.u, n.A, n.m, n.X, n.s);
      }
      function oR(n) {
        return !!n.g && "GET" == n.u && 2 != n.K && n.l.Ba;
      }
      function pE(n, e, t) {
        let i,
          r = !0;
        for (; !n.I && n.C < t.length; ) {
          if (((i = hk(n, t)), i == Fh)) {
            4 == e && ((n.o = 4), vi(14), (r = !1)),
              Nh(n.j, n.m, null, "[Incomplete Response]");
            break;
          }
          if (i == Wg) {
            (n.o = 4), vi(15), Nh(n.j, n.m, t, "[Invalid Chunk]"), (r = !1);
            break;
          }
          Nh(n.j, n.m, i, null), cb(n, i);
        }
        oR(n) && i != Fh && i != Wg && ((n.h.g = ""), (n.C = 0)),
          4 != e || 0 != t.length || n.h.h || ((n.o = 1), vi(16), (r = !1)),
          (n.i = n.i && r),
          r
            ? 0 < t.length &&
              !n.aa &&
              ((n.aa = !0),
              (e = n.l).g == n &&
                e.$ &&
                !e.L &&
                (e.h.info(
                  "Great, no buffering proxy detected. Bytes received: " +
                    t.length
                ),
                ME(e),
                (e.L = !0),
                vi(11)))
            : (Nh(n.j, n.m, t, "[Invalid Chunked Response]"), vc(n), qg(n));
      }
      function hk(n, e) {
        var t = n.C,
          r = e.indexOf("\n", t);
        return -1 == r
          ? Fh
          : ((t = Number(e.substring(t, r))),
            isNaN(t)
              ? Wg
              : (r += 1) + t > e.length
              ? Fh
              : ((e = e.substr(r, t)), (n.C = r + t), e));
      }
      function zg(n) {
        (n.Y = Date.now() + n.P), aR(n, n.P);
      }
      function aR(n, e) {
        if (null != n.B) throw Error("WatchDog timer not null");
        n.B = Ph(Xr(n.eb, n), e);
      }
      function gE(n) {
        n.B && (Xt.clearTimeout(n.B), (n.B = null));
      }
      function qg(n) {
        0 == n.l.G || n.I || TR(n.l, n);
      }
      function vc(n) {
        gE(n);
        var e = n.L;
        e && "function" == typeof e.na && e.na(),
          (n.L = null),
          sE(n.W),
          oE(n.V),
          n.g && ((e = n.g), (n.g = null), e.abort(), e.na());
      }
      function cb(n, e) {
        try {
          var t = n.l;
          if (0 != t.G && (t.g == n || vE(t.i, n)))
            if (((t.I = n.N), !n.J && vE(t.i, n) && 3 == t.G)) {
              try {
                var r = t.Ca.g.parse(e);
              } catch {
                r = null;
              }
              if (Array.isArray(r) && 3 == r.length) {
                var i = r;
                if (0 == i[0]) {
                  e: if (!t.u) {
                    if (t.g) {
                      if (!(t.g.F + 3e3 < n.F)) break e;
                      tm(t), Pu(t);
                    }
                    em(t), vi(18);
                  }
                } else
                  (t.ta = i[1]),
                    0 < t.ta - t.U &&
                      37500 > i[2] &&
                      t.N &&
                      0 == t.A &&
                      !t.v &&
                      (t.v = Ph(Xr(t.ab, t), 6e3));
                if (1 >= hb(t.i) && t.ka) {
                  try {
                    t.ka();
                  } catch {}
                  t.ka = void 0;
                }
              } else Tc(t, 11);
            } else if (((n.J || t.g == n) && tm(t), !Sg(e)))
              for (i = t.Ca.g.parse(e), e = 0; e < i.length; e++) {
                let v = i[e];
                if (((t.U = v[0]), (v = v[1]), 2 == t.G))
                  if ("c" == v[0]) {
                    (t.J = v[1]), (t.la = v[2]);
                    const b = v[3];
                    null != b && ((t.ma = b), t.h.info("VER=" + t.ma));
                    const D = v[4];
                    null != D && ((t.za = D), t.h.info("SVER=" + t.za));
                    const R = v[5];
                    null != R &&
                      "number" == typeof R &&
                      0 < R &&
                      ((t.K = r = 1.5 * R),
                      t.h.info("backChannelRequestTimeoutMs_=" + r)),
                      (r = t);
                    const F = n.g;
                    if (F) {
                      const B = F.g
                        ? F.g.getResponseHeader("X-Client-Wire-Protocol")
                        : null;
                      if (B) {
                        var a = r.i;
                        !a.g &&
                          (Mr(B, "spdy") || Mr(B, "quic") || Mr(B, "h2")) &&
                          ((a.j = a.l),
                          (a.g = new Set()),
                          a.h && ($h(a, a.h), (a.h = null)));
                      }
                      if (r.D) {
                        const le = F.g
                          ? F.g.getResponseHeader("X-HTTP-Session-Id")
                          : null;
                        le && ((r.sa = le), ar(r.F, r.D, le));
                      }
                    }
                    (t.G = 3),
                      t.j && t.j.xa(),
                      t.$ &&
                        ((t.O = Date.now() - n.F),
                        t.h.info("Handshake RTT: " + t.O + "ms"));
                    var l = n;
                    if ((((r = t).oa = RR(r, r.H ? r.la : null, r.W)), l.J)) {
                      EE(r.i, l);
                      var h = l,
                        m = r.K;
                      m && h.setTimeout(m), h.B && (gE(h), zg(h)), (r.g = l);
                    } else DR(r);
                    0 < t.l.length && zh(t);
                  } else ("stop" != v[0] && "close" != v[0]) || Tc(t, 7);
                else
                  3 == t.G &&
                    ("stop" == v[0] || "close" == v[0]
                      ? "stop" == v[0]
                        ? Tc(t, 7)
                        : Dc(t)
                      : "noop" != v[0] && t.j && t.j.wa(v),
                    (t.A = 0));
              }
          xu(4);
        } catch {}
      }
      function Ec(n, e) {
        if (n.forEach && "function" == typeof n.forEach) n.forEach(e, void 0);
        else if (qv(n) || "string" == typeof n) WC(n, e, void 0);
        else {
          if (n.T && "function" == typeof n.T) var t = n.T();
          else if (n.R && "function" == typeof n.R) t = void 0;
          else if (qv(n) || "string" == typeof n) {
            t = [];
            for (var r = n.length, i = 0; i < r; i++) t.push(i);
          } else for (i in ((t = []), (r = 0), n)) t[r++] = i;
          (r = (function fk(n) {
            if (n.R && "function" == typeof n.R) return n.R();
            if ("string" == typeof n) return n.split("");
            if (qv(n)) {
              for (var e = [], t = n.length, r = 0; r < t; r++) e.push(n[r]);
              return e;
            }
            for (r in ((e = []), (t = 0), n)) e[t++] = n[r];
            return e;
          })(n)),
            (i = r.length);
          for (var a = 0; a < i; a++) e.call(void 0, r[a], t && t[a], n);
        }
      }
      function Lh(n, e) {
        (this.h = {}), (this.g = []), (this.i = 0);
        var t = arguments.length;
        if (1 < t) {
          if (t % 2) throw Error("Uneven number of arguments");
          for (var r = 0; r < t; r += 2)
            this.set(arguments[r], arguments[r + 1]);
        } else if (n)
          if (n instanceof Lh)
            for (t = n.T(), r = 0; r < t.length; r++)
              this.set(t[r], n.get(t[r]));
          else for (r in n) this.set(r, n[r]);
      }
      function Kg(n) {
        if (n.i != n.g.length) {
          for (var e = 0, t = 0; e < n.g.length; ) {
            var r = n.g[e];
            ao(n.h, r) && (n.g[t++] = r), e++;
          }
          n.g.length = t;
        }
        if (n.i != n.g.length) {
          var i = {};
          for (t = e = 0; e < n.g.length; )
            ao(i, (r = n.g[e])) || ((n.g[t++] = r), (i[r] = 1)), e++;
          n.g.length = t;
        }
      }
      function ao(n, e) {
        return Object.prototype.hasOwnProperty.call(n, e);
      }
      ((Et = kh.prototype).setTimeout = function (n) {
        this.P = n;
      }),
        (Et.gb = function (n) {
          n = n.target;
          const e = this.L;
          e && 3 == Os(n) ? e.l() : this.Ia(n);
        }),
        (Et.Ia = function (n) {
          try {
            if (n == this.g)
              e: {
                const b = Os(this.g);
                var e = this.g.Da();
                const D = this.g.ba();
                if (
                  !(3 > b) &&
                  (3 != b ||
                    Su ||
                    (this.g && (this.h.h || this.g.ga() || DE(this.g))))
                ) {
                  this.I || 4 != b || 7 == e || xu(8 == e || 0 >= D ? 3 : 2),
                    gE(this);
                  var t = this.g.ba();
                  this.N = t;
                  t: if (oR(this)) {
                    var r = DE(this.g);
                    n = "";
                    var i = r.length,
                      a = 4 == Os(this.g);
                    if (!this.h.i) {
                      if (typeof TextDecoder > "u") {
                        vc(this), qg(this);
                        var l = "";
                        break t;
                      }
                      this.h.i = new Xt.TextDecoder();
                    }
                    for (e = 0; e < i; e++)
                      (this.h.h = !0),
                        (n += this.h.i.decode(r[e], {
                          stream: a && e == i - 1,
                        }));
                    r.splice(0, i),
                      (this.h.g += n),
                      (this.C = 0),
                      (l = this.h.g);
                  } else l = this.g.ga();
                  if (
                    ((this.i = 200 == t),
                    (function aE(n, e, t, r, i, a, l) {
                      n.info(function () {
                        return (
                          "XMLHTTP RESP (" +
                          r +
                          ") [ attempt " +
                          i +
                          "]: " +
                          e +
                          "\n" +
                          t +
                          "\n" +
                          a +
                          " " +
                          l
                        );
                      });
                    })(this.j, this.u, this.A, this.m, this.X, b, t),
                    this.i)
                  ) {
                    if (this.$ && !this.J) {
                      t: {
                        if (this.g) {
                          var h,
                            m = this.g;
                          if (
                            (h = m.g
                              ? m.g.getResponseHeader("X-HTTP-Initial-Response")
                              : null) &&
                            !Sg(h)
                          ) {
                            var v = h;
                            break t;
                          }
                        }
                        v = null;
                      }
                      if (!(t = v)) {
                        (this.i = !1), (this.o = 3), vi(12), vc(this), qg(this);
                        break e;
                      }
                      Nh(
                        this.j,
                        this.m,
                        t,
                        "Initial handshake response via X-HTTP-Initial-Response"
                      ),
                        (this.J = !0),
                        cb(this, t);
                    }
                    this.U
                      ? (pE(this, b, l),
                        Su &&
                          this.i &&
                          3 == b &&
                          (Ug(this.V, this.W, "tick", this.fb), this.W.start()))
                      : (Nh(this.j, this.m, l, null), cb(this, l)),
                      4 == b && vc(this),
                      this.i &&
                        !this.I &&
                        (4 == b ? TR(this.l, this) : ((this.i = !1), zg(this)));
                  } else
                    400 == t && 0 < l.indexOf("Unknown SID")
                      ? ((this.o = 3), vi(12))
                      : ((this.o = 0), vi(13)),
                      vc(this),
                      qg(this);
                }
              }
          } catch {}
        }),
        (Et.fb = function () {
          if (this.g) {
            var n = Os(this.g),
              e = this.g.ga();
            this.C < e.length &&
              (gE(this), pE(this, n, e), this.i && 4 != n && zg(this));
          }
        }),
        (Et.cancel = function () {
          (this.I = !0), vc(this);
        }),
        (Et.eb = function () {
          this.B = null;
          const n = Date.now();
          0 <= n - this.Y
            ? ((function sb(n, e) {
                n.info(function () {
                  return "TIMEOUT: " + e;
                });
              })(this.j, this.A),
              2 != this.K && (xu(3), vi(17)),
              vc(this),
              (this.o = 2),
              qg(this))
            : aR(this, this.Y - n);
        }),
        ((Et = Lh.prototype).R = function () {
          Kg(this);
          for (var n = [], e = 0; e < this.g.length; e++)
            n.push(this.h[this.g[e]]);
          return n;
        }),
        (Et.T = function () {
          return Kg(this), this.g.concat();
        }),
        (Et.get = function (n, e) {
          return ao(this.h, n) ? this.h[n] : e;
        }),
        (Et.set = function (n, e) {
          ao(this.h, n) || (this.i++, this.g.push(n)), (this.h[n] = e);
        }),
        (Et.forEach = function (n, e) {
          for (var t = this.T(), r = 0; r < t.length; r++) {
            var i = t[r],
              a = this.get(i);
            n.call(e, a, i, this);
          }
        });
      var mE =
        /^(?:([^:/?#.]+):)?(?:\/\/(?:([^\\/?#]*)@)?([^\\/?#]*?)(?::([0-9]+))?(?=[\\/?#]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;
      function wc(n, e) {
        if (
          ((this.i = this.s = this.j = ""),
          (this.m = null),
          (this.o = this.l = ""),
          (this.g = !1),
          n instanceof wc)
        ) {
          (this.g = void 0 !== e ? e : n.g),
            Vh(this, n.j),
            (this.s = n.s),
            Zg(this, n.i),
            Uh(this, n.m),
            (this.l = n.l),
            (e = n.h);
          var t = new jh();
          (t.i = e.i),
            e.g && ((t.g = new Lh(e.g)), (t.h = e.h)),
            uR(this, t),
            (this.o = n.o);
        } else
          n && (t = String(n).match(mE))
            ? ((this.g = !!e),
              Vh(this, t[1] || "", !0),
              (this.s = Bh(t[2] || "")),
              Zg(this, t[3] || "", !0),
              Uh(this, t[4]),
              (this.l = Bh(t[5] || "", !0)),
              uR(this, t[6] || "", !0),
              (this.o = Bh(t[7] || "")))
            : ((this.g = !!e), (this.h = new jh(null, this.g)));
      }
      function Ps(n) {
        return new wc(n);
      }
      function Vh(n, e, t) {
        (n.j = t ? Bh(e, !0) : e), n.j && (n.j = n.j.replace(/:$/, ""));
      }
      function Zg(n, e, t) {
        n.i = t ? Bh(e, !0) : e;
      }
      function Uh(n, e) {
        if (e) {
          if (((e = Number(e)), isNaN(e) || 0 > e))
            throw Error("Bad port number " + e);
          n.m = e;
        } else n.m = null;
      }
      function uR(n, e, t) {
        e instanceof jh
          ? ((n.h = e),
            (function yE(n, e) {
              e &&
                !n.j &&
                (Ho(n),
                (n.i = null),
                n.g.forEach(function (t, r) {
                  var i = r.toLowerCase();
                  r != i && (_E(this, r), as(this, i, t));
                }, n)),
                (n.j = e);
            })(n.h, n.g))
          : (t || (e = Jg(e, fR)), (n.h = new jh(e, n.g)));
      }
      function ar(n, e, t) {
        n.h.set(e, t);
      }
      function Yg(n) {
        return (
          ar(
            n,
            "zx",
            Math.floor(2147483648 * Math.random()).toString(36) +
              Math.abs(
                Math.floor(2147483648 * Math.random()) ^ Date.now()
              ).toString(36)
          ),
          n
        );
      }
      function Bh(n, e) {
        return n
          ? e
            ? decodeURI(n.replace(/%25/g, "%2525"))
            : decodeURIComponent(n)
          : "";
      }
      function Jg(n, e, t) {
        return "string" == typeof n
          ? ((n = encodeURI(n).replace(e, pk)),
            t && (n = n.replace(/%25([0-9a-fA-F]{2})/g, "%$1")),
            n)
          : null;
      }
      function pk(n) {
        return (
          "%" +
          (((n = n.charCodeAt(0)) >> 4) & 15).toString(16) +
          (15 & n).toString(16)
        );
      }
      wc.prototype.toString = function () {
        var n = [],
          e = this.j;
        e && n.push(Jg(e, cR, !0), ":");
        var t = this.i;
        return (
          (t || "file" == e) &&
            (n.push("//"),
            (e = this.s) && n.push(Jg(e, cR, !0), "@"),
            n.push(
              encodeURIComponent(String(t)).replace(
                /%25([0-9a-fA-F]{2})/g,
                "%$1"
              )
            ),
            null != (t = this.m) && n.push(":", String(t))),
          (t = this.l) &&
            (this.i && "/" != t.charAt(0) && n.push("/"),
            n.push(Jg(t, "/" == t.charAt(0) ? hR : dR, !0))),
          (t = this.h.toString()) && n.push("?", t),
          (t = this.o) && n.push("#", Jg(t, gk)),
          n.join("")
        );
      };
      var cR = /[#\/\?@]/g,
        dR = /[#\?:]/g,
        hR = /[#\?]/g,
        fR = /[#\?@]/g,
        gk = /#/g;
      function jh(n, e) {
        (this.h = this.g = null), (this.i = n || null), (this.j = !!e);
      }
      function Ho(n) {
        n.g ||
          ((n.g = new Lh()),
          (n.h = 0),
          n.i &&
            (function db(n, e) {
              if (n) {
                n = n.split("&");
                for (var t = 0; t < n.length; t++) {
                  var r = n[t].indexOf("="),
                    i = null;
                  if (0 <= r) {
                    var a = n[t].substring(0, r);
                    i = n[t].substring(r + 1);
                  } else a = n[t];
                  e(a, i ? decodeURIComponent(i.replace(/\+/g, " ")) : "");
                }
              }
            })(n.i, function (e, t) {
              n.add(decodeURIComponent(e.replace(/\+/g, " ")), t);
            }));
      }
      function _E(n, e) {
        Ho(n),
          (e = Ic(n, e)),
          ao(n.g.h, e) &&
            ((n.i = null),
            (n.h -= n.g.get(e).length),
            ao((n = n.g).h, e) &&
              (delete n.h[e], n.i--, n.g.length > 2 * n.i && Kg(n)));
      }
      function pR(n, e) {
        return Ho(n), (e = Ic(n, e)), ao(n.g.h, e);
      }
      function as(n, e, t) {
        _E(n, e),
          0 < t.length &&
            ((n.i = null), n.g.set(Ic(n, e), Kv(t)), (n.h += t.length));
      }
      function Ic(n, e) {
        return (e = String(e)), n.j && (e = e.toLowerCase()), e;
      }
      function Mi(n) {
        (this.l = n || mR),
          (n = Xt.PerformanceNavigationTiming
            ? 0 < (n = Xt.performance.getEntriesByType("navigation")).length &&
              ("hq" == n[0].nextHopProtocol || "h2" == n[0].nextHopProtocol)
            : !!(Xt.g && Xt.g.Ea && Xt.g.Ea() && Xt.g.Ea().Zb)),
          (this.j = n ? this.l : 1),
          (this.g = null),
          1 < this.j && (this.g = new Set()),
          (this.h = null),
          (this.i = []);
      }
      ((Et = jh.prototype).add = function (n, e) {
        Ho(this), (this.i = null), (n = Ic(this, n));
        var t = this.g.get(n);
        return t || this.g.set(n, (t = [])), t.push(e), (this.h += 1), this;
      }),
        (Et.forEach = function (n, e) {
          Ho(this),
            this.g.forEach(function (t, r) {
              WC(
                t,
                function (i) {
                  n.call(e, i, r, this);
                },
                this
              );
            }, this);
        }),
        (Et.T = function () {
          Ho(this);
          for (
            var n = this.g.R(), e = this.g.T(), t = [], r = 0;
            r < e.length;
            r++
          )
            for (var i = n[r], a = 0; a < i.length; a++) t.push(e[r]);
          return t;
        }),
        (Et.R = function (n) {
          Ho(this);
          var e = [];
          if ("string" == typeof n)
            pR(this, n) && (e = zC(e, this.g.get(Ic(this, n))));
          else {
            n = this.g.R();
            for (var t = 0; t < n.length; t++) e = zC(e, n[t]);
          }
          return e;
        }),
        (Et.set = function (n, e) {
          return (
            Ho(this),
            (this.i = null),
            pR(this, (n = Ic(this, n))) && (this.h -= this.g.get(n).length),
            this.g.set(n, [e]),
            (this.h += 1),
            this
          );
        }),
        (Et.get = function (n, e) {
          return n && 0 < (n = this.R(n)).length ? String(n[0]) : e;
        }),
        (Et.toString = function () {
          if (this.i) return this.i;
          if (!this.g) return "";
          for (var n = [], e = this.g.T(), t = 0; t < e.length; t++) {
            var r = e[t],
              i = encodeURIComponent(String(r));
            r = this.R(r);
            for (var a = 0; a < r.length; a++) {
              var l = i;
              "" !== r[a] && (l += "=" + encodeURIComponent(String(r[a]))),
                n.push(l);
            }
          }
          return (this.i = n.join("&"));
        });
      var mR = 10;
      function Xg(n) {
        return !!n.h || (!!n.g && n.g.size >= n.j);
      }
      function hb(n) {
        return n.h ? 1 : n.g ? n.g.size : 0;
      }
      function vE(n, e) {
        return n.h ? n.h == e : !!n.g && n.g.has(e);
      }
      function $h(n, e) {
        n.g ? n.g.add(e) : (n.h = e);
      }
      function EE(n, e) {
        n.h && n.h == e ? (n.h = null) : n.g && n.g.has(e) && n.g.delete(e);
      }
      function wE(n) {
        if (null != n.h) return n.i.concat(n.h.D);
        if (null != n.g && 0 !== n.g.size) {
          let e = n.i;
          for (const t of n.g.values()) e = e.concat(t.D);
          return e;
        }
        return Kv(n.i);
      }
      function IE() {}
      function fb() {
        this.g = new IE();
      }
      function pb(n, e, t) {
        const r = t || "";
        try {
          Ec(n, function (i, a) {
            let l = i;
            cc(i) && (l = Fg(i)), e.push(r + a + "=" + encodeURIComponent(l));
          });
        } catch (i) {
          throw (e.push(r + "type=" + encodeURIComponent("_badmap")), i);
        }
      }
      function Hh(n, e, t, r, i) {
        try {
          (e.onload = null),
            (e.onerror = null),
            (e.onabort = null),
            (e.ontimeout = null),
            i(r);
        } catch {}
      }
      function Gh(n) {
        (this.l = n.$b || null), (this.j = n.ib || !1);
      }
      function Cc(n, e) {
        xr.call(this),
          (this.D = n),
          (this.u = e),
          (this.m = void 0),
          (this.readyState = uo),
          (this.status = 0),
          (this.responseType =
            this.responseText =
            this.response =
            this.statusText =
              ""),
          (this.onreadystatechange = null),
          (this.v = new Headers()),
          (this.h = null),
          (this.C = "GET"),
          (this.B = ""),
          (this.g = !1),
          (this.A = this.j = this.l = null);
      }
      (Mi.prototype.cancel = function () {
        if (((this.i = wE(this)), this.h)) this.h.cancel(), (this.h = null);
        else if (this.g && 0 !== this.g.size) {
          for (const n of this.g.values()) n.cancel();
          this.g.clear();
        }
      }),
        (IE.prototype.stringify = function (n) {
          return Xt.JSON.stringify(n, void 0);
        }),
        (IE.prototype.parse = function (n) {
          return Xt.JSON.parse(n, void 0);
        }),
        zr(Gh, Hg),
        (Gh.prototype.g = function () {
          return new Cc(this.l, this.j);
        }),
        (Gh.prototype.i = (function (n) {
          return function () {
            return n;
          };
        })({})),
        zr(Cc, xr);
      var uo = 0;
      function CE(n) {
        n.j.read().then(n.Sa.bind(n)).catch(n.ha.bind(n));
      }
      function Nu(n) {
        (n.readyState = 4), (n.l = null), (n.j = null), (n.A = null), Ui(n);
      }
      function Ui(n) {
        n.onreadystatechange && n.onreadystatechange.call(n);
      }
      ((Et = Cc.prototype).open = function (n, e) {
        if (this.readyState != uo)
          throw (this.abort(), Error("Error reopening a connection"));
        (this.C = n), (this.B = e), (this.readyState = 1), Ui(this);
      }),
        (Et.send = function (n) {
          if (1 != this.readyState)
            throw (this.abort(), Error("need to call open() first. "));
          this.g = !0;
          const e = {
            headers: this.v,
            method: this.C,
            credentials: this.m,
            cache: void 0,
          };
          n && (e.body = n),
            (this.D || Xt)
              .fetch(new Request(this.B, e))
              .then(this.Va.bind(this), this.ha.bind(this));
        }),
        (Et.abort = function () {
          (this.response = this.responseText = ""),
            (this.v = new Headers()),
            (this.status = 0),
            this.j && this.j.cancel("Request was aborted."),
            1 <= this.readyState &&
              this.g &&
              4 != this.readyState &&
              ((this.g = !1), Nu(this)),
            (this.readyState = uo);
        }),
        (Et.Va = function (n) {
          if (
            this.g &&
            ((this.l = n),
            this.h ||
              ((this.status = this.l.status),
              (this.statusText = this.l.statusText),
              (this.h = n.headers),
              (this.readyState = 2),
              Ui(this)),
            this.g && ((this.readyState = 3), Ui(this), this.g))
          )
            if ("arraybuffer" === this.responseType)
              n.arrayBuffer().then(this.Ta.bind(this), this.ha.bind(this));
            else if (typeof Xt.ReadableStream < "u" && "body" in n) {
              if (((this.j = n.body.getReader()), this.u)) {
                if (this.responseType)
                  throw Error(
                    'responseType must be empty for "streamBinaryChunks" mode responses.'
                  );
                this.response = [];
              } else
                (this.response = this.responseText = ""),
                  (this.A = new TextDecoder());
              CE(this);
            } else n.text().then(this.Ua.bind(this), this.ha.bind(this));
        }),
        (Et.Sa = function (n) {
          if (this.g) {
            if (this.u && n.value) this.response.push(n.value);
            else if (!this.u) {
              var e = n.value ? n.value : new Uint8Array(0);
              (e = this.A.decode(e, { stream: !n.done })) &&
                (this.response = this.responseText += e);
            }
            n.done ? Nu(this) : Ui(this), 3 == this.readyState && CE(this);
          }
        }),
        (Et.Ua = function (n) {
          this.g && ((this.response = this.responseText = n), Nu(this));
        }),
        (Et.Ta = function (n) {
          this.g && ((this.response = n), Nu(this));
        }),
        (Et.ha = function () {
          this.g && Nu(this);
        }),
        (Et.setRequestHeader = function (n, e) {
          this.v.append(n, e);
        }),
        (Et.getResponseHeader = function (n) {
          return (this.h && this.h.get(n.toLowerCase())) || "";
        }),
        (Et.getAllResponseHeaders = function () {
          if (!this.h) return "";
          const n = [],
            e = this.h.entries();
          for (var t = e.next(); !t.done; )
            n.push((t = t.value)[0] + ": " + t[1]), (t = e.next());
          return n.join("\r\n");
        }),
        Object.defineProperty(Cc.prototype, "withCredentials", {
          get: function () {
            return "include" === this.m;
          },
          set: function (n) {
            this.m = n ? "include" : "same-origin";
          },
        });
      var yR = Xt.JSON.parse;
      function Nr(n) {
        xr.call(this),
          (this.headers = new Lh()),
          (this.u = n || null),
          (this.h = !1),
          (this.C = this.g = null),
          (this.H = ""),
          (this.m = 0),
          (this.j = ""),
          (this.l = this.F = this.v = this.D = !1),
          (this.B = 0),
          (this.A = null),
          (this.J = gb),
          (this.K = this.L = !1);
      }
      zr(Nr, xr);
      var gb = "",
        vR = /^https?$/i,
        ER = ["POST", "PUT"];
      function mb(n) {
        return "content-type" == n.toLowerCase();
      }
      function IR(n, e) {
        (n.h = !1),
          n.g && ((n.l = !0), n.g.abort(), (n.l = !1)),
          (n.j = e),
          (n.m = 5),
          bE(n),
          Wh(n);
      }
      function bE(n) {
        n.D || ((n.D = !0), Lr(n, "complete"), Lr(n, "error"));
      }
      function _b(n) {
        if (n.h && typeof zv < "u" && (!n.C[1] || 4 != Os(n) || 2 != n.ba()))
          if (n.v && 4 == Os(n)) Vg(n.Fa, 0, n);
          else if ((Lr(n, "readystatechange"), 4 == Os(n))) {
            n.h = !1;
            try {
              const h = n.ba();
              e: switch (h) {
                case 200:
                case 201:
                case 202:
                case 204:
                case 206:
                case 304:
                case 1223:
                  var e = !0;
                  break e;
                default:
                  e = !1;
              }
              var t;
              if (!(t = e)) {
                var r;
                if ((r = 0 === h)) {
                  var i = String(n.H).match(mE)[1] || null;
                  if (!i && Xt.self && Xt.self.location) {
                    var a = Xt.self.location.protocol;
                    i = a.substr(0, a.length - 1);
                  }
                  r = !vR.test(i ? i.toLowerCase() : "");
                }
                t = r;
              }
              if (t) Lr(n, "complete"), Lr(n, "success");
              else {
                n.m = 6;
                try {
                  var l = 2 < Os(n) ? n.g.statusText : "";
                } catch {
                  l = "";
                }
                (n.j = l + " [" + n.ba() + "]"), bE(n);
              }
            } finally {
              Wh(n);
            }
          }
      }
      function Wh(n, e) {
        if (n.g) {
          CR(n);
          const t = n.g,
            r = n.C[0] ? bg : null;
          (n.g = null), (n.C = null), e || Lr(n, "ready");
          try {
            t.onreadystatechange = r;
          } catch {}
        }
      }
      function CR(n) {
        n.g && n.K && (n.g.ontimeout = null),
          n.A && (Xt.clearTimeout(n.A), (n.A = null));
      }
      function Os(n) {
        return n.g ? n.g.readyState : 0;
      }
      function DE(n) {
        try {
          if (!n.g) return null;
          if ("response" in n.g) return n.g.response;
          switch (n.J) {
            case gb:
            case "text":
              return n.g.responseText;
            case "arraybuffer":
              if ("mozResponseArrayBuffer" in n.g)
                return n.g.mozResponseArrayBuffer;
          }
          return null;
        } catch {
          return null;
        }
      }
      function TE(n, e, t) {
        e: {
          for (r in t) {
            var r = !1;
            break e;
          }
          r = !0;
        }
        r ||
          ((t = (function yb(n) {
            let e = "";
            return (
              Rg(n, function (t, r) {
                (e += r), (e += ":"), (e += t), (e += "\r\n");
              }),
              e
            );
          })(t)),
          "string" == typeof n
            ? null != t && encodeURIComponent(String(t))
            : ar(n, e, t));
      }
      function bc(n, e, t) {
        return (
          (t && t.internalChannelParams && t.internalChannelParams[n]) || e
        );
      }
      function SE(n) {
        (this.za = 0),
          (this.l = []),
          (this.h = new xh()),
          (this.la =
            this.oa =
            this.F =
            this.W =
            this.g =
            this.sa =
            this.D =
            this.aa =
            this.o =
            this.P =
            this.s =
              null),
          (this.Za = this.V = 0),
          (this.Xa = bc("failFast", !1, n)),
          (this.N = this.v = this.u = this.m = this.j = null),
          (this.X = !0),
          (this.I = this.ta = this.U = -1),
          (this.Y = this.A = this.C = 0),
          (this.Pa = bc("baseRetryDelayMs", 5e3, n)),
          (this.$a = bc("retryDelaySeedMs", 1e4, n)),
          (this.Ya = bc("forwardChannelMaxRetries", 2, n)),
          (this.ra = bc("forwardChannelRequestTimeoutMs", 2e4, n)),
          (this.qa = (n && n.xmlHttpFactory) || void 0),
          (this.Ba = (n && n.Yb) || !1),
          (this.K = void 0),
          (this.H = (n && n.supportsCrossDomainXhr) || !1),
          (this.J = ""),
          (this.i = new Mi(n && n.concurrentRequestLimit)),
          (this.Ca = new fb()),
          (this.ja = (n && n.fastHandshake) || !1),
          (this.Ra = (n && n.Wb) || !1),
          n && n.Aa && this.h.Aa(),
          n && n.forceLongPolling && (this.X = !1),
          (this.$ = (!this.ja && this.X && n && n.detectBufferingProxy) || !1),
          (this.ka = void 0),
          (this.O = 0),
          (this.L = !1),
          (this.B = null),
          (this.Wa = !n || !1 !== n.Xb);
      }
      function Dc(n) {
        if ((AE(n), 3 == n.G)) {
          var e = n.V++,
            t = Ps(n.F);
          ar(t, "SID", n.J),
            ar(t, "RID", e),
            ar(t, "TYPE", "terminate"),
            qh(n, t),
            ((e = new kh(n, n.h, e, void 0)).K = 2),
            (e.v = Yg(Ps(t))),
            (t = !1),
            Xt.navigator &&
              Xt.navigator.sendBeacon &&
              (t = Xt.navigator.sendBeacon(e.v.toString(), "")),
            !t && Xt.Image && ((new Image().src = e.v), (t = !0)),
            t || ((e.g = Ib(e.l, null)), e.g.ea(e.v)),
            (e.F = Date.now()),
            zg(e);
        }
        AR(n);
      }
      function Pu(n) {
        n.g && (ME(n), n.g.cancel(), (n.g = null));
      }
      function AE(n) {
        Pu(n),
          n.u && (Xt.clearTimeout(n.u), (n.u = null)),
          tm(n),
          n.i.cancel(),
          n.m && ("number" == typeof n.m && Xt.clearTimeout(n.m), (n.m = null));
      }
      function RE(n, e) {
        n.l.push(
          new (class {
            constructor(n, e) {
              (this.h = n), (this.g = e);
            }
          })(n.Za++, e)
        ),
          3 == n.G && zh(n);
      }
      function zh(n) {
        Xg(n.i) || n.m || ((n.m = !0), eb(n.Ha, n), (n.C = 0));
      }
      function Eb(n, e) {
        var t;
        t = e ? e.m : n.V++;
        const r = Ps(n.F);
        ar(r, "SID", n.J),
          ar(r, "RID", t),
          ar(r, "AID", n.U),
          qh(n, r),
          n.o && n.s && TE(r, n.o, n.s),
          (t = new kh(n, n.h, t, n.C + 1)),
          null === n.o && (t.H = n.s),
          e && (n.l = e.D.concat(n.l)),
          (e = bR(n, t, 1e3)),
          t.setTimeout(
            Math.round(0.5 * n.ra) + Math.round(0.5 * n.ra * Math.random())
          ),
          $h(n.i, t),
          fE(t, r, e);
      }
      function qh(n, e) {
        n.j &&
          Ec({}, function (t, r) {
            ar(e, r, t);
          });
      }
      function bR(n, e, t) {
        t = Math.min(n.l.length, t);
        var r = n.j ? Xr(n.j.Oa, n.j, n) : null;
        e: {
          var i = n.l;
          let a = -1;
          for (;;) {
            const l = ["count=" + t];
            -1 == a
              ? 0 < t
                ? ((a = i[0].h), l.push("ofs=" + a))
                : (a = 0)
              : l.push("ofs=" + a);
            let h = !0;
            for (let m = 0; m < t; m++) {
              let v = i[m].h;
              const b = i[m].g;
              if (((v -= a), 0 > v)) (a = Math.max(0, i[m].h - 100)), (h = !1);
              else
                try {
                  pb(b, l, "req" + v + "_");
                } catch {
                  r && r(b);
                }
            }
            if (h) {
              r = l.join("&");
              break e;
            }
          }
        }
        return (n = n.l.splice(0, t)), (e.D = n), r;
      }
      function DR(n) {
        n.g || n.u || ((n.Y = 1), eb(n.Ga, n), (n.A = 0));
      }
      function em(n) {
        return !(
          n.g ||
          n.u ||
          3 <= n.A ||
          (n.Y++, (n.u = Ph(Xr(n.Ga, n), SR(n, n.A))), n.A++, 0)
        );
      }
      function ME(n) {
        null != n.B && (Xt.clearTimeout(n.B), (n.B = null));
      }
      function wb(n) {
        (n.g = new kh(n, n.h, "rpc", n.Y)),
          null === n.o && (n.g.H = n.s),
          (n.g.O = 0);
        var e = Ps(n.oa);
        ar(e, "RID", "rpc"),
          ar(e, "SID", n.J),
          ar(e, "CI", n.N ? "0" : "1"),
          ar(e, "AID", n.U),
          qh(n, e),
          ar(e, "TYPE", "xmlhttp"),
          n.o && n.s && TE(e, n.o, n.s),
          n.K && n.g.setTimeout(n.K);
        var t = n.g;
        (n = n.la),
          (t.K = 1),
          (t.v = Yg(Ps(e))),
          (t.s = null),
          (t.U = !0),
          lb(t, n);
      }
      function tm(n) {
        null != n.v && (Xt.clearTimeout(n.v), (n.v = null));
      }
      function TR(n, e) {
        var t = null;
        if (n.g == e) {
          tm(n), ME(n), (n.g = null);
          var r = 2;
        } else {
          if (!vE(n.i, e)) return;
          (t = e.D), EE(n.i, e), (r = 1);
        }
        if (((n.I = e.N), 0 != n.G))
          if (e.i)
            if (1 == r) {
              (t = e.s ? e.s.length : 0), (e = Date.now() - e.F);
              var i = n.C;
              Lr((r = jg()), new sR(r, t, e, i)), zh(n);
            } else DR(n);
          else if (
            3 == (i = e.o) ||
            (0 == i && 0 < n.I) ||
            !(
              (1 == r &&
                (function vb(n, e) {
                  return !(
                    hb(n.i) >= n.i.j - (n.m ? 1 : 0) ||
                    (n.m
                      ? ((n.l = e.D.concat(n.l)), 0)
                      : 1 == n.G ||
                        2 == n.G ||
                        n.C >= (n.Xa ? 0 : n.Ya) ||
                        ((n.m = Ph(Xr(n.Ha, n, e), SR(n, n.C))), n.C++, 0))
                  );
                })(n, e)) ||
              (2 == r && em(n))
            )
          )
            switch (
              (t && 0 < t.length && ((e = n.i), (e.i = e.i.concat(t))), i)
            ) {
              case 1:
                Tc(n, 5);
                break;
              case 4:
                Tc(n, 10);
                break;
              case 3:
                Tc(n, 6);
                break;
              default:
                Tc(n, 2);
            }
      }
      function SR(n, e) {
        let t = n.Pa + Math.floor(Math.random() * n.$a);
        return n.j || (t *= 2), t * e;
      }
      function Tc(n, e) {
        if ((n.h.info("Error code " + e), 2 == e)) {
          var t = null;
          n.j && (t = null);
          var r = Xr(n.jb, n);
          t ||
            ((t = new wc("//www.google.com/images/cleardot.gif")),
            (Xt.location && "http" == Xt.location.protocol) || Vh(t, "https"),
            Yg(t)),
            (function _R(n, e) {
              const t = new xh();
              if (Xt.Image) {
                const r = new Image();
                (r.onload = Tg(Hh, t, r, "TestLoadImage: loaded", !0, e)),
                  (r.onerror = Tg(Hh, t, r, "TestLoadImage: error", !1, e)),
                  (r.onabort = Tg(Hh, t, r, "TestLoadImage: abort", !1, e)),
                  (r.ontimeout = Tg(Hh, t, r, "TestLoadImage: timeout", !1, e)),
                  Xt.setTimeout(function () {
                    r.ontimeout && r.ontimeout();
                  }, 1e4),
                  (r.src = n);
              } else e(!1);
            })(t.toString(), r);
        } else vi(2);
        (n.G = 0), n.j && n.j.va(e), AR(n), AE(n);
      }
      function AR(n) {
        (n.G = 0),
          (n.I = -1),
          n.j &&
            ((0 != wE(n.i).length || 0 != n.l.length) &&
              ((n.i.i.length = 0), Kv(n.l), (n.l.length = 0)),
            n.j.ua());
      }
      function RR(n, e, t) {
        let r = (function lR(n) {
          return n instanceof wc ? Ps(n) : new wc(n, void 0);
        })(t);
        if ("" != r.i) e && Zg(r, e + "." + r.i), Uh(r, r.m);
        else {
          const i = Xt.location;
          r = (function Qg(n, e, t, r) {
            var i = new wc(null, void 0);
            return (
              n && Vh(i, n), e && Zg(i, e), t && Uh(i, t), r && (i.l = r), i
            );
          })(i.protocol, e ? e + "." + i.hostname : i.hostname, +i.port, t);
        }
        return (
          n.aa &&
            Rg(n.aa, function (i, a) {
              ar(r, a, i);
            }),
          (t = n.sa),
          (e = n.D) && t && ar(r, e, t),
          ar(r, "VER", n.ma),
          qh(n, r),
          r
        );
      }
      function Ib(n, e, t) {
        if (e && !n.H)
          throw Error("Can't create secondary domain capable XhrIo object.");
        return (
          ((e = new Nr(t && n.Ba && !n.qa ? new Gh({ ib: !0 }) : n.qa)).L =
            n.H),
          e
        );
      }
      function Kh() {}
      function nm() {
        if (dc && !(10 <= Number(zA)))
          throw Error("Environmental error: no available transport.");
      }
      function Bi(n, e) {
        xr.call(this),
          (this.g = new SE(e)),
          (this.l = n),
          (this.h = (e && e.messageUrlParams) || null),
          (n = (e && e.messageHeaders) || null),
          e &&
            e.clientProtocolHeaderRequired &&
            (n
              ? (n["X-Client-Protocol"] = "webchannel")
              : (n = { "X-Client-Protocol": "webchannel" })),
          (this.g.s = n),
          (n = (e && e.initMessageHeaders) || null),
          e &&
            e.messageContentType &&
            (n
              ? (n["X-WebChannel-Content-Type"] = e.messageContentType)
              : (n = { "X-WebChannel-Content-Type": e.messageContentType })),
          e &&
            e.ya &&
            (n
              ? (n["X-WebChannel-Client-Profile"] = e.ya)
              : (n = { "X-WebChannel-Client-Profile": e.ya })),
          (this.g.P = n),
          (n = e && e.httpHeadersOverwriteParam) && !Sg(n) && (this.g.o = n),
          (this.A = (e && e.supportsCrossDomainXhr) || !1),
          (this.v = (e && e.sendRawJson) || !1),
          (e = e && e.httpSessionIdParam) &&
            !Sg(e) &&
            ((this.g.D = e),
            null !== (n = this.h) &&
              e in n &&
              e in (n = this.h) &&
              delete n[e]),
          (this.j = new Ou(this));
      }
      function xE(n) {
        Gg.call(this);
        var e = n.__sm__;
        if (e) {
          e: {
            for (const t in e) {
              n = t;
              break e;
            }
            n = void 0;
          }
          (this.i = n) &&
            ((n = this.i), (e = null !== e && n in e ? e[n] : void 0)),
            (this.data = e);
        } else this.data = n;
      }
      function xa() {
        cE.call(this), (this.status = 1);
      }
      function Ou(n) {
        this.g = n;
      }
      ((Et = Nr.prototype).ea = function (n, e, t, r) {
        if (this.g)
          throw Error(
            "[goog.net.XhrIo] Object is active with another request=" +
              this.H +
              "; newUri=" +
              n
          );
        (e = e ? e.toUpperCase() : "GET"),
          (this.H = n),
          (this.j = ""),
          (this.m = 0),
          (this.D = !1),
          (this.h = !0),
          (this.g = this.u ? this.u.g() : dE.g()),
          (this.C = (function lE(n) {
            return n.h || (n.h = n.i());
          })(this.u ? this.u : dE)),
          (this.g.onreadystatechange = Xr(this.Fa, this));
        try {
          (this.F = !0), this.g.open(e, String(n), !0), (this.F = !1);
        } catch (a) {
          return void IR(this, a);
        }
        n = t || "";
        const i = new Lh(this.headers);
        r &&
          Ec(r, function (a, l) {
            i.set(l, a);
          }),
          (r = (function BA(n) {
            e: {
              var e = mb;
              const t = n.length,
                r = "string" == typeof n ? n.split("") : n;
              for (let i = 0; i < t; i++)
                if (i in r && e.call(void 0, r[i], i, n)) {
                  e = i;
                  break e;
                }
              e = -1;
            }
            return 0 > e ? null : "string" == typeof n ? n.charAt(e) : n[e];
          })(i.T())),
          (t = Xt.FormData && n instanceof Xt.FormData),
          !(0 <= GC(ER, e)) ||
            r ||
            t ||
            i.set(
              "Content-Type",
              "application/x-www-form-urlencoded;charset=utf-8"
            ),
          i.forEach(function (a, l) {
            this.g.setRequestHeader(l, a);
          }, this),
          this.J && (this.g.responseType = this.J),
          "withCredentials" in this.g &&
            this.g.withCredentials !== this.L &&
            (this.g.withCredentials = this.L);
        try {
          CR(this),
            0 < this.B &&
              ((this.K = (function wR(n) {
                return (
                  dc &&
                  (function WA() {
                    return (function $A(n) {
                      var e = GA;
                      return Object.prototype.hasOwnProperty.call(e, 9)
                        ? e[9]
                        : (e[9] = n(9));
                    })(function () {
                      let n = 0;
                      const e = qC(String(xg)).split("."),
                        t = qC("9").split("."),
                        r = Math.max(e.length, t.length);
                      for (let l = 0; 0 == n && l < r; l++) {
                        var i = e[l] || "",
                          a = t[l] || "";
                        do {
                          if (
                            ((i = /(\d*)(\D*)(.*)/.exec(i) || ["", "", "", ""]),
                            (a = /(\d*)(\D*)(.*)/.exec(a) || ["", "", "", ""]),
                            0 == i[0].length && 0 == a[0].length)
                          )
                            break;
                          (n =
                            Ag(
                              0 == i[1].length ? 0 : parseInt(i[1], 10),
                              0 == a[1].length ? 0 : parseInt(a[1], 10)
                            ) ||
                            Ag(0 == i[2].length, 0 == a[2].length) ||
                            Ag(i[2], a[2])),
                            (i = i[3]),
                            (a = a[3]);
                        } while (0 == n);
                      }
                      return 0 <= n;
                    });
                  })() &&
                  "number" == typeof n.timeout &&
                  void 0 !== n.ontimeout
                );
              })(this.g))
                ? ((this.g.timeout = this.B),
                  (this.g.ontimeout = Xr(this.pa, this)))
                : (this.A = Vg(this.pa, this.B, this))),
            (this.v = !0),
            this.g.send(n),
            (this.v = !1);
        } catch (a) {
          IR(this, a);
        }
      }),
        (Et.pa = function () {
          typeof zv < "u" &&
            this.g &&
            ((this.j = "Timed out after " + this.B + "ms, aborting"),
            (this.m = 8),
            Lr(this, "timeout"),
            this.abort(8));
        }),
        (Et.abort = function (n) {
          this.g &&
            this.h &&
            ((this.h = !1),
            (this.l = !0),
            this.g.abort(),
            (this.l = !1),
            (this.m = n || 7),
            Lr(this, "complete"),
            Lr(this, "abort"),
            Wh(this));
        }),
        (Et.M = function () {
          this.g &&
            (this.h &&
              ((this.h = !1), (this.l = !0), this.g.abort(), (this.l = !1)),
            Wh(this, !0)),
            Nr.Z.M.call(this);
        }),
        (Et.Fa = function () {
          this.s || (this.F || this.v || this.l ? _b(this) : this.cb());
        }),
        (Et.cb = function () {
          _b(this);
        }),
        (Et.ba = function () {
          try {
            return 2 < Os(this) ? this.g.status : -1;
          } catch {
            return -1;
          }
        }),
        (Et.ga = function () {
          try {
            return this.g ? this.g.responseText : "";
          } catch {
            return "";
          }
        }),
        (Et.Qa = function (n) {
          if (this.g) {
            var e = this.g.responseText;
            return n && 0 == e.indexOf(n) && (e = e.substring(n.length)), yR(e);
          }
        }),
        (Et.Da = function () {
          return this.m;
        }),
        (Et.La = function () {
          return "string" == typeof this.j ? this.j : String(this.j);
        }),
        ((Et = SE.prototype).ma = 8),
        (Et.G = 1),
        (Et.hb = function (n) {
          try {
            this.h.info("Origin Trials invoked: " + n);
          } catch {}
        }),
        (Et.Ha = function (n) {
          if (this.m)
            if (((this.m = null), 1 == this.G)) {
              if (!n) {
                (this.V = Math.floor(1e5 * Math.random())), (n = this.V++);
                const i = new kh(this, this.h, n, void 0);
                let a = this.s;
                if (
                  (this.P && (a ? ((a = Qv(a)), jA(a, this.P)) : (a = this.P)),
                  null === this.o && (i.H = a),
                  this.ja)
                )
                  e: {
                    for (var e = 0, t = 0; t < this.l.length; t++) {
                      var r = this.l[t];
                      if (
                        void 0 ===
                        (r =
                          "__data__" in r.g &&
                          "string" == typeof (r = r.g.__data__)
                            ? r.length
                            : void 0)
                      )
                        break;
                      if (4096 < (e += r)) {
                        e = t;
                        break e;
                      }
                      if (4096 === e || t === this.l.length - 1) {
                        e = t + 1;
                        break e;
                      }
                    }
                    e = 1e3;
                  }
                else e = 1e3;
                (e = bR(this, i, e)),
                  ar((t = Ps(this.F)), "RID", n),
                  ar(t, "CVER", 22),
                  this.D && ar(t, "X-HTTP-Session-Id", this.D),
                  qh(this, t),
                  this.o && a && TE(t, this.o, a),
                  $h(this.i, i),
                  this.Ra && ar(t, "TYPE", "init"),
                  this.ja
                    ? (ar(t, "$req", e),
                      ar(t, "SID", "null"),
                      (i.$ = !0),
                      fE(i, t, null))
                    : fE(i, t, e),
                  (this.G = 2);
              }
            } else
              3 == this.G &&
                (n
                  ? Eb(this, n)
                  : 0 == this.l.length || Xg(this.i) || Eb(this));
        }),
        (Et.Ga = function () {
          if (
            ((this.u = null),
            wb(this),
            this.$ && !(this.L || null == this.g || 0 >= this.O))
          ) {
            var n = 2 * this.O;
            this.h.info("BP detection timer enabled: " + n),
              (this.B = Ph(Xr(this.bb, this), n));
          }
        }),
        (Et.bb = function () {
          this.B &&
            ((this.B = null),
            this.h.info("BP detection timeout reached."),
            this.h.info("Buffering proxy detected and switch to long-polling!"),
            (this.N = !1),
            (this.L = !0),
            vi(10),
            Pu(this),
            wb(this));
        }),
        (Et.ab = function () {
          null != this.v && ((this.v = null), Pu(this), em(this), vi(19));
        }),
        (Et.jb = function (n) {
          n
            ? (this.h.info("Successfully pinged google.com"), vi(2))
            : (this.h.info("Failed to ping google.com"), vi(1));
        }),
        ((Et = Kh.prototype).xa = function () {}),
        (Et.wa = function () {}),
        (Et.va = function () {}),
        (Et.ua = function () {}),
        (Et.Oa = function () {}),
        (nm.prototype.g = function (n, e) {
          return new Bi(n, e);
        }),
        zr(Bi, xr),
        (Bi.prototype.m = function () {
          (this.g.j = this.j), this.A && (this.g.H = !0);
          var n = this.g,
            e = this.l,
            t = this.h || void 0;
          n.Wa && (n.h.info("Origin Trials enabled."), eb(Xr(n.hb, n, e))),
            vi(0),
            (n.W = e),
            (n.aa = t || {}),
            (n.N = n.X),
            (n.F = RR(n, null, n.W)),
            zh(n);
        }),
        (Bi.prototype.close = function () {
          Dc(this.g);
        }),
        (Bi.prototype.u = function (n) {
          if ("string" == typeof n) {
            var e = {};
            (e.__data__ = n), RE(this.g, e);
          } else
            this.v
              ? (((e = {}).__data__ = Fg(n)), RE(this.g, e))
              : RE(this.g, n);
        }),
        (Bi.prototype.M = function () {
          (this.g.j = null),
            delete this.j,
            Dc(this.g),
            delete this.g,
            Bi.Z.M.call(this);
        }),
        zr(xE, Gg),
        zr(xa, cE),
        zr(Ou, Kh),
        (Ou.prototype.xa = function () {
          Lr(this.g, "a");
        }),
        (Ou.prototype.wa = function (n) {
          Lr(this.g, new xE(n));
        }),
        (Ou.prototype.va = function (n) {
          Lr(this.g, new xa(n));
        }),
        (Ou.prototype.ua = function () {
          Lr(this.g, "b");
        }),
        (nm.prototype.createWebChannel = nm.prototype.g),
        (Bi.prototype.send = Bi.prototype.u),
        (Bi.prototype.open = Bi.prototype.m),
        (Bi.prototype.close = Bi.prototype.close),
        ($g.NO_ERROR = 0),
        ($g.TIMEOUT = 8),
        ($g.HTTP_ERROR = 6),
        (ob.COMPLETE = "complete"),
        (ab.EventType = yc),
        (yc.OPEN = "a"),
        (yc.CLOSE = "b"),
        (yc.ERROR = "c"),
        (yc.MESSAGE = "d"),
        (xr.prototype.listen = xr.prototype.N),
        (Nr.prototype.listenOnce = Nr.prototype.O),
        (Nr.prototype.getLastError = Nr.prototype.La),
        (Nr.prototype.getLastErrorCode = Nr.prototype.Da),
        (Nr.prototype.getStatus = Nr.prototype.ba),
        (Nr.prototype.getResponseJson = Nr.prototype.Qa),
        (Nr.prototype.getResponseText = Nr.prototype.ga),
        (Nr.prototype.send = Nr.prototype.ea);
      var NE = (so.createWebChannelTransport = function () {
          return new nm();
        }),
        PE = (so.getStatEventTarget = function () {
          return jg();
        }),
        OE = (so.ErrorCode = $g),
        kE = (so.EventType = ob),
        FE = (so.Event = Ma),
        Zh = (so.Stat = {
          rb: 0,
          ub: 1,
          vb: 2,
          Ob: 3,
          Tb: 4,
          Qb: 5,
          Rb: 6,
          Pb: 7,
          Nb: 8,
          Sb: 9,
          PROXY: 10,
          NOPROXY: 11,
          Lb: 12,
          Hb: 13,
          Ib: 14,
          Gb: 15,
          Jb: 16,
          Kb: 17,
          nb: 18,
          mb: 19,
          ob: 20,
        }),
        mk = (so.FetchXmlHttpFactory = Gh),
        LE = (so.WebChannel = ab),
        _k = (so.XhrIo = Nr);
      const MR = "@firebase/firestore";
      class Pr {
        constructor(e) {
          this.uid = e;
        }
        isAuthenticated() {
          return null != this.uid;
        }
        toKey() {
          return this.isAuthenticated() ? "uid:" + this.uid : "anonymous-user";
        }
        isEqual(e) {
          return e.uid === this.uid;
        }
      }
      (Pr.UNAUTHENTICATED = new Pr(null)),
        (Pr.GOOGLE_CREDENTIALS = new Pr("google-credentials-uid")),
        (Pr.FIRST_PARTY = new Pr("first-party-uid")),
        (Pr.MOCK_USER = new Pr("mock-user"));
      let Sc = "9.9.1";
      const Na = new Li.Yd("@firebase/firestore");
      function VE() {
        return Na.logLevel;
      }
      function Je(n, ...e) {
        if (Na.logLevel <= Li.in.DEBUG) {
          const t = e.map(UE);
          Na.debug(`Firestore (${Sc}): ${n}`, ...t);
        }
      }
      function _r(n, ...e) {
        if (Na.logLevel <= Li.in.ERROR) {
          const t = e.map(UE);
          Na.error(`Firestore (${Sc}): ${n}`, ...t);
        }
      }
      function Ac(n, ...e) {
        if (Na.logLevel <= Li.in.WARN) {
          const t = e.map(UE);
          Na.warn(`Firestore (${Sc}): ${n}`, ...t);
        }
      }
      function UE(n) {
        if ("string" == typeof n) return n;
        try {
          return JSON.stringify(n);
        } catch {
          return n;
        }
      }
      function Ct(n = "Unexpected state") {
        const e = `FIRESTORE (${Sc}) INTERNAL ASSERTION FAILED: ` + n;
        throw (_r(e), new Error(e));
      }
      function Wt(n, e) {
        n || Ct();
      }
      function gt(n, e) {
        return n;
      }
      const be = {
        OK: "ok",
        CANCELLED: "cancelled",
        UNKNOWN: "unknown",
        INVALID_ARGUMENT: "invalid-argument",
        DEADLINE_EXCEEDED: "deadline-exceeded",
        NOT_FOUND: "not-found",
        ALREADY_EXISTS: "already-exists",
        PERMISSION_DENIED: "permission-denied",
        UNAUTHENTICATED: "unauthenticated",
        RESOURCE_EXHAUSTED: "resource-exhausted",
        FAILED_PRECONDITION: "failed-precondition",
        ABORTED: "aborted",
        OUT_OF_RANGE: "out-of-range",
        UNIMPLEMENTED: "unimplemented",
        INTERNAL: "internal",
        UNAVAILABLE: "unavailable",
        DATA_LOSS: "data-loss",
      };
      class Ge extends ee.ZR {
        constructor(e, t) {
          super(e, t),
            (this.code = e),
            (this.message = t),
            (this.toString = () =>
              `${this.name}: [code=${this.code}]: ${this.message}`);
        }
      }
      class Vr {
        constructor() {
          this.promise = new Promise((e, t) => {
            (this.resolve = e), (this.reject = t);
          });
        }
      }
      class Cb {
        constructor(e, t) {
          (this.user = t),
            (this.type = "OAuth"),
            (this.headers = new Map()),
            this.headers.set("Authorization", `Bearer ${e}`);
        }
      }
      class yk {
        getToken() {
          return Promise.resolve(null);
        }
        invalidateToken() {}
        start(e, t) {
          e.enqueueRetryable(() => t(Pr.UNAUTHENTICATED));
        }
        shutdown() {}
      }
      class vk {
        constructor(e) {
          (this.token = e), (this.changeListener = null);
        }
        getToken() {
          return Promise.resolve(this.token);
        }
        invalidateToken() {}
        start(e, t) {
          (this.changeListener = t),
            e.enqueueRetryable(() => t(this.token.user));
        }
        shutdown() {
          this.changeListener = null;
        }
      }
      class NR {
        constructor(e) {
          (this.t = e),
            (this.currentUser = Pr.UNAUTHENTICATED),
            (this.i = 0),
            (this.forceRefresh = !1),
            (this.auth = null);
        }
        start(e, t) {
          var r = this;
          let i = this.i;
          const a = (v) =>
            this.i !== i ? ((i = this.i), t(v)) : Promise.resolve();
          let l = new Vr();
          this.o = () => {
            this.i++,
              (this.currentUser = this.u()),
              l.resolve(),
              (l = new Vr()),
              e.enqueueRetryable(() => a(this.currentUser));
          };
          const h = () => {
              const v = l;
              e.enqueueRetryable(
                (0, Te.Z)(function* () {
                  yield v.promise, yield a(r.currentUser);
                })
              );
            },
            m = (v) => {
              Je("FirebaseAuthCredentialsProvider", "Auth detected"),
                (this.auth = v),
                this.auth.addAuthTokenListener(this.o),
                h();
            };
          this.t.onInit((v) => m(v)),
            setTimeout(() => {
              if (!this.auth) {
                const v = this.t.getImmediate({ optional: !0 });
                v
                  ? m(v)
                  : (Je(
                      "FirebaseAuthCredentialsProvider",
                      "Auth not yet detected"
                    ),
                    l.resolve(),
                    (l = new Vr()));
              }
            }, 0),
            h();
        }
        getToken() {
          const e = this.i,
            t = this.forceRefresh;
          return (
            (this.forceRefresh = !1),
            this.auth
              ? this.auth
                  .getToken(t)
                  .then((r) =>
                    this.i !== e
                      ? (Je(
                          "FirebaseAuthCredentialsProvider",
                          "getToken aborted due to token change."
                        ),
                        this.getToken())
                      : r
                      ? (Wt("string" == typeof r.accessToken),
                        new Cb(r.accessToken, this.currentUser))
                      : null
                  )
              : Promise.resolve(null)
          );
        }
        invalidateToken() {
          this.forceRefresh = !0;
        }
        shutdown() {
          this.auth && this.auth.removeAuthTokenListener(this.o);
        }
        u() {
          const e = this.auth && this.auth.getUid();
          return Wt(null === e || "string" == typeof e), new Pr(e);
        }
      }
      class PR {
        constructor(e, t, r) {
          (this.type = "FirstParty"),
            (this.user = Pr.FIRST_PARTY),
            (this.headers = new Map()),
            this.headers.set("X-Goog-AuthUser", t);
          const i = e.auth.getAuthHeaderValueForFirstParty([]);
          i && this.headers.set("Authorization", i),
            r && this.headers.set("X-Goog-Iam-Authorization-Token", r);
        }
      }
      class OR {
        constructor(e, t, r) {
          (this.h = e), (this.l = t), (this.m = r);
        }
        getToken() {
          return Promise.resolve(new PR(this.h, this.l, this.m));
        }
        start(e, t) {
          e.enqueueRetryable(() => t(Pr.FIRST_PARTY));
        }
        shutdown() {}
        invalidateToken() {}
      }
      class kR {
        constructor(e) {
          (this.value = e),
            (this.type = "AppCheck"),
            (this.headers = new Map()),
            e &&
              e.length > 0 &&
              this.headers.set("x-firebase-appcheck", this.value);
        }
      }
      class Ek {
        constructor(e) {
          (this.g = e),
            (this.forceRefresh = !1),
            (this.appCheck = null),
            (this.p = null);
        }
        start(e, t) {
          const r = (a) => {
            null != a.error &&
              Je(
                "FirebaseAppCheckTokenProvider",
                `Error getting App Check token; using placeholder token instead. Error: ${a.error.message}`
              );
            const l = a.token !== this.p;
            return (
              (this.p = a.token),
              Je(
                "FirebaseAppCheckTokenProvider",
                `Received ${l ? "new" : "existing"} token.`
              ),
              l ? t(a.token) : Promise.resolve()
            );
          };
          this.o = (a) => {
            e.enqueueRetryable(() => r(a));
          };
          const i = (a) => {
            Je("FirebaseAppCheckTokenProvider", "AppCheck detected"),
              (this.appCheck = a),
              this.appCheck.addTokenListener(this.o);
          };
          this.g.onInit((a) => i(a)),
            setTimeout(() => {
              if (!this.appCheck) {
                const a = this.g.getImmediate({ optional: !0 });
                a
                  ? i(a)
                  : Je(
                      "FirebaseAppCheckTokenProvider",
                      "AppCheck not yet detected"
                    );
              }
            }, 0);
        }
        getToken() {
          const e = this.forceRefresh;
          return (
            (this.forceRefresh = !1),
            this.appCheck
              ? this.appCheck
                  .getToken(e)
                  .then((t) =>
                    t
                      ? (Wt("string" == typeof t.token),
                        (this.p = t.token),
                        new kR(t.token))
                      : null
                  )
              : Promise.resolve(null)
          );
        }
        invalidateToken() {
          this.forceRefresh = !0;
        }
        shutdown() {
          this.appCheck && this.appCheck.removeTokenListener(this.o);
        }
      }
      function wk(n) {
        const e = typeof self < "u" && (self.crypto || self.msCrypto),
          t = new Uint8Array(n);
        if (e && "function" == typeof e.getRandomValues) e.getRandomValues(t);
        else for (let r = 0; r < n; r++) t[r] = Math.floor(256 * Math.random());
        return t;
      }
      class FR {
        static I() {
          const e =
              "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
            t = Math.floor(256 / e.length) * e.length;
          let r = "";
          for (; r.length < 20; ) {
            const i = wk(40);
            for (let a = 0; a < i.length; ++a)
              r.length < 20 && i[a] < t && (r += e.charAt(i[a] % e.length));
          }
          return r;
        }
      }
      function un(n, e) {
        return n < e ? -1 : n > e ? 1 : 0;
      }
      function Yh(n, e, t) {
        return n.length === e.length && n.every((r, i) => t(r, e[i]));
      }
      function LR(n) {
        return n + "\0";
      }
      class ur {
        constructor(e, t) {
          if (((this.seconds = e), (this.nanoseconds = t), t < 0))
            throw new Ge(
              be.INVALID_ARGUMENT,
              "Timestamp nanoseconds out of range: " + t
            );
          if (t >= 1e9)
            throw new Ge(
              be.INVALID_ARGUMENT,
              "Timestamp nanoseconds out of range: " + t
            );
          if (e < -62135596800)
            throw new Ge(
              be.INVALID_ARGUMENT,
              "Timestamp seconds out of range: " + e
            );
          if (e >= 253402300800)
            throw new Ge(
              be.INVALID_ARGUMENT,
              "Timestamp seconds out of range: " + e
            );
        }
        static now() {
          return ur.fromMillis(Date.now());
        }
        static fromDate(e) {
          return ur.fromMillis(e.getTime());
        }
        static fromMillis(e) {
          const t = Math.floor(e / 1e3),
            r = Math.floor(1e6 * (e - 1e3 * t));
          return new ur(t, r);
        }
        toDate() {
          return new Date(this.toMillis());
        }
        toMillis() {
          return 1e3 * this.seconds + this.nanoseconds / 1e6;
        }
        _compareTo(e) {
          return this.seconds === e.seconds
            ? un(this.nanoseconds, e.nanoseconds)
            : un(this.seconds, e.seconds);
        }
        isEqual(e) {
          return (
            e.seconds === this.seconds && e.nanoseconds === this.nanoseconds
          );
        }
        toString() {
          return (
            "Timestamp(seconds=" +
            this.seconds +
            ", nanoseconds=" +
            this.nanoseconds +
            ")"
          );
        }
        toJSON() {
          return { seconds: this.seconds, nanoseconds: this.nanoseconds };
        }
        valueOf() {
          return (
            String(this.seconds - -62135596800).padStart(12, "0") +
            "." +
            String(this.nanoseconds).padStart(9, "0")
          );
        }
      }
      class Kt {
        constructor(e) {
          this.timestamp = e;
        }
        static fromTimestamp(e) {
          return new Kt(e);
        }
        static min() {
          return new Kt(new ur(0, 0));
        }
        static max() {
          return new Kt(new ur(253402300799, 999999999));
        }
        compareTo(e) {
          return this.timestamp._compareTo(e.timestamp);
        }
        isEqual(e) {
          return this.timestamp.isEqual(e.timestamp);
        }
        toMicroseconds() {
          return (
            1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3
          );
        }
        toString() {
          return "SnapshotVersion(" + this.timestamp.toString() + ")";
        }
        toTimestamp() {
          return this.timestamp;
        }
      }
      class rm {
        constructor(e, t, r) {
          void 0 === t ? (t = 0) : t > e.length && Ct(),
            void 0 === r ? (r = e.length - t) : r > e.length - t && Ct(),
            (this.segments = e),
            (this.offset = t),
            (this.len = r);
        }
        get length() {
          return this.len;
        }
        isEqual(e) {
          return 0 === rm.comparator(this, e);
        }
        child(e) {
          const t = this.segments.slice(this.offset, this.limit());
          return (
            e instanceof rm
              ? e.forEach((r) => {
                  t.push(r);
                })
              : t.push(e),
            this.construct(t)
          );
        }
        limit() {
          return this.offset + this.length;
        }
        popFirst(e) {
          return this.construct(
            this.segments,
            this.offset + (e = void 0 === e ? 1 : e),
            this.length - e
          );
        }
        popLast() {
          return this.construct(this.segments, this.offset, this.length - 1);
        }
        firstSegment() {
          return this.segments[this.offset];
        }
        lastSegment() {
          return this.get(this.length - 1);
        }
        get(e) {
          return this.segments[this.offset + e];
        }
        isEmpty() {
          return 0 === this.length;
        }
        isPrefixOf(e) {
          if (e.length < this.length) return !1;
          for (let t = 0; t < this.length; t++)
            if (this.get(t) !== e.get(t)) return !1;
          return !0;
        }
        isImmediateParentOf(e) {
          if (this.length + 1 !== e.length) return !1;
          for (let t = 0; t < this.length; t++)
            if (this.get(t) !== e.get(t)) return !1;
          return !0;
        }
        forEach(e) {
          for (let t = this.offset, r = this.limit(); t < r; t++)
            e(this.segments[t]);
        }
        toArray() {
          return this.segments.slice(this.offset, this.limit());
        }
        static comparator(e, t) {
          const r = Math.min(e.length, t.length);
          for (let i = 0; i < r; i++) {
            const a = e.get(i),
              l = t.get(i);
            if (a < l) return -1;
            if (a > l) return 1;
          }
          return e.length < t.length ? -1 : e.length > t.length ? 1 : 0;
        }
      }
      class An extends rm {
        construct(e, t, r) {
          return new An(e, t, r);
        }
        canonicalString() {
          return this.toArray().join("/");
        }
        toString() {
          return this.canonicalString();
        }
        static fromString(...e) {
          const t = [];
          for (const r of e) {
            if (r.indexOf("//") >= 0)
              throw new Ge(
                be.INVALID_ARGUMENT,
                `Invalid segment (${r}). Paths must not contain // in them.`
              );
            t.push(...r.split("/").filter((i) => i.length > 0));
          }
          return new An(t);
        }
        static emptyPath() {
          return new An([]);
        }
      }
      const s = /^[_a-zA-Z][_a-zA-Z0-9]*$/;
      class o extends rm {
        construct(e, t, r) {
          return new o(e, t, r);
        }
        static isValidIdentifier(e) {
          return s.test(e);
        }
        canonicalString() {
          return this.toArray()
            .map(
              (e) => (
                (e = e.replace(/\\/g, "\\\\").replace(/`/g, "\\`")),
                o.isValidIdentifier(e) || (e = "`" + e + "`"),
                e
              )
            )
            .join(".");
        }
        toString() {
          return this.canonicalString();
        }
        isKeyField() {
          return 1 === this.length && "__name__" === this.get(0);
        }
        static keyField() {
          return new o(["__name__"]);
        }
        static fromServerFormat(e) {
          const t = [];
          let r = "",
            i = 0;
          const a = () => {
            if (0 === r.length)
              throw new Ge(
                be.INVALID_ARGUMENT,
                `Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`
              );
            t.push(r), (r = "");
          };
          let l = !1;
          for (; i < e.length; ) {
            const h = e[i];
            if ("\\" === h) {
              if (i + 1 === e.length)
                throw new Ge(
                  be.INVALID_ARGUMENT,
                  "Path has trailing escape character: " + e
                );
              const m = e[i + 1];
              if ("\\" !== m && "." !== m && "`" !== m)
                throw new Ge(
                  be.INVALID_ARGUMENT,
                  "Path has invalid escape sequence: " + e
                );
              (r += m), (i += 2);
            } else
              "`" === h
                ? ((l = !l), i++)
                : "." !== h || l
                ? ((r += h), i++)
                : (a(), i++);
          }
          if ((a(), l))
            throw new Ge(be.INVALID_ARGUMENT, "Unterminated ` in path: " + e);
          return new o(t);
        }
        static emptyPath() {
          return new o([]);
        }
      }
      class u {
        constructor(e) {
          this.path = e;
        }
        static fromPath(e) {
          return new u(An.fromString(e));
        }
        static fromName(e) {
          return new u(An.fromString(e).popFirst(5));
        }
        static empty() {
          return new u(An.emptyPath());
        }
        get collectionGroup() {
          return this.path.popLast().lastSegment();
        }
        hasCollectionId(e) {
          return (
            this.path.length >= 2 && this.path.get(this.path.length - 2) === e
          );
        }
        getCollectionGroup() {
          return this.path.get(this.path.length - 2);
        }
        getCollectionPath() {
          return this.path.popLast();
        }
        isEqual(e) {
          return null !== e && 0 === An.comparator(this.path, e.path);
        }
        toString() {
          return this.path.toString();
        }
        static comparator(e, t) {
          return An.comparator(e.path, t.path);
        }
        static isDocumentKey(e) {
          return e.length % 2 == 0;
        }
        static fromSegments(e) {
          return new u(new An(e.slice()));
        }
      }
      class c {
        constructor(e, t, r, i) {
          (this.indexId = e),
            (this.collectionGroup = t),
            (this.fields = r),
            (this.indexState = i);
        }
      }
      function d(n) {
        return n.fields.find((e) => 2 === e.kind);
      }
      function p(n) {
        return n.fields.filter((e) => 2 !== e.kind);
      }
      c.UNKNOWN_ID = -1;
      class y {
        constructor(e, t) {
          (this.fieldPath = e), (this.kind = t);
        }
      }
      class w {
        constructor(e, t) {
          (this.sequenceNumber = e), (this.offset = t);
        }
        static empty() {
          return new w(0, A.min());
        }
      }
      function C(n, e) {
        const t = n.toTimestamp().seconds,
          r = n.toTimestamp().nanoseconds + 1,
          i = Kt.fromTimestamp(1e9 === r ? new ur(t + 1, 0) : new ur(t, r));
        return new A(i, u.empty(), e);
      }
      function T(n) {
        return new A(n.readTime, n.key, -1);
      }
      class A {
        constructor(e, t, r) {
          (this.readTime = e),
            (this.documentKey = t),
            (this.largestBatchId = r);
        }
        static min() {
          return new A(Kt.min(), u.empty(), -1);
        }
        static max() {
          return new A(Kt.max(), u.empty(), -1);
        }
      }
      function O(n, e) {
        let t = n.readTime.compareTo(e.readTime);
        return 0 !== t
          ? t
          : ((t = u.comparator(n.documentKey, e.documentKey)),
            0 !== t ? t : un(n.largestBatchId, e.largestBatchId));
      }
      const Z =
        "The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.";
      class oe {
        constructor() {
          this.onCommittedListeners = [];
        }
        addOnCommittedListener(e) {
          this.onCommittedListeners.push(e);
        }
        raiseOnCommittedEvent() {
          this.onCommittedListeners.forEach((e) => e());
        }
      }
      function xe(n) {
        return Ye.apply(this, arguments);
      }
      function Ye() {
        return (
          (Ye = (0, Te.Z)(function* (n) {
            if (n.code !== be.FAILED_PRECONDITION || n.message !== Z) throw n;
            Je("LocalStore", "Unexpectedly lost primary lease");
          })),
          Ye.apply(this, arguments)
        );
      }
      class W {
        constructor(e) {
          (this.nextCallback = null),
            (this.catchCallback = null),
            (this.result = void 0),
            (this.error = void 0),
            (this.isDone = !1),
            (this.callbackAttached = !1),
            e(
              (t) => {
                (this.isDone = !0),
                  (this.result = t),
                  this.nextCallback && this.nextCallback(t);
              },
              (t) => {
                (this.isDone = !0),
                  (this.error = t),
                  this.catchCallback && this.catchCallback(t);
              }
            );
        }
        catch(e) {
          return this.next(void 0, e);
        }
        next(e, t) {
          return (
            this.callbackAttached && Ct(),
            (this.callbackAttached = !0),
            this.isDone
              ? this.error
                ? this.wrapFailure(t, this.error)
                : this.wrapSuccess(e, this.result)
              : new W((r, i) => {
                  (this.nextCallback = (a) => {
                    this.wrapSuccess(e, a).next(r, i);
                  }),
                    (this.catchCallback = (a) => {
                      this.wrapFailure(t, a).next(r, i);
                    });
                })
          );
        }
        toPromise() {
          return new Promise((e, t) => {
            this.next(e, t);
          });
        }
        wrapUserFunction(e) {
          try {
            const t = e();
            return t instanceof W ? t : W.resolve(t);
          } catch (t) {
            return W.reject(t);
          }
        }
        wrapSuccess(e, t) {
          return e ? this.wrapUserFunction(() => e(t)) : W.resolve(t);
        }
        wrapFailure(e, t) {
          return e ? this.wrapUserFunction(() => e(t)) : W.reject(t);
        }
        static resolve(e) {
          return new W((t, r) => {
            t(e);
          });
        }
        static reject(e) {
          return new W((t, r) => {
            r(e);
          });
        }
        static waitFor(e) {
          return new W((t, r) => {
            let i = 0,
              a = 0,
              l = !1;
            e.forEach((h) => {
              ++i,
                h.next(
                  () => {
                    ++a, l && a === i && t();
                  },
                  (m) => r(m)
                );
            }),
              (l = !0),
              a === i && t();
          });
        }
        static or(e) {
          let t = W.resolve(!1);
          for (const r of e) t = t.next((i) => (i ? W.resolve(i) : r()));
          return t;
        }
        static forEach(e, t) {
          const r = [];
          return (
            e.forEach((i, a) => {
              r.push(t.call(this, i, a));
            }),
            this.waitFor(r)
          );
        }
        static mapArray(e, t) {
          return new W((r, i) => {
            const a = e.length,
              l = new Array(a);
            let h = 0;
            for (let m = 0; m < a; m++) {
              const v = m;
              t(e[v]).next(
                (b) => {
                  (l[v] = b), ++h, h === a && r(l);
                },
                (b) => i(b)
              );
            }
          });
        }
        static doWhile(e, t) {
          return new W((r, i) => {
            const a = () => {
              !0 === e()
                ? t().next(() => {
                    a();
                  }, i)
                : r();
            };
            a();
          });
        }
      }
      class _t {
        constructor(e, t) {
          (this.action = e),
            (this.transaction = t),
            (this.aborted = !1),
            (this.T = new Vr()),
            (this.transaction.oncomplete = () => {
              this.T.resolve();
            }),
            (this.transaction.onabort = () => {
              t.error ? this.T.reject(new kt(e, t.error)) : this.T.resolve();
            }),
            (this.transaction.onerror = (r) => {
              const i = Qh(r.target.error);
              this.T.reject(new kt(e, i));
            });
        }
        static open(e, t, r, i) {
          try {
            return new _t(t, e.transaction(i, r));
          } catch (a) {
            throw new kt(t, a);
          }
        }
        get A() {
          return this.T.promise;
        }
        abort(e) {
          e && this.T.reject(e),
            this.aborted ||
              (Je(
                "SimpleDb",
                "Aborting transaction:",
                e ? e.message : "Client-initiated abort"
              ),
              (this.aborted = !0),
              this.transaction.abort());
        }
        R() {
          const e = this.transaction;
          this.aborted || "function" != typeof e.commit || e.commit();
        }
        store(e) {
          const t = this.transaction.objectStore(e);
          return new Kn(t);
        }
      }
      class xt {
        constructor(e, t, r) {
          (this.name = e),
            (this.version = t),
            (this.P = r),
            12.2 === xt.v((0, ee.z$)()) &&
              _r(
                "Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround."
              );
        }
        static delete(e) {
          return (
            Je("SimpleDb", "Removing database:", e),
            ji(window.indexedDB.deleteDatabase(e)).toPromise()
          );
        }
        static V() {
          if (!(0, ee.hl)()) return !1;
          if (xt.S()) return !0;
          const e = (0, ee.z$)(),
            t = xt.v(e),
            r = 0 < t && t < 10,
            i = xt.D(e),
            a = 0 < i && i < 4.5;
          return !(
            e.indexOf("MSIE ") > 0 ||
            e.indexOf("Trident/") > 0 ||
            e.indexOf("Edge/") > 0 ||
            r ||
            a
          );
        }
        static S() {
          var e;
          return (
            typeof process < "u" &&
            "YES" ===
              (null === (e = process.env) || void 0 === e ? void 0 : e.C)
          );
        }
        static N(e, t) {
          return e.store(t);
        }
        static v(e) {
          const t = e.match(/i(?:phone|pad|pod) os ([\d_]+)/i),
            r = t ? t[1].split("_").slice(0, 2).join(".") : "-1";
          return Number(r);
        }
        static D(e) {
          const t = e.match(/Android ([\d.]+)/i),
            r = t ? t[1].split(".").slice(0, 2).join(".") : "-1";
          return Number(r);
        }
        k(e) {
          var t = this;
          return (0, Te.Z)(function* () {
            return (
              t.db ||
                (Je("SimpleDb", "Opening database:", t.name),
                (t.db = yield new Promise((r, i) => {
                  const a = indexedDB.open(t.name, t.version);
                  (a.onsuccess = (l) => {
                    r(l.target.result);
                  }),
                    (a.onblocked = () => {
                      i(
                        new kt(
                          e,
                          "Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed."
                        )
                      );
                    }),
                    (a.onerror = (l) => {
                      const h = l.target.error;
                      i(
                        "VersionError" === h.name
                          ? new Ge(
                              be.FAILED_PRECONDITION,
                              "A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh."
                            )
                          : "InvalidStateError" === h.name
                          ? new Ge(
                              be.FAILED_PRECONDITION,
                              "Unable to open an IndexedDB connection. This could be due to running in a private browsing session on a browser whose private browsing sessions do not support IndexedDB: " +
                                h
                            )
                          : new kt(e, h)
                      );
                    }),
                    (a.onupgradeneeded = (l) => {
                      Je(
                        "SimpleDb",
                        'Database "' +
                          t.name +
                          '" requires upgrade from version:',
                        l.oldVersion
                      ),
                        t.P.O(
                          l.target.result,
                          a.transaction,
                          l.oldVersion,
                          t.version
                        ).next(() => {
                          Je(
                            "SimpleDb",
                            "Database upgrade to version " +
                              t.version +
                              " complete"
                          );
                        });
                    });
                }))),
              t.M && (t.db.onversionchange = (r) => t.M(r)),
              t.db
            );
          })();
        }
        F(e) {
          (this.M = e), this.db && (this.db.onversionchange = (t) => e(t));
        }
        runTransaction(e, t, r, i) {
          var a = this;
          return (0, Te.Z)(function* () {
            const l = "readonly" === t;
            let h = 0;
            for (;;) {
              ++h;
              try {
                a.db = yield a.k(e);
                const m = _t.open(a.db, e, l ? "readonly" : "readwrite", r),
                  v = i(m)
                    .next((b) => (m.R(), b))
                    .catch((b) => (m.abort(b), W.reject(b)))
                    .toPromise();
                return v.catch(() => {}), yield m.A, v;
              } catch (m) {
                const v = m,
                  b = "FirebaseError" !== v.name && h < 3;
                if (
                  (Je(
                    "SimpleDb",
                    "Transaction failed with error:",
                    v.message,
                    "Retrying:",
                    b
                  ),
                  a.close(),
                  !b)
                )
                  return Promise.reject(v);
              }
            }
          })();
        }
        close() {
          this.db && this.db.close(), (this.db = void 0);
        }
      }
      class We {
        constructor(e) {
          (this.$ = e), (this.B = !1), (this.L = null);
        }
        get isDone() {
          return this.B;
        }
        get U() {
          return this.L;
        }
        set cursor(e) {
          this.$ = e;
        }
        done() {
          this.B = !0;
        }
        q(e) {
          this.L = e;
        }
        delete() {
          return ji(this.$.delete());
        }
      }
      class kt extends Ge {
        constructor(e, t) {
          super(be.UNAVAILABLE, `IndexedDB transaction '${e}' failed: ${t}`),
            (this.name = "IndexedDbTransactionError");
        }
      }
      function nn(n) {
        return "IndexedDbTransactionError" === n.name;
      }
      class Kn {
        constructor(e) {
          this.store = e;
        }
        put(e, t) {
          let r;
          return (
            void 0 !== t
              ? (Je("SimpleDb", "PUT", this.store.name, e, t),
                (r = this.store.put(t, e)))
              : (Je("SimpleDb", "PUT", this.store.name, "<auto-key>", e),
                (r = this.store.put(e))),
            ji(r)
          );
        }
        add(e) {
          return (
            Je("SimpleDb", "ADD", this.store.name, e, e), ji(this.store.add(e))
          );
        }
        get(e) {
          return ji(this.store.get(e)).next(
            (t) => (
              void 0 === t && (t = null),
              Je("SimpleDb", "GET", this.store.name, e, t),
              t
            )
          );
        }
        delete(e) {
          return (
            Je("SimpleDb", "DELETE", this.store.name, e),
            ji(this.store.delete(e))
          );
        }
        count() {
          return (
            Je("SimpleDb", "COUNT", this.store.name), ji(this.store.count())
          );
        }
        K(e, t) {
          const r = this.options(e, t);
          if (r.index || "function" != typeof this.store.getAll) {
            const i = this.cursor(r),
              a = [];
            return this.G(i, (l, h) => {
              a.push(h);
            }).next(() => a);
          }
          {
            const i = this.store.getAll(r.range);
            return new W((a, l) => {
              (i.onerror = (h) => {
                l(h.target.error);
              }),
                (i.onsuccess = (h) => {
                  a(h.target.result);
                });
            });
          }
        }
        j(e, t) {
          const r = this.store.getAll(e, null === t ? void 0 : t);
          return new W((i, a) => {
            (r.onerror = (l) => {
              a(l.target.error);
            }),
              (r.onsuccess = (l) => {
                i(l.target.result);
              });
          });
        }
        W(e, t) {
          Je("SimpleDb", "DELETE ALL", this.store.name);
          const r = this.options(e, t);
          r.H = !1;
          const i = this.cursor(r);
          return this.G(i, (a, l, h) => h.delete());
        }
        J(e, t) {
          let r;
          t ? (r = e) : ((r = {}), (t = e));
          const i = this.cursor(r);
          return this.G(i, t);
        }
        Y(e) {
          const t = this.cursor({});
          return new W((r, i) => {
            (t.onerror = (a) => {
              const l = Qh(a.target.error);
              i(l);
            }),
              (t.onsuccess = (a) => {
                const l = a.target.result;
                l
                  ? e(l.primaryKey, l.value).next((h) => {
                      h ? l.continue() : r();
                    })
                  : r();
              });
          });
        }
        G(e, t) {
          const r = [];
          return new W((i, a) => {
            (e.onerror = (l) => {
              a(l.target.error);
            }),
              (e.onsuccess = (l) => {
                const h = l.target.result;
                if (!h) return void i();
                const m = new We(h),
                  v = t(h.primaryKey, h.value, m);
                if (v instanceof W) {
                  const b = v.catch((D) => (m.done(), W.reject(D)));
                  r.push(b);
                }
                m.isDone ? i() : null === m.U ? h.continue() : h.continue(m.U);
              });
          }).next(() => W.waitFor(r));
        }
        options(e, t) {
          let r;
          return (
            void 0 !== e && ("string" == typeof e ? (r = e) : (t = e)),
            { index: r, range: t }
          );
        }
        cursor(e) {
          let t = "next";
          if ((e.reverse && (t = "prev"), e.index)) {
            const r = this.store.index(e.index);
            return e.H ? r.openKeyCursor(e.range, t) : r.openCursor(e.range, t);
          }
          return this.store.openCursor(e.range, t);
        }
      }
      function ji(n) {
        return new W((e, t) => {
          (n.onsuccess = (r) => {
            e(r.target.result);
          }),
            (n.onerror = (r) => {
              const i = Qh(r.target.error);
              t(i);
            });
        });
      }
      let im = !1;
      function Qh(n) {
        const e = xt.v((0, ee.z$)());
        if (e >= 12.2 && e < 13) {
          const t =
            "An internal error was encountered in the Indexed Database server";
          if (n.message.indexOf(t) >= 0) {
            const r = new Ge(
              "internal",
              `IOS_INDEXEDDB_BUG1: IndexedDb has thrown '${t}'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.`
            );
            return (
              im ||
                ((im = !0),
                setTimeout(() => {
                  throw r;
                }, 0)),
              r
            );
          }
        }
        return n;
      }
      class jE {
        constructor(e, t) {
          (this.asyncQueue = e), (this.X = t), (this.task = null);
        }
        start() {}
        stop() {
          this.task && (this.task.cancel(), (this.task = null));
        }
        get started() {
          return null !== this.task;
        }
        Z(e) {
          var t = this;
          Je("IndexBackiller", `Scheduled in ${e}ms`),
            (this.task = this.asyncQueue.enqueueAfterDelay(
              "index_backfill",
              e,
              (0, Te.Z)(function* () {
                t.task = null;
                try {
                  Je("IndexBackiller", `Documents written: ${yield t.X.tt()}`);
                } catch (r) {
                  nn(r)
                    ? Je(
                        "IndexBackiller",
                        "Ignoring IndexedDB error during index backfill: ",
                        r
                      )
                    : yield xe(r);
                }
                yield t.Z(1);
              })
            ));
        }
      }
      class $E {
        constructor(e, t) {
          (this.localStore = e), (this.persistence = t);
        }
        tt(e = 50) {
          var t = this;
          return (0, Te.Z)(function* () {
            return t.persistence.runTransaction(
              "Backfill Indexes",
              "readwrite-primary",
              (r) => t.et(r, e)
            );
          })();
        }
        et(e, t) {
          const r = new Set();
          let i = t,
            a = !0;
          return W.doWhile(
            () => !0 === a && i > 0,
            () =>
              this.localStore.indexManager
                .getNextCollectionGroupToUpdate(e)
                .next((l) => {
                  if (null !== l && !r.has(l))
                    return (
                      Je("IndexBackiller", `Processing collection: ${l}`),
                      this.nt(e, l, i).next((h) => {
                        (i -= h), r.add(l);
                      })
                    );
                  a = !1;
                })
          ).next(() => t - i);
        }
        nt(e, t, r) {
          return this.localStore.indexManager
            .getMinOffsetFromCollectionGroup(e, t)
            .next((i) =>
              this.localStore.localDocuments
                .getNextDocuments(e, t, i, r)
                .next((a) => {
                  const l = a.changes;
                  return this.localStore.indexManager
                    .updateIndexEntries(e, l)
                    .next(() => this.st(i, a))
                    .next(
                      (h) => (
                        Je("IndexBackiller", `Updating offset: ${h}`),
                        this.localStore.indexManager.updateCollectionGroup(
                          e,
                          t,
                          h
                        )
                      )
                    )
                    .next(() => l.size);
                })
            );
        }
        st(e, t) {
          let r = e;
          return (
            t.changes.forEach((i, a) => {
              const l = T(a);
              O(l, r) > 0 && (r = l);
            }),
            new A(
              r.readTime,
              r.documentKey,
              Math.max(t.batchId, e.largestBatchId)
            )
          );
        }
      }
      class ti {
        constructor(e, t) {
          (this.previousValue = e),
            t &&
              ((t.sequenceNumberHandler = (r) => this.it(r)),
              (this.rt = (r) => t.writeSequenceNumber(r)));
        }
        it(e) {
          return (
            (this.previousValue = Math.max(e, this.previousValue)),
            this.previousValue
          );
        }
        next() {
          const e = ++this.previousValue;
          return this.rt && this.rt(e), e;
        }
      }
      function sm(n) {
        let e = 0;
        for (const t in n) Object.prototype.hasOwnProperty.call(n, t) && e++;
        return e;
      }
      function Go(n, e) {
        for (const t in n)
          Object.prototype.hasOwnProperty.call(n, t) && e(t, n[t]);
      }
      function om(n) {
        for (const e in n)
          if (Object.prototype.hasOwnProperty.call(n, e)) return !1;
        return !0;
      }
      ti.ot = -1;
      class tr {
        constructor(e, t) {
          (this.comparator = e), (this.root = t || Ei.EMPTY);
        }
        insert(e, t) {
          return new tr(
            this.comparator,
            this.root
              .insert(e, t, this.comparator)
              .copy(null, null, Ei.BLACK, null, null)
          );
        }
        remove(e) {
          return new tr(
            this.comparator,
            this.root
              .remove(e, this.comparator)
              .copy(null, null, Ei.BLACK, null, null)
          );
        }
        get(e) {
          let t = this.root;
          for (; !t.isEmpty(); ) {
            const r = this.comparator(e, t.key);
            if (0 === r) return t.value;
            r < 0 ? (t = t.left) : r > 0 && (t = t.right);
          }
          return null;
        }
        indexOf(e) {
          let t = 0,
            r = this.root;
          for (; !r.isEmpty(); ) {
            const i = this.comparator(e, r.key);
            if (0 === i) return t + r.left.size;
            i < 0 ? (r = r.left) : ((t += r.left.size + 1), (r = r.right));
          }
          return -1;
        }
        isEmpty() {
          return this.root.isEmpty();
        }
        get size() {
          return this.root.size;
        }
        minKey() {
          return this.root.minKey();
        }
        maxKey() {
          return this.root.maxKey();
        }
        inorderTraversal(e) {
          return this.root.inorderTraversal(e);
        }
        forEach(e) {
          this.inorderTraversal((t, r) => (e(t, r), !1));
        }
        toString() {
          const e = [];
          return (
            this.inorderTraversal((t, r) => (e.push(`${t}:${r}`), !1)),
            `{${e.join(", ")}}`
          );
        }
        reverseTraversal(e) {
          return this.root.reverseTraversal(e);
        }
        getIterator() {
          return new bb(this.root, null, this.comparator, !1);
        }
        getIteratorFrom(e) {
          return new bb(this.root, e, this.comparator, !1);
        }
        getReverseIterator() {
          return new bb(this.root, null, this.comparator, !0);
        }
        getReverseIteratorFrom(e) {
          return new bb(this.root, e, this.comparator, !0);
        }
      }
      class bb {
        constructor(e, t, r, i) {
          (this.isReverse = i), (this.nodeStack = []);
          let a = 1;
          for (; !e.isEmpty(); )
            if (((a = t ? r(e.key, t) : 1), t && i && (a *= -1), a < 0))
              e = this.isReverse ? e.left : e.right;
            else {
              if (0 === a) {
                this.nodeStack.push(e);
                break;
              }
              this.nodeStack.push(e), (e = this.isReverse ? e.right : e.left);
            }
        }
        getNext() {
          let e = this.nodeStack.pop();
          const t = { key: e.key, value: e.value };
          if (this.isReverse)
            for (e = e.left; !e.isEmpty(); )
              this.nodeStack.push(e), (e = e.right);
          else
            for (e = e.right; !e.isEmpty(); )
              this.nodeStack.push(e), (e = e.left);
          return t;
        }
        hasNext() {
          return this.nodeStack.length > 0;
        }
        peek() {
          if (0 === this.nodeStack.length) return null;
          const e = this.nodeStack[this.nodeStack.length - 1];
          return { key: e.key, value: e.value };
        }
      }
      class Ei {
        constructor(e, t, r, i, a) {
          (this.key = e),
            (this.value = t),
            (this.color = r ?? Ei.RED),
            (this.left = i ?? Ei.EMPTY),
            (this.right = a ?? Ei.EMPTY),
            (this.size = this.left.size + 1 + this.right.size);
        }
        copy(e, t, r, i, a) {
          return new Ei(
            e ?? this.key,
            t ?? this.value,
            r ?? this.color,
            i ?? this.left,
            a ?? this.right
          );
        }
        isEmpty() {
          return !1;
        }
        inorderTraversal(e) {
          return (
            this.left.inorderTraversal(e) ||
            e(this.key, this.value) ||
            this.right.inorderTraversal(e)
          );
        }
        reverseTraversal(e) {
          return (
            this.right.reverseTraversal(e) ||
            e(this.key, this.value) ||
            this.left.reverseTraversal(e)
          );
        }
        min() {
          return this.left.isEmpty() ? this : this.left.min();
        }
        minKey() {
          return this.min().key;
        }
        maxKey() {
          return this.right.isEmpty() ? this.key : this.right.maxKey();
        }
        insert(e, t, r) {
          let i = this;
          const a = r(e, i.key);
          return (
            (i =
              a < 0
                ? i.copy(null, null, null, i.left.insert(e, t, r), null)
                : 0 === a
                ? i.copy(null, t, null, null, null)
                : i.copy(null, null, null, null, i.right.insert(e, t, r))),
            i.fixUp()
          );
        }
        removeMin() {
          if (this.left.isEmpty()) return Ei.EMPTY;
          let e = this;
          return (
            e.left.isRed() || e.left.left.isRed() || (e = e.moveRedLeft()),
            (e = e.copy(null, null, null, e.left.removeMin(), null)),
            e.fixUp()
          );
        }
        remove(e, t) {
          let r,
            i = this;
          if (t(e, i.key) < 0)
            i.left.isEmpty() ||
              i.left.isRed() ||
              i.left.left.isRed() ||
              (i = i.moveRedLeft()),
              (i = i.copy(null, null, null, i.left.remove(e, t), null));
          else {
            if (
              (i.left.isRed() && (i = i.rotateRight()),
              i.right.isEmpty() ||
                i.right.isRed() ||
                i.right.left.isRed() ||
                (i = i.moveRedRight()),
              0 === t(e, i.key))
            ) {
              if (i.right.isEmpty()) return Ei.EMPTY;
              (r = i.right.min()),
                (i = i.copy(r.key, r.value, null, null, i.right.removeMin()));
            }
            i = i.copy(null, null, null, null, i.right.remove(e, t));
          }
          return i.fixUp();
        }
        isRed() {
          return this.color;
        }
        fixUp() {
          let e = this;
          return (
            e.right.isRed() && !e.left.isRed() && (e = e.rotateLeft()),
            e.left.isRed() && e.left.left.isRed() && (e = e.rotateRight()),
            e.left.isRed() && e.right.isRed() && (e = e.colorFlip()),
            e
          );
        }
        moveRedLeft() {
          let e = this.colorFlip();
          return (
            e.right.left.isRed() &&
              ((e = e.copy(null, null, null, null, e.right.rotateRight())),
              (e = e.rotateLeft()),
              (e = e.colorFlip())),
            e
          );
        }
        moveRedRight() {
          let e = this.colorFlip();
          return (
            e.left.left.isRed() && ((e = e.rotateRight()), (e = e.colorFlip())),
            e
          );
        }
        rotateLeft() {
          const e = this.copy(null, null, Ei.RED, null, this.right.left);
          return this.right.copy(null, null, this.color, e, null);
        }
        rotateRight() {
          const e = this.copy(null, null, Ei.RED, this.left.right, null);
          return this.left.copy(null, null, this.color, null, e);
        }
        colorFlip() {
          const e = this.left.copy(null, null, !this.left.color, null, null),
            t = this.right.copy(null, null, !this.right.color, null, null);
          return this.copy(null, null, !this.color, e, t);
        }
        checkMaxDepth() {
          const e = this.check();
          return Math.pow(2, e) <= this.size + 1;
        }
        check() {
          if ((this.isRed() && this.left.isRed()) || this.right.isRed())
            throw Ct();
          const e = this.left.check();
          if (e !== this.right.check()) throw Ct();
          return e + (this.isRed() ? 0 : 1);
        }
      }
      (Ei.EMPTY = null),
        (Ei.RED = !0),
        (Ei.BLACK = !1),
        (Ei.EMPTY = new (class {
          constructor() {
            this.size = 0;
          }
          get key() {
            throw Ct();
          }
          get value() {
            throw Ct();
          }
          get color() {
            throw Ct();
          }
          get left() {
            throw Ct();
          }
          get right() {
            throw Ct();
          }
          copy(n, e, t, r, i) {
            return this;
          }
          insert(n, e, t) {
            return new Ei(n, e);
          }
          remove(n, e) {
            return this;
          }
          isEmpty() {
            return !0;
          }
          inorderTraversal(n) {
            return !1;
          }
          reverseTraversal(n) {
            return !1;
          }
          minKey() {
            return null;
          }
          maxKey() {
            return null;
          }
          isRed() {
            return !1;
          }
          checkMaxDepth() {
            return !0;
          }
          check() {
            return 0;
          }
        })());
      class zn {
        constructor(e) {
          (this.comparator = e), (this.data = new tr(this.comparator));
        }
        has(e) {
          return null !== this.data.get(e);
        }
        first() {
          return this.data.minKey();
        }
        last() {
          return this.data.maxKey();
        }
        get size() {
          return this.data.size;
        }
        indexOf(e) {
          return this.data.indexOf(e);
        }
        forEach(e) {
          this.data.inorderTraversal((t, r) => (e(t), !1));
        }
        forEachInRange(e, t) {
          const r = this.data.getIteratorFrom(e[0]);
          for (; r.hasNext(); ) {
            const i = r.getNext();
            if (this.comparator(i.key, e[1]) >= 0) return;
            t(i.key);
          }
        }
        forEachWhile(e, t) {
          let r;
          for (
            r =
              void 0 !== t
                ? this.data.getIteratorFrom(t)
                : this.data.getIterator();
            r.hasNext();

          )
            if (!e(r.getNext().key)) return;
        }
        firstAfterOrEqual(e) {
          const t = this.data.getIteratorFrom(e);
          return t.hasNext() ? t.getNext().key : null;
        }
        getIterator() {
          return new Ik(this.data.getIterator());
        }
        getIteratorFrom(e) {
          return new Ik(this.data.getIteratorFrom(e));
        }
        add(e) {
          return this.copy(this.data.remove(e).insert(e, !0));
        }
        delete(e) {
          return this.has(e) ? this.copy(this.data.remove(e)) : this;
        }
        isEmpty() {
          return this.data.isEmpty();
        }
        unionWith(e) {
          let t = this;
          return (
            t.size < e.size && ((t = e), (e = this)),
            e.forEach((r) => {
              t = t.add(r);
            }),
            t
          );
        }
        isEqual(e) {
          if (!(e instanceof zn) || this.size !== e.size) return !1;
          const t = this.data.getIterator(),
            r = e.data.getIterator();
          for (; t.hasNext(); ) {
            const i = t.getNext().key,
              a = r.getNext().key;
            if (0 !== this.comparator(i, a)) return !1;
          }
          return !0;
        }
        toArray() {
          const e = [];
          return (
            this.forEach((t) => {
              e.push(t);
            }),
            e
          );
        }
        toString() {
          const e = [];
          return (
            this.forEach((t) => e.push(t)), "SortedSet(" + e.toString() + ")"
          );
        }
        copy(e) {
          const t = new zn(this.comparator);
          return (t.data = e), t;
        }
      }
      class Ik {
        constructor(e) {
          this.iter = e;
        }
        getNext() {
          return this.iter.getNext().key;
        }
        hasNext() {
          return this.iter.hasNext();
        }
      }
      function am(n) {
        return n.hasNext() ? n.getNext() : void 0;
      }
      class ks {
        constructor(e) {
          (this.fields = e), e.sort(o.comparator);
        }
        static empty() {
          return new ks([]);
        }
        unionWith(e) {
          let t = new zn(o.comparator);
          for (const r of this.fields) t = t.add(r);
          for (const r of e) t = t.add(r);
          return new ks(t.toArray());
        }
        covers(e) {
          for (const t of this.fields) if (t.isPrefixOf(e)) return !0;
          return !1;
        }
        isEqual(e) {
          return Yh(this.fields, e.fields, (t, r) => t.isEqual(r));
        }
      }
      class Kr {
        constructor(e) {
          this.binaryString = e;
        }
        static fromBase64String(e) {
          const t = atob(e);
          return new Kr(t);
        }
        static fromUint8Array(e) {
          const t = (function (r) {
            let i = "";
            for (let a = 0; a < r.length; ++a) i += String.fromCharCode(r[a]);
            return i;
          })(e);
          return new Kr(t);
        }
        [Symbol.iterator]() {
          let e = 0;
          return {
            next: () =>
              e < this.binaryString.length
                ? { value: this.binaryString.charCodeAt(e++), done: !1 }
                : { value: void 0, done: !0 },
          };
        }
        toBase64() {
          return btoa(this.binaryString);
        }
        toUint8Array() {
          return (function (e) {
            const t = new Uint8Array(e.length);
            for (let r = 0; r < e.length; r++) t[r] = e.charCodeAt(r);
            return t;
          })(this.binaryString);
        }
        approximateByteSize() {
          return 2 * this.binaryString.length;
        }
        compareTo(e) {
          return un(this.binaryString, e.binaryString);
        }
        isEqual(e) {
          return this.binaryString === e.binaryString;
        }
      }
      Kr.EMPTY_BYTE_STRING = new Kr("");
      const _2 = new RegExp(/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/);
      function Rc(n) {
        if ((Wt(!!n), "string" == typeof n)) {
          let e = 0;
          const t = _2.exec(n);
          if ((Wt(!!t), t[1])) {
            let i = t[1];
            (i = (i + "000000000").substr(0, 9)), (e = Number(i));
          }
          const r = new Date(n);
          return { seconds: Math.floor(r.getTime() / 1e3), nanos: e };
        }
        return { seconds: Ir(n.seconds), nanos: Ir(n.nanos) };
      }
      function Ir(n) {
        return "number" == typeof n ? n : "string" == typeof n ? Number(n) : 0;
      }
      function Jh(n) {
        return "string" == typeof n
          ? Kr.fromBase64String(n)
          : Kr.fromUint8Array(n);
      }
      function VR(n) {
        var e, t;
        return (
          "server_timestamp" ===
          (null ===
            (t = (
              (null === (e = n?.mapValue) || void 0 === e
                ? void 0
                : e.fields) || {}
            ).__type__) || void 0 === t
            ? void 0
            : t.stringValue)
        );
      }
      function Ck(n) {
        const e = n.mapValue.fields.__previous_value__;
        return VR(e) ? Ck(e) : e;
      }
      function HE(n) {
        const e = Rc(n.mapValue.fields.__local_write_time__.timestampValue);
        return new ur(e.seconds, e.nanos);
      }
      class y2 {
        constructor(e, t, r, i, a, l, h, m) {
          (this.databaseId = e),
            (this.appId = t),
            (this.persistenceKey = r),
            (this.host = i),
            (this.ssl = a),
            (this.forceLongPolling = l),
            (this.autoDetectLongPolling = h),
            (this.useFetchStreams = m);
        }
      }
      class ku {
        constructor(e, t) {
          (this.projectId = e), (this.database = t || "(default)");
        }
        static empty() {
          return new ku("", "");
        }
        get isDefaultDatabase() {
          return "(default)" === this.database;
        }
        isEqual(e) {
          return (
            e instanceof ku &&
            e.projectId === this.projectId &&
            e.database === this.database
          );
        }
      }
      function GE(n) {
        return null == n;
      }
      function WE(n) {
        return 0 === n && 1 / n == -1 / 0;
      }
      function bk(n) {
        return (
          "number" == typeof n &&
          Number.isInteger(n) &&
          !WE(n) &&
          n <= Number.MAX_SAFE_INTEGER &&
          n >= Number.MIN_SAFE_INTEGER
        );
      }
      const Mc = {
          mapValue: { fields: { __type__: { stringValue: "__max__" } } },
        },
        Db = { nullValue: "NULL_VALUE" };
      function Xh(n) {
        return "nullValue" in n
          ? 0
          : "booleanValue" in n
          ? 1
          : "integerValue" in n || "doubleValue" in n
          ? 2
          : "timestampValue" in n
          ? 3
          : "stringValue" in n
          ? 5
          : "bytesValue" in n
          ? 6
          : "referenceValue" in n
          ? 7
          : "geoPointValue" in n
          ? 8
          : "arrayValue" in n
          ? 9
          : "mapValue" in n
          ? VR(n)
            ? 4
            : Ak(n)
            ? 9007199254740991
            : 10
          : Ct();
      }
      function Pa(n, e) {
        if (n === e) return !0;
        const t = Xh(n);
        if (t !== Xh(e)) return !1;
        switch (t) {
          case 0:
          case 9007199254740991:
            return !0;
          case 1:
            return n.booleanValue === e.booleanValue;
          case 4:
            return HE(n).isEqual(HE(e));
          case 3:
            return (function (r, i) {
              if (
                "string" == typeof r.timestampValue &&
                "string" == typeof i.timestampValue &&
                r.timestampValue.length === i.timestampValue.length
              )
                return r.timestampValue === i.timestampValue;
              const a = Rc(r.timestampValue),
                l = Rc(i.timestampValue);
              return a.seconds === l.seconds && a.nanos === l.nanos;
            })(n, e);
          case 5:
            return n.stringValue === e.stringValue;
          case 6:
            return (i = e), Jh(n.bytesValue).isEqual(Jh(i.bytesValue));
          case 7:
            return n.referenceValue === e.referenceValue;
          case 8:
            return (function (r, i) {
              return (
                Ir(r.geoPointValue.latitude) === Ir(i.geoPointValue.latitude) &&
                Ir(r.geoPointValue.longitude) === Ir(i.geoPointValue.longitude)
              );
            })(n, e);
          case 2:
            return (function (r, i) {
              if ("integerValue" in r && "integerValue" in i)
                return Ir(r.integerValue) === Ir(i.integerValue);
              if ("doubleValue" in r && "doubleValue" in i) {
                const a = Ir(r.doubleValue),
                  l = Ir(i.doubleValue);
                return a === l ? WE(a) === WE(l) : isNaN(a) && isNaN(l);
              }
              return !1;
            })(n, e);
          case 9:
            return Yh(n.arrayValue.values || [], e.arrayValue.values || [], Pa);
          case 10:
            return (function (r, i) {
              const a = r.mapValue.fields || {},
                l = i.mapValue.fields || {};
              if (sm(a) !== sm(l)) return !1;
              for (const h in a)
                if (a.hasOwnProperty(h) && (void 0 === l[h] || !Pa(a[h], l[h])))
                  return !1;
              return !0;
            })(n, e);
          default:
            return Ct();
        }
        var i;
      }
      function zE(n, e) {
        return void 0 !== (n.values || []).find((t) => Pa(t, e));
      }
      function xc(n, e) {
        if (n === e) return 0;
        const t = Xh(n),
          r = Xh(e);
        if (t !== r) return un(t, r);
        switch (t) {
          case 0:
          case 9007199254740991:
            return 0;
          case 1:
            return un(n.booleanValue, e.booleanValue);
          case 2:
            return (function (i, a) {
              const l = Ir(i.integerValue || i.doubleValue),
                h = Ir(a.integerValue || a.doubleValue);
              return l < h
                ? -1
                : l > h
                ? 1
                : l === h
                ? 0
                : isNaN(l)
                ? isNaN(h)
                  ? 0
                  : -1
                : 1;
            })(n, e);
          case 3:
            return Dk(n.timestampValue, e.timestampValue);
          case 4:
            return Dk(HE(n), HE(e));
          case 5:
            return un(n.stringValue, e.stringValue);
          case 6:
            return (function (i, a) {
              const l = Jh(i),
                h = Jh(a);
              return l.compareTo(h);
            })(n.bytesValue, e.bytesValue);
          case 7:
            return (function (i, a) {
              const l = i.split("/"),
                h = a.split("/");
              for (let m = 0; m < l.length && m < h.length; m++) {
                const v = un(l[m], h[m]);
                if (0 !== v) return v;
              }
              return un(l.length, h.length);
            })(n.referenceValue, e.referenceValue);
          case 8:
            return (function (i, a) {
              const l = un(Ir(i.latitude), Ir(a.latitude));
              return 0 !== l ? l : un(Ir(i.longitude), Ir(a.longitude));
            })(n.geoPointValue, e.geoPointValue);
          case 9:
            return (function (i, a) {
              const l = i.values || [],
                h = a.values || [];
              for (let m = 0; m < l.length && m < h.length; ++m) {
                const v = xc(l[m], h[m]);
                if (v) return v;
              }
              return un(l.length, h.length);
            })(n.arrayValue, e.arrayValue);
          case 10:
            return (function (i, a) {
              if (i === Mc.mapValue && a === Mc.mapValue) return 0;
              if (i === Mc.mapValue) return 1;
              if (a === Mc.mapValue) return -1;
              const l = i.fields || {},
                h = Object.keys(l),
                m = a.fields || {},
                v = Object.keys(m);
              h.sort(), v.sort();
              for (let b = 0; b < h.length && b < v.length; ++b) {
                const D = un(h[b], v[b]);
                if (0 !== D) return D;
                const R = xc(l[h[b]], m[v[b]]);
                if (0 !== R) return R;
              }
              return un(h.length, v.length);
            })(n.mapValue, e.mapValue);
          default:
            throw Ct();
        }
      }
      function Dk(n, e) {
        if (
          "string" == typeof n &&
          "string" == typeof e &&
          n.length === e.length
        )
          return un(n, e);
        const t = Rc(n),
          r = Rc(e),
          i = un(t.seconds, r.seconds);
        return 0 !== i ? i : un(t.nanos, r.nanos);
      }
      function um(n) {
        return UR(n);
      }
      function UR(n) {
        return "nullValue" in n
          ? "null"
          : "booleanValue" in n
          ? "" + n.booleanValue
          : "integerValue" in n
          ? "" + n.integerValue
          : "doubleValue" in n
          ? "" + n.doubleValue
          : "timestampValue" in n
          ? (function (r) {
              const i = Rc(r);
              return `time(${i.seconds},${i.nanos})`;
            })(n.timestampValue)
          : "stringValue" in n
          ? n.stringValue
          : "bytesValue" in n
          ? Jh(n.bytesValue).toBase64()
          : "referenceValue" in n
          ? u.fromName(n.referenceValue).toString()
          : "geoPointValue" in n
          ? `geo(${(e = n.geoPointValue).latitude},${e.longitude})`
          : "arrayValue" in n
          ? (function (r) {
              let i = "[",
                a = !0;
              for (const l of r.values || [])
                a ? (a = !1) : (i += ","), (i += UR(l));
              return i + "]";
            })(n.arrayValue)
          : "mapValue" in n
          ? (function (r) {
              const i = Object.keys(r.fields || {}).sort();
              let a = "{",
                l = !0;
              for (const h of i)
                l ? (l = !1) : (a += ","), (a += `${h}:${UR(r.fields[h])}`);
              return a + "}";
            })(n.mapValue)
          : Ct();
        var e;
      }
      function ef(n, e) {
        return {
          referenceValue: `projects/${n.projectId}/databases/${
            n.database
          }/documents/${e.path.canonicalString()}`,
        };
      }
      function BR(n) {
        return !!n && "integerValue" in n;
      }
      function qE(n) {
        return !!n && "arrayValue" in n;
      }
      function Tk(n) {
        return !!n && "nullValue" in n;
      }
      function Sk(n) {
        return !!n && "doubleValue" in n && isNaN(Number(n.doubleValue));
      }
      function Tb(n) {
        return !!n && "mapValue" in n;
      }
      function KE(n) {
        if (n.geoPointValue)
          return { geoPointValue: Object.assign({}, n.geoPointValue) };
        if (n.timestampValue && "object" == typeof n.timestampValue)
          return { timestampValue: Object.assign({}, n.timestampValue) };
        if (n.mapValue) {
          const e = { mapValue: { fields: {} } };
          return (
            Go(n.mapValue.fields, (t, r) => (e.mapValue.fields[t] = KE(r))), e
          );
        }
        if (n.arrayValue) {
          const e = { arrayValue: { values: [] } };
          for (let t = 0; t < (n.arrayValue.values || []).length; ++t)
            e.arrayValue.values[t] = KE(n.arrayValue.values[t]);
          return e;
        }
        return Object.assign({}, n);
      }
      function Ak(n) {
        return (
          "__max__" ===
          (((n.mapValue || {}).fields || {}).__type__ || {}).stringValue
        );
      }
      function v2(n) {
        return "nullValue" in n
          ? Db
          : "booleanValue" in n
          ? { booleanValue: !1 }
          : "integerValue" in n || "doubleValue" in n
          ? { doubleValue: NaN }
          : "timestampValue" in n
          ? { timestampValue: { seconds: Number.MIN_SAFE_INTEGER } }
          : "stringValue" in n
          ? { stringValue: "" }
          : "bytesValue" in n
          ? { bytesValue: "" }
          : "referenceValue" in n
          ? ef(ku.empty(), u.empty())
          : "geoPointValue" in n
          ? { geoPointValue: { latitude: -90, longitude: -180 } }
          : "arrayValue" in n
          ? { arrayValue: {} }
          : "mapValue" in n
          ? { mapValue: {} }
          : Ct();
      }
      function E2(n) {
        return "nullValue" in n
          ? { booleanValue: !1 }
          : "booleanValue" in n
          ? { doubleValue: NaN }
          : "integerValue" in n || "doubleValue" in n
          ? { timestampValue: { seconds: Number.MIN_SAFE_INTEGER } }
          : "timestampValue" in n
          ? { stringValue: "" }
          : "stringValue" in n
          ? { bytesValue: "" }
          : "bytesValue" in n
          ? ef(ku.empty(), u.empty())
          : "referenceValue" in n
          ? { geoPointValue: { latitude: -90, longitude: -180 } }
          : "geoPointValue" in n
          ? { arrayValue: {} }
          : "arrayValue" in n
          ? { mapValue: {} }
          : "mapValue" in n
          ? Mc
          : Ct();
      }
      function Rk(n, e) {
        const t = xc(n.value, e.value);
        return 0 !== t
          ? t
          : n.inclusive && !e.inclusive
          ? -1
          : !n.inclusive && e.inclusive
          ? 1
          : 0;
      }
      function Mk(n, e) {
        const t = xc(n.value, e.value);
        return 0 !== t
          ? t
          : n.inclusive && !e.inclusive
          ? 1
          : !n.inclusive && e.inclusive
          ? -1
          : 0;
      }
      class wi {
        constructor(e) {
          this.value = e;
        }
        static empty() {
          return new wi({ mapValue: {} });
        }
        field(e) {
          if (e.isEmpty()) return this.value;
          {
            let t = this.value;
            for (let r = 0; r < e.length - 1; ++r)
              if (((t = (t.mapValue.fields || {})[e.get(r)]), !Tb(t)))
                return null;
            return (t = (t.mapValue.fields || {})[e.lastSegment()]), t || null;
          }
        }
        set(e, t) {
          this.getFieldsMap(e.popLast())[e.lastSegment()] = KE(t);
        }
        setAll(e) {
          let t = o.emptyPath(),
            r = {},
            i = [];
          e.forEach((l, h) => {
            if (!t.isImmediateParentOf(h)) {
              const m = this.getFieldsMap(t);
              this.applyChanges(m, r, i), (r = {}), (i = []), (t = h.popLast());
            }
            l ? (r[h.lastSegment()] = KE(l)) : i.push(h.lastSegment());
          });
          const a = this.getFieldsMap(t);
          this.applyChanges(a, r, i);
        }
        delete(e) {
          const t = this.field(e.popLast());
          Tb(t) &&
            t.mapValue.fields &&
            delete t.mapValue.fields[e.lastSegment()];
        }
        isEqual(e) {
          return Pa(this.value, e.value);
        }
        getFieldsMap(e) {
          let t = this.value;
          t.mapValue.fields || (t.mapValue = { fields: {} });
          for (let r = 0; r < e.length; ++r) {
            let i = t.mapValue.fields[e.get(r)];
            (Tb(i) && i.mapValue.fields) ||
              ((i = { mapValue: { fields: {} } }),
              (t.mapValue.fields[e.get(r)] = i)),
              (t = i);
          }
          return t.mapValue.fields;
        }
        applyChanges(e, t, r) {
          Go(t, (i, a) => (e[i] = a));
          for (const i of r) delete e[i];
        }
        clone() {
          return new wi(KE(this.value));
        }
      }
      function xk(n) {
        const e = [];
        return (
          Go(n.fields, (t, r) => {
            const i = new o([t]);
            if (Tb(r)) {
              const a = xk(r.mapValue).fields;
              if (0 === a.length) e.push(i);
              else for (const l of a) e.push(i.child(l));
            } else e.push(i);
          }),
          new ks(e)
        );
      }
      class nr {
        constructor(e, t, r, i, a, l) {
          (this.key = e),
            (this.documentType = t),
            (this.version = r),
            (this.readTime = i),
            (this.data = a),
            (this.documentState = l);
        }
        static newInvalidDocument(e) {
          return new nr(e, 0, Kt.min(), Kt.min(), wi.empty(), 0);
        }
        static newFoundDocument(e, t, r) {
          return new nr(e, 1, t, Kt.min(), r, 0);
        }
        static newNoDocument(e, t) {
          return new nr(e, 2, t, Kt.min(), wi.empty(), 0);
        }
        static newUnknownDocument(e, t) {
          return new nr(e, 3, t, Kt.min(), wi.empty(), 2);
        }
        convertToFoundDocument(e, t) {
          return (
            (this.version = e),
            (this.documentType = 1),
            (this.data = t),
            (this.documentState = 0),
            this
          );
        }
        convertToNoDocument(e) {
          return (
            (this.version = e),
            (this.documentType = 2),
            (this.data = wi.empty()),
            (this.documentState = 0),
            this
          );
        }
        convertToUnknownDocument(e) {
          return (
            (this.version = e),
            (this.documentType = 3),
            (this.data = wi.empty()),
            (this.documentState = 2),
            this
          );
        }
        setHasCommittedMutations() {
          return (this.documentState = 2), this;
        }
        setHasLocalMutations() {
          return (this.documentState = 1), (this.version = Kt.min()), this;
        }
        setReadTime(e) {
          return (this.readTime = e), this;
        }
        get hasLocalMutations() {
          return 1 === this.documentState;
        }
        get hasCommittedMutations() {
          return 2 === this.documentState;
        }
        get hasPendingWrites() {
          return this.hasLocalMutations || this.hasCommittedMutations;
        }
        isValidDocument() {
          return 0 !== this.documentType;
        }
        isFoundDocument() {
          return 1 === this.documentType;
        }
        isNoDocument() {
          return 2 === this.documentType;
        }
        isUnknownDocument() {
          return 3 === this.documentType;
        }
        isEqual(e) {
          return (
            e instanceof nr &&
            this.key.isEqual(e.key) &&
            this.version.isEqual(e.version) &&
            this.documentType === e.documentType &&
            this.documentState === e.documentState &&
            this.data.isEqual(e.data)
          );
        }
        mutableCopy() {
          return new nr(
            this.key,
            this.documentType,
            this.version,
            this.readTime,
            this.data.clone(),
            this.documentState
          );
        }
        toString() {
          return `Document(${this.key}, ${this.version}, ${JSON.stringify(
            this.data.value
          )}, {documentType: ${this.documentType}}), {documentState: ${
            this.documentState
          }})`;
        }
      }
      class w2 {
        constructor(e, t = null, r = [], i = [], a = null, l = null, h = null) {
          (this.path = e),
            (this.collectionGroup = t),
            (this.orderBy = r),
            (this.filters = i),
            (this.limit = a),
            (this.startAt = l),
            (this.endAt = h),
            (this.ut = null);
        }
      }
      function Nk(n, e = null, t = [], r = [], i = null, a = null, l = null) {
        return new w2(n, e, t, r, i, a, l);
      }
      function tf(n) {
        const e = gt(n);
        if (null === e.ut) {
          let t = e.path.canonicalString();
          null !== e.collectionGroup && (t += "|cg:" + e.collectionGroup),
            (t += "|f:"),
            (t += e.filters
              .map((r) => {
                return (
                  (i = r).field.canonicalString() +
                  i.op.toString() +
                  um(i.value)
                );
                var i;
              })
              .join(",")),
            (t += "|ob:"),
            (t += e.orderBy
              .map((r) => {
                return (i = r).field.canonicalString() + i.dir;
                var i;
              })
              .join(",")),
            GE(e.limit) || ((t += "|l:"), (t += e.limit)),
            e.startAt &&
              ((t += "|lb:"),
              (t += e.startAt.inclusive ? "b:" : "a:"),
              (t += e.startAt.position.map((r) => um(r)).join(","))),
            e.endAt &&
              ((t += "|ub:"),
              (t += e.endAt.inclusive ? "a:" : "b:"),
              (t += e.endAt.position.map((r) => um(r)).join(","))),
            (e.ut = t);
        }
        return e.ut;
      }
      function ZE(n, e) {
        if (n.limit !== e.limit || n.orderBy.length !== e.orderBy.length)
          return !1;
        for (let i = 0; i < n.orderBy.length; i++)
          if (!M2(n.orderBy[i], e.orderBy[i])) return !1;
        if (n.filters.length !== e.filters.length) return !1;
        for (let i = 0; i < n.filters.length; i++)
          if (
            (t = n.filters[i]).op !== (r = e.filters[i]).op ||
            !t.field.isEqual(r.field) ||
            !Pa(t.value, r.value)
          )
            return !1;
        var t, r;
        return (
          n.collectionGroup === e.collectionGroup &&
          !!n.path.isEqual(e.path) &&
          !!Lk(n.startAt, e.startAt) &&
          Lk(n.endAt, e.endAt)
        );
      }
      function Sb(n) {
        return (
          u.isDocumentKey(n.path) &&
          null === n.collectionGroup &&
          0 === n.filters.length
        );
      }
      function Ab(n, e) {
        return n.filters.filter((t) => t instanceof Ii && t.field.isEqual(e));
      }
      function Pk(n, e, t) {
        let r = Db,
          i = !0;
        for (const a of Ab(n, e)) {
          let l = Db,
            h = !0;
          switch (a.op) {
            case "<":
            case "<=":
              l = v2(a.value);
              break;
            case "==":
            case "in":
            case ">=":
              l = a.value;
              break;
            case ">":
              (l = a.value), (h = !1);
              break;
            case "!=":
            case "not-in":
              l = Db;
          }
          Rk({ value: r, inclusive: i }, { value: l, inclusive: h }) < 0 &&
            ((r = l), (i = h));
        }
        if (null !== t)
          for (let a = 0; a < n.orderBy.length; ++a)
            if (n.orderBy[a].field.isEqual(e)) {
              const l = t.position[a];
              Rk(
                { value: r, inclusive: i },
                { value: l, inclusive: t.inclusive }
              ) < 0 && ((r = l), (i = t.inclusive));
              break;
            }
        return { value: r, inclusive: i };
      }
      function Ok(n, e, t) {
        let r = Mc,
          i = !0;
        for (const a of Ab(n, e)) {
          let l = Mc,
            h = !0;
          switch (a.op) {
            case ">=":
            case ">":
              (l = E2(a.value)), (h = !1);
              break;
            case "==":
            case "in":
            case "<=":
              l = a.value;
              break;
            case "<":
              (l = a.value), (h = !1);
              break;
            case "!=":
            case "not-in":
              l = Mc;
          }
          Mk({ value: r, inclusive: i }, { value: l, inclusive: h }) > 0 &&
            ((r = l), (i = h));
        }
        if (null !== t)
          for (let a = 0; a < n.orderBy.length; ++a)
            if (n.orderBy[a].field.isEqual(e)) {
              const l = t.position[a];
              Mk(
                { value: r, inclusive: i },
                { value: l, inclusive: t.inclusive }
              ) > 0 && ((r = l), (i = t.inclusive));
              break;
            }
        return { value: r, inclusive: i };
      }
      class Ii extends class {} {
        constructor(e, t, r) {
          super(), (this.field = e), (this.op = t), (this.value = r);
        }
        static create(e, t, r) {
          return e.isKeyField()
            ? "in" === t || "not-in" === t
              ? this.ct(e, t, r)
              : new C2(e, t, r)
            : "array-contains" === t
            ? new T2(e, r)
            : "in" === t
            ? new S2(e, r)
            : "not-in" === t
            ? new A2(e, r)
            : "array-contains-any" === t
            ? new R2(e, r)
            : new Ii(e, t, r);
        }
        static ct(e, t, r) {
          return "in" === t ? new b2(e, r) : new D2(e, r);
        }
        matches(e) {
          const t = e.data.field(this.field);
          return "!=" === this.op
            ? null !== t && this.at(xc(t, this.value))
            : null !== t &&
                Xh(this.value) === Xh(t) &&
                this.at(xc(t, this.value));
        }
        at(e) {
          switch (this.op) {
            case "<":
              return e < 0;
            case "<=":
              return e <= 0;
            case "==":
              return 0 === e;
            case "!=":
              return 0 !== e;
            case ">":
              return e > 0;
            case ">=":
              return e >= 0;
            default:
              return Ct();
          }
        }
        ht() {
          return ["<", "<=", ">", ">=", "!=", "not-in"].indexOf(this.op) >= 0;
        }
      }
      class C2 extends Ii {
        constructor(e, t, r) {
          super(e, t, r), (this.key = u.fromName(r.referenceValue));
        }
        matches(e) {
          const t = u.comparator(e.key, this.key);
          return this.at(t);
        }
      }
      class b2 extends Ii {
        constructor(e, t) {
          super(e, "in", t), (this.keys = kk(0, t));
        }
        matches(e) {
          return this.keys.some((t) => t.isEqual(e.key));
        }
      }
      class D2 extends Ii {
        constructor(e, t) {
          super(e, "not-in", t), (this.keys = kk(0, t));
        }
        matches(e) {
          return !this.keys.some((t) => t.isEqual(e.key));
        }
      }
      function kk(n, e) {
        var t;
        return (
          (null === (t = e.arrayValue) || void 0 === t ? void 0 : t.values) ||
          []
        ).map((r) => u.fromName(r.referenceValue));
      }
      class T2 extends Ii {
        constructor(e, t) {
          super(e, "array-contains", t);
        }
        matches(e) {
          const t = e.data.field(this.field);
          return qE(t) && zE(t.arrayValue, this.value);
        }
      }
      class S2 extends Ii {
        constructor(e, t) {
          super(e, "in", t);
        }
        matches(e) {
          const t = e.data.field(this.field);
          return null !== t && zE(this.value.arrayValue, t);
        }
      }
      class A2 extends Ii {
        constructor(e, t) {
          super(e, "not-in", t);
        }
        matches(e) {
          if (zE(this.value.arrayValue, { nullValue: "NULL_VALUE" })) return !1;
          const t = e.data.field(this.field);
          return null !== t && !zE(this.value.arrayValue, t);
        }
      }
      class R2 extends Ii {
        constructor(e, t) {
          super(e, "array-contains-any", t);
        }
        matches(e) {
          const t = e.data.field(this.field);
          return (
            !(!qE(t) || !t.arrayValue.values) &&
            t.arrayValue.values.some((r) => zE(this.value.arrayValue, r))
          );
        }
      }
      class Nc {
        constructor(e, t) {
          (this.position = e), (this.inclusive = t);
        }
      }
      class lm {
        constructor(e, t = "asc") {
          (this.field = e), (this.dir = t);
        }
      }
      function M2(n, e) {
        return n.dir === e.dir && n.field.isEqual(e.field);
      }
      function Fk(n, e, t) {
        let r = 0;
        for (let i = 0; i < n.position.length; i++) {
          const a = e[i],
            l = n.position[i];
          if (
            ((r = a.field.isKeyField()
              ? u.comparator(u.fromName(l.referenceValue), t.key)
              : xc(l, t.data.field(a.field))),
            "desc" === a.dir && (r *= -1),
            0 !== r)
          )
            break;
        }
        return r;
      }
      function Lk(n, e) {
        if (null === n) return null === e;
        if (
          null === e ||
          n.inclusive !== e.inclusive ||
          n.position.length !== e.position.length
        )
          return !1;
        for (let t = 0; t < n.position.length; t++)
          if (!Pa(n.position[t], e.position[t])) return !1;
        return !0;
      }
      class Fu {
        constructor(
          e,
          t = null,
          r = [],
          i = [],
          a = null,
          l = "F",
          h = null,
          m = null
        ) {
          (this.path = e),
            (this.collectionGroup = t),
            (this.explicitOrderBy = r),
            (this.filters = i),
            (this.limit = a),
            (this.limitType = l),
            (this.startAt = h),
            (this.endAt = m),
            (this.lt = null),
            (this.ft = null);
        }
      }
      function Vk(n, e, t, r, i, a, l, h) {
        return new Fu(n, e, t, r, i, a, l, h);
      }
      function cm(n) {
        return new Fu(n);
      }
      function jR(n) {
        return n.explicitOrderBy.length > 0 ? n.explicitOrderBy[0].field : null;
      }
      function $R(n) {
        for (const e of n.filters) if (e.ht()) return e.field;
        return null;
      }
      function HR(n) {
        return null !== n.collectionGroup;
      }
      function dm(n) {
        const e = gt(n);
        if (null === e.lt) {
          e.lt = [];
          const t = $R(e),
            r = jR(e);
          if (null !== t && null === r)
            t.isKeyField() || e.lt.push(new lm(t)),
              e.lt.push(new lm(o.keyField(), "asc"));
          else {
            let i = !1;
            for (const a of e.explicitOrderBy)
              e.lt.push(a), a.field.isKeyField() && (i = !0);
            if (!i) {
              const a =
                e.explicitOrderBy.length > 0
                  ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir
                  : "asc";
              e.lt.push(new lm(o.keyField(), a));
            }
          }
        }
        return e.lt;
      }
      function lo(n) {
        const e = gt(n);
        if (!e.ft)
          if ("F" === e.limitType)
            e.ft = Nk(
              e.path,
              e.collectionGroup,
              dm(e),
              e.filters,
              e.limit,
              e.startAt,
              e.endAt
            );
          else {
            const t = [];
            for (const a of dm(e))
              t.push(new lm(a.field, "desc" === a.dir ? "asc" : "desc"));
            const r = e.endAt
                ? new Nc(e.endAt.position, e.endAt.inclusive)
                : null,
              i = e.startAt
                ? new Nc(e.startAt.position, e.startAt.inclusive)
                : null;
            e.ft = Nk(e.path, e.collectionGroup, t, e.filters, e.limit, r, i);
          }
        return e.ft;
      }
      function Uk(n, e, t) {
        return new Fu(
          n.path,
          n.collectionGroup,
          n.explicitOrderBy.slice(),
          n.filters.slice(),
          e,
          t,
          n.startAt,
          n.endAt
        );
      }
      function YE(n, e) {
        return ZE(lo(n), lo(e)) && n.limitType === e.limitType;
      }
      function Bk(n) {
        return `${tf(lo(n))}|lt:${n.limitType}`;
      }
      function GR(n) {
        return `Query(target=${(function I2(n) {
          let e = n.path.canonicalString();
          return (
            null !== n.collectionGroup &&
              (e += " collectionGroup=" + n.collectionGroup),
            n.filters.length > 0 &&
              (e += `, filters: [${n.filters
                .map((t) => {
                  return `${(r = t).field.canonicalString()} ${r.op} ${um(
                    r.value
                  )}`;
                  var r;
                })
                .join(", ")}]`),
            GE(n.limit) || (e += ", limit: " + n.limit),
            n.orderBy.length > 0 &&
              (e += `, orderBy: [${n.orderBy
                .map((t) => {
                  return `${(r = t).field.canonicalString()} (${r.dir})`;
                  var r;
                })
                .join(", ")}]`),
            n.startAt &&
              ((e += ", startAt: "),
              (e += n.startAt.inclusive ? "b:" : "a:"),
              (e += n.startAt.position.map((t) => um(t)).join(","))),
            n.endAt &&
              ((e += ", endAt: "),
              (e += n.endAt.inclusive ? "a:" : "b:"),
              (e += n.endAt.position.map((t) => um(t)).join(","))),
            `Target(${e})`
          );
        })(lo(n))}; limitType=${n.limitType})`;
      }
      function WR(n, e) {
        return (
          e.isFoundDocument() &&
          (function (t, r) {
            const i = r.key.path;
            return null !== t.collectionGroup
              ? r.key.hasCollectionId(t.collectionGroup) && t.path.isPrefixOf(i)
              : u.isDocumentKey(t.path)
              ? t.path.isEqual(i)
              : t.path.isImmediateParentOf(i);
          })(n, e) &&
          (function (t, r) {
            for (const i of t.explicitOrderBy)
              if (!i.field.isKeyField() && null === r.data.field(i.field))
                return !1;
            return !0;
          })(n, e) &&
          (function (t, r) {
            for (const i of t.filters) if (!i.matches(r)) return !1;
            return !0;
          })(n, e) &&
          ((r = e),
          !(
            ((t = n).startAt &&
              !(function (i, a, l) {
                const h = Fk(i, a, l);
                return i.inclusive ? h <= 0 : h < 0;
              })(t.startAt, dm(t), r)) ||
            (t.endAt &&
              !(function (i, a, l) {
                const h = Fk(i, a, l);
                return i.inclusive ? h >= 0 : h > 0;
              })(t.endAt, dm(t), r))
          ))
        );
        var t, r;
      }
      function jk(n) {
        return (
          n.collectionGroup ||
          (n.path.length % 2 == 1
            ? n.path.lastSegment()
            : n.path.get(n.path.length - 2))
        );
      }
      function $k(n) {
        return (e, t) => {
          let r = !1;
          for (const i of dm(n)) {
            const a = N2(i, e, t);
            if (0 !== a) return a;
            r = r || i.field.isKeyField();
          }
          return 0;
        };
      }
      function N2(n, e, t) {
        const r = n.field.isKeyField()
          ? u.comparator(e.key, t.key)
          : (function (i, a, l) {
              const h = a.data.field(i),
                m = l.data.field(i);
              return null !== h && null !== m ? xc(h, m) : Ct();
            })(n.field, e, t);
        switch (n.dir) {
          case "asc":
            return r;
          case "desc":
            return -1 * r;
          default:
            return Ct();
        }
      }
      function Hk(n, e) {
        if (n.dt) {
          if (isNaN(e)) return { doubleValue: "NaN" };
          if (e === 1 / 0) return { doubleValue: "Infinity" };
          if (e === -1 / 0) return { doubleValue: "-Infinity" };
        }
        return { doubleValue: WE(e) ? "-0" : e };
      }
      function Gk(n) {
        return { integerValue: "" + n };
      }
      function Wk(n, e) {
        return bk(e) ? Gk(e) : Hk(n, e);
      }
      class Rb {
        constructor() {
          this._ = void 0;
        }
      }
      function P2(n, e, t) {
        return n instanceof hm
          ? (function (r, i) {
              const a = {
                fields: {
                  __type__: { stringValue: "server_timestamp" },
                  __local_write_time__: {
                    timestampValue: {
                      seconds: r.seconds,
                      nanos: r.nanoseconds,
                    },
                  },
                },
              };
              return i && (a.fields.__previous_value__ = i), { mapValue: a };
            })(t, e)
          : n instanceof nf
          ? qk(n, e)
          : n instanceof rf
          ? Kk(n, e)
          : (function (r, i) {
              const a = zk(r, i),
                l = Zk(a) + Zk(r._t);
              return BR(a) && BR(r._t) ? Gk(l) : Hk(r.wt, l);
            })(n, e);
      }
      function O2(n, e, t) {
        return n instanceof nf ? qk(n, e) : n instanceof rf ? Kk(n, e) : t;
      }
      function zk(n, e) {
        return n instanceof fm
          ? BR((t = e)) || ((r = t) && "doubleValue" in r)
            ? e
            : { integerValue: 0 }
          : null;
        var r, t;
      }
      class hm extends Rb {}
      class nf extends Rb {
        constructor(e) {
          super(), (this.elements = e);
        }
      }
      function qk(n, e) {
        const t = Yk(e);
        for (const r of n.elements) t.some((i) => Pa(i, r)) || t.push(r);
        return { arrayValue: { values: t } };
      }
      class rf extends Rb {
        constructor(e) {
          super(), (this.elements = e);
        }
      }
      function Kk(n, e) {
        let t = Yk(e);
        for (const r of n.elements) t = t.filter((i) => !Pa(i, r));
        return { arrayValue: { values: t } };
      }
      class fm extends Rb {
        constructor(e, t) {
          super(), (this.wt = e), (this._t = t);
        }
      }
      function Zk(n) {
        return Ir(n.integerValue || n.doubleValue);
      }
      function Yk(n) {
        return qE(n) && n.arrayValue.values ? n.arrayValue.values.slice() : [];
      }
      class QE {
        constructor(e, t) {
          (this.field = e), (this.transform = t);
        }
      }
      class F2 {
        constructor(e, t) {
          (this.version = e), (this.transformResults = t);
        }
      }
      class yr {
        constructor(e, t) {
          (this.updateTime = e), (this.exists = t);
        }
        static none() {
          return new yr();
        }
        static exists(e) {
          return new yr(void 0, e);
        }
        static updateTime(e) {
          return new yr(e);
        }
        get isNone() {
          return void 0 === this.updateTime && void 0 === this.exists;
        }
        isEqual(e) {
          return (
            this.exists === e.exists &&
            (this.updateTime
              ? !!e.updateTime && this.updateTime.isEqual(e.updateTime)
              : !e.updateTime)
          );
        }
      }
      function Mb(n, e) {
        return void 0 !== n.updateTime
          ? e.isFoundDocument() && e.version.isEqual(n.updateTime)
          : void 0 === n.exists || n.exists === e.isFoundDocument();
      }
      class xb {}
      function Qk(n, e) {
        if (!n.hasLocalMutations || (e && 0 === e.fields.length)) return null;
        if (null === e)
          return n.isNoDocument()
            ? new gm(n.key, yr.none())
            : new pm(n.key, n.data, yr.none());
        {
          const t = n.data,
            r = wi.empty();
          let i = new zn(o.comparator);
          for (let a of e.fields)
            if (!i.has(a)) {
              let l = t.field(a);
              null === l &&
                a.length > 1 &&
                ((a = a.popLast()), (l = t.field(a))),
                null === l ? r.delete(a) : r.set(a, l),
                (i = i.add(a));
            }
          return new Lu(n.key, r, new ks(i.toArray()), yr.none());
        }
      }
      function L2(n, e, t) {
        n instanceof pm
          ? (function (r, i, a) {
              const l = r.value.clone(),
                h = e1(r.fieldTransforms, i, a.transformResults);
              l.setAll(h),
                i
                  .convertToFoundDocument(a.version, l)
                  .setHasCommittedMutations();
            })(n, e, t)
          : n instanceof Lu
          ? (function (r, i, a) {
              if (!Mb(r.precondition, i))
                return void i.convertToUnknownDocument(a.version);
              const l = e1(r.fieldTransforms, i, a.transformResults),
                h = i.data;
              h.setAll(Xk(r)),
                h.setAll(l),
                i
                  .convertToFoundDocument(a.version, h)
                  .setHasCommittedMutations();
            })(n, e, t)
          : e.convertToNoDocument(t.version).setHasCommittedMutations();
      }
      function JE(n, e, t, r) {
        return n instanceof pm
          ? (function (i, a, l, h) {
              if (!Mb(i.precondition, a)) return l;
              const m = i.value.clone(),
                v = t1(i.fieldTransforms, h, a);
              return (
                m.setAll(v),
                a.convertToFoundDocument(a.version, m).setHasLocalMutations(),
                null
              );
            })(n, e, t, r)
          : n instanceof Lu
          ? (function (i, a, l, h) {
              if (!Mb(i.precondition, a)) return l;
              const m = t1(i.fieldTransforms, h, a),
                v = a.data;
              return (
                v.setAll(Xk(i)),
                v.setAll(m),
                a.convertToFoundDocument(a.version, v).setHasLocalMutations(),
                null === l
                  ? null
                  : l
                      .unionWith(i.fieldMask.fields)
                      .unionWith(i.fieldTransforms.map((b) => b.field))
              );
            })(n, e, t, r)
          : ((l = t),
            Mb(n.precondition, (a = e))
              ? (a.convertToNoDocument(a.version).setHasLocalMutations(), null)
              : l);
        var a, l;
      }
      function V2(n, e) {
        let t = null;
        for (const r of n.fieldTransforms) {
          const i = e.data.field(r.field),
            a = zk(r.transform, i || null);
          null != a && (null === t && (t = wi.empty()), t.set(r.field, a));
        }
        return t || null;
      }
      function Jk(n, e) {
        return (
          n.type === e.type &&
          !!n.key.isEqual(e.key) &&
          !!n.precondition.isEqual(e.precondition) &&
          ((r = e.fieldTransforms),
          !!(
            (void 0 === (t = n.fieldTransforms) && void 0 === r) ||
            (t &&
              r &&
              Yh(t, r, (i, a) =>
                (function k2(n, e) {
                  return (
                    n.field.isEqual(e.field) &&
                    ((r = e.transform),
                    ((t = n.transform) instanceof nf && r instanceof nf) ||
                    (t instanceof rf && r instanceof rf)
                      ? Yh(t.elements, r.elements, Pa)
                      : t instanceof fm && r instanceof fm
                      ? Pa(t._t, r._t)
                      : t instanceof hm && r instanceof hm)
                  );
                  var t, r;
                })(i, a)
              ))
          )) &&
          (0 === n.type
            ? n.value.isEqual(e.value)
            : 1 !== n.type ||
              (n.data.isEqual(e.data) && n.fieldMask.isEqual(e.fieldMask)))
        );
        var t, r;
      }
      class pm extends xb {
        constructor(e, t, r, i = []) {
          super(),
            (this.key = e),
            (this.value = t),
            (this.precondition = r),
            (this.fieldTransforms = i),
            (this.type = 0);
        }
        getFieldMask() {
          return null;
        }
      }
      class Lu extends xb {
        constructor(e, t, r, i, a = []) {
          super(),
            (this.key = e),
            (this.data = t),
            (this.fieldMask = r),
            (this.precondition = i),
            (this.fieldTransforms = a),
            (this.type = 1);
        }
        getFieldMask() {
          return this.fieldMask;
        }
      }
      function Xk(n) {
        const e = new Map();
        return (
          n.fieldMask.fields.forEach((t) => {
            if (!t.isEmpty()) {
              const r = n.data.field(t);
              e.set(t, r);
            }
          }),
          e
        );
      }
      function e1(n, e, t) {
        const r = new Map();
        Wt(n.length === t.length);
        for (let i = 0; i < t.length; i++) {
          const a = n[i],
            l = a.transform,
            h = e.data.field(a.field);
          r.set(a.field, O2(l, h, t[i]));
        }
        return r;
      }
      function t1(n, e, t) {
        const r = new Map();
        for (const i of n) {
          const a = i.transform,
            l = t.data.field(i.field);
          r.set(i.field, P2(a, l, e));
        }
        return r;
      }
      class gm extends xb {
        constructor(e, t) {
          super(),
            (this.key = e),
            (this.precondition = t),
            (this.type = 2),
            (this.fieldTransforms = []);
        }
        getFieldMask() {
          return null;
        }
      }
      class zR extends xb {
        constructor(e, t) {
          super(),
            (this.key = e),
            (this.precondition = t),
            (this.type = 3),
            (this.fieldTransforms = []);
        }
        getFieldMask() {
          return null;
        }
      }
      class U2 {
        constructor(e) {
          this.count = e;
        }
      }
      var Ur, Pn;
      function n1(n) {
        switch (n) {
          default:
            return Ct();
          case be.CANCELLED:
          case be.UNKNOWN:
          case be.DEADLINE_EXCEEDED:
          case be.RESOURCE_EXHAUSTED:
          case be.INTERNAL:
          case be.UNAVAILABLE:
          case be.UNAUTHENTICATED:
            return !1;
          case be.INVALID_ARGUMENT:
          case be.NOT_FOUND:
          case be.ALREADY_EXISTS:
          case be.PERMISSION_DENIED:
          case be.FAILED_PRECONDITION:
          case be.ABORTED:
          case be.OUT_OF_RANGE:
          case be.UNIMPLEMENTED:
          case be.DATA_LOSS:
            return !0;
        }
      }
      function r1(n) {
        if (void 0 === n) return _r("GRPC error has no .code"), be.UNKNOWN;
        switch (n) {
          case Ur.OK:
            return be.OK;
          case Ur.CANCELLED:
            return be.CANCELLED;
          case Ur.UNKNOWN:
            return be.UNKNOWN;
          case Ur.DEADLINE_EXCEEDED:
            return be.DEADLINE_EXCEEDED;
          case Ur.RESOURCE_EXHAUSTED:
            return be.RESOURCE_EXHAUSTED;
          case Ur.INTERNAL:
            return be.INTERNAL;
          case Ur.UNAVAILABLE:
            return be.UNAVAILABLE;
          case Ur.UNAUTHENTICATED:
            return be.UNAUTHENTICATED;
          case Ur.INVALID_ARGUMENT:
            return be.INVALID_ARGUMENT;
          case Ur.NOT_FOUND:
            return be.NOT_FOUND;
          case Ur.ALREADY_EXISTS:
            return be.ALREADY_EXISTS;
          case Ur.PERMISSION_DENIED:
            return be.PERMISSION_DENIED;
          case Ur.FAILED_PRECONDITION:
            return be.FAILED_PRECONDITION;
          case Ur.ABORTED:
            return be.ABORTED;
          case Ur.OUT_OF_RANGE:
            return be.OUT_OF_RANGE;
          case Ur.UNIMPLEMENTED:
            return be.UNIMPLEMENTED;
          case Ur.DATA_LOSS:
            return be.DATA_LOSS;
          default:
            return Ct();
        }
      }
      ((Pn = Ur || (Ur = {}))[(Pn.OK = 0)] = "OK"),
        (Pn[(Pn.CANCELLED = 1)] = "CANCELLED"),
        (Pn[(Pn.UNKNOWN = 2)] = "UNKNOWN"),
        (Pn[(Pn.INVALID_ARGUMENT = 3)] = "INVALID_ARGUMENT"),
        (Pn[(Pn.DEADLINE_EXCEEDED = 4)] = "DEADLINE_EXCEEDED"),
        (Pn[(Pn.NOT_FOUND = 5)] = "NOT_FOUND"),
        (Pn[(Pn.ALREADY_EXISTS = 6)] = "ALREADY_EXISTS"),
        (Pn[(Pn.PERMISSION_DENIED = 7)] = "PERMISSION_DENIED"),
        (Pn[(Pn.UNAUTHENTICATED = 16)] = "UNAUTHENTICATED"),
        (Pn[(Pn.RESOURCE_EXHAUSTED = 8)] = "RESOURCE_EXHAUSTED"),
        (Pn[(Pn.FAILED_PRECONDITION = 9)] = "FAILED_PRECONDITION"),
        (Pn[(Pn.ABORTED = 10)] = "ABORTED"),
        (Pn[(Pn.OUT_OF_RANGE = 11)] = "OUT_OF_RANGE"),
        (Pn[(Pn.UNIMPLEMENTED = 12)] = "UNIMPLEMENTED"),
        (Pn[(Pn.INTERNAL = 13)] = "INTERNAL"),
        (Pn[(Pn.UNAVAILABLE = 14)] = "UNAVAILABLE"),
        (Pn[(Pn.DATA_LOSS = 15)] = "DATA_LOSS");
      class Pc {
        constructor(e, t) {
          (this.mapKeyFn = e),
            (this.equalsFn = t),
            (this.inner = {}),
            (this.innerSize = 0);
        }
        get(e) {
          const t = this.mapKeyFn(e),
            r = this.inner[t];
          if (void 0 !== r)
            for (const [i, a] of r) if (this.equalsFn(i, e)) return a;
        }
        has(e) {
          return void 0 !== this.get(e);
        }
        set(e, t) {
          const r = this.mapKeyFn(e),
            i = this.inner[r];
          if (void 0 === i)
            return (this.inner[r] = [[e, t]]), void this.innerSize++;
          for (let a = 0; a < i.length; a++)
            if (this.equalsFn(i[a][0], e)) return void (i[a] = [e, t]);
          i.push([e, t]), this.innerSize++;
        }
        delete(e) {
          const t = this.mapKeyFn(e),
            r = this.inner[t];
          if (void 0 === r) return !1;
          for (let i = 0; i < r.length; i++)
            if (this.equalsFn(r[i][0], e))
              return (
                1 === r.length ? delete this.inner[t] : r.splice(i, 1),
                this.innerSize--,
                !0
              );
          return !1;
        }
        forEach(e) {
          Go(this.inner, (t, r) => {
            for (const [i, a] of r) e(i, a);
          });
        }
        isEmpty() {
          return om(this.inner);
        }
        size() {
          return this.innerSize;
        }
      }
      const B2 = new tr(u.comparator);
      function us() {
        return B2;
      }
      const i1 = new tr(u.comparator);
      function XE(...n) {
        let e = i1;
        for (const t of n) e = e.insert(t.key, t);
        return e;
      }
      function s1(n) {
        let e = i1;
        return n.forEach((t, r) => (e = e.insert(t, r.overlayedDocument))), e;
      }
      function Oa() {
        return ew();
      }
      function o1() {
        return ew();
      }
      function ew() {
        return new Pc(
          (n) => n.toString(),
          (n, e) => n.isEqual(e)
        );
      }
      const j2 = new tr(u.comparator),
        $2 = new zn(u.comparator);
      function _n(...n) {
        let e = $2;
        for (const t of n) e = e.add(t);
        return e;
      }
      const H2 = new zn(un);
      function Nb() {
        return H2;
      }
      class tw {
        constructor(e, t, r, i, a) {
          (this.snapshotVersion = e),
            (this.targetChanges = t),
            (this.targetMismatches = r),
            (this.documentUpdates = i),
            (this.resolvedLimboDocuments = a);
        }
        static createSynthesizedRemoteEventForCurrentChange(e, t) {
          const r = new Map();
          return (
            r.set(e, nw.createSynthesizedTargetChangeForCurrentChange(e, t)),
            new tw(Kt.min(), r, Nb(), us(), _n())
          );
        }
      }
      class nw {
        constructor(e, t, r, i, a) {
          (this.resumeToken = e),
            (this.current = t),
            (this.addedDocuments = r),
            (this.modifiedDocuments = i),
            (this.removedDocuments = a);
        }
        static createSynthesizedTargetChangeForCurrentChange(e, t) {
          return new nw(Kr.EMPTY_BYTE_STRING, t, _n(), _n(), _n());
        }
      }
      class Pb {
        constructor(e, t, r, i) {
          (this.gt = e),
            (this.removedTargetIds = t),
            (this.key = r),
            (this.yt = i);
        }
      }
      class a1 {
        constructor(e, t) {
          (this.targetId = e), (this.It = t);
        }
      }
      class u1 {
        constructor(e, t, r = Kr.EMPTY_BYTE_STRING, i = null) {
          (this.state = e),
            (this.targetIds = t),
            (this.resumeToken = r),
            (this.cause = i);
        }
      }
      class l1 {
        constructor() {
          (this.Tt = 0),
            (this.Et = d1()),
            (this.At = Kr.EMPTY_BYTE_STRING),
            (this.Rt = !1),
            (this.bt = !0);
        }
        get current() {
          return this.Rt;
        }
        get resumeToken() {
          return this.At;
        }
        get Pt() {
          return 0 !== this.Tt;
        }
        get vt() {
          return this.bt;
        }
        Vt(e) {
          e.approximateByteSize() > 0 && ((this.bt = !0), (this.At = e));
        }
        St() {
          let e = _n(),
            t = _n(),
            r = _n();
          return (
            this.Et.forEach((i, a) => {
              switch (a) {
                case 0:
                  e = e.add(i);
                  break;
                case 2:
                  t = t.add(i);
                  break;
                case 1:
                  r = r.add(i);
                  break;
                default:
                  Ct();
              }
            }),
            new nw(this.At, this.Rt, e, t, r)
          );
        }
        Dt() {
          (this.bt = !1), (this.Et = d1());
        }
        Ct(e, t) {
          (this.bt = !0), (this.Et = this.Et.insert(e, t));
        }
        xt(e) {
          (this.bt = !0), (this.Et = this.Et.remove(e));
        }
        Nt() {
          this.Tt += 1;
        }
        kt() {
          this.Tt -= 1;
        }
        Ot() {
          (this.bt = !0), (this.Rt = !0);
        }
      }
      class G2 {
        constructor(e) {
          (this.Mt = e),
            (this.Ft = new Map()),
            (this.$t = us()),
            (this.Bt = c1()),
            (this.Lt = new zn(un));
        }
        Ut(e) {
          for (const t of e.gt)
            e.yt && e.yt.isFoundDocument()
              ? this.qt(t, e.yt)
              : this.Kt(t, e.key, e.yt);
          for (const t of e.removedTargetIds) this.Kt(t, e.key, e.yt);
        }
        Gt(e) {
          this.forEachTarget(e, (t) => {
            const r = this.Qt(t);
            switch (e.state) {
              case 0:
                this.jt(t) && r.Vt(e.resumeToken);
                break;
              case 1:
                r.kt(), r.Pt || r.Dt(), r.Vt(e.resumeToken);
                break;
              case 2:
                r.kt(), r.Pt || this.removeTarget(t);
                break;
              case 3:
                this.jt(t) && (r.Ot(), r.Vt(e.resumeToken));
                break;
              case 4:
                this.jt(t) && (this.Wt(t), r.Vt(e.resumeToken));
                break;
              default:
                Ct();
            }
          });
        }
        forEachTarget(e, t) {
          e.targetIds.length > 0
            ? e.targetIds.forEach(t)
            : this.Ft.forEach((r, i) => {
                this.jt(i) && t(i);
              });
        }
        zt(e) {
          const t = e.targetId,
            r = e.It.count,
            i = this.Ht(t);
          if (i) {
            const a = i.target;
            if (Sb(a))
              if (0 === r) {
                const l = new u(a.path);
                this.Kt(t, l, nr.newNoDocument(l, Kt.min()));
              } else Wt(1 === r);
            else this.Jt(t) !== r && (this.Wt(t), (this.Lt = this.Lt.add(t)));
          }
        }
        Yt(e) {
          const t = new Map();
          this.Ft.forEach((a, l) => {
            const h = this.Ht(l);
            if (h) {
              if (a.current && Sb(h.target)) {
                const m = new u(h.target.path);
                null !== this.$t.get(m) ||
                  this.Xt(l, m) ||
                  this.Kt(l, m, nr.newNoDocument(m, e));
              }
              a.vt && (t.set(l, a.St()), a.Dt());
            }
          });
          let r = _n();
          this.Bt.forEach((a, l) => {
            let h = !0;
            l.forEachWhile((m) => {
              const v = this.Ht(m);
              return !v || 2 === v.purpose || ((h = !1), !1);
            }),
              h && (r = r.add(a));
          }),
            this.$t.forEach((a, l) => l.setReadTime(e));
          const i = new tw(e, t, this.Lt, this.$t, r);
          return (this.$t = us()), (this.Bt = c1()), (this.Lt = new zn(un)), i;
        }
        qt(e, t) {
          if (!this.jt(e)) return;
          const r = this.Xt(e, t.key) ? 2 : 0;
          this.Qt(e).Ct(t.key, r),
            (this.$t = this.$t.insert(t.key, t)),
            (this.Bt = this.Bt.insert(t.key, this.Zt(t.key).add(e)));
        }
        Kt(e, t, r) {
          if (!this.jt(e)) return;
          const i = this.Qt(e);
          this.Xt(e, t) ? i.Ct(t, 1) : i.xt(t),
            (this.Bt = this.Bt.insert(t, this.Zt(t).delete(e))),
            r && (this.$t = this.$t.insert(t, r));
        }
        removeTarget(e) {
          this.Ft.delete(e);
        }
        Jt(e) {
          const t = this.Qt(e).St();
          return (
            this.Mt.getRemoteKeysForTarget(e).size +
            t.addedDocuments.size -
            t.removedDocuments.size
          );
        }
        Nt(e) {
          this.Qt(e).Nt();
        }
        Qt(e) {
          let t = this.Ft.get(e);
          return t || ((t = new l1()), this.Ft.set(e, t)), t;
        }
        Zt(e) {
          let t = this.Bt.get(e);
          return t || ((t = new zn(un)), (this.Bt = this.Bt.insert(e, t))), t;
        }
        jt(e) {
          const t = null !== this.Ht(e);
          return (
            t || Je("WatchChangeAggregator", "Detected inactive target", e), t
          );
        }
        Ht(e) {
          const t = this.Ft.get(e);
          return t && t.Pt ? null : this.Mt.te(e);
        }
        Wt(e) {
          this.Ft.set(e, new l1()),
            this.Mt.getRemoteKeysForTarget(e).forEach((t) => {
              this.Kt(e, t, null);
            });
        }
        Xt(e, t) {
          return this.Mt.getRemoteKeysForTarget(e).has(t);
        }
      }
      function c1() {
        return new tr(u.comparator);
      }
      function d1() {
        return new tr(u.comparator);
      }
      const W2 = { asc: "ASCENDING", desc: "DESCENDING" },
        z2 = {
          "<": "LESS_THAN",
          "<=": "LESS_THAN_OR_EQUAL",
          ">": "GREATER_THAN",
          ">=": "GREATER_THAN_OR_EQUAL",
          "==": "EQUAL",
          "!=": "NOT_EQUAL",
          "array-contains": "ARRAY_CONTAINS",
          in: "IN",
          "not-in": "NOT_IN",
          "array-contains-any": "ARRAY_CONTAINS_ANY",
        };
      class q2 {
        constructor(e, t) {
          (this.databaseId = e), (this.dt = t);
        }
      }
      function rw(n, e) {
        return n.dt
          ? `${new Date(1e3 * e.seconds)
              .toISOString()
              .replace(/\.\d*/, "")
              .replace("Z", "")}.${("000000000" + e.nanoseconds).slice(-9)}Z`
          : { seconds: "" + e.seconds, nanos: e.nanoseconds };
      }
      function h1(n, e) {
        return n.dt ? e.toBase64() : e.toUint8Array();
      }
      function K2(n, e) {
        return rw(n, e.toTimestamp());
      }
      function ni(n) {
        return (
          Wt(!!n),
          Kt.fromTimestamp(
            (function (e) {
              const t = Rc(e);
              return new ur(t.seconds, t.nanos);
            })(n)
          )
        );
      }
      function qR(n, e) {
        return ((t = n),
        new An(["projects", t.projectId, "databases", t.database]))
          .child("documents")
          .child(e)
          .canonicalString();
        var t;
      }
      function f1(n) {
        const e = An.fromString(n);
        return Wt(I1(e)), e;
      }
      function iw(n, e) {
        return qR(n.databaseId, e.path);
      }
      function ka(n, e) {
        const t = f1(e);
        if (t.get(1) !== n.databaseId.projectId)
          throw new Ge(
            be.INVALID_ARGUMENT,
            "Tried to deserialize key from different project: " +
              t.get(1) +
              " vs " +
              n.databaseId.projectId
          );
        if (t.get(3) !== n.databaseId.database)
          throw new Ge(
            be.INVALID_ARGUMENT,
            "Tried to deserialize key from different database: " +
              t.get(3) +
              " vs " +
              n.databaseId.database
          );
        return new u(g1(t));
      }
      function KR(n, e) {
        return qR(n.databaseId, e);
      }
      function p1(n) {
        const e = f1(n);
        return 4 === e.length ? An.emptyPath() : g1(e);
      }
      function sw(n) {
        return new An([
          "projects",
          n.databaseId.projectId,
          "databases",
          n.databaseId.database,
        ]).canonicalString();
      }
      function g1(n) {
        return Wt(n.length > 4 && "documents" === n.get(4)), n.popFirst(5);
      }
      function m1(n, e, t) {
        return { name: iw(n, e), fields: t.value.mapValue.fields };
      }
      function _1(n, e, t) {
        const r = ka(n, e.name),
          i = ni(e.updateTime),
          a = new wi({ mapValue: { fields: e.fields } }),
          l = nr.newFoundDocument(r, i, a);
        return (
          t && l.setHasCommittedMutations(),
          t ? l.setHasCommittedMutations() : l
        );
      }
      function ow(n, e) {
        let t;
        if (e instanceof pm) t = { update: m1(n, e.key, e.value) };
        else if (e instanceof gm) t = { delete: iw(n, e.key) };
        else if (e instanceof Lu)
          t = { update: m1(n, e.key, e.data), updateMask: rj(e.fieldMask) };
        else {
          if (!(e instanceof zR)) return Ct();
          t = { verify: iw(n, e.key) };
        }
        return (
          e.fieldTransforms.length > 0 &&
            (t.updateTransforms = e.fieldTransforms.map((r) =>
              (function (i, a) {
                const l = a.transform;
                if (l instanceof hm)
                  return {
                    fieldPath: a.field.canonicalString(),
                    setToServerValue: "REQUEST_TIME",
                  };
                if (l instanceof nf)
                  return {
                    fieldPath: a.field.canonicalString(),
                    appendMissingElements: { values: l.elements },
                  };
                if (l instanceof rf)
                  return {
                    fieldPath: a.field.canonicalString(),
                    removeAllFromArray: { values: l.elements },
                  };
                if (l instanceof fm)
                  return {
                    fieldPath: a.field.canonicalString(),
                    increment: l._t,
                  };
                throw Ct();
              })(0, r)
            )),
          e.precondition.isNone ||
            (t.currentDocument =
              void 0 !== (i = e.precondition).updateTime
                ? { updateTime: K2(n, i.updateTime) }
                : void 0 !== i.exists
                ? { exists: i.exists }
                : Ct()),
          t
        );
        var i;
      }
      function ZR(n, e) {
        const t = e.currentDocument
            ? void 0 !== (i = e.currentDocument).updateTime
              ? yr.updateTime(ni(i.updateTime))
              : void 0 !== i.exists
              ? yr.exists(i.exists)
              : yr.none()
            : yr.none(),
          r = e.updateTransforms
            ? e.updateTransforms.map((i) =>
                (function (a, l) {
                  let h = null;
                  "setToServerValue" in l
                    ? (Wt("REQUEST_TIME" === l.setToServerValue),
                      (h = new hm()))
                    : "appendMissingElements" in l
                    ? (h = new nf(l.appendMissingElements.values || []))
                    : "removeAllFromArray" in l
                    ? (h = new rf(l.removeAllFromArray.values || []))
                    : "increment" in l
                    ? (h = new fm(a, l.increment))
                    : Ct();
                  const m = o.fromServerFormat(l.fieldPath);
                  return new QE(m, h);
                })(n, i)
              )
            : [];
        var i;
        if (e.update) {
          const i = ka(n, e.update.name),
            a = new wi({ mapValue: { fields: e.update.fields } });
          if (e.updateMask) {
            const l = new ks(
              (e.updateMask.fieldPaths || []).map((v) => o.fromServerFormat(v))
            );
            return new Lu(i, a, l, t, r);
          }
          return new pm(i, a, t, r);
        }
        if (e.delete) {
          const i = ka(n, e.delete);
          return new gm(i, t);
        }
        if (e.verify) {
          const i = ka(n, e.verify);
          return new zR(i, t);
        }
        return Ct();
      }
      function y1(n, e) {
        return { documents: [KR(n, e.path)] };
      }
      function v1(n, e) {
        const t = { structuredQuery: {} },
          r = e.path;
        null !== e.collectionGroup
          ? ((t.parent = KR(n, r)),
            (t.structuredQuery.from = [
              { collectionId: e.collectionGroup, allDescendants: !0 },
            ]))
          : ((t.parent = KR(n, r.popLast())),
            (t.structuredQuery.from = [{ collectionId: r.lastSegment() }]));
        const i = (function (m) {
          if (0 === m.length) return;
          const v = m.map((b) =>
            (function (D) {
              if ("==" === D.op) {
                if (Sk(D.value))
                  return { unaryFilter: { field: mm(D.field), op: "IS_NAN" } };
                if (Tk(D.value))
                  return { unaryFilter: { field: mm(D.field), op: "IS_NULL" } };
              } else if ("!=" === D.op) {
                if (Sk(D.value))
                  return {
                    unaryFilter: { field: mm(D.field), op: "IS_NOT_NAN" },
                  };
                if (Tk(D.value))
                  return {
                    unaryFilter: { field: mm(D.field), op: "IS_NOT_NULL" },
                  };
              }
              return {
                fieldFilter: {
                  field: mm(D.field),
                  op: ej(D.op),
                  value: D.value,
                },
              };
            })(b)
          );
          return 1 === v.length
            ? v[0]
            : { compositeFilter: { op: "AND", filters: v } };
        })(e.filters);
        i && (t.structuredQuery.where = i);
        const a = (function (m) {
          if (0 !== m.length)
            return m.map((v) => {
              return { field: mm((b = v).field), direction: X2(b.dir) };
              var b;
            });
        })(e.orderBy);
        a && (t.structuredQuery.orderBy = a);
        const l = ((v = e.limit), n.dt || GE(v) ? v : { value: v });
        var v, h, m;
        return (
          null !== l && (t.structuredQuery.limit = l),
          e.startAt &&
            (t.structuredQuery.startAt = {
              before: (h = e.startAt).inclusive,
              values: h.position,
            }),
          e.endAt &&
            (t.structuredQuery.endAt = {
              before: !(m = e.endAt).inclusive,
              values: m.position,
            }),
          t
        );
      }
      function E1(n) {
        let e = p1(n.parent);
        const t = n.structuredQuery,
          r = t.from ? t.from.length : 0;
        let i = null;
        if (r > 0) {
          Wt(1 === r);
          const b = t.from[0];
          b.allDescendants
            ? (i = b.collectionId)
            : (e = e.child(b.collectionId));
        }
        let a = [];
        t.where && (a = w1(t.where));
        let l = [];
        t.orderBy &&
          (l = t.orderBy.map((b) => {
            return new lm(
              _m((D = b).field),
              (function (R) {
                switch (R) {
                  case "ASCENDING":
                    return "asc";
                  case "DESCENDING":
                    return "desc";
                  default:
                    return;
                }
              })(D.direction)
            );
            var D;
          }));
        let h = null;
        t.limit &&
          (h = (function (b) {
            let D;
            return (D = "object" == typeof b ? b.value : b), GE(D) ? null : D;
          })(t.limit));
        let m = null;
        var b;
        t.startAt && (m = new Nc((b = t.startAt).values || [], !!b.before));
        let v = null;
        return (
          t.endAt &&
            (v = (function (b) {
              return new Nc(b.values || [], !b.before);
            })(t.endAt)),
          Vk(e, i, l, a, h, "F", m, v)
        );
      }
      function w1(n) {
        return n
          ? void 0 !== n.unaryFilter
            ? [nj(n)]
            : void 0 !== n.fieldFilter
            ? [tj(n)]
            : void 0 !== n.compositeFilter
            ? n.compositeFilter.filters
                .map((e) => w1(e))
                .reduce((e, t) => e.concat(t))
            : Ct()
          : [];
      }
      function X2(n) {
        return W2[n];
      }
      function ej(n) {
        return z2[n];
      }
      function mm(n) {
        return { fieldPath: n.canonicalString() };
      }
      function _m(n) {
        return o.fromServerFormat(n.fieldPath);
      }
      function tj(n) {
        return Ii.create(
          _m(n.fieldFilter.field),
          (function (e) {
            switch (e) {
              case "EQUAL":
                return "==";
              case "NOT_EQUAL":
                return "!=";
              case "GREATER_THAN":
                return ">";
              case "GREATER_THAN_OR_EQUAL":
                return ">=";
              case "LESS_THAN":
                return "<";
              case "LESS_THAN_OR_EQUAL":
                return "<=";
              case "ARRAY_CONTAINS":
                return "array-contains";
              case "IN":
                return "in";
              case "NOT_IN":
                return "not-in";
              case "ARRAY_CONTAINS_ANY":
                return "array-contains-any";
              default:
                return Ct();
            }
          })(n.fieldFilter.op),
          n.fieldFilter.value
        );
      }
      function nj(n) {
        switch (n.unaryFilter.op) {
          case "IS_NAN":
            const e = _m(n.unaryFilter.field);
            return Ii.create(e, "==", { doubleValue: NaN });
          case "IS_NULL":
            const t = _m(n.unaryFilter.field);
            return Ii.create(t, "==", { nullValue: "NULL_VALUE" });
          case "IS_NOT_NAN":
            const r = _m(n.unaryFilter.field);
            return Ii.create(r, "!=", { doubleValue: NaN });
          case "IS_NOT_NULL":
            const i = _m(n.unaryFilter.field);
            return Ii.create(i, "!=", { nullValue: "NULL_VALUE" });
          default:
            return Ct();
        }
      }
      function rj(n) {
        const e = [];
        return (
          n.fields.forEach((t) => e.push(t.canonicalString())),
          { fieldPaths: e }
        );
      }
      function I1(n) {
        return (
          n.length >= 4 && "projects" === n.get(0) && "databases" === n.get(2)
        );
      }
      function $i(n) {
        let e = "";
        for (let t = 0; t < n.length; t++)
          e.length > 0 && (e = C1(e)), (e = ij(n.get(t), e));
        return C1(e);
      }
      function ij(n, e) {
        let t = e;
        const r = n.length;
        for (let i = 0; i < r; i++) {
          const a = n.charAt(i);
          switch (a) {
            case "\0":
              t += "\x01\x10";
              break;
            case "\x01":
              t += "\x01\x11";
              break;
            default:
              t += a;
          }
        }
        return t;
      }
      function C1(n) {
        return n + "\x01\x01";
      }
      function Fa(n) {
        const e = n.length;
        if ((Wt(e >= 2), 2 === e))
          return (
            Wt("\x01" === n.charAt(0) && "\x01" === n.charAt(1)), An.emptyPath()
          );
        const t = e - 2,
          r = [];
        let i = "";
        for (let a = 0; a < e; ) {
          const l = n.indexOf("\x01", a);
          switch (((l < 0 || l > t) && Ct(), n.charAt(l + 1))) {
            case "\x01":
              const h = n.substring(a, l);
              let m;
              0 === i.length ? (m = h) : ((i += h), (m = i), (i = "")),
                r.push(m);
              break;
            case "\x10":
              (i += n.substring(a, l)), (i += "\0");
              break;
            case "\x11":
              i += n.substring(a, l + 1);
              break;
            default:
              Ct();
          }
          a = l + 2;
        }
        return new An(r);
      }
      const b1 = ["userId", "batchId"];
      function Ob(n, e) {
        return [n, $i(e)];
      }
      function D1(n, e, t) {
        return [n, $i(e), t];
      }
      const sj = {},
        oj = ["prefixPath", "collectionGroup", "readTime", "documentId"],
        aj = ["prefixPath", "collectionGroup", "documentId"],
        uj = ["collectionGroup", "readTime", "prefixPath", "documentId"],
        lj = ["canonicalId", "targetId"],
        cj = ["targetId", "path"],
        dj = ["path", "targetId"],
        hj = ["collectionId", "parent"],
        fj = ["indexId", "uid"],
        pj = ["uid", "sequenceNumber"],
        gj = [
          "indexId",
          "uid",
          "arrayValue",
          "directionalValue",
          "orderedDocumentKey",
          "documentKey",
        ],
        mj = ["indexId", "uid", "orderedDocumentKey"],
        _j = ["userId", "collectionPath", "documentId"],
        yj = ["userId", "collectionPath", "largestBatchId"],
        vj = ["userId", "collectionGroup", "largestBatchId"],
        T1 = [
          "mutationQueues",
          "mutations",
          "documentMutations",
          "remoteDocuments",
          "targets",
          "owner",
          "targetGlobal",
          "targetDocuments",
          "clientMetadata",
          "remoteDocumentGlobal",
          "collectionParents",
          "bundles",
          "namedQueries",
        ],
        Ej = [...T1, "documentOverlays"],
        S1 = [
          "mutationQueues",
          "mutations",
          "documentMutations",
          "remoteDocumentsV14",
          "targets",
          "owner",
          "targetGlobal",
          "targetDocuments",
          "clientMetadata",
          "remoteDocumentGlobal",
          "collectionParents",
          "bundles",
          "namedQueries",
          "documentOverlays",
        ],
        A1 = S1,
        wj = [...A1, "indexConfiguration", "indexState", "indexEntries"];
      class YR extends oe {
        constructor(e, t) {
          super(), (this.ee = e), (this.currentSequenceNumber = t);
        }
      }
      function ri(n, e) {
        const t = gt(n);
        return xt.N(t.ee, e);
      }
      class QR {
        constructor(e, t, r, i) {
          (this.batchId = e),
            (this.localWriteTime = t),
            (this.baseMutations = r),
            (this.mutations = i);
        }
        applyToRemoteDocument(e, t) {
          const r = t.mutationResults;
          for (let i = 0; i < this.mutations.length; i++) {
            const a = this.mutations[i];
            a.key.isEqual(e.key) && L2(a, e, r[i]);
          }
        }
        applyToLocalView(e, t) {
          for (const r of this.baseMutations)
            r.key.isEqual(e.key) && (t = JE(r, e, t, this.localWriteTime));
          for (const r of this.mutations)
            r.key.isEqual(e.key) && (t = JE(r, e, t, this.localWriteTime));
          return t;
        }
        applyToLocalDocumentSet(e, t) {
          const r = o1();
          return (
            this.mutations.forEach((i) => {
              const a = e.get(i.key),
                l = a.overlayedDocument;
              let h = this.applyToLocalView(l, a.mutatedFields);
              h = t.has(i.key) ? null : h;
              const m = Qk(l, h);
              null !== m && r.set(i.key, m),
                l.isValidDocument() || l.convertToNoDocument(Kt.min());
            }),
            r
          );
        }
        keys() {
          return this.mutations.reduce((e, t) => e.add(t.key), _n());
        }
        isEqual(e) {
          return (
            this.batchId === e.batchId &&
            Yh(this.mutations, e.mutations, (t, r) => Jk(t, r)) &&
            Yh(this.baseMutations, e.baseMutations, (t, r) => Jk(t, r))
          );
        }
      }
      class JR {
        constructor(e, t, r, i) {
          (this.batch = e),
            (this.commitVersion = t),
            (this.mutationResults = r),
            (this.docVersions = i);
        }
        static from(e, t, r) {
          Wt(e.mutations.length === r.length);
          let i = j2;
          const a = e.mutations;
          for (let l = 0; l < a.length; l++)
            i = i.insert(a[l].key, r[l].version);
          return new JR(e, t, r, i);
        }
      }
      class XR {
        constructor(e, t) {
          (this.largestBatchId = e), (this.mutation = t);
        }
        getKey() {
          return this.mutation.key;
        }
        isEqual(e) {
          return null !== e && this.mutation === e.mutation;
        }
        toString() {
          return `Overlay{\n      largestBatchId: ${
            this.largestBatchId
          },\n      mutation: ${this.mutation.toString()}\n    }`;
        }
      }
      class Oc {
        constructor(
          e,
          t,
          r,
          i,
          a = Kt.min(),
          l = Kt.min(),
          h = Kr.EMPTY_BYTE_STRING
        ) {
          (this.target = e),
            (this.targetId = t),
            (this.purpose = r),
            (this.sequenceNumber = i),
            (this.snapshotVersion = a),
            (this.lastLimboFreeSnapshotVersion = l),
            (this.resumeToken = h);
        }
        withSequenceNumber(e) {
          return new Oc(
            this.target,
            this.targetId,
            this.purpose,
            e,
            this.snapshotVersion,
            this.lastLimboFreeSnapshotVersion,
            this.resumeToken
          );
        }
        withResumeToken(e, t) {
          return new Oc(
            this.target,
            this.targetId,
            this.purpose,
            this.sequenceNumber,
            t,
            this.lastLimboFreeSnapshotVersion,
            e
          );
        }
        withLastLimboFreeSnapshotVersion(e) {
          return new Oc(
            this.target,
            this.targetId,
            this.purpose,
            this.sequenceNumber,
            this.snapshotVersion,
            e,
            this.resumeToken
          );
        }
      }
      class R1 {
        constructor(e) {
          this.ne = e;
        }
      }
      function M1(n, e) {
        const t = e.key,
          r = {
            prefixPath: t.getCollectionPath().popLast().toArray(),
            collectionGroup: t.collectionGroup,
            documentId: t.path.lastSegment(),
            readTime: kb(e.readTime),
            hasCommittedMutations: e.hasCommittedMutations,
          };
        if (e.isFoundDocument())
          r.document = {
            name: iw((i = n.ne), (a = e).key),
            fields: a.data.value.mapValue.fields,
            updateTime: rw(i, a.version.toTimestamp()),
          };
        else if (e.isNoDocument())
          r.noDocument = { path: t.path.toArray(), readTime: sf(e.version) };
        else {
          if (!e.isUnknownDocument()) return Ct();
          r.unknownDocument = {
            path: t.path.toArray(),
            version: sf(e.version),
          };
        }
        var i, a;
        return r;
      }
      function kb(n) {
        const e = n.toTimestamp();
        return [e.seconds, e.nanoseconds];
      }
      function sf(n) {
        const e = n.toTimestamp();
        return { seconds: e.seconds, nanoseconds: e.nanoseconds };
      }
      function af(n) {
        const e = new ur(n.seconds, n.nanoseconds);
        return Kt.fromTimestamp(e);
      }
      function uf(n, e) {
        const t = (e.baseMutations || []).map((a) => ZR(n.ne, a));
        for (let a = 0; a < e.mutations.length - 1; ++a) {
          const l = e.mutations[a];
          a + 1 < e.mutations.length &&
            void 0 !== e.mutations[a + 1].transform &&
            ((l.updateTransforms =
              e.mutations[a + 1].transform.fieldTransforms),
            e.mutations.splice(a + 1, 1),
            ++a);
        }
        const r = e.mutations.map((a) => ZR(n.ne, a)),
          i = ur.fromMillis(e.localWriteTimeMs);
        return new QR(e.batchId, i, t, r);
      }
      function aw(n) {
        const e = af(n.readTime),
          t =
            void 0 !== n.lastLimboFreeSnapshotVersion
              ? af(n.lastLimboFreeSnapshotVersion)
              : Kt.min();
        let r;
        var i;
        return (
          void 0 !== n.query.documents
            ? (Wt(1 === (i = n.query).documents.length),
              (r = lo(cm(p1(i.documents[0])))))
            : (r = lo(E1(n.query))),
          new Oc(
            r,
            n.targetId,
            0,
            n.lastListenSequenceNumber,
            e,
            t,
            Kr.fromBase64String(n.resumeToken)
          )
        );
      }
      function x1(n, e) {
        const t = sf(e.snapshotVersion),
          r = sf(e.lastLimboFreeSnapshotVersion);
        let i;
        i = Sb(e.target) ? y1(n.ne, e.target) : v1(n.ne, e.target);
        const a = e.resumeToken.toBase64();
        return {
          targetId: e.targetId,
          canonicalId: tf(e.target),
          readTime: t,
          resumeToken: a,
          lastListenSequenceNumber: e.sequenceNumber,
          lastLimboFreeSnapshotVersion: r,
          query: i,
        };
      }
      function eM(n) {
        const e = E1({ parent: n.parent, structuredQuery: n.structuredQuery });
        return "LAST" === n.limitType ? Uk(e, e.limit, "L") : e;
      }
      function tM(n, e) {
        return new XR(e.largestBatchId, ZR(n.ne, e.overlayMutation));
      }
      function N1(n, e) {
        const t = e.path.lastSegment();
        return [n, $i(e.path.popLast()), t];
      }
      function P1(n, e, t, r) {
        return {
          indexId: n,
          uid: e.uid || "",
          sequenceNumber: t,
          readTime: sf(r.readTime),
          documentKey: $i(r.documentKey.path),
          largestBatchId: r.largestBatchId,
        };
      }
      class Cj {
        getBundleMetadata(e, t) {
          return O1(e)
            .get(t)
            .next((r) => {
              if (r)
                return {
                  id: (i = r).bundleId,
                  createTime: af(i.createTime),
                  version: i.version,
                };
              var i;
            });
        }
        saveBundleMetadata(e, t) {
          return O1(e).put({
            bundleId: (r = t).id,
            createTime: sf(ni(r.createTime)),
            version: r.version,
          });
          var r;
        }
        getNamedQuery(e, t) {
          return k1(e)
            .get(t)
            .next((r) => {
              if (r)
                return {
                  name: (i = r).name,
                  query: eM(i.bundledQuery),
                  readTime: af(i.readTime),
                };
              var i;
            });
        }
        saveNamedQuery(e, t) {
          return k1(e).put({
            name: (r = t).name,
            readTime: sf(ni(r.readTime)),
            bundledQuery: r.bundledQuery,
          });
          var r;
        }
      }
      function O1(n) {
        return ri(n, "bundles");
      }
      function k1(n) {
        return ri(n, "namedQueries");
      }
      class Fb {
        constructor(e, t) {
          (this.wt = e), (this.userId = t);
        }
        static se(e, t) {
          return new Fb(e, t.uid || "");
        }
        getOverlay(e, t) {
          return uw(e)
            .get(N1(this.userId, t))
            .next((r) => (r ? tM(this.wt, r) : null));
        }
        getOverlays(e, t) {
          const r = Oa();
          return W.forEach(t, (i) =>
            this.getOverlay(e, i).next((a) => {
              null !== a && r.set(i, a);
            })
          ).next(() => r);
        }
        saveOverlays(e, t, r) {
          const i = [];
          return (
            r.forEach((a, l) => {
              const h = new XR(t, l);
              i.push(this.ie(e, h));
            }),
            W.waitFor(i)
          );
        }
        removeOverlaysForBatchId(e, t, r) {
          const i = new Set();
          t.forEach((l) => i.add($i(l.getCollectionPath())));
          const a = [];
          return (
            i.forEach((l) => {
              const h = IDBKeyRange.bound(
                [this.userId, l, r],
                [this.userId, l, r + 1],
                !1,
                !0
              );
              a.push(uw(e).W("collectionPathOverlayIndex", h));
            }),
            W.waitFor(a)
          );
        }
        getOverlaysForCollection(e, t, r) {
          const i = Oa(),
            a = $i(t),
            l = IDBKeyRange.bound(
              [this.userId, a, r],
              [this.userId, a, Number.POSITIVE_INFINITY],
              !0
            );
          return uw(e)
            .K("collectionPathOverlayIndex", l)
            .next((h) => {
              for (const m of h) {
                const v = tM(this.wt, m);
                i.set(v.getKey(), v);
              }
              return i;
            });
        }
        getOverlaysForCollectionGroup(e, t, r, i) {
          const a = Oa();
          let l;
          const h = IDBKeyRange.bound(
            [this.userId, t, r],
            [this.userId, t, Number.POSITIVE_INFINITY],
            !0
          );
          return uw(e)
            .J(
              { index: "collectionGroupOverlayIndex", range: h },
              (m, v, b) => {
                const D = tM(this.wt, v);
                a.size() < i || D.largestBatchId === l
                  ? (a.set(D.getKey(), D), (l = D.largestBatchId))
                  : b.done();
              }
            )
            .next(() => a);
        }
        ie(e, t) {
          return uw(e).put(
            (function (r, i, a) {
              const [l, h, m] = N1(i, a.mutation.key);
              return {
                userId: i,
                collectionPath: h,
                documentId: m,
                collectionGroup: a.mutation.key.getCollectionGroup(),
                largestBatchId: a.largestBatchId,
                overlayMutation: ow(r.ne, a.mutation),
              };
            })(this.wt, this.userId, t)
          );
        }
      }
      function uw(n) {
        return ri(n, "documentOverlays");
      }
      class lf {
        constructor() {}
        re(e, t) {
          this.oe(e, t), t.ue();
        }
        oe(e, t) {
          if ("nullValue" in e) this.ce(t, 5);
          else if ("booleanValue" in e)
            this.ce(t, 10), t.ae(e.booleanValue ? 1 : 0);
          else if ("integerValue" in e)
            this.ce(t, 15), t.ae(Ir(e.integerValue));
          else if ("doubleValue" in e) {
            const r = Ir(e.doubleValue);
            isNaN(r)
              ? this.ce(t, 13)
              : (this.ce(t, 15), WE(r) ? t.ae(0) : t.ae(r));
          } else if ("timestampValue" in e) {
            const r = e.timestampValue;
            this.ce(t, 20),
              "string" == typeof r
                ? t.he(r)
                : (t.he(`${r.seconds || ""}`), t.ae(r.nanos || 0));
          } else if ("stringValue" in e) this.le(e.stringValue, t), this.fe(t);
          else if ("bytesValue" in e)
            this.ce(t, 30), t.de(Jh(e.bytesValue)), this.fe(t);
          else if ("referenceValue" in e) this._e(e.referenceValue, t);
          else if ("geoPointValue" in e) {
            const r = e.geoPointValue;
            this.ce(t, 45), t.ae(r.latitude || 0), t.ae(r.longitude || 0);
          } else
            "mapValue" in e
              ? Ak(e)
                ? this.ce(t, Number.MAX_SAFE_INTEGER)
                : (this.we(e.mapValue, t), this.fe(t))
              : "arrayValue" in e
              ? (this.me(e.arrayValue, t), this.fe(t))
              : Ct();
        }
        le(e, t) {
          this.ce(t, 25), this.ge(e, t);
        }
        ge(e, t) {
          t.he(e);
        }
        we(e, t) {
          const r = e.fields || {};
          this.ce(t, 55);
          for (const i of Object.keys(r)) this.le(i, t), this.oe(r[i], t);
        }
        me(e, t) {
          const r = e.values || [];
          this.ce(t, 50);
          for (const i of r) this.oe(i, t);
        }
        _e(e, t) {
          this.ce(t, 37),
            u.fromName(e).path.forEach((r) => {
              this.ce(t, 60), this.ge(r, t);
            });
        }
        ce(e, t) {
          e.ae(t);
        }
        fe(e) {
          e.ae(2);
        }
      }
      function bj(n) {
        if (0 === n) return 8;
        let e = 0;
        return (
          n >> 4 == 0 && ((e += 4), (n <<= 4)),
          n >> 6 == 0 && ((e += 2), (n <<= 2)),
          n >> 7 == 0 && (e += 1),
          e
        );
      }
      function F1(n) {
        const e =
          64 -
          (function (t) {
            let r = 0;
            for (let i = 0; i < 8; ++i) {
              const a = bj(255 & t[i]);
              if (((r += a), 8 !== a)) break;
            }
            return r;
          })(n);
        return Math.ceil(e / 8);
      }
      lf.ye = new lf();
      class Dj {
        constructor() {
          (this.buffer = new Uint8Array(1024)), (this.position = 0);
        }
        pe(e) {
          const t = e[Symbol.iterator]();
          let r = t.next();
          for (; !r.done; ) this.Ie(r.value), (r = t.next());
          this.Te();
        }
        Ee(e) {
          const t = e[Symbol.iterator]();
          let r = t.next();
          for (; !r.done; ) this.Ae(r.value), (r = t.next());
          this.Re();
        }
        be(e) {
          for (const t of e) {
            const r = t.charCodeAt(0);
            if (r < 128) this.Ie(r);
            else if (r < 2048)
              this.Ie(960 | (r >>> 6)), this.Ie(128 | (63 & r));
            else if (t < "\ud800" || "\udbff" < t)
              this.Ie(480 | (r >>> 12)),
                this.Ie(128 | (63 & (r >>> 6))),
                this.Ie(128 | (63 & r));
            else {
              const i = t.codePointAt(0);
              this.Ie(240 | (i >>> 18)),
                this.Ie(128 | (63 & (i >>> 12))),
                this.Ie(128 | (63 & (i >>> 6))),
                this.Ie(128 | (63 & i));
            }
          }
          this.Te();
        }
        Pe(e) {
          for (const t of e) {
            const r = t.charCodeAt(0);
            if (r < 128) this.Ae(r);
            else if (r < 2048)
              this.Ae(960 | (r >>> 6)), this.Ae(128 | (63 & r));
            else if (t < "\ud800" || "\udbff" < t)
              this.Ae(480 | (r >>> 12)),
                this.Ae(128 | (63 & (r >>> 6))),
                this.Ae(128 | (63 & r));
            else {
              const i = t.codePointAt(0);
              this.Ae(240 | (i >>> 18)),
                this.Ae(128 | (63 & (i >>> 12))),
                this.Ae(128 | (63 & (i >>> 6))),
                this.Ae(128 | (63 & i));
            }
          }
          this.Re();
        }
        ve(e) {
          const t = this.Ve(e),
            r = F1(t);
          this.Se(1 + r), (this.buffer[this.position++] = 255 & r);
          for (let i = t.length - r; i < t.length; ++i)
            this.buffer[this.position++] = 255 & t[i];
        }
        De(e) {
          const t = this.Ve(e),
            r = F1(t);
          this.Se(1 + r), (this.buffer[this.position++] = ~(255 & r));
          for (let i = t.length - r; i < t.length; ++i)
            this.buffer[this.position++] = ~(255 & t[i]);
        }
        Ce() {
          this.xe(255), this.xe(255);
        }
        Ne() {
          this.ke(255), this.ke(255);
        }
        reset() {
          this.position = 0;
        }
        seed(e) {
          this.Se(e.length),
            this.buffer.set(e, this.position),
            (this.position += e.length);
        }
        Oe() {
          return this.buffer.slice(0, this.position);
        }
        Ve(e) {
          const t = (function (i) {
              const a = new DataView(new ArrayBuffer(8));
              return a.setFloat64(0, i, !1), new Uint8Array(a.buffer);
            })(e),
            r = 0 != (128 & t[0]);
          t[0] ^= r ? 255 : 128;
          for (let i = 1; i < t.length; ++i) t[i] ^= r ? 255 : 0;
          return t;
        }
        Ie(e) {
          const t = 255 & e;
          0 === t
            ? (this.xe(0), this.xe(255))
            : 255 === t
            ? (this.xe(255), this.xe(0))
            : this.xe(t);
        }
        Ae(e) {
          const t = 255 & e;
          0 === t
            ? (this.ke(0), this.ke(255))
            : 255 === t
            ? (this.ke(255), this.ke(0))
            : this.ke(e);
        }
        Te() {
          this.xe(0), this.xe(1);
        }
        Re() {
          this.ke(0), this.ke(1);
        }
        xe(e) {
          this.Se(1), (this.buffer[this.position++] = e);
        }
        ke(e) {
          this.Se(1), (this.buffer[this.position++] = ~e);
        }
        Se(e) {
          const t = e + this.position;
          if (t <= this.buffer.length) return;
          let r = 2 * this.buffer.length;
          r < t && (r = t);
          const i = new Uint8Array(r);
          i.set(this.buffer), (this.buffer = i);
        }
      }
      class Tj {
        constructor(e) {
          this.Me = e;
        }
        de(e) {
          this.Me.pe(e);
        }
        he(e) {
          this.Me.be(e);
        }
        ae(e) {
          this.Me.ve(e);
        }
        ue() {
          this.Me.Ce();
        }
      }
      class Sj {
        constructor(e) {
          this.Me = e;
        }
        de(e) {
          this.Me.Ee(e);
        }
        he(e) {
          this.Me.Pe(e);
        }
        ae(e) {
          this.Me.De(e);
        }
        ue() {
          this.Me.Ne();
        }
      }
      class lw {
        constructor() {
          (this.Me = new Dj()),
            (this.Fe = new Tj(this.Me)),
            (this.$e = new Sj(this.Me));
        }
        seed(e) {
          this.Me.seed(e);
        }
        Be(e) {
          return 0 === e ? this.Fe : this.$e;
        }
        Oe() {
          return this.Me.Oe();
        }
        reset() {
          this.Me.reset();
        }
      }
      class cf {
        constructor(e, t, r, i) {
          (this.indexId = e),
            (this.documentKey = t),
            (this.arrayValue = r),
            (this.directionalValue = i);
        }
        Le() {
          const e = this.directionalValue.length,
            t = 0 === e || 255 === this.directionalValue[e - 1] ? e + 1 : e,
            r = new Uint8Array(t);
          return (
            r.set(this.directionalValue, 0),
            t !== e
              ? r.set([0], this.directionalValue.length)
              : ++r[r.length - 1],
            new cf(this.indexId, this.documentKey, this.arrayValue, r)
          );
        }
      }
      function df(n, e) {
        let t = n.indexId - e.indexId;
        return 0 !== t
          ? t
          : ((t = L1(n.arrayValue, e.arrayValue)),
            0 !== t
              ? t
              : ((t = L1(n.directionalValue, e.directionalValue)),
                0 !== t ? t : u.comparator(n.documentKey, e.documentKey)));
      }
      function L1(n, e) {
        for (let t = 0; t < n.length && t < e.length; ++t) {
          const r = n[t] - e[t];
          if (0 !== r) return r;
        }
        return n.length - e.length;
      }
      class Aj {
        constructor(e) {
          (this.collectionId =
            null != e.collectionGroup
              ? e.collectionGroup
              : e.path.lastSegment()),
            (this.Ue = e.orderBy),
            (this.qe = []);
          for (const t of e.filters) {
            const r = t;
            r.ht() ? (this.Ke = r) : this.qe.push(r);
          }
        }
        Ge(e) {
          const t = d(e);
          if (void 0 !== t && !this.Qe(t)) return !1;
          const r = p(e);
          let i = 0,
            a = 0;
          for (; i < r.length && this.Qe(r[i]); ++i);
          if (i === r.length) return !0;
          if (void 0 !== this.Ke) {
            const l = r[i];
            if (!this.je(this.Ke, l) || !this.We(this.Ue[a++], l)) return !1;
            ++i;
          }
          for (; i < r.length; ++i) {
            const l = r[i];
            if (a >= this.Ue.length || !this.We(this.Ue[a++], l)) return !1;
          }
          return !0;
        }
        Qe(e) {
          for (const t of this.qe) if (this.je(t, e)) return !0;
          return !1;
        }
        je(e, t) {
          return (
            !(void 0 === e || !e.field.isEqual(t.fieldPath)) &&
            (2 === t.kind) ==
              ("array-contains" === e.op || "array-contains-any" === e.op)
          );
        }
        We(e, t) {
          return (
            !!e.field.isEqual(t.fieldPath) &&
            ((0 === t.kind && "asc" === e.dir) ||
              (1 === t.kind && "desc" === e.dir))
          );
        }
      }
      class Rj {
        constructor() {
          this.ze = new nM();
        }
        addToCollectionParentIndex(e, t) {
          return this.ze.add(t), W.resolve();
        }
        getCollectionParents(e, t) {
          return W.resolve(this.ze.getEntries(t));
        }
        addFieldIndex(e, t) {
          return W.resolve();
        }
        deleteFieldIndex(e, t) {
          return W.resolve();
        }
        getDocumentsMatchingTarget(e, t) {
          return W.resolve(null);
        }
        getIndexType(e, t) {
          return W.resolve(0);
        }
        getFieldIndexes(e, t) {
          return W.resolve([]);
        }
        getNextCollectionGroupToUpdate(e) {
          return W.resolve(null);
        }
        getMinOffset(e, t) {
          return W.resolve(A.min());
        }
        getMinOffsetFromCollectionGroup(e, t) {
          return W.resolve(A.min());
        }
        updateCollectionGroup(e, t, r) {
          return W.resolve();
        }
        updateIndexEntries(e, t) {
          return W.resolve();
        }
      }
      class nM {
        constructor() {
          this.index = {};
        }
        add(e) {
          const t = e.lastSegment(),
            r = e.popLast(),
            i = this.index[t] || new zn(An.comparator),
            a = !i.has(r);
          return (this.index[t] = i.add(r)), a;
        }
        has(e) {
          const t = e.lastSegment(),
            r = e.popLast(),
            i = this.index[t];
          return i && i.has(r);
        }
        getEntries(e) {
          return (this.index[e] || new zn(An.comparator)).toArray();
        }
      }
      const Lb = new Uint8Array(0);
      class Mj {
        constructor(e, t) {
          (this.user = e),
            (this.databaseId = t),
            (this.He = new nM()),
            (this.Je = new Pc(
              (r) => tf(r),
              (r, i) => ZE(r, i)
            )),
            (this.uid = e.uid || "");
        }
        addToCollectionParentIndex(e, t) {
          if (!this.He.has(t)) {
            const r = t.lastSegment(),
              i = t.popLast();
            e.addOnCommittedListener(() => {
              this.He.add(t);
            });
            const a = { collectionId: r, parent: $i(i) };
            return V1(e).put(a);
          }
          return W.resolve();
        }
        getCollectionParents(e, t) {
          const r = [],
            i = IDBKeyRange.bound([t, ""], [LR(t), ""], !1, !0);
          return V1(e)
            .K(i)
            .next((a) => {
              for (const l of a) {
                if (l.collectionId !== t) break;
                r.push(Fa(l.parent));
              }
              return r;
            });
        }
        addFieldIndex(e, t) {
          const r = Vb(e),
            i = {
              indexId: (l = t).indexId,
              collectionGroup: l.collectionGroup,
              fields: l.fields.map((h) => [
                h.fieldPath.canonicalString(),
                h.kind,
              ]),
            };
          var l;
          delete i.indexId;
          const a = r.add(i);
          if (t.indexState) {
            const l = dw(e);
            return a.next((h) => {
              l.put(
                P1(
                  h,
                  this.user,
                  t.indexState.sequenceNumber,
                  t.indexState.offset
                )
              );
            });
          }
          return a.next();
        }
        deleteFieldIndex(e, t) {
          const r = Vb(e),
            i = dw(e),
            a = cw(e);
          return r
            .delete(t.indexId)
            .next(() =>
              i.delete(IDBKeyRange.bound([t.indexId], [t.indexId + 1], !1, !0))
            )
            .next(() =>
              a.delete(IDBKeyRange.bound([t.indexId], [t.indexId + 1], !1, !0))
            );
        }
        getDocumentsMatchingTarget(e, t) {
          const r = cw(e);
          let i = !0;
          const a = new Map();
          return W.forEach(this.Ye(t), (l) =>
            this.Xe(e, l).next((h) => {
              i && (i = !!h), a.set(l, h);
            })
          ).next(() => {
            if (i) {
              let l = _n();
              const h = [];
              return W.forEach(a, (m, v) => {
                var b;
                Je(
                  "IndexedDbIndexManager",
                  `Using index ${
                    ((b = m),
                    `id=${b.indexId}|cg=${b.collectionGroup}|f=${b.fields
                      .map((Lt) => `${Lt.fieldPath}:${Lt.kind}`)
                      .join(",")}`)
                  } to execute ${tf(t)}`
                );
                const D = (function (Lt, St) {
                    const rn = d(St);
                    if (void 0 === rn) return null;
                    for (const Cn of Ab(Lt, rn.fieldPath))
                      switch (Cn.op) {
                        case "array-contains-any":
                          return Cn.value.arrayValue.values || [];
                        case "array-contains":
                          return [Cn.value];
                      }
                    return null;
                  })(v, m),
                  R = (function (Lt, St) {
                    const rn = new Map();
                    for (const Cn of p(St))
                      for (const jr of Ab(Lt, Cn.fieldPath))
                        switch (jr.op) {
                          case "==":
                          case "in":
                            rn.set(Cn.fieldPath.canonicalString(), jr.value);
                            break;
                          case "not-in":
                          case "!=":
                            return (
                              rn.set(Cn.fieldPath.canonicalString(), jr.value),
                              Array.from(rn.values())
                            );
                        }
                    return null;
                  })(v, m),
                  F = (function (Lt, St) {
                    const rn = [];
                    let Cn = !0;
                    for (const jr of p(St)) {
                      const Qo =
                        0 === jr.kind
                          ? Pk(Lt, jr.fieldPath, Lt.startAt)
                          : Ok(Lt, jr.fieldPath, Lt.startAt);
                      rn.push(Qo.value), Cn && (Cn = Qo.inclusive);
                    }
                    return new Nc(rn, Cn);
                  })(v, m),
                  B = (function (Lt, St) {
                    const rn = [];
                    let Cn = !0;
                    for (const jr of p(St)) {
                      const Qo =
                        0 === jr.kind
                          ? Ok(Lt, jr.fieldPath, Lt.endAt)
                          : Pk(Lt, jr.fieldPath, Lt.endAt);
                      rn.push(Qo.value), Cn && (Cn = Qo.inclusive);
                    }
                    return new Nc(rn, Cn);
                  })(v, m),
                  le = this.Ze(m, v, F),
                  Ee = this.Ze(m, v, B),
                  dt = this.tn(m, v, R),
                  It = this.en(
                    m.indexId,
                    D,
                    le,
                    F.inclusive,
                    Ee,
                    B.inclusive,
                    dt
                  );
                return W.forEach(It, (Lt) =>
                  r.j(Lt, t.limit).next((St) => {
                    St.forEach((rn) => {
                      const Cn = u.fromSegments(rn.documentKey);
                      l.has(Cn) || ((l = l.add(Cn)), h.push(Cn));
                    });
                  })
                );
              }).next(() => h);
            }
            return W.resolve(null);
          });
        }
        Ye(e) {
          let t = this.Je.get(e);
          return t || ((t = [e]), this.Je.set(e, t), t);
        }
        en(e, t, r, i, a, l, h) {
          const m = (null != t ? t.length : 1) * Math.max(r.length, a.length),
            v = m / (null != t ? t.length : 1),
            b = [];
          for (let D = 0; D < m; ++D) {
            const R = t ? this.nn(t[D / v]) : Lb,
              F = this.sn(e, R, r[D % v], i),
              B = this.rn(e, R, a[D % v], l),
              le = h.map((Ee) => this.sn(e, R, Ee, !0));
            b.push(...this.createRange(F, B, le));
          }
          return b;
        }
        sn(e, t, r, i) {
          const a = new cf(e, u.empty(), t, r);
          return i ? a : a.Le();
        }
        rn(e, t, r, i) {
          const a = new cf(e, u.empty(), t, r);
          return i ? a.Le() : a;
        }
        Xe(e, t) {
          const r = new Aj(t),
            i =
              null != t.collectionGroup
                ? t.collectionGroup
                : t.path.lastSegment();
          return this.getFieldIndexes(e, i).next((a) => {
            let l = null;
            for (const h of a)
              r.Ge(h) && (!l || h.fields.length > l.fields.length) && (l = h);
            return l;
          });
        }
        getIndexType(e, t) {
          let r = 2;
          return W.forEach(this.Ye(t), (i) =>
            this.Xe(e, i).next((a) => {
              a
                ? 0 !== r &&
                  a.fields.length <
                    (function (l) {
                      let h = new zn(o.comparator),
                        m = !1;
                      for (const v of l.filters) {
                        const b = v;
                        b.field.isKeyField() ||
                          ("array-contains" === b.op ||
                          "array-contains-any" === b.op
                            ? (m = !0)
                            : (h = h.add(b.field)));
                      }
                      for (const v of l.orderBy)
                        v.field.isKeyField() || (h = h.add(v.field));
                      return h.size + (m ? 1 : 0);
                    })(i) &&
                  (r = 1)
                : (r = 0);
            })
          ).next(() => r);
        }
        on(e, t) {
          const r = new lw();
          for (const i of p(e)) {
            const a = t.data.field(i.fieldPath);
            if (null == a) return null;
            const l = r.Be(i.kind);
            lf.ye.re(a, l);
          }
          return r.Oe();
        }
        nn(e) {
          const t = new lw();
          return lf.ye.re(e, t.Be(0)), t.Oe();
        }
        un(e, t) {
          const r = new lw();
          return (
            lf.ye.re(
              ef(this.databaseId, t),
              r.Be(
                (function (i) {
                  const a = p(i);
                  return 0 === a.length ? 0 : a[a.length - 1].kind;
                })(e)
              )
            ),
            r.Oe()
          );
        }
        tn(e, t, r) {
          if (null === r) return [];
          let i = [];
          i.push(new lw());
          let a = 0;
          for (const l of p(e)) {
            const h = r[a++];
            for (const m of i)
              if (this.cn(t, l.fieldPath) && qE(h)) i = this.an(i, l, h);
              else {
                const v = m.Be(l.kind);
                lf.ye.re(h, v);
              }
          }
          return this.hn(i);
        }
        Ze(e, t, r) {
          return this.tn(e, t, r.position);
        }
        hn(e) {
          const t = [];
          for (let r = 0; r < e.length; ++r) t[r] = e[r].Oe();
          return t;
        }
        an(e, t, r) {
          const i = [...e],
            a = [];
          for (const l of r.arrayValue.values || [])
            for (const h of i) {
              const m = new lw();
              m.seed(h.Oe()), lf.ye.re(l, m.Be(t.kind)), a.push(m);
            }
          return a;
        }
        cn(e, t) {
          return !!e.filters.find(
            (r) =>
              r instanceof Ii &&
              r.field.isEqual(t) &&
              ("in" === r.op || "not-in" === r.op)
          );
        }
        getFieldIndexes(e, t) {
          const r = Vb(e),
            i = dw(e);
          return (
            t ? r.K("collectionGroupIndex", IDBKeyRange.bound(t, t)) : r.K()
          ).next((a) => {
            const l = [];
            return W.forEach(a, (h) =>
              i.get([h.indexId, this.uid]).next((m) => {
                l.push(
                  (function (v, b) {
                    const D = b
                        ? new w(
                            b.sequenceNumber,
                            new A(
                              af(b.readTime),
                              new u(Fa(b.documentKey)),
                              b.largestBatchId
                            )
                          )
                        : w.empty(),
                      R = v.fields.map(
                        ([F, B]) => new y(o.fromServerFormat(F), B)
                      );
                    return new c(v.indexId, v.collectionGroup, R, D);
                  })(h, m)
                );
              })
            ).next(() => l);
          });
        }
        getNextCollectionGroupToUpdate(e) {
          return this.getFieldIndexes(e).next((t) =>
            0 === t.length
              ? null
              : (t.sort((r, i) => {
                  const a =
                    r.indexState.sequenceNumber - i.indexState.sequenceNumber;
                  return 0 !== a ? a : un(r.collectionGroup, i.collectionGroup);
                }),
                t[0].collectionGroup)
          );
        }
        updateCollectionGroup(e, t, r) {
          const i = Vb(e),
            a = dw(e);
          return this.ln(e).next((l) =>
            i
              .K("collectionGroupIndex", IDBKeyRange.bound(t, t))
              .next((h) =>
                W.forEach(h, (m) => a.put(P1(m.indexId, this.user, l, r)))
              )
          );
        }
        updateIndexEntries(e, t) {
          const r = new Map();
          return W.forEach(t, (i, a) => {
            const l = r.get(i.collectionGroup);
            return (
              l ? W.resolve(l) : this.getFieldIndexes(e, i.collectionGroup)
            ).next(
              (h) => (
                r.set(i.collectionGroup, h),
                W.forEach(h, (m) =>
                  this.fn(e, i, m).next((v) => {
                    const b = this.dn(a, m);
                    return v.isEqual(b) ? W.resolve() : this._n(e, a, m, v, b);
                  })
                )
              )
            );
          });
        }
        wn(e, t, r, i) {
          return cw(e).put({
            indexId: i.indexId,
            uid: this.uid,
            arrayValue: i.arrayValue,
            directionalValue: i.directionalValue,
            orderedDocumentKey: this.un(r, t.key),
            documentKey: t.key.path.toArray(),
          });
        }
        mn(e, t, r, i) {
          return cw(e).delete([
            i.indexId,
            this.uid,
            i.arrayValue,
            i.directionalValue,
            this.un(r, t.key),
            t.key.path.toArray(),
          ]);
        }
        fn(e, t, r) {
          const i = cw(e);
          let a = new zn(df);
          return i
            .J(
              {
                index: "documentKeyIndex",
                range: IDBKeyRange.only([r.indexId, this.uid, this.un(r, t)]),
              },
              (l, h) => {
                a = a.add(
                  new cf(r.indexId, t, h.arrayValue, h.directionalValue)
                );
              }
            )
            .next(() => a);
        }
        dn(e, t) {
          let r = new zn(df);
          const i = this.on(t, e);
          if (null == i) return r;
          const a = d(t);
          if (null != a) {
            const l = e.data.field(a.fieldPath);
            if (qE(l))
              for (const h of l.arrayValue.values || [])
                r = r.add(new cf(t.indexId, e.key, this.nn(h), i));
          } else r = r.add(new cf(t.indexId, e.key, Lb, i));
          return r;
        }
        _n(e, t, r, i, a) {
          Je(
            "IndexedDbIndexManager",
            "Updating index entries for document '%s'",
            t.key
          );
          const l = [];
          return (
            (function (h, m, v, b, D) {
              const R = h.getIterator(),
                F = m.getIterator();
              let B = am(R),
                le = am(F);
              for (; B || le; ) {
                let Ee = !1,
                  dt = !1;
                if (B && le) {
                  const It = v(B, le);
                  It < 0 ? (dt = !0) : It > 0 && (Ee = !0);
                } else null != B ? (dt = !0) : (Ee = !0);
                Ee
                  ? (b(le), (le = am(F)))
                  : dt
                  ? (D(B), (B = am(R)))
                  : ((B = am(R)), (le = am(F)));
              }
            })(
              i,
              a,
              df,
              (h) => {
                l.push(this.wn(e, t, r, h));
              },
              (h) => {
                l.push(this.mn(e, t, r, h));
              }
            ),
            W.waitFor(l)
          );
        }
        ln(e) {
          let t = 1;
          return dw(e)
            .J(
              {
                index: "sequenceNumberIndex",
                reverse: !0,
                range: IDBKeyRange.upperBound([
                  this.uid,
                  Number.MAX_SAFE_INTEGER,
                ]),
              },
              (r, i, a) => {
                a.done(), (t = i.sequenceNumber + 1);
              }
            )
            .next(() => t);
        }
        createRange(e, t, r) {
          r = r
            .sort((l, h) => df(l, h))
            .filter((l, h, m) => !h || 0 !== df(l, m[h - 1]));
          const i = [];
          i.push(e);
          for (const l of r) {
            const h = df(l, e),
              m = df(l, t);
            if (0 === h) i[0] = e.Le();
            else if (h > 0 && m < 0) i.push(l), i.push(l.Le());
            else if (m > 0) break;
          }
          i.push(t);
          const a = [];
          for (let l = 0; l < i.length; l += 2)
            a.push(
              IDBKeyRange.bound(
                [
                  i[l].indexId,
                  this.uid,
                  i[l].arrayValue,
                  i[l].directionalValue,
                  Lb,
                  [],
                ],
                [
                  i[l + 1].indexId,
                  this.uid,
                  i[l + 1].arrayValue,
                  i[l + 1].directionalValue,
                  Lb,
                  [],
                ]
              )
            );
          return a;
        }
        getMinOffsetFromCollectionGroup(e, t) {
          return this.getFieldIndexes(e, t).next(U1);
        }
        getMinOffset(e, t) {
          return W.mapArray(this.Ye(t), (r) =>
            this.Xe(e, r).next((i) => i || Ct())
          ).next(U1);
        }
      }
      function V1(n) {
        return ri(n, "collectionParents");
      }
      function cw(n) {
        return ri(n, "indexEntries");
      }
      function Vb(n) {
        return ri(n, "indexConfiguration");
      }
      function dw(n) {
        return ri(n, "indexState");
      }
      function U1(n) {
        Wt(0 !== n.length);
        let e = n[0].indexState.offset,
          t = e.largestBatchId;
        for (let r = 1; r < n.length; r++) {
          const i = n[r].indexState.offset;
          O(i, e) < 0 && (e = i),
            t < i.largestBatchId && (t = i.largestBatchId);
        }
        return new A(e.readTime, e.documentKey, t);
      }
      const B1 = {
        didRun: !1,
        sequenceNumbersCollected: 0,
        targetsRemoved: 0,
        documentsRemoved: 0,
      };
      class ls {
        constructor(e, t, r) {
          (this.cacheSizeCollectionThreshold = e),
            (this.percentileToCollect = t),
            (this.maximumSequenceNumbersToCollect = r);
        }
        static withCacheSize(e) {
          return new ls(
            e,
            ls.DEFAULT_COLLECTION_PERCENTILE,
            ls.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT
          );
        }
      }
      function j1(n, e, t) {
        const r = n.store("mutations"),
          i = n.store("documentMutations"),
          a = [],
          l = IDBKeyRange.only(t.batchId);
        let h = 0;
        const m = r.J({ range: l }, (b, D, R) => (h++, R.delete()));
        a.push(
          m.next(() => {
            Wt(1 === h);
          })
        );
        const v = [];
        for (const b of t.mutations) {
          const D = D1(e, b.key.path, t.batchId);
          a.push(i.delete(D)), v.push(b.key);
        }
        return W.waitFor(a).next(() => v);
      }
      function Ub(n) {
        if (!n) return 0;
        let e;
        if (n.document) e = n.document;
        else if (n.unknownDocument) e = n.unknownDocument;
        else {
          if (!n.noDocument) throw Ct();
          e = n.noDocument;
        }
        return JSON.stringify(e).length;
      }
      (ls.DEFAULT_COLLECTION_PERCENTILE = 10),
        (ls.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT = 1e3),
        (ls.DEFAULT = new ls(
          41943040,
          ls.DEFAULT_COLLECTION_PERCENTILE,
          ls.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT
        )),
        (ls.DISABLED = new ls(-1, 0, 0));
      class Bb {
        constructor(e, t, r, i) {
          (this.userId = e),
            (this.wt = t),
            (this.indexManager = r),
            (this.referenceDelegate = i),
            (this.gn = {});
        }
        static se(e, t, r, i) {
          Wt("" !== e.uid);
          const a = e.isAuthenticated() ? e.uid : "";
          return new Bb(a, t, r, i);
        }
        checkEmpty(e) {
          let t = !0;
          const r = IDBKeyRange.bound(
            [this.userId, Number.NEGATIVE_INFINITY],
            [this.userId, Number.POSITIVE_INFINITY]
          );
          return kc(e)
            .J({ index: "userMutationsIndex", range: r }, (i, a, l) => {
              (t = !1), l.done();
            })
            .next(() => t);
        }
        addMutationBatch(e, t, r, i) {
          const a = ym(e),
            l = kc(e);
          return l.add({}).next((h) => {
            Wt("number" == typeof h);
            const m = new QR(h, t, r, i),
              v = (function (R, F, B) {
                const le = B.baseMutations.map((dt) => ow(R.ne, dt)),
                  Ee = B.mutations.map((dt) => ow(R.ne, dt));
                return {
                  userId: F,
                  batchId: B.batchId,
                  localWriteTimeMs: B.localWriteTime.toMillis(),
                  baseMutations: le,
                  mutations: Ee,
                };
              })(this.wt, this.userId, m),
              b = [];
            let D = new zn((R, F) =>
              un(R.canonicalString(), F.canonicalString())
            );
            for (const R of i) {
              const F = D1(this.userId, R.key.path, h);
              (D = D.add(R.key.path.popLast())),
                b.push(l.put(v)),
                b.push(a.put(F, sj));
            }
            return (
              D.forEach((R) => {
                b.push(this.indexManager.addToCollectionParentIndex(e, R));
              }),
              e.addOnCommittedListener(() => {
                this.gn[h] = m.keys();
              }),
              W.waitFor(b).next(() => m)
            );
          });
        }
        lookupMutationBatch(e, t) {
          return kc(e)
            .get(t)
            .next((r) =>
              r ? (Wt(r.userId === this.userId), uf(this.wt, r)) : null
            );
        }
        yn(e, t) {
          return this.gn[t]
            ? W.resolve(this.gn[t])
            : this.lookupMutationBatch(e, t).next((r) => {
                if (r) {
                  const i = r.keys();
                  return (this.gn[t] = i), i;
                }
                return null;
              });
        }
        getNextMutationBatchAfterBatchId(e, t) {
          const r = t + 1,
            i = IDBKeyRange.lowerBound([this.userId, r]);
          let a = null;
          return kc(e)
            .J({ index: "userMutationsIndex", range: i }, (l, h, m) => {
              h.userId === this.userId &&
                (Wt(h.batchId >= r), (a = uf(this.wt, h))),
                m.done();
            })
            .next(() => a);
        }
        getHighestUnacknowledgedBatchId(e) {
          const t = IDBKeyRange.upperBound([
            this.userId,
            Number.POSITIVE_INFINITY,
          ]);
          let r = -1;
          return kc(e)
            .J(
              { index: "userMutationsIndex", range: t, reverse: !0 },
              (i, a, l) => {
                (r = a.batchId), l.done();
              }
            )
            .next(() => r);
        }
        getAllMutationBatches(e) {
          const t = IDBKeyRange.bound(
            [this.userId, -1],
            [this.userId, Number.POSITIVE_INFINITY]
          );
          return kc(e)
            .K("userMutationsIndex", t)
            .next((r) => r.map((i) => uf(this.wt, i)));
        }
        getAllMutationBatchesAffectingDocumentKey(e, t) {
          const r = Ob(this.userId, t.path),
            i = IDBKeyRange.lowerBound(r),
            a = [];
          return ym(e)
            .J({ range: i }, (l, h, m) => {
              const [v, b, D] = l,
                R = Fa(b);
              if (v === this.userId && t.path.isEqual(R))
                return kc(e)
                  .get(D)
                  .next((F) => {
                    if (!F) throw Ct();
                    Wt(F.userId === this.userId), a.push(uf(this.wt, F));
                  });
              m.done();
            })
            .next(() => a);
        }
        getAllMutationBatchesAffectingDocumentKeys(e, t) {
          let r = new zn(un);
          const i = [];
          return (
            t.forEach((a) => {
              const l = Ob(this.userId, a.path),
                h = IDBKeyRange.lowerBound(l),
                m = ym(e).J({ range: h }, (v, b, D) => {
                  const [R, F, B] = v,
                    le = Fa(F);
                  R === this.userId && a.path.isEqual(le)
                    ? (r = r.add(B))
                    : D.done();
                });
              i.push(m);
            }),
            W.waitFor(i).next(() => this.pn(e, r))
          );
        }
        getAllMutationBatchesAffectingQuery(e, t) {
          const r = t.path,
            i = r.length + 1,
            a = Ob(this.userId, r),
            l = IDBKeyRange.lowerBound(a);
          let h = new zn(un);
          return ym(e)
            .J({ range: l }, (m, v, b) => {
              const [D, R, F] = m,
                B = Fa(R);
              D === this.userId && r.isPrefixOf(B)
                ? B.length === i && (h = h.add(F))
                : b.done();
            })
            .next(() => this.pn(e, h));
        }
        pn(e, t) {
          const r = [],
            i = [];
          return (
            t.forEach((a) => {
              i.push(
                kc(e)
                  .get(a)
                  .next((l) => {
                    if (null === l) throw Ct();
                    Wt(l.userId === this.userId), r.push(uf(this.wt, l));
                  })
              );
            }),
            W.waitFor(i).next(() => r)
          );
        }
        removeMutationBatch(e, t) {
          return j1(e.ee, this.userId, t).next(
            (r) => (
              e.addOnCommittedListener(() => {
                this.In(t.batchId);
              }),
              W.forEach(r, (i) =>
                this.referenceDelegate.markPotentiallyOrphaned(e, i)
              )
            )
          );
        }
        In(e) {
          delete this.gn[e];
        }
        performConsistencyCheck(e) {
          return this.checkEmpty(e).next((t) => {
            if (!t) return W.resolve();
            const r = IDBKeyRange.lowerBound([this.userId]),
              i = [];
            return ym(e)
              .J({ range: r }, (a, l, h) => {
                if (a[0] === this.userId) {
                  const m = Fa(a[1]);
                  i.push(m);
                } else h.done();
              })
              .next(() => {
                Wt(0 === i.length);
              });
          });
        }
        containsKey(e, t) {
          return $1(e, this.userId, t);
        }
        Tn(e) {
          return H1(e)
            .get(this.userId)
            .next(
              (t) =>
                t || {
                  userId: this.userId,
                  lastAcknowledgedBatchId: -1,
                  lastStreamToken: "",
                }
            );
        }
      }
      function $1(n, e, t) {
        const r = Ob(e, t.path),
          i = r[1],
          a = IDBKeyRange.lowerBound(r);
        let l = !1;
        return ym(n)
          .J({ range: a, H: !0 }, (h, m, v) => {
            const [b, D, R] = h;
            b === e && D === i && (l = !0), v.done();
          })
          .next(() => l);
      }
      function kc(n) {
        return ri(n, "mutations");
      }
      function ym(n) {
        return ri(n, "documentMutations");
      }
      function H1(n) {
        return ri(n, "mutationQueues");
      }
      class hf {
        constructor(e) {
          this.En = e;
        }
        next() {
          return (this.En += 2), this.En;
        }
        static An() {
          return new hf(0);
        }
        static Rn() {
          return new hf(-1);
        }
      }
      class xj {
        constructor(e, t) {
          (this.referenceDelegate = e), (this.wt = t);
        }
        allocateTargetId(e) {
          return this.bn(e).next((t) => {
            const r = new hf(t.highestTargetId);
            return (
              (t.highestTargetId = r.next()),
              this.Pn(e, t).next(() => t.highestTargetId)
            );
          });
        }
        getLastRemoteSnapshotVersion(e) {
          return this.bn(e).next((t) =>
            Kt.fromTimestamp(
              new ur(
                t.lastRemoteSnapshotVersion.seconds,
                t.lastRemoteSnapshotVersion.nanoseconds
              )
            )
          );
        }
        getHighestSequenceNumber(e) {
          return this.bn(e).next((t) => t.highestListenSequenceNumber);
        }
        setTargetsMetadata(e, t, r) {
          return this.bn(e).next(
            (i) => (
              (i.highestListenSequenceNumber = t),
              r && (i.lastRemoteSnapshotVersion = r.toTimestamp()),
              t > i.highestListenSequenceNumber &&
                (i.highestListenSequenceNumber = t),
              this.Pn(e, i)
            )
          );
        }
        addTargetData(e, t) {
          return this.vn(e, t).next(() =>
            this.bn(e).next(
              (r) => ((r.targetCount += 1), this.Vn(t, r), this.Pn(e, r))
            )
          );
        }
        updateTargetData(e, t) {
          return this.vn(e, t);
        }
        removeTargetData(e, t) {
          return this.removeMatchingKeysForTargetId(e, t.targetId)
            .next(() => vm(e).delete(t.targetId))
            .next(() => this.bn(e))
            .next(
              (r) => (
                Wt(r.targetCount > 0), (r.targetCount -= 1), this.Pn(e, r)
              )
            );
        }
        removeTargets(e, t, r) {
          let i = 0;
          const a = [];
          return vm(e)
            .J((l, h) => {
              const m = aw(h);
              m.sequenceNumber <= t &&
                null === r.get(m.targetId) &&
                (i++, a.push(this.removeTargetData(e, m)));
            })
            .next(() => W.waitFor(a))
            .next(() => i);
        }
        forEachTarget(e, t) {
          return vm(e).J((r, i) => {
            const a = aw(i);
            t(a);
          });
        }
        bn(e) {
          return G1(e)
            .get("targetGlobalKey")
            .next((t) => (Wt(null !== t), t));
        }
        Pn(e, t) {
          return G1(e).put("targetGlobalKey", t);
        }
        vn(e, t) {
          return vm(e).put(x1(this.wt, t));
        }
        Vn(e, t) {
          let r = !1;
          return (
            e.targetId > t.highestTargetId &&
              ((t.highestTargetId = e.targetId), (r = !0)),
            e.sequenceNumber > t.highestListenSequenceNumber &&
              ((t.highestListenSequenceNumber = e.sequenceNumber), (r = !0)),
            r
          );
        }
        getTargetCount(e) {
          return this.bn(e).next((t) => t.targetCount);
        }
        getTargetData(e, t) {
          const r = tf(t),
            i = IDBKeyRange.bound(
              [r, Number.NEGATIVE_INFINITY],
              [r, Number.POSITIVE_INFINITY]
            );
          let a = null;
          return vm(e)
            .J({ range: i, index: "queryTargetsIndex" }, (l, h, m) => {
              const v = aw(h);
              ZE(t, v.target) && ((a = v), m.done());
            })
            .next(() => a);
        }
        addMatchingKeys(e, t, r) {
          const i = [],
            a = Fc(e);
          return (
            t.forEach((l) => {
              const h = $i(l.path);
              i.push(a.put({ targetId: r, path: h })),
                i.push(this.referenceDelegate.addReference(e, r, l));
            }),
            W.waitFor(i)
          );
        }
        removeMatchingKeys(e, t, r) {
          const i = Fc(e);
          return W.forEach(t, (a) => {
            const l = $i(a.path);
            return W.waitFor([
              i.delete([r, l]),
              this.referenceDelegate.removeReference(e, r, a),
            ]);
          });
        }
        removeMatchingKeysForTargetId(e, t) {
          const r = Fc(e),
            i = IDBKeyRange.bound([t], [t + 1], !1, !0);
          return r.delete(i);
        }
        getMatchingKeysForTargetId(e, t) {
          const r = IDBKeyRange.bound([t], [t + 1], !1, !0),
            i = Fc(e);
          let a = _n();
          return i
            .J({ range: r, H: !0 }, (l, h, m) => {
              const v = Fa(l[1]),
                b = new u(v);
              a = a.add(b);
            })
            .next(() => a);
        }
        containsKey(e, t) {
          const r = $i(t.path),
            i = IDBKeyRange.bound([r], [LR(r)], !1, !0);
          let a = 0;
          return Fc(e)
            .J(
              { index: "documentTargetsIndex", H: !0, range: i },
              ([l, h], m, v) => {
                0 !== l && (a++, v.done());
              }
            )
            .next(() => a > 0);
        }
        te(e, t) {
          return vm(e)
            .get(t)
            .next((r) => (r ? aw(r) : null));
        }
      }
      function vm(n) {
        return ri(n, "targets");
      }
      function G1(n) {
        return ri(n, "targetGlobal");
      }
      function Fc(n) {
        return ri(n, "targetDocuments");
      }
      function W1([n, e], [t, r]) {
        const i = un(n, t);
        return 0 === i ? un(e, r) : i;
      }
      class Nj {
        constructor(e) {
          (this.Sn = e), (this.buffer = new zn(W1)), (this.Dn = 0);
        }
        Cn() {
          return ++this.Dn;
        }
        xn(e) {
          const t = [e, this.Cn()];
          if (this.buffer.size < this.Sn) this.buffer = this.buffer.add(t);
          else {
            const r = this.buffer.last();
            W1(t, r) < 0 && (this.buffer = this.buffer.delete(r).add(t));
          }
        }
        get maxValue() {
          return this.buffer.last()[0];
        }
      }
      class Pj {
        constructor(e, t, r) {
          (this.garbageCollector = e),
            (this.asyncQueue = t),
            (this.localStore = r),
            (this.Nn = null);
        }
        start() {
          -1 !== this.garbageCollector.params.cacheSizeCollectionThreshold &&
            this.kn(6e4);
        }
        stop() {
          this.Nn && (this.Nn.cancel(), (this.Nn = null));
        }
        get started() {
          return null !== this.Nn;
        }
        kn(e) {
          var t = this;
          Je("LruGarbageCollector", `Garbage collection scheduled in ${e}ms`),
            (this.Nn = this.asyncQueue.enqueueAfterDelay(
              "lru_garbage_collection",
              e,
              (0, Te.Z)(function* () {
                t.Nn = null;
                try {
                  yield t.localStore.collectGarbage(t.garbageCollector);
                } catch (r) {
                  nn(r)
                    ? Je(
                        "LruGarbageCollector",
                        "Ignoring IndexedDB error during garbage collection: ",
                        r
                      )
                    : yield xe(r);
                }
                yield t.kn(3e5);
              })
            ));
        }
      }
      class Oj {
        constructor(e, t) {
          (this.On = e), (this.params = t);
        }
        calculateTargetCount(e, t) {
          return this.On.Mn(e).next((r) => Math.floor((t / 100) * r));
        }
        nthSequenceNumber(e, t) {
          if (0 === t) return W.resolve(ti.ot);
          const r = new Nj(t);
          return this.On.forEachTarget(e, (i) => r.xn(i.sequenceNumber))
            .next(() => this.On.Fn(e, (i) => r.xn(i)))
            .next(() => r.maxValue);
        }
        removeTargets(e, t, r) {
          return this.On.removeTargets(e, t, r);
        }
        removeOrphanedDocuments(e, t) {
          return this.On.removeOrphanedDocuments(e, t);
        }
        collect(e, t) {
          return -1 === this.params.cacheSizeCollectionThreshold
            ? (Je(
                "LruGarbageCollector",
                "Garbage collection skipped; disabled"
              ),
              W.resolve(B1))
            : this.getCacheSize(e).next((r) =>
                r < this.params.cacheSizeCollectionThreshold
                  ? (Je(
                      "LruGarbageCollector",
                      `Garbage collection skipped; Cache size ${r} is lower than threshold ${this.params.cacheSizeCollectionThreshold}`
                    ),
                    B1)
                  : this.$n(e, t)
              );
        }
        getCacheSize(e) {
          return this.On.getCacheSize(e);
        }
        $n(e, t) {
          let r, i, a, l, h, m, v;
          const b = Date.now();
          return this.calculateTargetCount(e, this.params.percentileToCollect)
            .next(
              (D) => (
                D > this.params.maximumSequenceNumbersToCollect
                  ? (Je(
                      "LruGarbageCollector",
                      `Capping sequence numbers to collect down to the maximum of ${this.params.maximumSequenceNumbersToCollect} from ${D}`
                    ),
                    (i = this.params.maximumSequenceNumbersToCollect))
                  : (i = D),
                (l = Date.now()),
                this.nthSequenceNumber(e, i)
              )
            )
            .next(
              (D) => ((r = D), (h = Date.now()), this.removeTargets(e, r, t))
            )
            .next(
              (D) => (
                (a = D), (m = Date.now()), this.removeOrphanedDocuments(e, r)
              )
            )
            .next(
              (D) => (
                (v = Date.now()),
                VE() <= Li.in.DEBUG &&
                  Je(
                    "LruGarbageCollector",
                    `LRU Garbage Collection\n\tCounted targets in ${
                      l - b
                    }ms\n\tDetermined least recently used ${i} in ` +
                      (h - l) +
                      `ms\n\tRemoved ${a} targets in ` +
                      (m - h) +
                      `ms\n\tRemoved ${D} documents in ` +
                      (v - m) +
                      `ms\nTotal Duration: ${v - b}ms`
                  ),
                W.resolve({
                  didRun: !0,
                  sequenceNumbersCollected: i,
                  targetsRemoved: a,
                  documentsRemoved: D,
                })
              )
            );
        }
      }
      class kj {
        constructor(e, t) {
          (this.db = e), (this.garbageCollector = new Oj(this, t));
        }
        Mn(e) {
          const t = this.Bn(e);
          return this.db
            .getTargetCache()
            .getTargetCount(e)
            .next((r) => t.next((i) => r + i));
        }
        Bn(e) {
          let t = 0;
          return this.Fn(e, (r) => {
            t++;
          }).next(() => t);
        }
        forEachTarget(e, t) {
          return this.db.getTargetCache().forEachTarget(e, t);
        }
        Fn(e, t) {
          return this.Ln(e, (r, i) => t(i));
        }
        addReference(e, t, r) {
          return jb(e, r);
        }
        removeReference(e, t, r) {
          return jb(e, r);
        }
        removeTargets(e, t, r) {
          return this.db.getTargetCache().removeTargets(e, t, r);
        }
        markPotentiallyOrphaned(e, t) {
          return jb(e, t);
        }
        Un(e, t) {
          return (function (r, i) {
            let a = !1;
            return H1(r)
              .Y((l) => $1(r, l, i).next((h) => (h && (a = !0), W.resolve(!h))))
              .next(() => a);
          })(e, t);
        }
        removeOrphanedDocuments(e, t) {
          const r = this.db.getRemoteDocumentCache().newChangeBuffer(),
            i = [];
          let a = 0;
          return this.Ln(e, (l, h) => {
            if (h <= t) {
              const m = this.Un(e, l).next((v) => {
                if (!v)
                  return (
                    a++,
                    r
                      .getEntry(e, l)
                      .next(
                        () => (
                          r.removeEntry(l, Kt.min()),
                          Fc(e).delete([0, $i(l.path)])
                        )
                      )
                  );
              });
              i.push(m);
            }
          })
            .next(() => W.waitFor(i))
            .next(() => r.apply(e))
            .next(() => a);
        }
        removeTarget(e, t) {
          const r = t.withSequenceNumber(e.currentSequenceNumber);
          return this.db.getTargetCache().updateTargetData(e, r);
        }
        updateLimboDocument(e, t) {
          return jb(e, t);
        }
        Ln(e, t) {
          const r = Fc(e);
          let i,
            a = ti.ot;
          return r
            .J(
              { index: "documentTargetsIndex" },
              ([l, h], { path: m, sequenceNumber: v }) => {
                0 === l
                  ? (a !== ti.ot && t(new u(Fa(i)), a), (a = v), (i = m))
                  : (a = ti.ot);
              }
            )
            .next(() => {
              a !== ti.ot && t(new u(Fa(i)), a);
            });
        }
        getCacheSize(e) {
          return this.db.getRemoteDocumentCache().getSize(e);
        }
      }
      function jb(n, e) {
        return Fc(n).put(
          ((r = n.currentSequenceNumber),
          { targetId: 0, path: $i(e.path), sequenceNumber: r })
        );
        var r;
      }
      class z1 {
        constructor() {
          (this.changes = new Pc(
            (e) => e.toString(),
            (e, t) => e.isEqual(t)
          )),
            (this.changesApplied = !1);
        }
        addEntry(e) {
          this.assertNotApplied(), this.changes.set(e.key, e);
        }
        removeEntry(e, t) {
          this.assertNotApplied(),
            this.changes.set(e, nr.newInvalidDocument(e).setReadTime(t));
        }
        getEntry(e, t) {
          this.assertNotApplied();
          const r = this.changes.get(t);
          return void 0 !== r ? W.resolve(r) : this.getFromCache(e, t);
        }
        getEntries(e, t) {
          return this.getAllFromCache(e, t);
        }
        apply(e) {
          return (
            this.assertNotApplied(),
            (this.changesApplied = !0),
            this.applyChanges(e)
          );
        }
        assertNotApplied() {}
      }
      class Fj {
        constructor(e) {
          this.wt = e;
        }
        setIndexManager(e) {
          this.indexManager = e;
        }
        addEntry(e, t, r) {
          return ff(e).put(r);
        }
        removeEntry(e, t, r) {
          return ff(e).delete(
            (function (i, a) {
              const l = i.path.toArray();
              return [
                l.slice(0, l.length - 2),
                l[l.length - 2],
                kb(a),
                l[l.length - 1],
              ];
            })(t, r)
          );
        }
        updateMetadata(e, t) {
          return this.getMetadata(e).next(
            (r) => ((r.byteSize += t), this.qn(e, r))
          );
        }
        getEntry(e, t) {
          let r = nr.newInvalidDocument(t);
          return ff(e)
            .J(
              { index: "documentKeyIndex", range: IDBKeyRange.only(hw(t)) },
              (i, a) => {
                r = this.Kn(t, a);
              }
            )
            .next(() => r);
        }
        Gn(e, t) {
          let r = { size: 0, document: nr.newInvalidDocument(t) };
          return ff(e)
            .J(
              { index: "documentKeyIndex", range: IDBKeyRange.only(hw(t)) },
              (i, a) => {
                r = { document: this.Kn(t, a), size: Ub(a) };
              }
            )
            .next(() => r);
        }
        getEntries(e, t) {
          let r = us();
          return this.Qn(e, t, (i, a) => {
            const l = this.Kn(i, a);
            r = r.insert(i, l);
          }).next(() => r);
        }
        jn(e, t) {
          let r = us(),
            i = new tr(u.comparator);
          return this.Qn(e, t, (a, l) => {
            const h = this.Kn(a, l);
            (r = r.insert(a, h)), (i = i.insert(a, Ub(l)));
          }).next(() => ({ documents: r, Wn: i }));
        }
        Qn(e, t, r) {
          if (t.isEmpty()) return W.resolve();
          let i = new zn(Y1);
          t.forEach((m) => (i = i.add(m)));
          const a = IDBKeyRange.bound(hw(i.first()), hw(i.last())),
            l = i.getIterator();
          let h = l.getNext();
          return ff(e)
            .J({ index: "documentKeyIndex", range: a }, (m, v, b) => {
              const D = u.fromSegments([
                ...v.prefixPath,
                v.collectionGroup,
                v.documentId,
              ]);
              for (; h && Y1(h, D) < 0; ) r(h, null), (h = l.getNext());
              h &&
                h.isEqual(D) &&
                (r(h, v), (h = l.hasNext() ? l.getNext() : null)),
                h ? b.q(hw(h)) : b.done();
            })
            .next(() => {
              for (; h; ) r(h, null), (h = l.hasNext() ? l.getNext() : null);
            });
        }
        getAllFromCollection(e, t, r) {
          const i = [
              t.popLast().toArray(),
              t.lastSegment(),
              kb(r.readTime),
              r.documentKey.path.isEmpty()
                ? ""
                : r.documentKey.path.lastSegment(),
            ],
            a = [
              t.popLast().toArray(),
              t.lastSegment(),
              [Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER],
              "",
            ];
          return ff(e)
            .K(IDBKeyRange.bound(i, a, !0))
            .next((l) => {
              let h = us();
              for (const m of l) {
                const v = this.Kn(
                  u.fromSegments(
                    m.prefixPath.concat(m.collectionGroup, m.documentId)
                  ),
                  m
                );
                h = h.insert(v.key, v);
              }
              return h;
            });
        }
        getAllFromCollectionGroup(e, t, r, i) {
          let a = us();
          const l = Z1(t, r),
            h = Z1(t, A.max());
          return ff(e)
            .J(
              {
                index: "collectionGroupIndex",
                range: IDBKeyRange.bound(l, h, !0),
              },
              (m, v, b) => {
                const D = this.Kn(
                  u.fromSegments(
                    v.prefixPath.concat(v.collectionGroup, v.documentId)
                  ),
                  v
                );
                (a = a.insert(D.key, D)), a.size === i && b.done();
              }
            )
            .next(() => a);
        }
        newChangeBuffer(e) {
          return new Lj(this, !!e && e.trackRemovals);
        }
        getSize(e) {
          return this.getMetadata(e).next((t) => t.byteSize);
        }
        getMetadata(e) {
          return K1(e)
            .get("remoteDocumentGlobalKey")
            .next((t) => (Wt(!!t), t));
        }
        qn(e, t) {
          return K1(e).put("remoteDocumentGlobalKey", t);
        }
        Kn(e, t) {
          if (t) {
            const r = (function Ij(n, e) {
              let t;
              if (e.document)
                t = _1(n.ne, e.document, !!e.hasCommittedMutations);
              else if (e.noDocument) {
                const r = u.fromSegments(e.noDocument.path),
                  i = af(e.noDocument.readTime);
                (t = nr.newNoDocument(r, i)),
                  e.hasCommittedMutations && t.setHasCommittedMutations();
              } else {
                if (!e.unknownDocument) return Ct();
                {
                  const r = u.fromSegments(e.unknownDocument.path),
                    i = af(e.unknownDocument.version);
                  t = nr.newUnknownDocument(r, i);
                }
              }
              return (
                e.readTime &&
                  t.setReadTime(
                    (function (r) {
                      const i = new ur(r[0], r[1]);
                      return Kt.fromTimestamp(i);
                    })(e.readTime)
                  ),
                t
              );
            })(this.wt, t);
            if (!r.isNoDocument() || !r.version.isEqual(Kt.min())) return r;
          }
          return nr.newInvalidDocument(e);
        }
      }
      function q1(n) {
        return new Fj(n);
      }
      class Lj extends z1 {
        constructor(e, t) {
          super(),
            (this.zn = e),
            (this.trackRemovals = t),
            (this.Hn = new Pc(
              (r) => r.toString(),
              (r, i) => r.isEqual(i)
            ));
        }
        applyChanges(e) {
          const t = [];
          let r = 0,
            i = new zn((a, l) => un(a.canonicalString(), l.canonicalString()));
          return (
            this.changes.forEach((a, l) => {
              const h = this.Hn.get(a);
              if (
                (t.push(this.zn.removeEntry(e, a, h.readTime)),
                l.isValidDocument())
              ) {
                const m = M1(this.zn.wt, l);
                (i = i.add(a.path.popLast())),
                  (r += Ub(m) - h.size),
                  t.push(this.zn.addEntry(e, a, m));
              } else if (((r -= h.size), this.trackRemovals)) {
                const m = M1(this.zn.wt, l.convertToNoDocument(Kt.min()));
                t.push(this.zn.addEntry(e, a, m));
              }
            }),
            i.forEach((a) => {
              t.push(this.zn.indexManager.addToCollectionParentIndex(e, a));
            }),
            t.push(this.zn.updateMetadata(e, r)),
            W.waitFor(t)
          );
        }
        getFromCache(e, t) {
          return this.zn
            .Gn(e, t)
            .next(
              (r) => (
                this.Hn.set(t, { size: r.size, readTime: r.document.readTime }),
                r.document
              )
            );
        }
        getAllFromCache(e, t) {
          return this.zn.jn(e, t).next(
            ({ documents: r, Wn: i }) => (
              i.forEach((a, l) => {
                this.Hn.set(a, { size: l, readTime: r.get(a).readTime });
              }),
              r
            )
          );
        }
      }
      function K1(n) {
        return ri(n, "remoteDocumentGlobal");
      }
      function ff(n) {
        return ri(n, "remoteDocumentsV14");
      }
      function hw(n) {
        const e = n.path.toArray();
        return [e.slice(0, e.length - 2), e[e.length - 2], e[e.length - 1]];
      }
      function Z1(n, e) {
        const t = e.documentKey.path.toArray();
        return [
          n,
          kb(e.readTime),
          t.slice(0, t.length - 2),
          t.length > 0 ? t[t.length - 1] : "",
        ];
      }
      function Y1(n, e) {
        const t = n.path.toArray(),
          r = e.path.toArray();
        let i = 0;
        for (let a = 0; a < t.length - 2 && a < r.length - 2; ++a)
          if (((i = un(t[a], r[a])), i)) return i;
        return (
          (i = un(t.length, r.length)),
          i ||
            ((i = un(t[t.length - 2], r[r.length - 2])),
            i || un(t[t.length - 1], r[r.length - 1]))
        );
      }
      class Vj {
        constructor(e, t) {
          (this.overlayedDocument = e), (this.mutatedFields = t);
        }
      }
      class Q1 {
        constructor(e, t, r, i) {
          (this.remoteDocumentCache = e),
            (this.mutationQueue = t),
            (this.documentOverlayCache = r),
            (this.indexManager = i);
        }
        getDocument(e, t) {
          let r = null;
          return this.documentOverlayCache
            .getOverlay(e, t)
            .next((i) => ((r = i), this.getBaseDocument(e, t, r)))
            .next(
              (i) => (null !== r && JE(r.mutation, i, ks.empty(), ur.now()), i)
            );
        }
        getDocuments(e, t) {
          return this.remoteDocumentCache
            .getEntries(e, t)
            .next((r) =>
              this.getLocalViewOfDocuments(e, r, _n()).next(() => r)
            );
        }
        getLocalViewOfDocuments(e, t, r = _n()) {
          const i = Oa();
          return this.populateOverlays(e, i, t).next(() =>
            this.computeViews(e, t, i, r).next((a) => {
              let l = XE();
              return (
                a.forEach((h, m) => {
                  l = l.insert(h, m.overlayedDocument);
                }),
                l
              );
            })
          );
        }
        getOverlayedDocuments(e, t) {
          const r = Oa();
          return this.populateOverlays(e, r, t).next(() =>
            this.computeViews(e, t, r, _n())
          );
        }
        populateOverlays(e, t, r) {
          const i = [];
          return (
            r.forEach((a) => {
              t.has(a) || i.push(a);
            }),
            this.documentOverlayCache.getOverlays(e, i).next((a) => {
              a.forEach((l, h) => {
                t.set(l, h);
              });
            })
          );
        }
        computeViews(e, t, r, i) {
          let a = us();
          const l = ew(),
            h = ew();
          return (
            t.forEach((m, v) => {
              const b = r.get(v.key);
              i.has(v.key) && (void 0 === b || b.mutation instanceof Lu)
                ? (a = a.insert(v.key, v))
                : void 0 !== b &&
                  (l.set(v.key, b.mutation.getFieldMask()),
                  JE(b.mutation, v, b.mutation.getFieldMask(), ur.now()));
            }),
            this.recalculateAndSaveOverlays(e, a).next(
              (m) => (
                m.forEach((v, b) => l.set(v, b)),
                t.forEach((v, b) => {
                  var D;
                  return h.set(
                    v,
                    new Vj(
                      b,
                      null !== (D = l.get(v)) && void 0 !== D ? D : null
                    )
                  );
                }),
                h
              )
            )
          );
        }
        recalculateAndSaveOverlays(e, t) {
          const r = ew();
          let i = new tr((l, h) => l - h),
            a = _n();
          return this.mutationQueue
            .getAllMutationBatchesAffectingDocumentKeys(e, t)
            .next((l) => {
              for (const h of l)
                h.keys().forEach((m) => {
                  const v = t.get(m);
                  if (null === v) return;
                  let b = r.get(m) || ks.empty();
                  (b = h.applyToLocalView(v, b)), r.set(m, b);
                  const D = (i.get(h.batchId) || _n()).add(m);
                  i = i.insert(h.batchId, D);
                });
            })
            .next(() => {
              const l = [],
                h = i.getReverseIterator();
              for (; h.hasNext(); ) {
                const m = h.getNext(),
                  v = m.key,
                  b = m.value,
                  D = o1();
                b.forEach((R) => {
                  if (!a.has(R)) {
                    const F = Qk(t.get(R), r.get(R));
                    null !== F && D.set(R, F), (a = a.add(R));
                  }
                }),
                  l.push(this.documentOverlayCache.saveOverlays(e, v, D));
              }
              return W.waitFor(l);
            })
            .next(() => r);
        }
        recalculateAndSaveOverlaysForDocumentKeys(e, t) {
          return this.remoteDocumentCache
            .getEntries(e, t)
            .next((r) => this.recalculateAndSaveOverlays(e, r));
        }
        getDocumentsMatchingQuery(e, t, r) {
          return u.isDocumentKey((i = t).path) &&
            null === i.collectionGroup &&
            0 === i.filters.length
            ? this.getDocumentsMatchingDocumentQuery(e, t.path)
            : HR(t)
            ? this.getDocumentsMatchingCollectionGroupQuery(e, t, r)
            : this.getDocumentsMatchingCollectionQuery(e, t, r);
          var i;
        }
        getNextDocuments(e, t, r, i) {
          return this.remoteDocumentCache
            .getAllFromCollectionGroup(e, t, r, i)
            .next((a) => {
              const l =
                i - a.size > 0
                  ? this.documentOverlayCache.getOverlaysForCollectionGroup(
                      e,
                      t,
                      r.largestBatchId,
                      i - a.size
                    )
                  : W.resolve(Oa());
              let h = -1,
                m = a;
              return l.next((v) =>
                W.forEach(
                  v,
                  (b, D) => (
                    h < D.largestBatchId && (h = D.largestBatchId),
                    a.get(b)
                      ? W.resolve()
                      : this.getBaseDocument(e, b, D).next((R) => {
                          m = m.insert(b, R);
                        })
                  )
                )
                  .next(() => this.populateOverlays(e, v, a))
                  .next(() => this.computeViews(e, m, v, _n()))
                  .next((b) => ({ batchId: h, changes: s1(b) }))
              );
            });
        }
        getDocumentsMatchingDocumentQuery(e, t) {
          return this.getDocument(e, new u(t)).next((r) => {
            let i = XE();
            return r.isFoundDocument() && (i = i.insert(r.key, r)), i;
          });
        }
        getDocumentsMatchingCollectionGroupQuery(e, t, r) {
          const i = t.collectionGroup;
          let a = XE();
          return this.indexManager.getCollectionParents(e, i).next((l) =>
            W.forEach(l, (h) => {
              const m =
                ((v = t),
                (b = h.child(i)),
                new Fu(
                  b,
                  null,
                  v.explicitOrderBy.slice(),
                  v.filters.slice(),
                  v.limit,
                  v.limitType,
                  v.startAt,
                  v.endAt
                ));
              var v, b;
              return this.getDocumentsMatchingCollectionQuery(e, m, r).next(
                (v) => {
                  v.forEach((b, D) => {
                    a = a.insert(b, D);
                  });
                }
              );
            }).next(() => a)
          );
        }
        getDocumentsMatchingCollectionQuery(e, t, r) {
          let i;
          return this.remoteDocumentCache
            .getAllFromCollection(e, t.path, r)
            .next(
              (a) => (
                (i = a),
                this.documentOverlayCache.getOverlaysForCollection(
                  e,
                  t.path,
                  r.largestBatchId
                )
              )
            )
            .next((a) => {
              a.forEach((h, m) => {
                const v = m.getKey();
                null === i.get(v) &&
                  (i = i.insert(v, nr.newInvalidDocument(v)));
              });
              let l = XE();
              return (
                i.forEach((h, m) => {
                  const v = a.get(h);
                  void 0 !== v && JE(v.mutation, m, ks.empty(), ur.now()),
                    WR(t, m) && (l = l.insert(h, m));
                }),
                l
              );
            });
        }
        getBaseDocument(e, t, r) {
          return null === r || 1 === r.mutation.type
            ? this.remoteDocumentCache.getEntry(e, t)
            : W.resolve(nr.newInvalidDocument(t));
        }
      }
      class Uj {
        constructor(e) {
          (this.wt = e), (this.Jn = new Map()), (this.Yn = new Map());
        }
        getBundleMetadata(e, t) {
          return W.resolve(this.Jn.get(t));
        }
        saveBundleMetadata(e, t) {
          var r;
          return (
            this.Jn.set(t.id, {
              id: (r = t).id,
              version: r.version,
              createTime: ni(r.createTime),
            }),
            W.resolve()
          );
        }
        getNamedQuery(e, t) {
          return W.resolve(this.Yn.get(t));
        }
        saveNamedQuery(e, t) {
          return (
            this.Yn.set(t.name, {
              name: (r = t).name,
              query: eM(r.bundledQuery),
              readTime: ni(r.readTime),
            }),
            W.resolve()
          );
          var r;
        }
      }
      class Bj {
        constructor() {
          (this.overlays = new tr(u.comparator)), (this.Xn = new Map());
        }
        getOverlay(e, t) {
          return W.resolve(this.overlays.get(t));
        }
        getOverlays(e, t) {
          const r = Oa();
          return W.forEach(t, (i) =>
            this.getOverlay(e, i).next((a) => {
              null !== a && r.set(i, a);
            })
          ).next(() => r);
        }
        saveOverlays(e, t, r) {
          return (
            r.forEach((i, a) => {
              this.ie(e, t, a);
            }),
            W.resolve()
          );
        }
        removeOverlaysForBatchId(e, t, r) {
          const i = this.Xn.get(r);
          return (
            void 0 !== i &&
              (i.forEach((a) => (this.overlays = this.overlays.remove(a))),
              this.Xn.delete(r)),
            W.resolve()
          );
        }
        getOverlaysForCollection(e, t, r) {
          const i = Oa(),
            a = t.length + 1,
            l = new u(t.child("")),
            h = this.overlays.getIteratorFrom(l);
          for (; h.hasNext(); ) {
            const m = h.getNext().value,
              v = m.getKey();
            if (!t.isPrefixOf(v.path)) break;
            v.path.length === a && m.largestBatchId > r && i.set(m.getKey(), m);
          }
          return W.resolve(i);
        }
        getOverlaysForCollectionGroup(e, t, r, i) {
          let a = new tr((v, b) => v - b);
          const l = this.overlays.getIterator();
          for (; l.hasNext(); ) {
            const v = l.getNext().value;
            if (v.getKey().getCollectionGroup() === t && v.largestBatchId > r) {
              let b = a.get(v.largestBatchId);
              null === b && ((b = Oa()), (a = a.insert(v.largestBatchId, b))),
                b.set(v.getKey(), v);
            }
          }
          const h = Oa(),
            m = a.getIterator();
          for (
            ;
            m.hasNext() &&
            (m.getNext().value.forEach((v, b) => h.set(v, b)),
            !(h.size() >= i));

          );
          return W.resolve(h);
        }
        ie(e, t, r) {
          const i = this.overlays.get(r.key);
          if (null !== i) {
            const l = this.Xn.get(i.largestBatchId).delete(r.key);
            this.Xn.set(i.largestBatchId, l);
          }
          this.overlays = this.overlays.insert(r.key, new XR(t, r));
          let a = this.Xn.get(t);
          void 0 === a && ((a = _n()), this.Xn.set(t, a)),
            this.Xn.set(t, a.add(r.key));
        }
      }
      class rM {
        constructor() {
          (this.Zn = new zn(ii.ts)), (this.es = new zn(ii.ns));
        }
        isEmpty() {
          return this.Zn.isEmpty();
        }
        addReference(e, t) {
          const r = new ii(e, t);
          (this.Zn = this.Zn.add(r)), (this.es = this.es.add(r));
        }
        ss(e, t) {
          e.forEach((r) => this.addReference(r, t));
        }
        removeReference(e, t) {
          this.rs(new ii(e, t));
        }
        os(e, t) {
          e.forEach((r) => this.removeReference(r, t));
        }
        us(e) {
          const t = new u(new An([])),
            r = new ii(t, e),
            i = new ii(t, e + 1),
            a = [];
          return (
            this.es.forEachInRange([r, i], (l) => {
              this.rs(l), a.push(l.key);
            }),
            a
          );
        }
        cs() {
          this.Zn.forEach((e) => this.rs(e));
        }
        rs(e) {
          (this.Zn = this.Zn.delete(e)), (this.es = this.es.delete(e));
        }
        hs(e) {
          const t = new u(new An([])),
            r = new ii(t, e),
            i = new ii(t, e + 1);
          let a = _n();
          return (
            this.es.forEachInRange([r, i], (l) => {
              a = a.add(l.key);
            }),
            a
          );
        }
        containsKey(e) {
          const t = new ii(e, 0),
            r = this.Zn.firstAfterOrEqual(t);
          return null !== r && e.isEqual(r.key);
        }
      }
      class ii {
        constructor(e, t) {
          (this.key = e), (this.ls = t);
        }
        static ts(e, t) {
          return u.comparator(e.key, t.key) || un(e.ls, t.ls);
        }
        static ns(e, t) {
          return un(e.ls, t.ls) || u.comparator(e.key, t.key);
        }
      }
      class jj {
        constructor(e, t) {
          (this.indexManager = e),
            (this.referenceDelegate = t),
            (this.mutationQueue = []),
            (this.fs = 1),
            (this.ds = new zn(ii.ts));
        }
        checkEmpty(e) {
          return W.resolve(0 === this.mutationQueue.length);
        }
        addMutationBatch(e, t, r, i) {
          const a = this.fs;
          this.fs++;
          const l = new QR(a, t, r, i);
          this.mutationQueue.push(l);
          for (const h of i)
            (this.ds = this.ds.add(new ii(h.key, a))),
              this.indexManager.addToCollectionParentIndex(
                e,
                h.key.path.popLast()
              );
          return W.resolve(l);
        }
        lookupMutationBatch(e, t) {
          return W.resolve(this._s(t));
        }
        getNextMutationBatchAfterBatchId(e, t) {
          const i = this.ws(t + 1),
            a = i < 0 ? 0 : i;
          return W.resolve(
            this.mutationQueue.length > a ? this.mutationQueue[a] : null
          );
        }
        getHighestUnacknowledgedBatchId() {
          return W.resolve(0 === this.mutationQueue.length ? -1 : this.fs - 1);
        }
        getAllMutationBatches(e) {
          return W.resolve(this.mutationQueue.slice());
        }
        getAllMutationBatchesAffectingDocumentKey(e, t) {
          const r = new ii(t, 0),
            i = new ii(t, Number.POSITIVE_INFINITY),
            a = [];
          return (
            this.ds.forEachInRange([r, i], (l) => {
              const h = this._s(l.ls);
              a.push(h);
            }),
            W.resolve(a)
          );
        }
        getAllMutationBatchesAffectingDocumentKeys(e, t) {
          let r = new zn(un);
          return (
            t.forEach((i) => {
              const a = new ii(i, 0),
                l = new ii(i, Number.POSITIVE_INFINITY);
              this.ds.forEachInRange([a, l], (h) => {
                r = r.add(h.ls);
              });
            }),
            W.resolve(this.gs(r))
          );
        }
        getAllMutationBatchesAffectingQuery(e, t) {
          const r = t.path,
            i = r.length + 1;
          let a = r;
          u.isDocumentKey(a) || (a = a.child(""));
          const l = new ii(new u(a), 0);
          let h = new zn(un);
          return (
            this.ds.forEachWhile((m) => {
              const v = m.key.path;
              return (
                !!r.isPrefixOf(v) && (v.length === i && (h = h.add(m.ls)), !0)
              );
            }, l),
            W.resolve(this.gs(h))
          );
        }
        gs(e) {
          const t = [];
          return (
            e.forEach((r) => {
              const i = this._s(r);
              null !== i && t.push(i);
            }),
            t
          );
        }
        removeMutationBatch(e, t) {
          Wt(0 === this.ys(t.batchId, "removed")), this.mutationQueue.shift();
          let r = this.ds;
          return W.forEach(t.mutations, (i) => {
            const a = new ii(i.key, t.batchId);
            return (
              (r = r.delete(a)),
              this.referenceDelegate.markPotentiallyOrphaned(e, i.key)
            );
          }).next(() => {
            this.ds = r;
          });
        }
        In(e) {}
        containsKey(e, t) {
          const r = new ii(t, 0),
            i = this.ds.firstAfterOrEqual(r);
          return W.resolve(t.isEqual(i && i.key));
        }
        performConsistencyCheck(e) {
          return W.resolve();
        }
        ys(e, t) {
          return this.ws(e);
        }
        ws(e) {
          return 0 === this.mutationQueue.length
            ? 0
            : e - this.mutationQueue[0].batchId;
        }
        _s(e) {
          const t = this.ws(e);
          return t < 0 || t >= this.mutationQueue.length
            ? null
            : this.mutationQueue[t];
        }
      }
      class $j {
        constructor(e) {
          (this.ps = e), (this.docs = new tr(u.comparator)), (this.size = 0);
        }
        setIndexManager(e) {
          this.indexManager = e;
        }
        addEntry(e, t) {
          const r = t.key,
            i = this.docs.get(r),
            a = i ? i.size : 0,
            l = this.ps(t);
          return (
            (this.docs = this.docs.insert(r, {
              document: t.mutableCopy(),
              size: l,
            })),
            (this.size += l - a),
            this.indexManager.addToCollectionParentIndex(e, r.path.popLast())
          );
        }
        removeEntry(e) {
          const t = this.docs.get(e);
          t && ((this.docs = this.docs.remove(e)), (this.size -= t.size));
        }
        getEntry(e, t) {
          const r = this.docs.get(t);
          return W.resolve(
            r ? r.document.mutableCopy() : nr.newInvalidDocument(t)
          );
        }
        getEntries(e, t) {
          let r = us();
          return (
            t.forEach((i) => {
              const a = this.docs.get(i);
              r = r.insert(
                i,
                a ? a.document.mutableCopy() : nr.newInvalidDocument(i)
              );
            }),
            W.resolve(r)
          );
        }
        getAllFromCollection(e, t, r) {
          let i = us();
          const a = new u(t.child("")),
            l = this.docs.getIteratorFrom(a);
          for (; l.hasNext(); ) {
            const {
              key: h,
              value: { document: m },
            } = l.getNext();
            if (!t.isPrefixOf(h.path)) break;
            h.path.length > t.length + 1 ||
              O(T(m), r) <= 0 ||
              (i = i.insert(m.key, m.mutableCopy()));
          }
          return W.resolve(i);
        }
        getAllFromCollectionGroup(e, t, r, i) {
          Ct();
        }
        Is(e, t) {
          return W.forEach(this.docs, (r) => t(r));
        }
        newChangeBuffer(e) {
          return new Hj(this);
        }
        getSize(e) {
          return W.resolve(this.size);
        }
      }
      class Hj extends z1 {
        constructor(e) {
          super(), (this.zn = e);
        }
        applyChanges(e) {
          const t = [];
          return (
            this.changes.forEach((r, i) => {
              i.isValidDocument()
                ? t.push(this.zn.addEntry(e, i))
                : this.zn.removeEntry(r);
            }),
            W.waitFor(t)
          );
        }
        getFromCache(e, t) {
          return this.zn.getEntry(e, t);
        }
        getAllFromCache(e, t) {
          return this.zn.getEntries(e, t);
        }
      }
      class Gj {
        constructor(e) {
          (this.persistence = e),
            (this.Ts = new Pc((t) => tf(t), ZE)),
            (this.lastRemoteSnapshotVersion = Kt.min()),
            (this.highestTargetId = 0),
            (this.Es = 0),
            (this.As = new rM()),
            (this.targetCount = 0),
            (this.Rs = hf.An());
        }
        forEachTarget(e, t) {
          return this.Ts.forEach((r, i) => t(i)), W.resolve();
        }
        getLastRemoteSnapshotVersion(e) {
          return W.resolve(this.lastRemoteSnapshotVersion);
        }
        getHighestSequenceNumber(e) {
          return W.resolve(this.Es);
        }
        allocateTargetId(e) {
          return (
            (this.highestTargetId = this.Rs.next()),
            W.resolve(this.highestTargetId)
          );
        }
        setTargetsMetadata(e, t, r) {
          return (
            r && (this.lastRemoteSnapshotVersion = r),
            t > this.Es && (this.Es = t),
            W.resolve()
          );
        }
        vn(e) {
          this.Ts.set(e.target, e);
          const t = e.targetId;
          t > this.highestTargetId &&
            ((this.Rs = new hf(t)), (this.highestTargetId = t)),
            e.sequenceNumber > this.Es && (this.Es = e.sequenceNumber);
        }
        addTargetData(e, t) {
          return this.vn(t), (this.targetCount += 1), W.resolve();
        }
        updateTargetData(e, t) {
          return this.vn(t), W.resolve();
        }
        removeTargetData(e, t) {
          return (
            this.Ts.delete(t.target),
            this.As.us(t.targetId),
            (this.targetCount -= 1),
            W.resolve()
          );
        }
        removeTargets(e, t, r) {
          let i = 0;
          const a = [];
          return (
            this.Ts.forEach((l, h) => {
              h.sequenceNumber <= t &&
                null === r.get(h.targetId) &&
                (this.Ts.delete(l),
                a.push(this.removeMatchingKeysForTargetId(e, h.targetId)),
                i++);
            }),
            W.waitFor(a).next(() => i)
          );
        }
        getTargetCount(e) {
          return W.resolve(this.targetCount);
        }
        getTargetData(e, t) {
          const r = this.Ts.get(t) || null;
          return W.resolve(r);
        }
        addMatchingKeys(e, t, r) {
          return this.As.ss(t, r), W.resolve();
        }
        removeMatchingKeys(e, t, r) {
          this.As.os(t, r);
          const i = this.persistence.referenceDelegate,
            a = [];
          return (
            i &&
              t.forEach((l) => {
                a.push(i.markPotentiallyOrphaned(e, l));
              }),
            W.waitFor(a)
          );
        }
        removeMatchingKeysForTargetId(e, t) {
          return this.As.us(t), W.resolve();
        }
        getMatchingKeysForTargetId(e, t) {
          const r = this.As.hs(t);
          return W.resolve(r);
        }
        containsKey(e, t) {
          return W.resolve(this.As.containsKey(t));
        }
      }
      class J1 {
        constructor(e, t) {
          (this.bs = {}),
            (this.overlays = {}),
            (this.Ps = new ti(0)),
            (this.vs = !1),
            (this.vs = !0),
            (this.referenceDelegate = e(this)),
            (this.Vs = new Gj(this)),
            (this.indexManager = new Rj()),
            (this.remoteDocumentCache = new $j((r) =>
              this.referenceDelegate.Ss(r)
            )),
            (this.wt = new R1(t)),
            (this.Ds = new Uj(this.wt));
        }
        start() {
          return Promise.resolve();
        }
        shutdown() {
          return (this.vs = !1), Promise.resolve();
        }
        get started() {
          return this.vs;
        }
        setDatabaseDeletedListener() {}
        setNetworkEnabled() {}
        getIndexManager(e) {
          return this.indexManager;
        }
        getDocumentOverlayCache(e) {
          let t = this.overlays[e.toKey()];
          return t || ((t = new Bj()), (this.overlays[e.toKey()] = t)), t;
        }
        getMutationQueue(e, t) {
          let r = this.bs[e.toKey()];
          return (
            r ||
              ((r = new jj(t, this.referenceDelegate)),
              (this.bs[e.toKey()] = r)),
            r
          );
        }
        getTargetCache() {
          return this.Vs;
        }
        getRemoteDocumentCache() {
          return this.remoteDocumentCache;
        }
        getBundleCache() {
          return this.Ds;
        }
        runTransaction(e, t, r) {
          Je("MemoryPersistence", "Starting transaction:", e);
          const i = new Wj(this.Ps.next());
          return (
            this.referenceDelegate.Cs(),
            r(i)
              .next((a) => this.referenceDelegate.xs(i).next(() => a))
              .toPromise()
              .then((a) => (i.raiseOnCommittedEvent(), a))
          );
        }
        Ns(e, t) {
          return W.or(
            Object.values(this.bs).map((r) => () => r.containsKey(e, t))
          );
        }
      }
      class Wj extends oe {
        constructor(e) {
          super(), (this.currentSequenceNumber = e);
        }
      }
      class $b {
        constructor(e) {
          (this.persistence = e), (this.ks = new rM()), (this.Os = null);
        }
        static Ms(e) {
          return new $b(e);
        }
        get Fs() {
          if (this.Os) return this.Os;
          throw Ct();
        }
        addReference(e, t, r) {
          return (
            this.ks.addReference(r, t),
            this.Fs.delete(r.toString()),
            W.resolve()
          );
        }
        removeReference(e, t, r) {
          return (
            this.ks.removeReference(r, t),
            this.Fs.add(r.toString()),
            W.resolve()
          );
        }
        markPotentiallyOrphaned(e, t) {
          return this.Fs.add(t.toString()), W.resolve();
        }
        removeTarget(e, t) {
          this.ks.us(t.targetId).forEach((i) => this.Fs.add(i.toString()));
          const r = this.persistence.getTargetCache();
          return r
            .getMatchingKeysForTargetId(e, t.targetId)
            .next((i) => {
              i.forEach((a) => this.Fs.add(a.toString()));
            })
            .next(() => r.removeTargetData(e, t));
        }
        Cs() {
          this.Os = new Set();
        }
        xs(e) {
          const t = this.persistence.getRemoteDocumentCache().newChangeBuffer();
          return W.forEach(this.Fs, (r) => {
            const i = u.fromPath(r);
            return this.$s(e, i).next((a) => {
              a || t.removeEntry(i, Kt.min());
            });
          }).next(() => ((this.Os = null), t.apply(e)));
        }
        updateLimboDocument(e, t) {
          return this.$s(e, t).next((r) => {
            r ? this.Fs.delete(t.toString()) : this.Fs.add(t.toString());
          });
        }
        Ss(e) {
          return 0;
        }
        $s(e, t) {
          return W.or([
            () => W.resolve(this.ks.containsKey(t)),
            () => this.persistence.getTargetCache().containsKey(e, t),
            () => this.persistence.Ns(e, t),
          ]);
        }
      }
      class zj {
        constructor(e) {
          this.wt = e;
        }
        O(e, t, r, i) {
          const a = new _t("createOrUpgrade", t);
          var h;
          r < 1 &&
            i >= 1 &&
            (e.createObjectStore("owner"),
            (h = e).createObjectStore("mutationQueues", { keyPath: "userId" }),
            h
              .createObjectStore("mutations", {
                keyPath: "batchId",
                autoIncrement: !0,
              })
              .createIndex("userMutationsIndex", b1, { unique: !0 }),
            h.createObjectStore("documentMutations"),
            X1(e),
            (function (h) {
              h.createObjectStore("remoteDocuments");
            })(e));
          let l = W.resolve();
          return (
            r < 3 &&
              i >= 3 &&
              (0 !== r &&
                ((function (h) {
                  h.deleteObjectStore("targetDocuments"),
                    h.deleteObjectStore("targets"),
                    h.deleteObjectStore("targetGlobal");
                })(e),
                X1(e)),
              (l = l.next(() =>
                (function (h) {
                  const m = h.store("targetGlobal"),
                    v = {
                      highestTargetId: 0,
                      highestListenSequenceNumber: 0,
                      lastRemoteSnapshotVersion: Kt.min().toTimestamp(),
                      targetCount: 0,
                    };
                  return m.put("targetGlobalKey", v);
                })(a)
              ))),
            r < 4 &&
              i >= 4 &&
              (0 !== r &&
                (l = l.next(() =>
                  (function (h, m) {
                    return m
                      .store("mutations")
                      .K()
                      .next((v) => {
                        h.deleteObjectStore("mutations"),
                          h
                            .createObjectStore("mutations", {
                              keyPath: "batchId",
                              autoIncrement: !0,
                            })
                            .createIndex("userMutationsIndex", b1, {
                              unique: !0,
                            });
                        const b = m.store("mutations"),
                          D = v.map((R) => b.put(R));
                        return W.waitFor(D);
                      });
                  })(e, a)
                )),
              (l = l.next(() => {
                !(function (h) {
                  h.createObjectStore("clientMetadata", {
                    keyPath: "clientId",
                  });
                })(e);
              }))),
            r < 5 && i >= 5 && (l = l.next(() => this.Bs(a))),
            r < 6 &&
              i >= 6 &&
              (l = l.next(
                () => (
                  (function (h) {
                    h.createObjectStore("remoteDocumentGlobal");
                  })(e),
                  this.Ls(a)
                )
              )),
            r < 7 && i >= 7 && (l = l.next(() => this.Us(a))),
            r < 8 && i >= 8 && (l = l.next(() => this.qs(e, a))),
            r < 9 &&
              i >= 9 &&
              (l = l.next(() => {
                !(function (h) {
                  h.objectStoreNames.contains("remoteDocumentChanges") &&
                    h.deleteObjectStore("remoteDocumentChanges");
                })(e);
              })),
            r < 10 && i >= 10 && (l = l.next(() => this.Ks(a))),
            r < 11 &&
              i >= 11 &&
              (l = l.next(() => {
                (function (h) {
                  h.createObjectStore("bundles", { keyPath: "bundleId" });
                })(e),
                  (function (h) {
                    h.createObjectStore("namedQueries", { keyPath: "name" });
                  })(e);
              })),
            r < 12 &&
              i >= 12 &&
              (l = l.next(() => {
                !(function (h) {
                  const m = h.createObjectStore("documentOverlays", {
                    keyPath: _j,
                  });
                  m.createIndex("collectionPathOverlayIndex", yj, {
                    unique: !1,
                  }),
                    m.createIndex("collectionGroupOverlayIndex", vj, {
                      unique: !1,
                    });
                })(e);
              })),
            r < 13 &&
              i >= 13 &&
              (l = l
                .next(() =>
                  (function (h) {
                    const m = h.createObjectStore("remoteDocumentsV14", {
                      keyPath: oj,
                    });
                    m.createIndex("documentKeyIndex", aj),
                      m.createIndex("collectionGroupIndex", uj);
                  })(e)
                )
                .next(() => this.Gs(e, a))
                .next(() => e.deleteObjectStore("remoteDocuments"))),
            r < 14 && i >= 14 && (l = l.next(() => this.Qs(e, a))),
            r < 15 &&
              i >= 15 &&
              (l = l.next(() =>
                (function (h) {
                  h
                    .createObjectStore("indexConfiguration", {
                      keyPath: "indexId",
                      autoIncrement: !0,
                    })
                    .createIndex("collectionGroupIndex", "collectionGroup", {
                      unique: !1,
                    }),
                    h
                      .createObjectStore("indexState", { keyPath: fj })
                      .createIndex("sequenceNumberIndex", pj, { unique: !1 }),
                    h
                      .createObjectStore("indexEntries", { keyPath: gj })
                      .createIndex("documentKeyIndex", mj, { unique: !1 });
                })(e)
              )),
            l
          );
        }
        Ls(e) {
          let t = 0;
          return e
            .store("remoteDocuments")
            .J((r, i) => {
              t += Ub(i);
            })
            .next(() => {
              const r = { byteSize: t };
              return e
                .store("remoteDocumentGlobal")
                .put("remoteDocumentGlobalKey", r);
            });
        }
        Bs(e) {
          const t = e.store("mutationQueues"),
            r = e.store("mutations");
          return t.K().next((i) =>
            W.forEach(i, (a) => {
              const l = IDBKeyRange.bound(
                [a.userId, -1],
                [a.userId, a.lastAcknowledgedBatchId]
              );
              return r.K("userMutationsIndex", l).next((h) =>
                W.forEach(h, (m) => {
                  Wt(m.userId === a.userId);
                  const v = uf(this.wt, m);
                  return j1(e, a.userId, v).next(() => {});
                })
              );
            })
          );
        }
        Us(e) {
          const t = e.store("targetDocuments"),
            r = e.store("remoteDocuments");
          return e
            .store("targetGlobal")
            .get("targetGlobalKey")
            .next((i) => {
              const a = [];
              return r
                .J((l, h) => {
                  const m = new An(l),
                    v = [0, $i(m)];
                  a.push(
                    t
                      .get(v)
                      .next((b) =>
                        b
                          ? W.resolve()
                          : t.put({
                              targetId: 0,
                              path: $i(m),
                              sequenceNumber: i.highestListenSequenceNumber,
                            })
                      )
                  );
                })
                .next(() => W.waitFor(a));
            });
        }
        qs(e, t) {
          e.createObjectStore("collectionParents", { keyPath: hj });
          const r = t.store("collectionParents"),
            i = new nM(),
            a = (l) => {
              if (i.add(l)) {
                const h = l.lastSegment(),
                  m = l.popLast();
                return r.put({ collectionId: h, parent: $i(m) });
              }
            };
          return t
            .store("remoteDocuments")
            .J({ H: !0 }, (l, h) => {
              const m = new An(l);
              return a(m.popLast());
            })
            .next(() =>
              t.store("documentMutations").J({ H: !0 }, ([l, h, m], v) => {
                const b = Fa(h);
                return a(b.popLast());
              })
            );
        }
        Ks(e) {
          const t = e.store("targets");
          return t.J((r, i) => {
            const a = aw(i),
              l = x1(this.wt, a);
            return t.put(l);
          });
        }
        Gs(e, t) {
          const r = t.store("remoteDocuments"),
            i = [];
          return r
            .J((a, l) => {
              const h = t.store("remoteDocumentsV14"),
                m = ((v = l),
                v.document
                  ? new u(An.fromString(v.document.name).popFirst(5))
                  : v.noDocument
                  ? u.fromSegments(v.noDocument.path)
                  : v.unknownDocument
                  ? u.fromSegments(v.unknownDocument.path)
                  : Ct()).path.toArray();
              var v;
              const b = {
                prefixPath: m.slice(0, m.length - 2),
                collectionGroup: m[m.length - 2],
                documentId: m[m.length - 1],
                readTime: l.readTime || [0, 0],
                unknownDocument: l.unknownDocument,
                noDocument: l.noDocument,
                document: l.document,
                hasCommittedMutations: !!l.hasCommittedMutations,
              };
              i.push(h.put(b));
            })
            .next(() => W.waitFor(i));
        }
        Qs(e, t) {
          const r = t.store("mutations"),
            i = q1(this.wt),
            a = new J1($b.Ms, this.wt.ne);
          return r.K().next((l) => {
            const h = new Map();
            return (
              l.forEach((m) => {
                var v;
                let b =
                  null !== (v = h.get(m.userId)) && void 0 !== v ? v : _n();
                uf(this.wt, m)
                  .keys()
                  .forEach((D) => (b = b.add(D))),
                  h.set(m.userId, b);
              }),
              W.forEach(h, (m, v) => {
                const b = new Pr(v),
                  D = Fb.se(this.wt, b),
                  R = a.getIndexManager(b),
                  F = Bb.se(b, this.wt, R, a.referenceDelegate);
                return new Q1(i, F, D, R)
                  .recalculateAndSaveOverlaysForDocumentKeys(
                    new YR(t, ti.ot),
                    m
                  )
                  .next();
              })
            );
          });
        }
      }
      function X1(n) {
        n
          .createObjectStore("targetDocuments", { keyPath: cj })
          .createIndex("documentTargetsIndex", dj, { unique: !0 }),
          n
            .createObjectStore("targets", { keyPath: "targetId" })
            .createIndex("queryTargetsIndex", lj, { unique: !0 }),
          n.createObjectStore("targetGlobal");
      }
      const iM =
        "Failed to obtain exclusive access to the persistence layer. To allow shared access, multi-tab synchronization has to be enabled in all tabs. If you are using `experimentalForceOwningTab:true`, make sure that only one tab has persistence enabled at any given time.";
      class sM {
        constructor(e, t, r, i, a, l, h, m, v, b, D = 14) {
          if (
            ((this.allowTabSynchronization = e),
            (this.persistenceKey = t),
            (this.clientId = r),
            (this.js = a),
            (this.window = l),
            (this.document = h),
            (this.Ws = v),
            (this.zs = b),
            (this.Hs = D),
            (this.Ps = null),
            (this.vs = !1),
            (this.isPrimary = !1),
            (this.networkEnabled = !0),
            (this.Js = null),
            (this.inForeground = !1),
            (this.Ys = null),
            (this.Xs = null),
            (this.Zs = Number.NEGATIVE_INFINITY),
            (this.ti = (R) => Promise.resolve()),
            !sM.V())
          )
            throw new Ge(
              be.UNIMPLEMENTED,
              "This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled."
            );
          (this.referenceDelegate = new kj(this, i)),
            (this.ei = t + "main"),
            (this.wt = new R1(m)),
            (this.ni = new xt(this.ei, this.Hs, new zj(this.wt))),
            (this.Vs = new xj(this.referenceDelegate, this.wt)),
            (this.remoteDocumentCache = q1(this.wt)),
            (this.Ds = new Cj()),
            this.window && this.window.localStorage
              ? (this.si = this.window.localStorage)
              : ((this.si = null),
                !1 === b &&
                  _r(
                    "IndexedDbPersistence",
                    "LocalStorage is unavailable. As a result, persistence may not work reliably. In particular enablePersistence() could fail immediately after refreshing the page."
                  ));
        }
        start() {
          return this.ii()
            .then(() => {
              if (!this.isPrimary && !this.allowTabSynchronization)
                throw new Ge(be.FAILED_PRECONDITION, iM);
              return (
                this.ri(),
                this.oi(),
                this.ui(),
                this.runTransaction(
                  "getHighestListenSequenceNumber",
                  "readonly",
                  (e) => this.Vs.getHighestSequenceNumber(e)
                )
              );
            })
            .then((e) => {
              this.Ps = new ti(e, this.Ws);
            })
            .then(() => {
              this.vs = !0;
            })
            .catch((e) => (this.ni && this.ni.close(), Promise.reject(e)));
        }
        ci(e) {
          var t = this;
          return (
            (this.ti = (function () {
              var r = (0, Te.Z)(function* (i) {
                if (t.started) return e(i);
              });
              return function (i) {
                return r.apply(this, arguments);
              };
            })()),
            e(this.isPrimary)
          );
        }
        setDatabaseDeletedListener(e) {
          this.ni.F(
            (function () {
              var t = (0, Te.Z)(function* (r) {
                null === r.newVersion && (yield e());
              });
              return function (r) {
                return t.apply(this, arguments);
              };
            })()
          );
        }
        setNetworkEnabled(e) {
          var t = this;
          this.networkEnabled !== e &&
            ((this.networkEnabled = e),
            this.js.enqueueAndForget(
              (0, Te.Z)(function* () {
                t.started && (yield t.ii());
              })
            ));
        }
        ii() {
          return this.runTransaction(
            "updateClientMetadataAndTryBecomePrimary",
            "readwrite",
            (e) =>
              Hb(e)
                .put({
                  clientId: this.clientId,
                  updateTimeMs: Date.now(),
                  networkEnabled: this.networkEnabled,
                  inForeground: this.inForeground,
                })
                .next(() => {
                  if (this.isPrimary)
                    return this.ai(e).next((t) => {
                      t ||
                        ((this.isPrimary = !1),
                        this.js.enqueueRetryable(() => this.ti(!1)));
                    });
                })
                .next(() => this.hi(e))
                .next((t) =>
                  this.isPrimary && !t
                    ? this.li(e).next(() => !1)
                    : !!t && this.fi(e).next(() => !0)
                )
          )
            .catch((e) => {
              if (nn(e))
                return (
                  Je(
                    "IndexedDbPersistence",
                    "Failed to extend owner lease: ",
                    e
                  ),
                  this.isPrimary
                );
              if (!this.allowTabSynchronization) throw e;
              return (
                Je(
                  "IndexedDbPersistence",
                  "Releasing owner lease after error during lease refresh",
                  e
                ),
                !1
              );
            })
            .then((e) => {
              this.isPrimary !== e &&
                this.js.enqueueRetryable(() => this.ti(e)),
                (this.isPrimary = e);
            });
        }
        ai(e) {
          return fw(e)
            .get("owner")
            .next((t) => W.resolve(this.di(t)));
        }
        _i(e) {
          return Hb(e).delete(this.clientId);
        }
        wi() {
          var e = this;
          return (0, Te.Z)(function* () {
            if (e.isPrimary && !e.mi(e.Zs, 18e5)) {
              e.Zs = Date.now();
              const t = yield e
                .runTransaction(
                  "maybeGarbageCollectMultiClientState",
                  "readwrite-primary",
                  (r) => {
                    const i = ri(r, "clientMetadata");
                    return i.K().next((a) => {
                      const l = e.gi(a, 18e5),
                        h = a.filter((m) => -1 === l.indexOf(m));
                      return W.forEach(h, (m) => i.delete(m.clientId)).next(
                        () => h
                      );
                    });
                  }
                )
                .catch(() => []);
              if (e.si) for (const r of t) e.si.removeItem(e.yi(r.clientId));
            }
          })();
        }
        ui() {
          this.Xs = this.js.enqueueAfterDelay(
            "client_metadata_refresh",
            4e3,
            () =>
              this.ii()
                .then(() => this.wi())
                .then(() => this.ui())
          );
        }
        di(e) {
          return !!e && e.ownerId === this.clientId;
        }
        hi(e) {
          return this.zs
            ? W.resolve(!0)
            : fw(e)
                .get("owner")
                .next((t) => {
                  if (
                    null !== t &&
                    this.mi(t.leaseTimestampMs, 5e3) &&
                    !this.pi(t.ownerId)
                  ) {
                    if (this.di(t) && this.networkEnabled) return !0;
                    if (!this.di(t)) {
                      if (!t.allowTabSynchronization)
                        throw new Ge(be.FAILED_PRECONDITION, iM);
                      return !1;
                    }
                  }
                  return (
                    !(!this.networkEnabled || !this.inForeground) ||
                    Hb(e)
                      .K()
                      .next(
                        (r) =>
                          void 0 ===
                          this.gi(r, 5e3).find((i) => {
                            if (this.clientId !== i.clientId) {
                              const l = !this.inForeground && i.inForeground,
                                h = this.networkEnabled === i.networkEnabled;
                              if (
                                (!this.networkEnabled && i.networkEnabled) ||
                                (l && h)
                              )
                                return !0;
                            }
                            return !1;
                          })
                      )
                  );
                })
                .next(
                  (t) => (
                    this.isPrimary !== t &&
                      Je(
                        "IndexedDbPersistence",
                        `Client ${
                          t ? "is" : "is not"
                        } eligible for a primary lease.`
                      ),
                    t
                  )
                );
        }
        shutdown() {
          var e = this;
          return (0, Te.Z)(function* () {
            (e.vs = !1),
              e.Ii(),
              e.Xs && (e.Xs.cancel(), (e.Xs = null)),
              e.Ti(),
              e.Ei(),
              yield e.ni.runTransaction(
                "shutdown",
                "readwrite",
                ["owner", "clientMetadata"],
                (t) => {
                  const r = new YR(t, ti.ot);
                  return e.li(r).next(() => e._i(r));
                }
              ),
              e.ni.close(),
              e.Ai();
          })();
        }
        gi(e, t) {
          return e.filter(
            (r) => this.mi(r.updateTimeMs, t) && !this.pi(r.clientId)
          );
        }
        Ri() {
          return this.runTransaction("getActiveClients", "readonly", (e) =>
            Hb(e)
              .K()
              .next((t) => this.gi(t, 18e5).map((r) => r.clientId))
          );
        }
        get started() {
          return this.vs;
        }
        getMutationQueue(e, t) {
          return Bb.se(e, this.wt, t, this.referenceDelegate);
        }
        getTargetCache() {
          return this.Vs;
        }
        getRemoteDocumentCache() {
          return this.remoteDocumentCache;
        }
        getIndexManager(e) {
          return new Mj(e, this.wt.ne.databaseId);
        }
        getDocumentOverlayCache(e) {
          return Fb.se(this.wt, e);
        }
        getBundleCache() {
          return this.Ds;
        }
        runTransaction(e, t, r) {
          Je("IndexedDbPersistence", "Starting transaction:", e);
          const i = "readonly" === t ? "readonly" : "readwrite",
            a =
              15 === (l = this.Hs)
                ? wj
                : 14 === l
                ? A1
                : 13 === l
                ? S1
                : 12 === l
                ? Ej
                : 11 === l
                ? T1
                : void Ct();
          var l;
          let h;
          return this.ni
            .runTransaction(
              e,
              i,
              a,
              (m) => (
                (h = new YR(m, this.Ps ? this.Ps.next() : ti.ot)),
                "readwrite-primary" === t
                  ? this.ai(h)
                      .next((v) => !!v || this.hi(h))
                      .next((v) => {
                        if (!v)
                          throw (
                            (_r(
                              `Failed to obtain primary lease for action '${e}'.`
                            ),
                            (this.isPrimary = !1),
                            this.js.enqueueRetryable(() => this.ti(!1)),
                            new Ge(be.FAILED_PRECONDITION, Z))
                          );
                        return r(h);
                      })
                      .next((v) => this.fi(h).next(() => v))
                  : this.bi(h).next(() => r(h))
              )
            )
            .then((m) => (h.raiseOnCommittedEvent(), m));
        }
        bi(e) {
          return fw(e)
            .get("owner")
            .next((t) => {
              if (
                null !== t &&
                this.mi(t.leaseTimestampMs, 5e3) &&
                !this.pi(t.ownerId) &&
                !this.di(t) &&
                !(
                  this.zs ||
                  (this.allowTabSynchronization && t.allowTabSynchronization)
                )
              )
                throw new Ge(be.FAILED_PRECONDITION, iM);
            });
        }
        fi(e) {
          const t = {
            ownerId: this.clientId,
            allowTabSynchronization: this.allowTabSynchronization,
            leaseTimestampMs: Date.now(),
          };
          return fw(e).put("owner", t);
        }
        static V() {
          return xt.V();
        }
        li(e) {
          const t = fw(e);
          return t
            .get("owner")
            .next((r) =>
              this.di(r)
                ? (Je("IndexedDbPersistence", "Releasing primary lease."),
                  t.delete("owner"))
                : W.resolve()
            );
        }
        mi(e, t) {
          const r = Date.now();
          return !(
            e < r - t ||
            (e > r &&
              (_r(`Detected an update time that is in the future: ${e} > ${r}`),
              1))
          );
        }
        ri() {
          null !== this.document &&
            "function" == typeof this.document.addEventListener &&
            ((this.Ys = () => {
              this.js.enqueueAndForget(
                () => (
                  (this.inForeground =
                    "visible" === this.document.visibilityState),
                  this.ii()
                )
              );
            }),
            this.document.addEventListener("visibilitychange", this.Ys),
            (this.inForeground = "visible" === this.document.visibilityState));
        }
        Ti() {
          this.Ys &&
            (this.document.removeEventListener("visibilitychange", this.Ys),
            (this.Ys = null));
        }
        oi() {
          var e;
          "function" ==
            typeof (null === (e = this.window) || void 0 === e
              ? void 0
              : e.addEventListener) &&
            ((this.Js = () => {
              this.Ii(),
                (0, ee.G6)() &&
                  navigator.appVersion.match(/Version\/1[45]/) &&
                  this.js.enterRestrictedMode(!0),
                this.js.enqueueAndForget(() => this.shutdown());
            }),
            this.window.addEventListener("pagehide", this.Js));
        }
        Ei() {
          this.Js &&
            (this.window.removeEventListener("pagehide", this.Js),
            (this.Js = null));
        }
        pi(e) {
          var t;
          try {
            const r =
              null !==
              (null === (t = this.si) || void 0 === t
                ? void 0
                : t.getItem(this.yi(e)));
            return (
              Je(
                "IndexedDbPersistence",
                `Client '${e}' ${r ? "is" : "is not"} zombied in LocalStorage`
              ),
              r
            );
          } catch (r) {
            return (
              _r("IndexedDbPersistence", "Failed to get zombied client id.", r),
              !1
            );
          }
        }
        Ii() {
          if (this.si)
            try {
              this.si.setItem(this.yi(this.clientId), String(Date.now()));
            } catch (e) {
              _r("Failed to set zombie client id.", e);
            }
        }
        Ai() {
          if (this.si)
            try {
              this.si.removeItem(this.yi(this.clientId));
            } catch {}
        }
        yi(e) {
          return `firestore_zombie_${this.persistenceKey}_${e}`;
        }
      }
      function fw(n) {
        return ri(n, "owner");
      }
      function Hb(n) {
        return ri(n, "clientMetadata");
      }
      function oM(n, e) {
        let t = n.projectId;
        return (
          n.isDefaultDatabase || (t += "." + n.database),
          "firestore/" + e + "/" + t + "/"
        );
      }
      class aM {
        constructor(e, t, r, i) {
          (this.targetId = e),
            (this.fromCache = t),
            (this.Pi = r),
            (this.vi = i);
        }
        static Vi(e, t) {
          let r = _n(),
            i = _n();
          for (const a of t.docChanges)
            switch (a.type) {
              case 0:
                r = r.add(a.doc.key);
                break;
              case 1:
                i = i.add(a.doc.key);
            }
          return new aM(e, t.fromCache, r, i);
        }
      }
      class eF {
        constructor() {
          this.Si = !1;
        }
        initialize(e, t) {
          (this.Di = e), (this.indexManager = t), (this.Si = !0);
        }
        getDocumentsMatchingQuery(e, t, r, i) {
          return this.Ci(e, t)
            .next((a) => a || this.xi(e, t, i, r))
            .next((a) => a || this.Ni(e, t));
        }
        Ci(e, t) {
          return W.resolve(null);
        }
        xi(e, t, r, i) {
          return (function x2(n) {
            return (
              0 === n.filters.length &&
              null === n.limit &&
              null == n.startAt &&
              null == n.endAt &&
              (0 === n.explicitOrderBy.length ||
                (1 === n.explicitOrderBy.length &&
                  n.explicitOrderBy[0].field.isKeyField()))
            );
          })(t) || i.isEqual(Kt.min())
            ? this.Ni(e, t)
            : this.Di.getDocuments(e, r).next((a) => {
                const l = this.ki(t, a);
                return this.Oi(t, l, r, i)
                  ? this.Ni(e, t)
                  : (VE() <= Li.in.DEBUG &&
                      Je(
                        "QueryEngine",
                        "Re-using previous result from %s to execute query: %s",
                        i.toString(),
                        GR(t)
                      ),
                    this.Mi(e, l, t, C(i, -1)));
              });
        }
        ki(e, t) {
          let r = new zn($k(e));
          return (
            t.forEach((i, a) => {
              WR(e, a) && (r = r.add(a));
            }),
            r
          );
        }
        Oi(e, t, r, i) {
          if (null === e.limit) return !1;
          if (r.size !== t.size) return !0;
          const a = "F" === e.limitType ? t.last() : t.first();
          return !!a && (a.hasPendingWrites || a.version.compareTo(i) > 0);
        }
        Ni(e, t) {
          return (
            VE() <= Li.in.DEBUG &&
              Je(
                "QueryEngine",
                "Using full collection scan to execute query:",
                GR(t)
              ),
            this.Di.getDocumentsMatchingQuery(e, t, A.min())
          );
        }
        Mi(e, t, r, i) {
          return this.Di.getDocumentsMatchingQuery(e, r, i).next(
            (a) => (
              t.forEach((l) => {
                a = a.insert(l.key, l);
              }),
              a
            )
          );
        }
      }
      class qj {
        constructor(e, t, r, i) {
          (this.persistence = e),
            (this.Fi = t),
            (this.wt = i),
            (this.$i = new tr(un)),
            (this.Bi = new Pc((a) => tf(a), ZE)),
            (this.Li = new Map()),
            (this.Ui = e.getRemoteDocumentCache()),
            (this.Vs = e.getTargetCache()),
            (this.Ds = e.getBundleCache()),
            this.qi(r);
        }
        qi(e) {
          (this.documentOverlayCache =
            this.persistence.getDocumentOverlayCache(e)),
            (this.indexManager = this.persistence.getIndexManager(e)),
            (this.mutationQueue = this.persistence.getMutationQueue(
              e,
              this.indexManager
            )),
            (this.localDocuments = new Q1(
              this.Ui,
              this.mutationQueue,
              this.documentOverlayCache,
              this.indexManager
            )),
            this.Ui.setIndexManager(this.indexManager),
            this.Fi.initialize(this.localDocuments, this.indexManager);
        }
        collectGarbage(e) {
          return this.persistence.runTransaction(
            "Collect garbage",
            "readwrite-primary",
            (t) => e.collect(t, this.$i)
          );
        }
      }
      function tF(n, e, t, r) {
        return new qj(n, e, t, r);
      }
      function nF(n, e) {
        return uM.apply(this, arguments);
      }
      function uM() {
        return (
          (uM = (0, Te.Z)(function* (n, e) {
            const t = gt(n);
            return yield t.persistence.runTransaction(
              "Handle user change",
              "readonly",
              (r) => {
                let i;
                return t.mutationQueue
                  .getAllMutationBatches(r)
                  .next(
                    (a) => (
                      (i = a), t.qi(e), t.mutationQueue.getAllMutationBatches(r)
                    )
                  )
                  .next((a) => {
                    const l = [],
                      h = [];
                    let m = _n();
                    for (const v of i) {
                      l.push(v.batchId);
                      for (const b of v.mutations) m = m.add(b.key);
                    }
                    for (const v of a) {
                      h.push(v.batchId);
                      for (const b of v.mutations) m = m.add(b.key);
                    }
                    return t.localDocuments
                      .getDocuments(r, m)
                      .next((v) => ({
                        Ki: v,
                        removedBatchIds: l,
                        addedBatchIds: h,
                      }));
                  });
              }
            );
          })),
          uM.apply(this, arguments)
        );
      }
      function Kj(n, e) {
        const t = gt(n);
        return t.persistence.runTransaction(
          "Acknowledge batch",
          "readwrite-primary",
          (r) => {
            const i = e.batch.keys(),
              a = t.Ui.newChangeBuffer({ trackRemovals: !0 });
            return (function (l, h, m, v) {
              const b = m.batch,
                D = b.keys();
              let R = W.resolve();
              return (
                D.forEach((F) => {
                  R = R.next(() => v.getEntry(h, F)).next((B) => {
                    const le = m.docVersions.get(F);
                    Wt(null !== le),
                      B.version.compareTo(le) < 0 &&
                        (b.applyToRemoteDocument(B, m),
                        B.isValidDocument() &&
                          (B.setReadTime(m.commitVersion), v.addEntry(B)));
                  });
                }),
                R.next(() => l.mutationQueue.removeMutationBatch(h, b))
              );
            })(t, r, e, a)
              .next(() => a.apply(r))
              .next(() => t.mutationQueue.performConsistencyCheck(r))
              .next(() =>
                t.documentOverlayCache.removeOverlaysForBatchId(
                  r,
                  i,
                  e.batch.batchId
                )
              )
              .next(() =>
                t.localDocuments.recalculateAndSaveOverlaysForDocumentKeys(
                  r,
                  (function (l) {
                    let h = _n();
                    for (let m = 0; m < l.mutationResults.length; ++m)
                      l.mutationResults[m].transformResults.length > 0 &&
                        (h = h.add(l.batch.mutations[m].key));
                    return h;
                  })(e)
                )
              )
              .next(() => t.localDocuments.getDocuments(r, i));
          }
        );
      }
      function rF(n) {
        const e = gt(n);
        return e.persistence.runTransaction(
          "Get last remote snapshot version",
          "readonly",
          (t) => e.Vs.getLastRemoteSnapshotVersion(t)
        );
      }
      function Zj(n, e) {
        const t = gt(n),
          r = e.snapshotVersion;
        let i = t.$i;
        return t.persistence
          .runTransaction("Apply remote event", "readwrite-primary", (a) => {
            const l = t.Ui.newChangeBuffer({ trackRemovals: !0 });
            i = t.$i;
            const h = [];
            e.targetChanges.forEach((b, D) => {
              const R = i.get(D);
              if (!R) return;
              h.push(
                t.Vs.removeMatchingKeys(a, b.removedDocuments, D).next(() =>
                  t.Vs.addMatchingKeys(a, b.addedDocuments, D)
                )
              );
              let F = R.withSequenceNumber(a.currentSequenceNumber);
              var B, le, Ee;
              e.targetMismatches.has(D)
                ? (F = F.withResumeToken(
                    Kr.EMPTY_BYTE_STRING,
                    Kt.min()
                  ).withLastLimboFreeSnapshotVersion(Kt.min()))
                : b.resumeToken.approximateByteSize() > 0 &&
                  (F = F.withResumeToken(b.resumeToken, r)),
                (i = i.insert(D, F)),
                (le = F),
                (Ee = b),
                (0 === (B = R).resumeToken.approximateByteSize() ||
                  le.snapshotVersion.toMicroseconds() -
                    B.snapshotVersion.toMicroseconds() >=
                    3e8 ||
                  Ee.addedDocuments.size +
                    Ee.modifiedDocuments.size +
                    Ee.removedDocuments.size >
                    0) &&
                  h.push(t.Vs.updateTargetData(a, F));
            });
            let m = us(),
              v = _n();
            if (
              (e.documentUpdates.forEach((b) => {
                e.resolvedLimboDocuments.has(b) &&
                  h.push(
                    t.persistence.referenceDelegate.updateLimboDocument(a, b)
                  );
              }),
              h.push(
                iF(a, l, e.documentUpdates).next((b) => {
                  (m = b.Gi), (v = b.Qi);
                })
              ),
              !r.isEqual(Kt.min()))
            ) {
              const b = t.Vs.getLastRemoteSnapshotVersion(a).next((D) =>
                t.Vs.setTargetsMetadata(a, a.currentSequenceNumber, r)
              );
              h.push(b);
            }
            return W.waitFor(h)
              .next(() => l.apply(a))
              .next(() => t.localDocuments.getLocalViewOfDocuments(a, m, v))
              .next(() => m);
          })
          .then((a) => ((t.$i = i), a));
      }
      function iF(n, e, t) {
        let r = _n(),
          i = _n();
        return (
          t.forEach((a) => (r = r.add(a))),
          e.getEntries(n, r).next((a) => {
            let l = us();
            return (
              t.forEach((h, m) => {
                const v = a.get(h);
                m.isFoundDocument() !== v.isFoundDocument() && (i = i.add(h)),
                  m.isNoDocument() && m.version.isEqual(Kt.min())
                    ? (e.removeEntry(h, m.readTime), (l = l.insert(h, m)))
                    : !v.isValidDocument() ||
                      m.version.compareTo(v.version) > 0 ||
                      (0 === m.version.compareTo(v.version) &&
                        v.hasPendingWrites)
                    ? (e.addEntry(m), (l = l.insert(h, m)))
                    : Je(
                        "LocalStore",
                        "Ignoring outdated watch update for ",
                        h,
                        ". Current version:",
                        v.version,
                        " Watch version:",
                        m.version
                      );
              }),
              { Gi: l, Qi: i }
            );
          })
        );
      }
      function Yj(n, e) {
        const t = gt(n);
        return t.persistence.runTransaction(
          "Get next mutation batch",
          "readonly",
          (r) => (
            void 0 === e && (e = -1),
            t.mutationQueue.getNextMutationBatchAfterBatchId(r, e)
          )
        );
      }
      function Em(n, e) {
        const t = gt(n);
        return t.persistence
          .runTransaction("Allocate target", "readwrite", (r) => {
            let i;
            return t.Vs.getTargetData(r, e).next((a) =>
              a
                ? ((i = a), W.resolve(i))
                : t.Vs.allocateTargetId(r).next(
                    (l) => (
                      (i = new Oc(e, l, 0, r.currentSequenceNumber)),
                      t.Vs.addTargetData(r, i).next(() => i)
                    )
                  )
            );
          })
          .then((r) => {
            const i = t.$i.get(r.targetId);
            return (
              (null === i ||
                r.snapshotVersion.compareTo(i.snapshotVersion) > 0) &&
                ((t.$i = t.$i.insert(r.targetId, r)), t.Bi.set(e, r.targetId)),
              r
            );
          });
      }
      function wm(n, e, t) {
        return lM.apply(this, arguments);
      }
      function lM() {
        return (
          (lM = (0, Te.Z)(function* (n, e, t) {
            const r = gt(n),
              i = r.$i.get(e),
              a = t ? "readwrite" : "readwrite-primary";
            try {
              t ||
                (yield r.persistence.runTransaction("Release target", a, (l) =>
                  r.persistence.referenceDelegate.removeTarget(l, i)
                ));
            } catch (l) {
              if (!nn(l)) throw l;
              Je(
                "LocalStore",
                `Failed to update sequence numbers for target ${e}: ${l}`
              );
            }
            (r.$i = r.$i.remove(e)), r.Bi.delete(i.target);
          })),
          lM.apply(this, arguments)
        );
      }
      function Gb(n, e, t) {
        const r = gt(n);
        let i = Kt.min(),
          a = _n();
        return r.persistence.runTransaction("Execute query", "readonly", (l) =>
          (function (h, m, v) {
            const b = gt(h),
              D = b.Bi.get(v);
            return void 0 !== D
              ? W.resolve(b.$i.get(D))
              : b.Vs.getTargetData(m, v);
          })(r, l, lo(e))
            .next((h) => {
              if (h)
                return (
                  (i = h.lastLimboFreeSnapshotVersion),
                  r.Vs.getMatchingKeysForTargetId(l, h.targetId).next((m) => {
                    a = m;
                  })
                );
            })
            .next(() =>
              r.Fi.getDocumentsMatchingQuery(
                l,
                e,
                t ? i : Kt.min(),
                t ? a : _n()
              )
            )
            .next((h) => (aF(r, jk(e), h), { documents: h, ji: a }))
        );
      }
      function sF(n, e) {
        const t = gt(n),
          r = gt(t.Vs),
          i = t.$i.get(e);
        return i
          ? Promise.resolve(i.target)
          : t.persistence.runTransaction("Get target data", "readonly", (a) =>
              r.te(a, e).next((l) => (l ? l.target : null))
            );
      }
      function oF(n, e) {
        const t = gt(n),
          r = t.Li.get(e) || Kt.min();
        return t.persistence
          .runTransaction("Get new document changes", "readonly", (i) =>
            t.Ui.getAllFromCollectionGroup(
              i,
              e,
              C(r, -1),
              Number.MAX_SAFE_INTEGER
            )
          )
          .then((i) => (aF(t, e, i), i));
      }
      function aF(n, e, t) {
        let r = Kt.min();
        t.forEach((i, a) => {
          a.readTime.compareTo(r) > 0 && (r = a.readTime);
        }),
          n.Li.set(e, r);
      }
      function cM() {
        return (
          (cM = (0, Te.Z)(function* (n, e, t, r) {
            const i = gt(n);
            let a = _n(),
              l = us();
            for (const v of t) {
              const b = e.Wi(v.metadata.name);
              v.document && (a = a.add(b));
              const D = e.zi(v);
              D.setReadTime(e.Hi(v.metadata.readTime)), (l = l.insert(b, D));
            }
            const h = i.Ui.newChangeBuffer({ trackRemovals: !0 }),
              m = yield Em(
                i,
                ((v = r), lo(cm(An.fromString(`__bundle__/docs/${v}`))))
              );
            var v;
            return i.persistence.runTransaction(
              "Apply bundle documents",
              "readwrite",
              (v) =>
                iF(v, h, l)
                  .next((b) => (h.apply(v), b))
                  .next((b) =>
                    i.Vs.removeMatchingKeysForTargetId(v, m.targetId)
                      .next(() => i.Vs.addMatchingKeys(v, a, m.targetId))
                      .next(() =>
                        i.localDocuments.getLocalViewOfDocuments(v, b.Gi, b.Qi)
                      )
                      .next(() => b.Gi)
                  )
            );
          })),
          cM.apply(this, arguments)
        );
      }
      function Jj(n, e) {
        return dM.apply(this, arguments);
      }
      function dM() {
        return (
          (dM = (0, Te.Z)(function* (n, e, t = _n()) {
            const r = yield Em(n, lo(eM(e.bundledQuery))),
              i = gt(n);
            return i.persistence.runTransaction(
              "Save named query",
              "readwrite",
              (a) => {
                const l = ni(e.readTime);
                if (r.snapshotVersion.compareTo(l) >= 0)
                  return i.Ds.saveNamedQuery(a, e);
                const h = r.withResumeToken(Kr.EMPTY_BYTE_STRING, l);
                return (
                  (i.$i = i.$i.insert(h.targetId, h)),
                  i.Vs.updateTargetData(a, h)
                    .next(() =>
                      i.Vs.removeMatchingKeysForTargetId(a, r.targetId)
                    )
                    .next(() => i.Vs.addMatchingKeys(a, t, r.targetId))
                    .next(() => i.Ds.saveNamedQuery(a, e))
                );
              }
            );
          })),
          dM.apply(this, arguments)
        );
      }
      function uF(n, e) {
        return `firestore_clients_${n}_${e}`;
      }
      function lF(n, e, t) {
        let r = `firestore_mutations_${n}_${t}`;
        return e.isAuthenticated() && (r += `_${e.uid}`), r;
      }
      function hM(n, e) {
        return `firestore_targets_${n}_${e}`;
      }
      class Wb {
        constructor(e, t, r, i) {
          (this.user = e),
            (this.batchId = t),
            (this.state = r),
            (this.error = i);
        }
        static Ji(e, t, r) {
          const i = JSON.parse(r);
          let a,
            l =
              "object" == typeof i &&
              -1 !== ["pending", "acknowledged", "rejected"].indexOf(i.state) &&
              (void 0 === i.error || "object" == typeof i.error);
          return (
            l &&
              i.error &&
              ((l =
                "string" == typeof i.error.message &&
                "string" == typeof i.error.code),
              l && (a = new Ge(i.error.code, i.error.message))),
            l
              ? new Wb(e, t, i.state, a)
              : (_r(
                  "SharedClientState",
                  `Failed to parse mutation state for ID '${t}': ${r}`
                ),
                null)
          );
        }
        Yi() {
          const e = { state: this.state, updateTimeMs: Date.now() };
          return (
            this.error &&
              (e.error = {
                code: this.error.code,
                message: this.error.message,
              }),
            JSON.stringify(e)
          );
        }
      }
      class pw {
        constructor(e, t, r) {
          (this.targetId = e), (this.state = t), (this.error = r);
        }
        static Ji(e, t) {
          const r = JSON.parse(t);
          let i,
            a =
              "object" == typeof r &&
              -1 !== ["not-current", "current", "rejected"].indexOf(r.state) &&
              (void 0 === r.error || "object" == typeof r.error);
          return (
            a &&
              r.error &&
              ((a =
                "string" == typeof r.error.message &&
                "string" == typeof r.error.code),
              a && (i = new Ge(r.error.code, r.error.message))),
            a
              ? new pw(e, r.state, i)
              : (_r(
                  "SharedClientState",
                  `Failed to parse target state for ID '${e}': ${t}`
                ),
                null)
          );
        }
        Yi() {
          const e = { state: this.state, updateTimeMs: Date.now() };
          return (
            this.error &&
              (e.error = {
                code: this.error.code,
                message: this.error.message,
              }),
            JSON.stringify(e)
          );
        }
      }
      class zb {
        constructor(e, t) {
          (this.clientId = e), (this.activeTargetIds = t);
        }
        static Ji(e, t) {
          const r = JSON.parse(t);
          let i = "object" == typeof r && r.activeTargetIds instanceof Array,
            a = Nb();
          for (let l = 0; i && l < r.activeTargetIds.length; ++l)
            (i = bk(r.activeTargetIds[l])), (a = a.add(r.activeTargetIds[l]));
          return i
            ? new zb(e, a)
            : (_r(
                "SharedClientState",
                `Failed to parse client data for instance '${e}': ${t}`
              ),
              null);
        }
      }
      class fM {
        constructor(e, t) {
          (this.clientId = e), (this.onlineState = t);
        }
        static Ji(e) {
          const t = JSON.parse(e);
          return "object" == typeof t &&
            -1 !== ["Unknown", "Online", "Offline"].indexOf(t.onlineState) &&
            "string" == typeof t.clientId
            ? new fM(t.clientId, t.onlineState)
            : (_r("SharedClientState", `Failed to parse online state: ${e}`),
              null);
        }
      }
      class pM {
        constructor() {
          this.activeTargetIds = Nb();
        }
        Xi(e) {
          this.activeTargetIds = this.activeTargetIds.add(e);
        }
        Zi(e) {
          this.activeTargetIds = this.activeTargetIds.delete(e);
        }
        Yi() {
          const e = {
            activeTargetIds: this.activeTargetIds.toArray(),
            updateTimeMs: Date.now(),
          };
          return JSON.stringify(e);
        }
      }
      class gM {
        constructor(e, t, r, i, a) {
          (this.window = e),
            (this.js = t),
            (this.persistenceKey = r),
            (this.tr = i),
            (this.syncEngine = null),
            (this.onlineStateHandler = null),
            (this.sequenceNumberHandler = null),
            (this.er = this.nr.bind(this)),
            (this.sr = new tr(un)),
            (this.started = !1),
            (this.ir = []);
          const l = r.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
          (this.storage = this.window.localStorage),
            (this.currentUser = a),
            (this.rr = uF(this.persistenceKey, this.tr)),
            (this.ur = `firestore_sequence_number_${this.persistenceKey}`),
            (this.sr = this.sr.insert(this.tr, new pM())),
            (this.cr = new RegExp(`^firestore_clients_${l}_([^_]*)$`)),
            (this.ar = new RegExp(
              `^firestore_mutations_${l}_(\\d+)(?:_(.*))?$`
            )),
            (this.hr = new RegExp(`^firestore_targets_${l}_(\\d+)$`)),
            (this.lr = `firestore_online_state_${this.persistenceKey}`),
            (this.dr = (function (h) {
              return `firestore_bundle_loaded_v2_${h}`;
            })(this.persistenceKey)),
            this.window.addEventListener("storage", this.er);
        }
        static V(e) {
          return !(!e || !e.localStorage);
        }
        start() {
          var e = this;
          return (0, Te.Z)(function* () {
            const t = yield e.syncEngine.Ri();
            for (const i of t) {
              if (i === e.tr) continue;
              const a = e.getItem(uF(e.persistenceKey, i));
              if (a) {
                const l = zb.Ji(i, a);
                l && (e.sr = e.sr.insert(l.clientId, l));
              }
            }
            e._r();
            const r = e.storage.getItem(e.lr);
            if (r) {
              const i = e.wr(r);
              i && e.mr(i);
            }
            for (const i of e.ir) e.nr(i);
            (e.ir = []),
              e.window.addEventListener("pagehide", () => e.shutdown()),
              (e.started = !0);
          })();
        }
        writeSequenceNumber(e) {
          this.setItem(this.ur, JSON.stringify(e));
        }
        getAllActiveQueryTargets() {
          return this.gr(this.sr);
        }
        isActiveQueryTarget(e) {
          let t = !1;
          return (
            this.sr.forEach((r, i) => {
              i.activeTargetIds.has(e) && (t = !0);
            }),
            t
          );
        }
        addPendingMutation(e) {
          this.yr(e, "pending");
        }
        updateMutationState(e, t, r) {
          this.yr(e, t, r), this.pr(e);
        }
        addLocalQueryTarget(e) {
          let t = "not-current";
          if (this.isActiveQueryTarget(e)) {
            const r = this.storage.getItem(hM(this.persistenceKey, e));
            if (r) {
              const i = pw.Ji(e, r);
              i && (t = i.state);
            }
          }
          return this.Ir.Xi(e), this._r(), t;
        }
        removeLocalQueryTarget(e) {
          this.Ir.Zi(e), this._r();
        }
        isLocalQueryTarget(e) {
          return this.Ir.activeTargetIds.has(e);
        }
        clearQueryState(e) {
          this.removeItem(hM(this.persistenceKey, e));
        }
        updateQueryState(e, t, r) {
          this.Tr(e, t, r);
        }
        handleUserChange(e, t, r) {
          t.forEach((i) => {
            this.pr(i);
          }),
            (this.currentUser = e),
            r.forEach((i) => {
              this.addPendingMutation(i);
            });
        }
        setOnlineState(e) {
          this.Er(e);
        }
        notifyBundleLoaded(e) {
          this.Ar(e);
        }
        shutdown() {
          this.started &&
            (this.window.removeEventListener("storage", this.er),
            this.removeItem(this.rr),
            (this.started = !1));
        }
        getItem(e) {
          const t = this.storage.getItem(e);
          return Je("SharedClientState", "READ", e, t), t;
        }
        setItem(e, t) {
          Je("SharedClientState", "SET", e, t), this.storage.setItem(e, t);
        }
        removeItem(e) {
          Je("SharedClientState", "REMOVE", e), this.storage.removeItem(e);
        }
        nr(e) {
          var t = this;
          const r = e;
          if (r.storageArea === this.storage) {
            if (
              (Je("SharedClientState", "EVENT", r.key, r.newValue),
              r.key === this.rr)
            )
              return void _r(
                "Received WebStorage notification for local change. Another client might have garbage-collected our state"
              );
            this.js.enqueueRetryable(
              (0, Te.Z)(function* () {
                if (t.started) {
                  if (null !== r.key)
                    if (t.cr.test(r.key)) {
                      if (null == r.newValue) {
                        const i = t.Rr(r.key);
                        return t.br(i, null);
                      }
                      {
                        const i = t.Pr(r.key, r.newValue);
                        if (i) return t.br(i.clientId, i);
                      }
                    } else if (t.ar.test(r.key)) {
                      if (null !== r.newValue) {
                        const i = t.vr(r.key, r.newValue);
                        if (i) return t.Vr(i);
                      }
                    } else if (t.hr.test(r.key)) {
                      if (null !== r.newValue) {
                        const i = t.Sr(r.key, r.newValue);
                        if (i) return t.Dr(i);
                      }
                    } else if (r.key === t.lr) {
                      if (null !== r.newValue) {
                        const i = t.wr(r.newValue);
                        if (i) return t.mr(i);
                      }
                    } else if (r.key === t.ur) {
                      const i = (function (a) {
                        let l = ti.ot;
                        if (null != a)
                          try {
                            const h = JSON.parse(a);
                            Wt("number" == typeof h), (l = h);
                          } catch (h) {
                            _r(
                              "SharedClientState",
                              "Failed to read sequence number from WebStorage",
                              h
                            );
                          }
                        return l;
                      })(r.newValue);
                      i !== ti.ot && t.sequenceNumberHandler(i);
                    } else if (r.key === t.dr) {
                      const i = t.Cr(r.newValue);
                      yield Promise.all(i.map((a) => t.syncEngine.Nr(a)));
                    }
                } else t.ir.push(r);
              })
            );
          }
        }
        get Ir() {
          return this.sr.get(this.tr);
        }
        _r() {
          this.setItem(this.rr, this.Ir.Yi());
        }
        yr(e, t, r) {
          const i = new Wb(this.currentUser, e, t, r),
            a = lF(this.persistenceKey, this.currentUser, e);
          this.setItem(a, i.Yi());
        }
        pr(e) {
          const t = lF(this.persistenceKey, this.currentUser, e);
          this.removeItem(t);
        }
        Er(e) {
          this.storage.setItem(
            this.lr,
            JSON.stringify({ clientId: this.tr, onlineState: e })
          );
        }
        Tr(e, t, r) {
          const i = hM(this.persistenceKey, e),
            a = new pw(e, t, r);
          this.setItem(i, a.Yi());
        }
        Ar(e) {
          const t = JSON.stringify(Array.from(e));
          this.setItem(this.dr, t);
        }
        Rr(e) {
          const t = this.cr.exec(e);
          return t ? t[1] : null;
        }
        Pr(e, t) {
          const r = this.Rr(e);
          return zb.Ji(r, t);
        }
        vr(e, t) {
          const r = this.ar.exec(e),
            i = Number(r[1]);
          return Wb.Ji(new Pr(void 0 !== r[2] ? r[2] : null), i, t);
        }
        Sr(e, t) {
          const r = this.hr.exec(e),
            i = Number(r[1]);
          return pw.Ji(i, t);
        }
        wr(e) {
          return fM.Ji(e);
        }
        Cr(e) {
          return JSON.parse(e);
        }
        Vr(e) {
          var t = this;
          return (0, Te.Z)(function* () {
            if (e.user.uid === t.currentUser.uid)
              return t.syncEngine.kr(e.batchId, e.state, e.error);
            Je(
              "SharedClientState",
              `Ignoring mutation for non-active user ${e.user.uid}`
            );
          })();
        }
        Dr(e) {
          return this.syncEngine.Or(e.targetId, e.state, e.error);
        }
        br(e, t) {
          const r = t ? this.sr.insert(e, t) : this.sr.remove(e),
            i = this.gr(this.sr),
            a = this.gr(r),
            l = [],
            h = [];
          return (
            a.forEach((m) => {
              i.has(m) || l.push(m);
            }),
            i.forEach((m) => {
              a.has(m) || h.push(m);
            }),
            this.syncEngine.Mr(l, h).then(() => {
              this.sr = r;
            })
          );
        }
        mr(e) {
          this.sr.get(e.clientId) && this.onlineStateHandler(e.onlineState);
        }
        gr(e) {
          let t = Nb();
          return (
            e.forEach((r, i) => {
              t = t.unionWith(i.activeTargetIds);
            }),
            t
          );
        }
      }
      class cF {
        constructor() {
          (this.Fr = new pM()),
            (this.$r = {}),
            (this.onlineStateHandler = null),
            (this.sequenceNumberHandler = null);
        }
        addPendingMutation(e) {}
        updateMutationState(e, t, r) {}
        addLocalQueryTarget(e) {
          return this.Fr.Xi(e), this.$r[e] || "not-current";
        }
        updateQueryState(e, t, r) {
          this.$r[e] = t;
        }
        removeLocalQueryTarget(e) {
          this.Fr.Zi(e);
        }
        isLocalQueryTarget(e) {
          return this.Fr.activeTargetIds.has(e);
        }
        clearQueryState(e) {
          delete this.$r[e];
        }
        getAllActiveQueryTargets() {
          return this.Fr.activeTargetIds;
        }
        isActiveQueryTarget(e) {
          return this.Fr.activeTargetIds.has(e);
        }
        start() {
          return (this.Fr = new pM()), Promise.resolve();
        }
        handleUserChange(e, t, r) {}
        setOnlineState(e) {}
        shutdown() {}
        writeSequenceNumber(e) {}
        notifyBundleLoaded(e) {}
      }
      class Xj {
        Br(e) {}
        shutdown() {}
      }
      class dF {
        constructor() {
          (this.Lr = () => this.Ur()),
            (this.qr = () => this.Kr()),
            (this.Gr = []),
            this.Qr();
        }
        Br(e) {
          this.Gr.push(e);
        }
        shutdown() {
          window.removeEventListener("online", this.Lr),
            window.removeEventListener("offline", this.qr);
        }
        Qr() {
          window.addEventListener("online", this.Lr),
            window.addEventListener("offline", this.qr);
        }
        Ur() {
          Je("ConnectivityMonitor", "Network connectivity changed: AVAILABLE");
          for (const e of this.Gr) e(0);
        }
        Kr() {
          Je(
            "ConnectivityMonitor",
            "Network connectivity changed: UNAVAILABLE"
          );
          for (const e of this.Gr) e(1);
        }
        static V() {
          return (
            typeof window < "u" &&
            void 0 !== window.addEventListener &&
            void 0 !== window.removeEventListener
          );
        }
      }
      const e$ = {
        BatchGetDocuments: "batchGet",
        Commit: "commit",
        RunQuery: "runQuery",
      };
      class t$ {
        constructor(e) {
          (this.jr = e.jr), (this.Wr = e.Wr);
        }
        zr(e) {
          this.Hr = e;
        }
        Jr(e) {
          this.Yr = e;
        }
        onMessage(e) {
          this.Xr = e;
        }
        close() {
          this.Wr();
        }
        send(e) {
          this.jr(e);
        }
        Zr() {
          this.Hr();
        }
        eo(e) {
          this.Yr(e);
        }
        no(e) {
          this.Xr(e);
        }
      }
      class n$ extends class {
        constructor(e) {
          (this.databaseInfo = e),
            (this.databaseId = e.databaseId),
            (this.so = (e.ssl ? "https" : "http") + "://" + e.host),
            (this.io =
              "projects/" +
              this.databaseId.projectId +
              "/databases/" +
              this.databaseId.database +
              "/documents");
        }
        ro(e, t, r, i, a) {
          const l = this.oo(e, t);
          Je("RestConnection", "Sending: ", l, r);
          const h = {};
          return (
            this.uo(h, i, a),
            this.co(e, l, h, r).then(
              (m) => (Je("RestConnection", "Received: ", m), m),
              (m) => {
                throw (
                  (Ac(
                    "RestConnection",
                    `${e} failed with error: `,
                    m,
                    "url: ",
                    l,
                    "request:",
                    r
                  ),
                  m)
                );
              }
            )
          );
        }
        ao(e, t, r, i, a, l) {
          return this.ro(e, t, r, i, a);
        }
        uo(e, t, r) {
          (e["X-Goog-Api-Client"] = "gl-js/ fire/" + Sc),
            (e["Content-Type"] = "text/plain"),
            this.databaseInfo.appId &&
              (e["X-Firebase-GMPID"] = this.databaseInfo.appId),
            t && t.headers.forEach((i, a) => (e[a] = i)),
            r && r.headers.forEach((i, a) => (e[a] = i));
        }
        oo(e, t) {
          return `${this.so}/v1/${t}:${e$[e]}`;
        }
      } {
        constructor(e) {
          super(e),
            (this.forceLongPolling = e.forceLongPolling),
            (this.autoDetectLongPolling = e.autoDetectLongPolling),
            (this.useFetchStreams = e.useFetchStreams);
        }
        co(e, t, r, i) {
          return new Promise((a, l) => {
            const h = new _k();
            h.listenOnce(kE.COMPLETE, () => {
              try {
                switch (h.getLastErrorCode()) {
                  case OE.NO_ERROR:
                    const v = h.getResponseJson();
                    Je("Connection", "XHR received:", JSON.stringify(v)), a(v);
                    break;
                  case OE.TIMEOUT:
                    Je("Connection", 'RPC "' + e + '" timed out'),
                      l(new Ge(be.DEADLINE_EXCEEDED, "Request time out"));
                    break;
                  case OE.HTTP_ERROR:
                    const b = h.getStatus();
                    if (
                      (Je(
                        "Connection",
                        'RPC "' + e + '" failed with status:',
                        b,
                        "response text:",
                        h.getResponseText()
                      ),
                      b > 0)
                    ) {
                      const D = h.getResponseJson().error;
                      if (D && D.status && D.message) {
                        const R = (function (F) {
                          const B = F.toLowerCase().replace(/_/g, "-");
                          return Object.values(be).indexOf(B) >= 0
                            ? B
                            : be.UNKNOWN;
                        })(D.status);
                        l(new Ge(R, D.message));
                      } else
                        l(
                          new Ge(
                            be.UNKNOWN,
                            "Server responded with status " + h.getStatus()
                          )
                        );
                    } else l(new Ge(be.UNAVAILABLE, "Connection failed."));
                    break;
                  default:
                    Ct();
                }
              } finally {
                Je("Connection", 'RPC "' + e + '" completed.');
              }
            });
            const m = JSON.stringify(i);
            h.send(t, "POST", m, r, 15);
          });
        }
        ho(e, t, r) {
          const i = [
              this.so,
              "/",
              "google.firestore.v1.Firestore",
              "/",
              e,
              "/channel",
            ],
            a = NE(),
            l = PE(),
            h = {
              httpSessionIdParam: "gsessionid",
              initMessageHeaders: {},
              messageUrlParams: {
                database: `projects/${this.databaseId.projectId}/databases/${this.databaseId.database}`,
              },
              sendRawJson: !0,
              supportsCrossDomainXhr: !0,
              internalChannelParams: { forwardChannelRequestTimeoutMs: 6e5 },
              forceLongPolling: this.forceLongPolling,
              detectBufferingProxy: this.autoDetectLongPolling,
            };
          this.useFetchStreams && (h.xmlHttpFactory = new mk({})),
            this.uo(h.initMessageHeaders, t, r),
            (0, ee.uI)() ||
              (0, ee.b$)() ||
              (0, ee.d)() ||
              (0, ee.w1)() ||
              (0, ee.Mn)() ||
              (0, ee.ru)() ||
              (h.httpHeadersOverwriteParam = "$httpHeaders");
          const m = i.join("");
          Je("Connection", "Creating WebChannel: " + m, h);
          const v = a.createWebChannel(m, h);
          let b = !1,
            D = !1;
          const R = new t$({
              jr: (B) => {
                D
                  ? Je(
                      "Connection",
                      "Not sending because WebChannel is closed:",
                      B
                    )
                  : (b ||
                      (Je("Connection", "Opening WebChannel transport."),
                      v.open(),
                      (b = !0)),
                    Je("Connection", "WebChannel sending:", B),
                    v.send(B));
              },
              Wr: () => v.close(),
            }),
            F = (B, le, Ee) => {
              B.listen(le, (dt) => {
                try {
                  Ee(dt);
                } catch (It) {
                  setTimeout(() => {
                    throw It;
                  }, 0);
                }
              });
            };
          return (
            F(v, LE.EventType.OPEN, () => {
              D || Je("Connection", "WebChannel transport opened.");
            }),
            F(v, LE.EventType.CLOSE, () => {
              D ||
                ((D = !0),
                Je("Connection", "WebChannel transport closed"),
                R.eo());
            }),
            F(v, LE.EventType.ERROR, (B) => {
              D ||
                ((D = !0),
                Ac("Connection", "WebChannel transport errored:", B),
                R.eo(
                  new Ge(be.UNAVAILABLE, "The operation could not be completed")
                ));
            }),
            F(v, LE.EventType.MESSAGE, (B) => {
              var le;
              if (!D) {
                const Ee = B.data[0];
                Wt(!!Ee);
                const dt = Ee,
                  It =
                    dt.error ||
                    (null === (le = dt[0]) || void 0 === le
                      ? void 0
                      : le.error);
                if (It) {
                  Je("Connection", "WebChannel received error:", It);
                  const Lt = It.status;
                  let St = (function (Cn) {
                      const jr = Ur[Cn];
                      if (void 0 !== jr) return r1(jr);
                    })(Lt),
                    rn = It.message;
                  void 0 === St &&
                    ((St = be.INTERNAL),
                    (rn =
                      "Unknown error status: " +
                      Lt +
                      " with message " +
                      It.message)),
                    (D = !0),
                    R.eo(new Ge(St, rn)),
                    v.close();
                } else Je("Connection", "WebChannel received:", Ee), R.no(Ee);
              }
            }),
            F(l, FE.STAT_EVENT, (B) => {
              B.stat === Zh.PROXY
                ? Je("Connection", "Detected buffering proxy")
                : B.stat === Zh.NOPROXY &&
                  Je("Connection", "Detected no buffering proxy");
            }),
            setTimeout(() => {
              R.Zr();
            }, 0),
            R
          );
        }
      }
      function hF() {
        return typeof window < "u" ? window : null;
      }
      function qb() {
        return typeof document < "u" ? document : null;
      }
      function gw(n) {
        return new q2(n, !0);
      }
      class mM {
        constructor(e, t, r = 1e3, i = 1.5, a = 6e4) {
          (this.js = e),
            (this.timerId = t),
            (this.lo = r),
            (this.fo = i),
            (this._o = a),
            (this.wo = 0),
            (this.mo = null),
            (this.yo = Date.now()),
            this.reset();
        }
        reset() {
          this.wo = 0;
        }
        po() {
          this.wo = this._o;
        }
        Io(e) {
          this.cancel();
          const t = Math.floor(this.wo + this.To()),
            r = Math.max(0, Date.now() - this.yo),
            i = Math.max(0, t - r);
          i > 0 &&
            Je(
              "ExponentialBackoff",
              `Backing off for ${i} ms (base delay: ${this.wo} ms, delay with jitter: ${t} ms, last attempt: ${r} ms ago)`
            ),
            (this.mo = this.js.enqueueAfterDelay(
              this.timerId,
              i,
              () => ((this.yo = Date.now()), e())
            )),
            (this.wo *= this.fo),
            this.wo < this.lo && (this.wo = this.lo),
            this.wo > this._o && (this.wo = this._o);
        }
        Eo() {
          null !== this.mo && (this.mo.skipDelay(), (this.mo = null));
        }
        cancel() {
          null !== this.mo && (this.mo.cancel(), (this.mo = null));
        }
        To() {
          return (Math.random() - 0.5) * this.wo;
        }
      }
      class fF {
        constructor(e, t, r, i, a, l, h, m) {
          (this.js = e),
            (this.Ao = r),
            (this.Ro = i),
            (this.bo = a),
            (this.authCredentialsProvider = l),
            (this.appCheckCredentialsProvider = h),
            (this.listener = m),
            (this.state = 0),
            (this.Po = 0),
            (this.vo = null),
            (this.Vo = null),
            (this.stream = null),
            (this.So = new mM(e, t));
        }
        Do() {
          return 1 === this.state || 5 === this.state || this.Co();
        }
        Co() {
          return 2 === this.state || 3 === this.state;
        }
        start() {
          4 !== this.state ? this.auth() : this.xo();
        }
        stop() {
          var e = this;
          return (0, Te.Z)(function* () {
            e.Do() && (yield e.close(0));
          })();
        }
        No() {
          (this.state = 0), this.So.reset();
        }
        ko() {
          this.Co() &&
            null === this.vo &&
            (this.vo = this.js.enqueueAfterDelay(this.Ao, 6e4, () =>
              this.Oo()
            ));
        }
        Mo(e) {
          this.Fo(), this.stream.send(e);
        }
        Oo() {
          var e = this;
          return (0, Te.Z)(function* () {
            if (e.Co()) return e.close(0);
          })();
        }
        Fo() {
          this.vo && (this.vo.cancel(), (this.vo = null));
        }
        $o() {
          this.Vo && (this.Vo.cancel(), (this.Vo = null));
        }
        close(e, t) {
          var r = this;
          return (0, Te.Z)(function* () {
            r.Fo(),
              r.$o(),
              r.So.cancel(),
              r.Po++,
              4 !== e
                ? r.So.reset()
                : t && t.code === be.RESOURCE_EXHAUSTED
                ? (_r(t.toString()),
                  _r(
                    "Using maximum backoff delay to prevent overloading the backend."
                  ),
                  r.So.po())
                : t &&
                  t.code === be.UNAUTHENTICATED &&
                  3 !== r.state &&
                  (r.authCredentialsProvider.invalidateToken(),
                  r.appCheckCredentialsProvider.invalidateToken()),
              null !== r.stream &&
                (r.Bo(), r.stream.close(), (r.stream = null)),
              (r.state = e),
              yield r.listener.Jr(t);
          })();
        }
        Bo() {}
        auth() {
          this.state = 1;
          const e = this.Lo(this.Po),
            t = this.Po;
          Promise.all([
            this.authCredentialsProvider.getToken(),
            this.appCheckCredentialsProvider.getToken(),
          ]).then(
            ([r, i]) => {
              this.Po === t && this.Uo(r, i);
            },
            (r) => {
              e(() => {
                const i = new Ge(
                  be.UNKNOWN,
                  "Fetching auth token failed: " + r.message
                );
                return this.qo(i);
              });
            }
          );
        }
        Uo(e, t) {
          const r = this.Lo(this.Po);
          (this.stream = this.Ko(e, t)),
            this.stream.zr(() => {
              r(
                () => (
                  (this.state = 2),
                  (this.Vo = this.js.enqueueAfterDelay(
                    this.Ro,
                    1e4,
                    () => (this.Co() && (this.state = 3), Promise.resolve())
                  )),
                  this.listener.zr()
                )
              );
            }),
            this.stream.Jr((i) => {
              r(() => this.qo(i));
            }),
            this.stream.onMessage((i) => {
              r(() => this.onMessage(i));
            });
        }
        xo() {
          var e = this;
          (this.state = 5),
            this.So.Io(
              (0, Te.Z)(function* () {
                (e.state = 0), e.start();
              })
            );
        }
        qo(e) {
          return (
            Je("PersistentStream", `close with error: ${e}`),
            (this.stream = null),
            this.close(4, e)
          );
        }
        Lo(e) {
          return (t) => {
            this.js.enqueueAndForget(() =>
              this.Po === e
                ? t()
                : (Je(
                    "PersistentStream",
                    "stream callback skipped by getCloseGuardedDispatcher."
                  ),
                  Promise.resolve())
            );
          };
        }
      }
      class r$ extends fF {
        constructor(e, t, r, i, a, l) {
          super(
            e,
            "listen_stream_connection_backoff",
            "listen_stream_idle",
            "health_check_timeout",
            t,
            r,
            i,
            l
          ),
            (this.wt = a);
        }
        Ko(e, t) {
          return this.bo.ho("Listen", e, t);
        }
        onMessage(e) {
          this.So.reset();
          const t = (function Y2(n, e) {
              let t;
              if ("targetChange" in e) {
                const r =
                    "NO_CHANGE" ===
                    (m = e.targetChange.targetChangeType || "NO_CHANGE")
                      ? 0
                      : "ADD" === m
                      ? 1
                      : "REMOVE" === m
                      ? 2
                      : "CURRENT" === m
                      ? 3
                      : "RESET" === m
                      ? 4
                      : Ct(),
                  i = e.targetChange.targetIds || [],
                  a = (function (m, v) {
                    return m.dt
                      ? (Wt(void 0 === v || "string" == typeof v),
                        Kr.fromBase64String(v || ""))
                      : (Wt(void 0 === v || v instanceof Uint8Array),
                        Kr.fromUint8Array(v || new Uint8Array()));
                  })(n, e.targetChange.resumeToken),
                  l = e.targetChange.cause,
                  h =
                    l &&
                    (function (m) {
                      const v = void 0 === m.code ? be.UNKNOWN : r1(m.code);
                      return new Ge(v, m.message || "");
                    })(l);
                t = new u1(r, i, a, h || null);
              } else if ("documentChange" in e) {
                const r = e.documentChange,
                  i = ka(n, r.document.name),
                  a = ni(r.document.updateTime),
                  l = new wi({ mapValue: { fields: r.document.fields } }),
                  h = nr.newFoundDocument(i, a, l);
                t = new Pb(
                  r.targetIds || [],
                  r.removedTargetIds || [],
                  h.key,
                  h
                );
              } else if ("documentDelete" in e) {
                const r = e.documentDelete,
                  i = ka(n, r.document),
                  a = r.readTime ? ni(r.readTime) : Kt.min(),
                  l = nr.newNoDocument(i, a);
                t = new Pb([], r.removedTargetIds || [], l.key, l);
              } else if ("documentRemove" in e) {
                const r = e.documentRemove,
                  i = ka(n, r.document);
                t = new Pb([], r.removedTargetIds || [], i, null);
              } else {
                if (!("filter" in e)) return Ct();
                {
                  const r = e.filter,
                    a = new U2(r.count || 0);
                  t = new a1(r.targetId, a);
                }
              }
              var m;
              return t;
            })(this.wt, e),
            r = (function (i) {
              if (!("targetChange" in i)) return Kt.min();
              const a = i.targetChange;
              return a.targetIds && a.targetIds.length
                ? Kt.min()
                : a.readTime
                ? ni(a.readTime)
                : Kt.min();
            })(e);
          return this.listener.Go(t, r);
        }
        Qo(e) {
          const t = {};
          (t.database = sw(this.wt)),
            (t.addTarget = (function (i, a) {
              let l;
              const h = a.target;
              return (
                (l = Sb(h) ? { documents: y1(i, h) } : { query: v1(i, h) }),
                (l.targetId = a.targetId),
                a.resumeToken.approximateByteSize() > 0
                  ? (l.resumeToken = h1(i, a.resumeToken))
                  : a.snapshotVersion.compareTo(Kt.min()) > 0 &&
                    (l.readTime = rw(i, a.snapshotVersion.toTimestamp())),
                l
              );
            })(this.wt, e));
          const r = (function J2(n, e) {
            const t = (function (r, i) {
              switch (i) {
                case 0:
                  return null;
                case 1:
                  return "existence-filter-mismatch";
                case 2:
                  return "limbo-document";
                default:
                  return Ct();
              }
            })(0, e.purpose);
            return null == t ? null : { "goog-listen-tags": t };
          })(0, e);
          r && (t.labels = r), this.Mo(t);
        }
        jo(e) {
          const t = {};
          (t.database = sw(this.wt)), (t.removeTarget = e), this.Mo(t);
        }
      }
      class i$ extends fF {
        constructor(e, t, r, i, a, l) {
          super(
            e,
            "write_stream_connection_backoff",
            "write_stream_idle",
            "health_check_timeout",
            t,
            r,
            i,
            l
          ),
            (this.wt = a),
            (this.Wo = !1);
        }
        get zo() {
          return this.Wo;
        }
        start() {
          (this.Wo = !1), (this.lastStreamToken = void 0), super.start();
        }
        Bo() {
          this.Wo && this.Ho([]);
        }
        Ko(e, t) {
          return this.bo.ho("Write", e, t);
        }
        onMessage(e) {
          if (
            (Wt(!!e.streamToken),
            (this.lastStreamToken = e.streamToken),
            this.Wo)
          ) {
            this.So.reset();
            const t = (function Q2(n, e) {
                return n && n.length > 0
                  ? (Wt(void 0 !== e),
                    n.map((t) =>
                      (function (r, i) {
                        let a = ni(r.updateTime ? r.updateTime : i);
                        return (
                          a.isEqual(Kt.min()) && (a = ni(i)),
                          new F2(a, r.transformResults || [])
                        );
                      })(t, e)
                    ))
                  : [];
              })(e.writeResults, e.commitTime),
              r = ni(e.commitTime);
            return this.listener.Jo(r, t);
          }
          return (
            Wt(!e.writeResults || 0 === e.writeResults.length),
            (this.Wo = !0),
            this.listener.Yo()
          );
        }
        Xo() {
          const e = {};
          (e.database = sw(this.wt)), this.Mo(e);
        }
        Ho(e) {
          const t = {
            streamToken: this.lastStreamToken,
            writes: e.map((r) => ow(this.wt, r)),
          };
          this.Mo(t);
        }
      }
      class s$ extends class {} {
        constructor(e, t, r, i) {
          super(),
            (this.authCredentials = e),
            (this.appCheckCredentials = t),
            (this.bo = r),
            (this.wt = i),
            (this.Zo = !1);
        }
        tu() {
          if (this.Zo)
            throw new Ge(
              be.FAILED_PRECONDITION,
              "The client has already been terminated."
            );
        }
        ro(e, t, r) {
          return (
            this.tu(),
            Promise.all([
              this.authCredentials.getToken(),
              this.appCheckCredentials.getToken(),
            ])
              .then(([i, a]) => this.bo.ro(e, t, r, i, a))
              .catch((i) => {
                throw "FirebaseError" === i.name
                  ? (i.code === be.UNAUTHENTICATED &&
                      (this.authCredentials.invalidateToken(),
                      this.appCheckCredentials.invalidateToken()),
                    i)
                  : new Ge(be.UNKNOWN, i.toString());
              })
          );
        }
        ao(e, t, r, i) {
          return (
            this.tu(),
            Promise.all([
              this.authCredentials.getToken(),
              this.appCheckCredentials.getToken(),
            ])
              .then(([a, l]) => this.bo.ao(e, t, r, a, l, i))
              .catch((a) => {
                throw "FirebaseError" === a.name
                  ? (a.code === be.UNAUTHENTICATED &&
                      (this.authCredentials.invalidateToken(),
                      this.appCheckCredentials.invalidateToken()),
                    a)
                  : new Ge(be.UNKNOWN, a.toString());
              })
          );
        }
        terminate() {
          this.Zo = !0;
        }
      }
      class o$ {
        constructor(e, t) {
          (this.asyncQueue = e),
            (this.onlineStateHandler = t),
            (this.state = "Unknown"),
            (this.eu = 0),
            (this.nu = null),
            (this.su = !0);
        }
        iu() {
          0 === this.eu &&
            (this.ru("Unknown"),
            (this.nu = this.asyncQueue.enqueueAfterDelay(
              "online_state_timeout",
              1e4,
              () => (
                (this.nu = null),
                this.ou("Backend didn't respond within 10 seconds."),
                this.ru("Offline"),
                Promise.resolve()
              )
            )));
        }
        uu(e) {
          "Online" === this.state
            ? this.ru("Unknown")
            : (this.eu++,
              this.eu >= 1 &&
                (this.cu(),
                this.ou(
                  `Connection failed 1 times. Most recent error: ${e.toString()}`
                ),
                this.ru("Offline")));
        }
        set(e) {
          this.cu(),
            (this.eu = 0),
            "Online" === e && (this.su = !1),
            this.ru(e);
        }
        ru(e) {
          e !== this.state && ((this.state = e), this.onlineStateHandler(e));
        }
        ou(e) {
          const t = `Could not reach Cloud Firestore backend. ${e}\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.`;
          this.su ? (_r(t), (this.su = !1)) : Je("OnlineStateTracker", t);
        }
        cu() {
          null !== this.nu && (this.nu.cancel(), (this.nu = null));
        }
      }
      class a$ {
        constructor(e, t, r, i, a) {
          var l = this;
          (this.localStore = e),
            (this.datastore = t),
            (this.asyncQueue = r),
            (this.remoteSyncer = {}),
            (this.au = []),
            (this.hu = new Map()),
            (this.lu = new Set()),
            (this.fu = []),
            (this.du = a),
            this.du.Br((h) => {
              r.enqueueAndForget(
                (0, Te.Z)(function* () {
                  var m;
                  Lc(l) &&
                    (Je(
                      "RemoteStore",
                      "Restarting streams for network reachability change."
                    ),
                    yield ((m = (0, Te.Z)(function* (v) {
                      const b = gt(v);
                      b.lu.add(4),
                        yield Im(b),
                        b._u.set("Unknown"),
                        b.lu.delete(4),
                        yield mw(b);
                    })),
                    function (v) {
                      return m.apply(this, arguments);
                    })(l));
                })
              );
            }),
            (this._u = new o$(r, i));
        }
      }
      function mw(n) {
        return _M.apply(this, arguments);
      }
      function _M() {
        return (
          (_M = (0, Te.Z)(function* (n) {
            if (Lc(n)) for (const e of n.fu) yield e(!0);
          })),
          _M.apply(this, arguments)
        );
      }
      function Im(n) {
        return yM.apply(this, arguments);
      }
      function yM() {
        return (
          (yM = (0, Te.Z)(function* (n) {
            for (const e of n.fu) yield e(!1);
          })),
          yM.apply(this, arguments)
        );
      }
      function Kb(n, e) {
        const t = gt(n);
        t.hu.has(e.targetId) ||
          (t.hu.set(e.targetId, e), wM(t) ? EM(t) : bm(t).Co() && vM(t, e));
      }
      function _w(n, e) {
        const t = gt(n),
          r = bm(t);
        t.hu.delete(e),
          r.Co() && pF(t, e),
          0 === t.hu.size && (r.Co() ? r.ko() : Lc(t) && t._u.set("Unknown"));
      }
      function vM(n, e) {
        n.wu.Nt(e.targetId), bm(n).Qo(e);
      }
      function pF(n, e) {
        n.wu.Nt(e), bm(n).jo(e);
      }
      function EM(n) {
        (n.wu = new G2({
          getRemoteKeysForTarget: (e) =>
            n.remoteSyncer.getRemoteKeysForTarget(e),
          te: (e) => n.hu.get(e) || null,
        })),
          bm(n).start(),
          n._u.iu();
      }
      function wM(n) {
        return Lc(n) && !bm(n).Do() && n.hu.size > 0;
      }
      function Lc(n) {
        return 0 === gt(n).lu.size;
      }
      function gF(n) {
        n.wu = void 0;
      }
      function u$(n) {
        return IM.apply(this, arguments);
      }
      function IM() {
        return (
          (IM = (0, Te.Z)(function* (n) {
            n.hu.forEach((e, t) => {
              vM(n, e);
            });
          })),
          IM.apply(this, arguments)
        );
      }
      function l$(n, e) {
        return CM.apply(this, arguments);
      }
      function CM() {
        return (
          (CM = (0, Te.Z)(function* (n, e) {
            gF(n), wM(n) ? (n._u.uu(e), EM(n)) : n._u.set("Unknown");
          })),
          CM.apply(this, arguments)
        );
      }
      function c$(n, e, t) {
        return bM.apply(this, arguments);
      }
      function bM() {
        return (
          (bM = (0, Te.Z)(function* (n, e, t) {
            if (
              (n._u.set("Online"), e instanceof u1 && 2 === e.state && e.cause)
            )
              try {
                yield ((r = (0, Te.Z)(function* (i, a) {
                  const l = a.cause;
                  for (const h of a.targetIds)
                    i.hu.has(h) &&
                      (yield i.remoteSyncer.rejectListen(h, l),
                      i.hu.delete(h),
                      i.wu.removeTarget(h));
                })),
                function (i, a) {
                  return r.apply(this, arguments);
                })(n, e);
              } catch (r) {
                Je(
                  "RemoteStore",
                  "Failed to remove targets %s: %s ",
                  e.targetIds.join(","),
                  r
                ),
                  yield Zb(n, r);
              }
            else if (
              (e instanceof Pb
                ? n.wu.Ut(e)
                : e instanceof a1
                ? n.wu.zt(e)
                : n.wu.Gt(e),
              !t.isEqual(Kt.min()))
            )
              try {
                const r = yield rF(n.localStore);
                t.compareTo(r) >= 0 &&
                  (yield (function (i, a) {
                    const l = i.wu.Yt(a);
                    return (
                      l.targetChanges.forEach((h, m) => {
                        if (h.resumeToken.approximateByteSize() > 0) {
                          const v = i.hu.get(m);
                          v && i.hu.set(m, v.withResumeToken(h.resumeToken, a));
                        }
                      }),
                      l.targetMismatches.forEach((h) => {
                        const m = i.hu.get(h);
                        if (!m) return;
                        i.hu.set(
                          h,
                          m.withResumeToken(
                            Kr.EMPTY_BYTE_STRING,
                            m.snapshotVersion
                          )
                        ),
                          pF(i, h);
                        const v = new Oc(m.target, h, 1, m.sequenceNumber);
                        vM(i, v);
                      }),
                      i.remoteSyncer.applyRemoteEvent(l)
                    );
                  })(n, t));
              } catch (r) {
                Je("RemoteStore", "Failed to raise snapshot:", r),
                  yield Zb(n, r);
              }
            var r;
          })),
          bM.apply(this, arguments)
        );
      }
      function Zb(n, e, t) {
        return DM.apply(this, arguments);
      }
      function DM() {
        return (
          (DM = (0, Te.Z)(function* (n, e, t) {
            if (!nn(e)) throw e;
            n.lu.add(1),
              yield Im(n),
              n._u.set("Offline"),
              t || (t = () => rF(n.localStore)),
              n.asyncQueue.enqueueRetryable(
                (0, Te.Z)(function* () {
                  Je("RemoteStore", "Retrying IndexedDB access"),
                    yield t(),
                    n.lu.delete(1),
                    yield mw(n);
                })
              );
          })),
          DM.apply(this, arguments)
        );
      }
      function mF(n, e) {
        return e().catch((t) => Zb(n, t, e));
      }
      function Cm(n) {
        return TM.apply(this, arguments);
      }
      function TM() {
        return (
          (TM = (0, Te.Z)(function* (n) {
            const e = gt(n),
              t = Vc(e);
            let r = e.au.length > 0 ? e.au[e.au.length - 1].batchId : -1;
            for (; d$(e); )
              try {
                const i = yield Yj(e.localStore, r);
                if (null === i) {
                  0 === e.au.length && t.ko();
                  break;
                }
                (r = i.batchId), h$(e, i);
              } catch (i) {
                yield Zb(e, i);
              }
            _F(e) && yF(e);
          })),
          TM.apply(this, arguments)
        );
      }
      function d$(n) {
        return Lc(n) && n.au.length < 10;
      }
      function h$(n, e) {
        n.au.push(e);
        const t = Vc(n);
        t.Co() && t.zo && t.Ho(e.mutations);
      }
      function _F(n) {
        return Lc(n) && !Vc(n).Do() && n.au.length > 0;
      }
      function yF(n) {
        Vc(n).start();
      }
      function f$(n) {
        return SM.apply(this, arguments);
      }
      function SM() {
        return (
          (SM = (0, Te.Z)(function* (n) {
            Vc(n).Xo();
          })),
          SM.apply(this, arguments)
        );
      }
      function p$(n) {
        return AM.apply(this, arguments);
      }
      function AM() {
        return (
          (AM = (0, Te.Z)(function* (n) {
            const e = Vc(n);
            for (const t of n.au) e.Ho(t.mutations);
          })),
          AM.apply(this, arguments)
        );
      }
      function g$(n, e, t) {
        return RM.apply(this, arguments);
      }
      function RM() {
        return (
          (RM = (0, Te.Z)(function* (n, e, t) {
            const r = n.au.shift(),
              i = JR.from(r, e, t);
            yield mF(n, () => n.remoteSyncer.applySuccessfulWrite(i)),
              yield Cm(n);
          })),
          RM.apply(this, arguments)
        );
      }
      function m$(n, e) {
        return MM.apply(this, arguments);
      }
      function MM() {
        return (
          (MM = (0, Te.Z)(function* (n, e) {
            var t;
            e &&
              Vc(n).zo &&
              (yield ((t = (0, Te.Z)(function* (r, i) {
                if (n1((a = i.code)) && a !== be.ABORTED) {
                  const l = r.au.shift();
                  Vc(r).No(),
                    yield mF(r, () =>
                      r.remoteSyncer.rejectFailedWrite(l.batchId, i)
                    ),
                    yield Cm(r);
                }
                var a;
              })),
              function (r, i) {
                return t.apply(this, arguments);
              })(n, e)),
              _F(n) && yF(n);
          })),
          MM.apply(this, arguments)
        );
      }
      function vF(n, e) {
        return xM.apply(this, arguments);
      }
      function xM() {
        return (
          (xM = (0, Te.Z)(function* (n, e) {
            const t = gt(n);
            t.asyncQueue.verifyOperationInProgress(),
              Je("RemoteStore", "RemoteStore received new credentials");
            const r = Lc(t);
            t.lu.add(3),
              yield Im(t),
              r && t._u.set("Unknown"),
              yield t.remoteSyncer.handleCredentialChange(e),
              t.lu.delete(3),
              yield mw(t);
          })),
          xM.apply(this, arguments)
        );
      }
      function NM(n, e) {
        return PM.apply(this, arguments);
      }
      function PM() {
        return (
          (PM = (0, Te.Z)(function* (n, e) {
            const t = gt(n);
            e
              ? (t.lu.delete(2), yield mw(t))
              : e || (t.lu.add(2), yield Im(t), t._u.set("Unknown"));
          })),
          PM.apply(this, arguments)
        );
      }
      function bm(n) {
        return (
          n.mu ||
            ((n.mu = (function (e, t, r) {
              const i = gt(e);
              return (
                i.tu(),
                new r$(
                  t,
                  i.bo,
                  i.authCredentials,
                  i.appCheckCredentials,
                  i.wt,
                  r
                )
              );
            })(n.datastore, n.asyncQueue, {
              zr: u$.bind(null, n),
              Jr: l$.bind(null, n),
              Go: c$.bind(null, n),
            })),
            n.fu.push(
              (function () {
                var e = (0, Te.Z)(function* (t) {
                  t
                    ? (n.mu.No(), wM(n) ? EM(n) : n._u.set("Unknown"))
                    : (yield n.mu.stop(), gF(n));
                });
                return function (t) {
                  return e.apply(this, arguments);
                };
              })()
            )),
          n.mu
        );
      }
      function Vc(n) {
        return (
          n.gu ||
            ((n.gu = (function (e, t, r) {
              const i = gt(e);
              return (
                i.tu(),
                new i$(
                  t,
                  i.bo,
                  i.authCredentials,
                  i.appCheckCredentials,
                  i.wt,
                  r
                )
              );
            })(n.datastore, n.asyncQueue, {
              zr: f$.bind(null, n),
              Jr: m$.bind(null, n),
              Yo: p$.bind(null, n),
              Jo: g$.bind(null, n),
            })),
            n.fu.push(
              (function () {
                var e = (0, Te.Z)(function* (t) {
                  t
                    ? (n.gu.No(), yield Cm(n))
                    : (yield n.gu.stop(),
                      n.au.length > 0 &&
                        (Je(
                          "RemoteStore",
                          `Stopping write stream with ${n.au.length} pending writes`
                        ),
                        (n.au = [])));
                });
                return function (t) {
                  return e.apply(this, arguments);
                };
              })()
            )),
          n.gu
        );
      }
      class OM {
        constructor(e, t, r, i, a) {
          (this.asyncQueue = e),
            (this.timerId = t),
            (this.targetTimeMs = r),
            (this.op = i),
            (this.removalCallback = a),
            (this.deferred = new Vr()),
            (this.then = this.deferred.promise.then.bind(
              this.deferred.promise
            )),
            this.deferred.promise.catch((l) => {});
        }
        static createAndSchedule(e, t, r, i, a) {
          const l = Date.now() + r,
            h = new OM(e, t, l, i, a);
          return h.start(r), h;
        }
        start(e) {
          this.timerHandle = setTimeout(() => this.handleDelayElapsed(), e);
        }
        skipDelay() {
          return this.handleDelayElapsed();
        }
        cancel(e) {
          null !== this.timerHandle &&
            (this.clearTimeout(),
            this.deferred.reject(
              new Ge(be.CANCELLED, "Operation cancelled" + (e ? ": " + e : ""))
            ));
        }
        handleDelayElapsed() {
          this.asyncQueue.enqueueAndForget(() =>
            null !== this.timerHandle
              ? (this.clearTimeout(),
                this.op().then((e) => this.deferred.resolve(e)))
              : Promise.resolve()
          );
        }
        clearTimeout() {
          null !== this.timerHandle &&
            (this.removalCallback(this),
            clearTimeout(this.timerHandle),
            (this.timerHandle = null));
        }
      }
      function Dm(n, e) {
        if ((_r("AsyncQueue", `${e}: ${n}`), nn(n)))
          return new Ge(be.UNAVAILABLE, `${e}: ${n}`);
        throw n;
      }
      class Tm {
        constructor(e) {
          (this.comparator = e
            ? (t, r) => e(t, r) || u.comparator(t.key, r.key)
            : (t, r) => u.comparator(t.key, r.key)),
            (this.keyedMap = XE()),
            (this.sortedSet = new tr(this.comparator));
        }
        static emptySet(e) {
          return new Tm(e.comparator);
        }
        has(e) {
          return null != this.keyedMap.get(e);
        }
        get(e) {
          return this.keyedMap.get(e);
        }
        first() {
          return this.sortedSet.minKey();
        }
        last() {
          return this.sortedSet.maxKey();
        }
        isEmpty() {
          return this.sortedSet.isEmpty();
        }
        indexOf(e) {
          const t = this.keyedMap.get(e);
          return t ? this.sortedSet.indexOf(t) : -1;
        }
        get size() {
          return this.sortedSet.size;
        }
        forEach(e) {
          this.sortedSet.inorderTraversal((t, r) => (e(t), !1));
        }
        add(e) {
          const t = this.delete(e.key);
          return t.copy(
            t.keyedMap.insert(e.key, e),
            t.sortedSet.insert(e, null)
          );
        }
        delete(e) {
          const t = this.get(e);
          return t
            ? this.copy(this.keyedMap.remove(e), this.sortedSet.remove(t))
            : this;
        }
        isEqual(e) {
          if (!(e instanceof Tm) || this.size !== e.size) return !1;
          const t = this.sortedSet.getIterator(),
            r = e.sortedSet.getIterator();
          for (; t.hasNext(); ) {
            const i = t.getNext().key,
              a = r.getNext().key;
            if (!i.isEqual(a)) return !1;
          }
          return !0;
        }
        toString() {
          const e = [];
          return (
            this.forEach((t) => {
              e.push(t.toString());
            }),
            0 === e.length
              ? "DocumentSet ()"
              : "DocumentSet (\n  " + e.join("  \n") + "\n)"
          );
        }
        copy(e, t) {
          const r = new Tm();
          return (
            (r.comparator = this.comparator),
            (r.keyedMap = e),
            (r.sortedSet = t),
            r
          );
        }
      }
      class EF {
        constructor() {
          this.yu = new tr(u.comparator);
        }
        track(e) {
          const t = e.doc.key,
            r = this.yu.get(t);
          r
            ? 0 !== e.type && 3 === r.type
              ? (this.yu = this.yu.insert(t, e))
              : 3 === e.type && 1 !== r.type
              ? (this.yu = this.yu.insert(t, { type: r.type, doc: e.doc }))
              : 2 === e.type && 2 === r.type
              ? (this.yu = this.yu.insert(t, { type: 2, doc: e.doc }))
              : 2 === e.type && 0 === r.type
              ? (this.yu = this.yu.insert(t, { type: 0, doc: e.doc }))
              : 1 === e.type && 0 === r.type
              ? (this.yu = this.yu.remove(t))
              : 1 === e.type && 2 === r.type
              ? (this.yu = this.yu.insert(t, { type: 1, doc: r.doc }))
              : 0 === e.type && 1 === r.type
              ? (this.yu = this.yu.insert(t, { type: 2, doc: e.doc }))
              : Ct()
            : (this.yu = this.yu.insert(t, e));
        }
        pu() {
          const e = [];
          return (
            this.yu.inorderTraversal((t, r) => {
              e.push(r);
            }),
            e
          );
        }
      }
      class Sm {
        constructor(e, t, r, i, a, l, h, m) {
          (this.query = e),
            (this.docs = t),
            (this.oldDocs = r),
            (this.docChanges = i),
            (this.mutatedKeys = a),
            (this.fromCache = l),
            (this.syncStateChanged = h),
            (this.excludesMetadataChanges = m);
        }
        static fromInitialDocuments(e, t, r, i) {
          const a = [];
          return (
            t.forEach((l) => {
              a.push({ type: 0, doc: l });
            }),
            new Sm(e, t, Tm.emptySet(t), a, r, i, !0, !1)
          );
        }
        get hasPendingWrites() {
          return !this.mutatedKeys.isEmpty();
        }
        isEqual(e) {
          if (
            !(
              this.fromCache === e.fromCache &&
              this.syncStateChanged === e.syncStateChanged &&
              this.mutatedKeys.isEqual(e.mutatedKeys) &&
              YE(this.query, e.query) &&
              this.docs.isEqual(e.docs) &&
              this.oldDocs.isEqual(e.oldDocs)
            )
          )
            return !1;
          const t = this.docChanges,
            r = e.docChanges;
          if (t.length !== r.length) return !1;
          for (let i = 0; i < t.length; i++)
            if (t[i].type !== r[i].type || !t[i].doc.isEqual(r[i].doc))
              return !1;
          return !0;
        }
      }
      class _$ {
        constructor() {
          (this.Iu = void 0), (this.listeners = []);
        }
      }
      class y$ {
        constructor() {
          (this.queries = new Pc((e) => Bk(e), YE)),
            (this.onlineState = "Unknown"),
            (this.Tu = new Set());
        }
      }
      function kM(n, e) {
        return FM.apply(this, arguments);
      }
      function FM() {
        return (
          (FM = (0, Te.Z)(function* (n, e) {
            const t = gt(n),
              r = e.query;
            let i = !1,
              a = t.queries.get(r);
            if ((a || ((i = !0), (a = new _$())), i))
              try {
                a.Iu = yield t.onListen(r);
              } catch (l) {
                const h = Dm(
                  l,
                  `Initialization of query '${GR(e.query)}' failed`
                );
                return void e.onError(h);
              }
            t.queries.set(r, a),
              a.listeners.push(e),
              e.Eu(t.onlineState),
              a.Iu && e.Au(a.Iu) && UM(t);
          })),
          FM.apply(this, arguments)
        );
      }
      function LM(n, e) {
        return VM.apply(this, arguments);
      }
      function VM() {
        return (
          (VM = (0, Te.Z)(function* (n, e) {
            const t = gt(n),
              r = e.query;
            let i = !1;
            const a = t.queries.get(r);
            if (a) {
              const l = a.listeners.indexOf(e);
              l >= 0 &&
                (a.listeners.splice(l, 1), (i = 0 === a.listeners.length));
            }
            if (i) return t.queries.delete(r), t.onUnlisten(r);
          })),
          VM.apply(this, arguments)
        );
      }
      function v$(n, e) {
        const t = gt(n);
        let r = !1;
        for (const i of e) {
          const l = t.queries.get(i.query);
          if (l) {
            for (const h of l.listeners) h.Au(i) && (r = !0);
            l.Iu = i;
          }
        }
        r && UM(t);
      }
      function E$(n, e, t) {
        const r = gt(n),
          i = r.queries.get(e);
        if (i) for (const a of i.listeners) a.onError(t);
        r.queries.delete(e);
      }
      function UM(n) {
        n.Tu.forEach((e) => {
          e.next();
        });
      }
      class BM {
        constructor(e, t, r) {
          (this.query = e),
            (this.Ru = t),
            (this.bu = !1),
            (this.Pu = null),
            (this.onlineState = "Unknown"),
            (this.options = r || {});
        }
        Au(e) {
          if (!this.options.includeMetadataChanges) {
            const r = [];
            for (const i of e.docChanges) 3 !== i.type && r.push(i);
            e = new Sm(
              e.query,
              e.docs,
              e.oldDocs,
              r,
              e.mutatedKeys,
              e.fromCache,
              e.syncStateChanged,
              !0
            );
          }
          let t = !1;
          return (
            this.bu
              ? this.vu(e) && (this.Ru.next(e), (t = !0))
              : this.Vu(e, this.onlineState) && (this.Su(e), (t = !0)),
            (this.Pu = e),
            t
          );
        }
        onError(e) {
          this.Ru.error(e);
        }
        Eu(e) {
          this.onlineState = e;
          let t = !1;
          return (
            this.Pu &&
              !this.bu &&
              this.Vu(this.Pu, e) &&
              (this.Su(this.Pu), (t = !0)),
            t
          );
        }
        Vu(e, t) {
          return (
            !e.fromCache ||
            !(
              (this.options.Du && "Offline" !== t) ||
              (e.docs.isEmpty() && "Offline" !== t)
            )
          );
        }
        vu(e) {
          return (
            e.docChanges.length > 0 ||
            (!!(
              e.syncStateChanged ||
              (this.Pu && this.Pu.hasPendingWrites !== e.hasPendingWrites)
            ) &&
              !0 === this.options.includeMetadataChanges)
          );
        }
        Su(e) {
          (e = Sm.fromInitialDocuments(
            e.query,
            e.docs,
            e.mutatedKeys,
            e.fromCache
          )),
            (this.bu = !0),
            this.Ru.next(e);
        }
      }
      class w$ {
        constructor(e, t) {
          (this.payload = e), (this.byteLength = t);
        }
        Cu() {
          return "metadata" in this.payload;
        }
      }
      class wF {
        constructor(e) {
          this.wt = e;
        }
        Wi(e) {
          return ka(this.wt, e);
        }
        zi(e) {
          return e.metadata.exists
            ? _1(this.wt, e.document, !1)
            : nr.newNoDocument(
                this.Wi(e.metadata.name),
                this.Hi(e.metadata.readTime)
              );
        }
        Hi(e) {
          return ni(e);
        }
      }
      class I$ {
        constructor(e, t, r) {
          (this.xu = e),
            (this.localStore = t),
            (this.wt = r),
            (this.queries = []),
            (this.documents = []),
            (this.collectionGroups = new Set()),
            (this.progress = IF(e));
        }
        Nu(e) {
          this.progress.bytesLoaded += e.byteLength;
          let t = this.progress.documentsLoaded;
          if (e.payload.namedQuery) this.queries.push(e.payload.namedQuery);
          else if (e.payload.documentMetadata) {
            this.documents.push({ metadata: e.payload.documentMetadata }),
              e.payload.documentMetadata.exists || ++t;
            const r = An.fromString(e.payload.documentMetadata.name);
            this.collectionGroups.add(r.get(r.length - 2));
          } else
            e.payload.document &&
              ((this.documents[this.documents.length - 1].document =
                e.payload.document),
              ++t);
          return t !== this.progress.documentsLoaded
            ? ((this.progress.documentsLoaded = t),
              Object.assign({}, this.progress))
            : null;
        }
        ku(e) {
          const t = new Map(),
            r = new wF(this.wt);
          for (const i of e)
            if (i.metadata.queries) {
              const a = r.Wi(i.metadata.name);
              for (const l of i.metadata.queries) {
                const h = (t.get(l) || _n()).add(a);
                t.set(l, h);
              }
            }
          return t;
        }
        complete() {
          var e = this;
          return (0, Te.Z)(function* () {
            const t = yield (function Qj(n, e, t, r) {
                return cM.apply(this, arguments);
              })(e.localStore, new wF(e.wt), e.documents, e.xu.id),
              r = e.ku(e.documents);
            for (const i of e.queries) yield Jj(e.localStore, i, r.get(i.name));
            return (
              (e.progress.taskState = "Success"),
              { progress: e.progress, Ou: e.collectionGroups, Mu: t }
            );
          })();
        }
      }
      function IF(n) {
        return {
          taskState: "Running",
          documentsLoaded: 0,
          bytesLoaded: 0,
          totalDocuments: n.totalDocuments,
          totalBytes: n.totalBytes,
        };
      }
      class CF {
        constructor(e) {
          this.key = e;
        }
      }
      class bF {
        constructor(e) {
          this.key = e;
        }
      }
      class DF {
        constructor(e, t) {
          (this.query = e),
            (this.Fu = t),
            (this.$u = null),
            (this.current = !1),
            (this.Bu = _n()),
            (this.mutatedKeys = _n()),
            (this.Lu = $k(e)),
            (this.Uu = new Tm(this.Lu));
        }
        get qu() {
          return this.Fu;
        }
        Ku(e, t) {
          const r = t ? t.Gu : new EF(),
            i = t ? t.Uu : this.Uu;
          let a = t ? t.mutatedKeys : this.mutatedKeys,
            l = i,
            h = !1;
          const m =
              "F" === this.query.limitType && i.size === this.query.limit
                ? i.last()
                : null,
            v =
              "L" === this.query.limitType && i.size === this.query.limit
                ? i.first()
                : null;
          if (
            (e.inorderTraversal((b, D) => {
              const R = i.get(b),
                F = WR(this.query, D) ? D : null,
                B = !!R && this.mutatedKeys.has(R.key),
                le =
                  !!F &&
                  (F.hasLocalMutations ||
                    (this.mutatedKeys.has(F.key) && F.hasCommittedMutations));
              let Ee = !1;
              R && F
                ? R.data.isEqual(F.data)
                  ? B !== le && (r.track({ type: 3, doc: F }), (Ee = !0))
                  : this.Qu(R, F) ||
                    (r.track({ type: 2, doc: F }),
                    (Ee = !0),
                    ((m && this.Lu(F, m) > 0) || (v && this.Lu(F, v) < 0)) &&
                      (h = !0))
                : !R && F
                ? (r.track({ type: 0, doc: F }), (Ee = !0))
                : R &&
                  !F &&
                  (r.track({ type: 1, doc: R }),
                  (Ee = !0),
                  (m || v) && (h = !0)),
                Ee &&
                  (F
                    ? ((l = l.add(F)), (a = le ? a.add(b) : a.delete(b)))
                    : ((l = l.delete(b)), (a = a.delete(b))));
            }),
            null !== this.query.limit)
          )
            for (; l.size > this.query.limit; ) {
              const b = "F" === this.query.limitType ? l.last() : l.first();
              (l = l.delete(b.key)),
                (a = a.delete(b.key)),
                r.track({ type: 1, doc: b });
            }
          return { Uu: l, Gu: r, Oi: h, mutatedKeys: a };
        }
        Qu(e, t) {
          return (
            e.hasLocalMutations &&
            t.hasCommittedMutations &&
            !t.hasLocalMutations
          );
        }
        applyChanges(e, t, r) {
          const i = this.Uu;
          (this.Uu = e.Uu), (this.mutatedKeys = e.mutatedKeys);
          const a = e.Gu.pu();
          a.sort(
            (v, b) =>
              (function (D, R) {
                const F = (B) => {
                  switch (B) {
                    case 0:
                      return 1;
                    case 2:
                    case 3:
                      return 2;
                    case 1:
                      return 0;
                    default:
                      return Ct();
                  }
                };
                return F(D) - F(R);
              })(v.type, b.type) || this.Lu(v.doc, b.doc)
          ),
            this.ju(r);
          const l = t ? this.Wu() : [],
            h = 0 === this.Bu.size && this.current ? 1 : 0,
            m = h !== this.$u;
          return (
            (this.$u = h),
            0 !== a.length || m
              ? {
                  snapshot: new Sm(
                    this.query,
                    e.Uu,
                    i,
                    a,
                    e.mutatedKeys,
                    0 === h,
                    m,
                    !1
                  ),
                  zu: l,
                }
              : { zu: l }
          );
        }
        Eu(e) {
          return this.current && "Offline" === e
            ? ((this.current = !1),
              this.applyChanges(
                {
                  Uu: this.Uu,
                  Gu: new EF(),
                  mutatedKeys: this.mutatedKeys,
                  Oi: !1,
                },
                !1
              ))
            : { zu: [] };
        }
        Hu(e) {
          return (
            !this.Fu.has(e) &&
            !!this.Uu.has(e) &&
            !this.Uu.get(e).hasLocalMutations
          );
        }
        ju(e) {
          e &&
            (e.addedDocuments.forEach((t) => (this.Fu = this.Fu.add(t))),
            e.modifiedDocuments.forEach((t) => {}),
            e.removedDocuments.forEach((t) => (this.Fu = this.Fu.delete(t))),
            (this.current = e.current));
        }
        Wu() {
          if (!this.current) return [];
          const e = this.Bu;
          (this.Bu = _n()),
            this.Uu.forEach((r) => {
              this.Hu(r.key) && (this.Bu = this.Bu.add(r.key));
            });
          const t = [];
          return (
            e.forEach((r) => {
              this.Bu.has(r) || t.push(new bF(r));
            }),
            this.Bu.forEach((r) => {
              e.has(r) || t.push(new CF(r));
            }),
            t
          );
        }
        Ju(e) {
          (this.Fu = e.ji), (this.Bu = _n());
          const t = this.Ku(e.documents);
          return this.applyChanges(t, !0);
        }
        Yu() {
          return Sm.fromInitialDocuments(
            this.query,
            this.Uu,
            this.mutatedKeys,
            0 === this.$u
          );
        }
      }
      class C$ {
        constructor(e, t, r) {
          (this.query = e), (this.targetId = t), (this.view = r);
        }
      }
      class b$ {
        constructor(e) {
          (this.key = e), (this.Xu = !1);
        }
      }
      class D$ {
        constructor(e, t, r, i, a, l) {
          (this.localStore = e),
            (this.remoteStore = t),
            (this.eventManager = r),
            (this.sharedClientState = i),
            (this.currentUser = a),
            (this.maxConcurrentLimboResolutions = l),
            (this.Zu = {}),
            (this.tc = new Pc((h) => Bk(h), YE)),
            (this.ec = new Map()),
            (this.nc = new Set()),
            (this.sc = new tr(u.comparator)),
            (this.ic = new Map()),
            (this.rc = new rM()),
            (this.oc = {}),
            (this.uc = new Map()),
            (this.cc = hf.Rn()),
            (this.onlineState = "Unknown"),
            (this.ac = void 0);
        }
        get isPrimaryClient() {
          return !0 === this.ac;
        }
      }
      function T$(n, e) {
        return jM.apply(this, arguments);
      }
      function jM() {
        return (
          (jM = (0, Te.Z)(function* (n, e) {
            const t = cx(n);
            let r, i;
            const a = t.tc.get(e);
            if (a)
              (r = a.targetId),
                t.sharedClientState.addLocalQueryTarget(r),
                (i = a.view.Yu());
            else {
              const l = yield Em(t.localStore, lo(e));
              t.isPrimaryClient && Kb(t.remoteStore, l);
              const h = t.sharedClientState.addLocalQueryTarget(l.targetId);
              (r = l.targetId), (i = yield $M(t, e, r, "current" === h));
            }
            return i;
          })),
          jM.apply(this, arguments)
        );
      }
      function $M(n, e, t, r) {
        return HM.apply(this, arguments);
      }
      function HM() {
        return (
          (HM = (0, Te.Z)(function* (n, e, t, r) {
            n.hc = (b, D, R) => {
              return ((F = (0, Te.Z)(function* (B, le, Ee, dt) {
                let It = le.view.Ku(Ee);
                It.Oi &&
                  (It = yield Gb(B.localStore, le.query, !1).then(
                    ({ documents: rn }) => le.view.Ku(rn, It)
                  ));
                const Lt = dt && dt.targetChanges.get(le.targetId),
                  St = le.view.applyChanges(It, B.isPrimaryClient, Lt);
                return XM(B, le.targetId, St.zu), St.snapshot;
              })),
              function (B, le, Ee, dt) {
                return F.apply(this, arguments);
              })(n, b, D, R);
              var F;
            };
            const i = yield Gb(n.localStore, e, !0),
              a = new DF(e, i.ji),
              l = a.Ku(i.documents),
              h = nw.createSynthesizedTargetChangeForCurrentChange(
                t,
                r && "Offline" !== n.onlineState
              ),
              m = a.applyChanges(l, n.isPrimaryClient, h);
            XM(n, t, m.zu);
            const v = new C$(e, t, a);
            return (
              n.tc.set(e, v),
              n.ec.has(t) ? n.ec.get(t).push(e) : n.ec.set(t, [e]),
              m.snapshot
            );
          })),
          HM.apply(this, arguments)
        );
      }
      function S$(n, e) {
        return GM.apply(this, arguments);
      }
      function GM() {
        return (
          (GM = (0, Te.Z)(function* (n, e) {
            const t = gt(n),
              r = t.tc.get(e),
              i = t.ec.get(r.targetId);
            if (i.length > 1)
              return (
                t.ec.set(
                  r.targetId,
                  i.filter((a) => !YE(a, e))
                ),
                void t.tc.delete(e)
              );
            t.isPrimaryClient
              ? (t.sharedClientState.removeLocalQueryTarget(r.targetId),
                t.sharedClientState.isActiveQueryTarget(r.targetId) ||
                  (yield wm(t.localStore, r.targetId, !1)
                    .then(() => {
                      t.sharedClientState.clearQueryState(r.targetId),
                        _w(t.remoteStore, r.targetId),
                        Am(t, r.targetId);
                    })
                    .catch(xe)))
              : (Am(t, r.targetId), yield wm(t.localStore, r.targetId, !0));
          })),
          GM.apply(this, arguments)
        );
      }
      function WM() {
        return (
          (WM = (0, Te.Z)(function* (n, e, t) {
            const r = dx(n);
            try {
              const i = yield (function (a, l) {
                const h = gt(a),
                  m = ur.now(),
                  v = l.reduce((R, F) => R.add(F.key), _n());
                let b, D;
                return h.persistence
                  .runTransaction(
                    "Locally write mutations",
                    "readwrite",
                    (R) => {
                      let F = us(),
                        B = _n();
                      return h.Ui.getEntries(R, v)
                        .next((le) => {
                          (F = le),
                            F.forEach((Ee, dt) => {
                              dt.isValidDocument() || (B = B.add(Ee));
                            });
                        })
                        .next(() =>
                          h.localDocuments.getOverlayedDocuments(R, F)
                        )
                        .next((le) => {
                          b = le;
                          const Ee = [];
                          for (const dt of l) {
                            const It = V2(dt, b.get(dt.key).overlayedDocument);
                            null != It &&
                              Ee.push(
                                new Lu(
                                  dt.key,
                                  It,
                                  xk(It.value.mapValue),
                                  yr.exists(!0)
                                )
                              );
                          }
                          return h.mutationQueue.addMutationBatch(R, m, Ee, l);
                        })
                        .next((le) => {
                          D = le;
                          const Ee = le.applyToLocalDocumentSet(b, B);
                          return h.documentOverlayCache.saveOverlays(
                            R,
                            le.batchId,
                            Ee
                          );
                        });
                    }
                  )
                  .then(() => ({ batchId: D.batchId, changes: s1(b) }));
              })(r.localStore, e);
              r.sharedClientState.addPendingMutation(i.batchId),
                (function (a, l, h) {
                  let m = a.oc[a.currentUser.toKey()];
                  m || (m = new tr(un)),
                    (m = m.insert(l, h)),
                    (a.oc[a.currentUser.toKey()] = m);
                })(r, i.batchId, t),
                yield Vu(r, i.changes),
                yield Cm(r.remoteStore);
            } catch (i) {
              const a = Dm(i, "Failed to persist write");
              t.reject(a);
            }
          })),
          WM.apply(this, arguments)
        );
      }
      function TF(n, e) {
        return zM.apply(this, arguments);
      }
      function zM() {
        return (
          (zM = (0, Te.Z)(function* (n, e) {
            const t = gt(n);
            try {
              const r = yield Zj(t.localStore, e);
              e.targetChanges.forEach((i, a) => {
                const l = t.ic.get(a);
                l &&
                  (Wt(
                    i.addedDocuments.size +
                      i.modifiedDocuments.size +
                      i.removedDocuments.size <=
                      1
                  ),
                  i.addedDocuments.size > 0
                    ? (l.Xu = !0)
                    : i.modifiedDocuments.size > 0
                    ? Wt(l.Xu)
                    : i.removedDocuments.size > 0 && (Wt(l.Xu), (l.Xu = !1)));
              }),
                yield Vu(t, r, e);
            } catch (r) {
              yield xe(r);
            }
          })),
          zM.apply(this, arguments)
        );
      }
      function SF(n, e, t) {
        const r = gt(n);
        if ((r.isPrimaryClient && 0 === t) || (!r.isPrimaryClient && 1 === t)) {
          const i = [];
          r.tc.forEach((a, l) => {
            const h = l.view.Eu(e);
            h.snapshot && i.push(h.snapshot);
          }),
            (function (a, l) {
              const h = gt(a);
              h.onlineState = l;
              let m = !1;
              h.queries.forEach((v, b) => {
                for (const D of b.listeners) D.Eu(l) && (m = !0);
              }),
                m && UM(h);
            })(r.eventManager, e),
            i.length && r.Zu.Go(i),
            (r.onlineState = e),
            r.isPrimaryClient && r.sharedClientState.setOnlineState(e);
        }
      }
      function R$(n, e, t) {
        return qM.apply(this, arguments);
      }
      function qM() {
        return (
          (qM = (0, Te.Z)(function* (n, e, t) {
            const r = gt(n);
            r.sharedClientState.updateQueryState(e, "rejected", t);
            const i = r.ic.get(e),
              a = i && i.key;
            if (a) {
              let l = new tr(u.comparator);
              l = l.insert(a, nr.newNoDocument(a, Kt.min()));
              const h = _n().add(a),
                m = new tw(Kt.min(), new Map(), new zn(un), l, h);
              yield TF(r, m), (r.sc = r.sc.remove(a)), r.ic.delete(e), ex(r);
            } else
              yield wm(r.localStore, e, !1)
                .then(() => Am(r, e, t))
                .catch(xe);
          })),
          qM.apply(this, arguments)
        );
      }
      function M$(n, e) {
        return KM.apply(this, arguments);
      }
      function KM() {
        return (
          (KM = (0, Te.Z)(function* (n, e) {
            const t = gt(n),
              r = e.batch.batchId;
            try {
              const i = yield Kj(t.localStore, e);
              JM(t, r, null),
                QM(t, r),
                t.sharedClientState.updateMutationState(r, "acknowledged"),
                yield Vu(t, i);
            } catch (i) {
              yield xe(i);
            }
          })),
          KM.apply(this, arguments)
        );
      }
      function x$(n, e, t) {
        return ZM.apply(this, arguments);
      }
      function ZM() {
        return (
          (ZM = (0, Te.Z)(function* (n, e, t) {
            const r = gt(n);
            try {
              const i = yield (function (a, l) {
                const h = gt(a);
                return h.persistence.runTransaction(
                  "Reject batch",
                  "readwrite-primary",
                  (m) => {
                    let v;
                    return h.mutationQueue
                      .lookupMutationBatch(m, l)
                      .next(
                        (b) => (
                          Wt(null !== b),
                          (v = b.keys()),
                          h.mutationQueue.removeMutationBatch(m, b)
                        )
                      )
                      .next(() => h.mutationQueue.performConsistencyCheck(m))
                      .next(() =>
                        h.documentOverlayCache.removeOverlaysForBatchId(m, v, l)
                      )
                      .next(() =>
                        h.localDocuments.recalculateAndSaveOverlaysForDocumentKeys(
                          m,
                          v
                        )
                      )
                      .next(() => h.localDocuments.getDocuments(m, v));
                  }
                );
              })(r.localStore, e);
              JM(r, e, t),
                QM(r, e),
                r.sharedClientState.updateMutationState(e, "rejected", t),
                yield Vu(r, i);
            } catch (i) {
              yield xe(i);
            }
          })),
          ZM.apply(this, arguments)
        );
      }
      function YM() {
        return (
          (YM = (0, Te.Z)(function* (n, e) {
            const t = gt(n);
            Lc(t.remoteStore) ||
              Je(
                "SyncEngine",
                "The network is disabled. The task returned by 'awaitPendingWrites()' will not complete until the network is enabled."
              );
            try {
              const r = yield (function (a) {
                const l = gt(a);
                return l.persistence.runTransaction(
                  "Get highest unacknowledged batch id",
                  "readonly",
                  (h) => l.mutationQueue.getHighestUnacknowledgedBatchId(h)
                );
              })(t.localStore);
              if (-1 === r) return void e.resolve();
              const i = t.uc.get(r) || [];
              i.push(e), t.uc.set(r, i);
            } catch (r) {
              const i = Dm(
                r,
                "Initialization of waitForPendingWrites() operation failed"
              );
              e.reject(i);
            }
          })),
          YM.apply(this, arguments)
        );
      }
      function QM(n, e) {
        (n.uc.get(e) || []).forEach((t) => {
          t.resolve();
        }),
          n.uc.delete(e);
      }
      function JM(n, e, t) {
        const r = gt(n);
        let i = r.oc[r.currentUser.toKey()];
        if (i) {
          const a = i.get(e);
          a && (t ? a.reject(t) : a.resolve(), (i = i.remove(e))),
            (r.oc[r.currentUser.toKey()] = i);
        }
      }
      function Am(n, e, t = null) {
        n.sharedClientState.removeLocalQueryTarget(e);
        for (const r of n.ec.get(e)) n.tc.delete(r), t && n.Zu.lc(r, t);
        n.ec.delete(e),
          n.isPrimaryClient &&
            n.rc.us(e).forEach((r) => {
              n.rc.containsKey(r) || AF(n, r);
            });
      }
      function AF(n, e) {
        n.nc.delete(e.path.canonicalString());
        const t = n.sc.get(e);
        null !== t &&
          (_w(n.remoteStore, t),
          (n.sc = n.sc.remove(e)),
          n.ic.delete(t),
          ex(n));
      }
      function XM(n, e, t) {
        for (const r of t)
          r instanceof CF
            ? (n.rc.addReference(r.key, e), P$(n, r))
            : r instanceof bF
            ? (Je("SyncEngine", "Document no longer in limbo: " + r.key),
              n.rc.removeReference(r.key, e),
              n.rc.containsKey(r.key) || AF(n, r.key))
            : Ct();
      }
      function P$(n, e) {
        const t = e.key,
          r = t.path.canonicalString();
        n.sc.get(t) ||
          n.nc.has(r) ||
          (Je("SyncEngine", "New document in limbo: " + t), n.nc.add(r), ex(n));
      }
      function ex(n) {
        for (; n.nc.size > 0 && n.sc.size < n.maxConcurrentLimboResolutions; ) {
          const e = n.nc.values().next().value;
          n.nc.delete(e);
          const t = new u(An.fromString(e)),
            r = n.cc.next();
          n.ic.set(r, new b$(t)),
            (n.sc = n.sc.insert(t, r)),
            Kb(n.remoteStore, new Oc(lo(cm(t.path)), r, 2, ti.ot));
        }
      }
      function Vu(n, e, t) {
        return tx.apply(this, arguments);
      }
      function tx() {
        return (
          (tx = (0, Te.Z)(function* (n, e, t) {
            const r = gt(n),
              i = [],
              a = [],
              l = [];
            var h;
            r.tc.isEmpty() ||
              (r.tc.forEach((h, m) => {
                l.push(
                  r.hc(m, e, t).then((v) => {
                    if (v) {
                      r.isPrimaryClient &&
                        r.sharedClientState.updateQueryState(
                          m.targetId,
                          v.fromCache ? "not-current" : "current"
                        ),
                        i.push(v);
                      const b = aM.Vi(m.targetId, v);
                      a.push(b);
                    }
                  })
                );
              }),
              yield Promise.all(l),
              r.Zu.Go(i),
              yield ((h = (0, Te.Z)(function* (m, v) {
                const b = gt(m);
                try {
                  yield b.persistence.runTransaction(
                    "notifyLocalViewChanges",
                    "readwrite",
                    (D) =>
                      W.forEach(v, (R) =>
                        W.forEach(R.Pi, (F) =>
                          b.persistence.referenceDelegate.addReference(
                            D,
                            R.targetId,
                            F
                          )
                        ).next(() =>
                          W.forEach(R.vi, (F) =>
                            b.persistence.referenceDelegate.removeReference(
                              D,
                              R.targetId,
                              F
                            )
                          )
                        )
                      )
                  );
                } catch (D) {
                  if (!nn(D)) throw D;
                  Je("LocalStore", "Failed to update sequence numbers: " + D);
                }
                for (const D of v) {
                  const R = D.targetId;
                  if (!D.fromCache) {
                    const F = b.$i.get(R),
                      le = F.withLastLimboFreeSnapshotVersion(
                        F.snapshotVersion
                      );
                    b.$i = b.$i.insert(R, le);
                  }
                }
              })),
              function (m, v) {
                return h.apply(this, arguments);
              })(r.localStore, a));
          })),
          tx.apply(this, arguments)
        );
      }
      function O$(n, e) {
        return nx.apply(this, arguments);
      }
      function nx() {
        return (
          (nx = (0, Te.Z)(function* (n, e) {
            const t = gt(n);
            if (!t.currentUser.isEqual(e)) {
              Je("SyncEngine", "User change. New user:", e.toKey());
              const r = yield nF(t.localStore, e);
              (t.currentUser = e),
                (i = t).uc.forEach((l) => {
                  l.forEach((h) => {
                    h.reject(
                      new Ge(
                        be.CANCELLED,
                        "'waitForPendingWrites' promise is rejected due to a user change."
                      )
                    );
                  });
                }),
                i.uc.clear(),
                t.sharedClientState.handleUserChange(
                  e,
                  r.removedBatchIds,
                  r.addedBatchIds
                ),
                yield Vu(t, r.Ki);
            }
            var i;
          })),
          nx.apply(this, arguments)
        );
      }
      function k$(n, e) {
        const t = gt(n),
          r = t.ic.get(e);
        if (r && r.Xu) return _n().add(r.key);
        {
          let i = _n();
          const a = t.ec.get(e);
          if (!a) return i;
          for (const l of a) {
            const h = t.tc.get(l);
            i = i.unionWith(h.view.qu);
          }
          return i;
        }
      }
      function F$(n, e) {
        return rx.apply(this, arguments);
      }
      function rx() {
        return (
          (rx = (0, Te.Z)(function* (n, e) {
            const t = gt(n),
              r = yield Gb(t.localStore, e.query, !0),
              i = e.view.Ju(r);
            return t.isPrimaryClient && XM(t, e.targetId, i.zu), i;
          })),
          rx.apply(this, arguments)
        );
      }
      function L$(n, e) {
        return ix.apply(this, arguments);
      }
      function ix() {
        return (
          (ix = (0, Te.Z)(function* (n, e) {
            const t = gt(n);
            return oF(t.localStore, e).then((r) => Vu(t, r));
          })),
          ix.apply(this, arguments)
        );
      }
      function V$(n, e, t, r) {
        return sx.apply(this, arguments);
      }
      function sx() {
        return (
          (sx = (0, Te.Z)(function* (n, e, t, r) {
            const i = gt(n),
              a = yield (function (l, h) {
                const m = gt(l),
                  v = gt(m.mutationQueue);
                return m.persistence.runTransaction(
                  "Lookup mutation documents",
                  "readonly",
                  (b) =>
                    v
                      .yn(b, h)
                      .next((D) =>
                        D
                          ? m.localDocuments.getDocuments(b, D)
                          : W.resolve(null)
                      )
                );
              })(i.localStore, e);
            var h;
            null !== a
              ? ("pending" === t
                  ? yield Cm(i.remoteStore)
                  : "acknowledged" === t || "rejected" === t
                  ? (JM(i, e, r || null),
                    QM(i, e),
                    (h = e),
                    gt(gt(i.localStore).mutationQueue).In(h))
                  : Ct(),
                yield Vu(i, a))
              : Je("SyncEngine", "Cannot apply mutation batch with id: " + e);
          })),
          sx.apply(this, arguments)
        );
      }
      function ox() {
        return (
          (ox = (0, Te.Z)(function* (n, e) {
            const t = gt(n);
            if ((cx(t), dx(t), !0 === e && !0 !== t.ac)) {
              const r = t.sharedClientState.getAllActiveQueryTargets(),
                i = yield RF(t, r.toArray());
              (t.ac = !0), yield NM(t.remoteStore, !0);
              for (const a of i) Kb(t.remoteStore, a);
            } else if (!1 === e && !1 !== t.ac) {
              const r = [];
              let i = Promise.resolve();
              t.ec.forEach((a, l) => {
                t.sharedClientState.isLocalQueryTarget(l)
                  ? r.push(l)
                  : (i = i.then(() => (Am(t, l), wm(t.localStore, l, !0)))),
                  _w(t.remoteStore, l);
              }),
                yield i,
                yield RF(t, r),
                (function (a) {
                  const l = gt(a);
                  l.ic.forEach((h, m) => {
                    _w(l.remoteStore, m);
                  }),
                    l.rc.cs(),
                    (l.ic = new Map()),
                    (l.sc = new tr(u.comparator));
                })(t),
                (t.ac = !1),
                yield NM(t.remoteStore, !1);
            }
          })),
          ox.apply(this, arguments)
        );
      }
      function RF(n, e, t) {
        return ax.apply(this, arguments);
      }
      function ax() {
        return (
          (ax = (0, Te.Z)(function* (n, e, t) {
            const r = gt(n),
              i = [],
              a = [];
            for (const l of e) {
              let h;
              const m = r.ec.get(l);
              if (m && 0 !== m.length) {
                h = yield Em(r.localStore, lo(m[0]));
                for (const v of m) {
                  const b = r.tc.get(v),
                    D = yield F$(r, b);
                  D.snapshot && a.push(D.snapshot);
                }
              } else {
                const v = yield sF(r.localStore, l);
                (h = yield Em(r.localStore, v)), yield $M(r, MF(v), l, !1);
              }
              i.push(h);
            }
            return r.Zu.Go(a), i;
          })),
          ax.apply(this, arguments)
        );
      }
      function MF(n) {
        return Vk(
          n.path,
          n.collectionGroup,
          n.orderBy,
          n.filters,
          n.limit,
          "F",
          n.startAt,
          n.endAt
        );
      }
      function B$(n) {
        const e = gt(n);
        return gt(gt(e.localStore).persistence).Ri();
      }
      function j$(n, e, t, r) {
        return ux.apply(this, arguments);
      }
      function ux() {
        return (
          (ux = (0, Te.Z)(function* (n, e, t, r) {
            const i = gt(n);
            if (i.ac)
              return void Je(
                "SyncEngine",
                "Ignoring unexpected query state notification."
              );
            const a = i.ec.get(e);
            if (a && a.length > 0)
              switch (t) {
                case "current":
                case "not-current": {
                  const l = yield oF(i.localStore, jk(a[0])),
                    h = tw.createSynthesizedRemoteEventForCurrentChange(
                      e,
                      "current" === t
                    );
                  yield Vu(i, l, h);
                  break;
                }
                case "rejected":
                  yield wm(i.localStore, e, !0), Am(i, e, r);
                  break;
                default:
                  Ct();
              }
          })),
          ux.apply(this, arguments)
        );
      }
      function $$(n, e, t) {
        return lx.apply(this, arguments);
      }
      function lx() {
        return (
          (lx = (0, Te.Z)(function* (n, e, t) {
            const r = cx(n);
            if (r.ac) {
              for (const i of e) {
                if (r.ec.has(i)) {
                  Je("SyncEngine", "Adding an already active target " + i);
                  continue;
                }
                const a = yield sF(r.localStore, i),
                  l = yield Em(r.localStore, a);
                yield $M(r, MF(a), l.targetId, !1), Kb(r.remoteStore, l);
              }
              for (const i of t)
                r.ec.has(i) &&
                  (yield wm(r.localStore, i, !1)
                    .then(() => {
                      _w(r.remoteStore, i), Am(r, i);
                    })
                    .catch(xe));
            }
          })),
          lx.apply(this, arguments)
        );
      }
      function cx(n) {
        const e = gt(n);
        return (
          (e.remoteStore.remoteSyncer.applyRemoteEvent = TF.bind(null, e)),
          (e.remoteStore.remoteSyncer.getRemoteKeysForTarget = k$.bind(
            null,
            e
          )),
          (e.remoteStore.remoteSyncer.rejectListen = R$.bind(null, e)),
          (e.Zu.Go = v$.bind(null, e.eventManager)),
          (e.Zu.lc = E$.bind(null, e.eventManager)),
          e
        );
      }
      function dx(n) {
        const e = gt(n);
        return (
          (e.remoteStore.remoteSyncer.applySuccessfulWrite = M$.bind(null, e)),
          (e.remoteStore.remoteSyncer.rejectFailedWrite = x$.bind(null, e)),
          e
        );
      }
      class xF {
        constructor() {
          this.synchronizeTabs = !1;
        }
        initialize(e) {
          var t = this;
          return (0, Te.Z)(function* () {
            (t.wt = gw(e.databaseInfo.databaseId)),
              (t.sharedClientState = t.dc(e)),
              (t.persistence = t._c(e)),
              yield t.persistence.start(),
              (t.localStore = t.wc(e)),
              (t.gcScheduler = t.mc(e, t.localStore)),
              (t.indexBackfillerScheduler = t.gc(e, t.localStore));
          })();
        }
        mc(e, t) {
          return null;
        }
        gc(e, t) {
          return null;
        }
        wc(e) {
          return tF(this.persistence, new eF(), e.initialUser, this.wt);
        }
        _c(e) {
          return new J1($b.Ms, this.wt);
        }
        dc(e) {
          return new cF();
        }
        terminate() {
          var e = this;
          return (0, Te.Z)(function* () {
            e.gcScheduler && e.gcScheduler.stop(),
              yield e.sharedClientState.shutdown(),
              yield e.persistence.shutdown();
          })();
        }
      }
      class NF extends xF {
        constructor(e, t, r) {
          super(),
            (this.yc = e),
            (this.cacheSizeBytes = t),
            (this.forceOwnership = r),
            (this.synchronizeTabs = !1);
        }
        initialize(e) {
          var t = () => super.initialize,
            r = this;
          return (0, Te.Z)(function* () {
            yield t().call(r, e),
              yield r.yc.initialize(r, e),
              yield dx(r.yc.syncEngine),
              yield Cm(r.yc.remoteStore),
              yield r.persistence.ci(
                () => (
                  r.gcScheduler &&
                    !r.gcScheduler.started &&
                    r.gcScheduler.start(),
                  r.indexBackfillerScheduler &&
                    !r.indexBackfillerScheduler.started &&
                    r.indexBackfillerScheduler.start(),
                  Promise.resolve()
                )
              );
          })();
        }
        wc(e) {
          return tF(this.persistence, new eF(), e.initialUser, this.wt);
        }
        mc(e, t) {
          return new Pj(
            this.persistence.referenceDelegate.garbageCollector,
            e.asyncQueue,
            t
          );
        }
        gc(e, t) {
          const r = new $E(t, this.persistence);
          return new jE(e.asyncQueue, r);
        }
        _c(e) {
          const t = oM(
              e.databaseInfo.databaseId,
              e.databaseInfo.persistenceKey
            ),
            r =
              void 0 !== this.cacheSizeBytes
                ? ls.withCacheSize(this.cacheSizeBytes)
                : ls.DEFAULT;
          return new sM(
            this.synchronizeTabs,
            t,
            e.clientId,
            r,
            e.asyncQueue,
            hF(),
            qb(),
            this.wt,
            this.sharedClientState,
            !!this.forceOwnership
          );
        }
        dc(e) {
          return new cF();
        }
      }
      class G$ extends NF {
        constructor(e, t) {
          super(e, t, !1),
            (this.yc = e),
            (this.cacheSizeBytes = t),
            (this.synchronizeTabs = !0);
        }
        initialize(e) {
          var t = () => super.initialize,
            r = this;
          return (0, Te.Z)(function* () {
            yield t().call(r, e);
            const i = r.yc.syncEngine;
            r.sharedClientState instanceof gM &&
              ((r.sharedClientState.syncEngine = {
                kr: V$.bind(null, i),
                Or: j$.bind(null, i),
                Mr: $$.bind(null, i),
                Ri: B$.bind(null, i),
                Nr: L$.bind(null, i),
              }),
              yield r.sharedClientState.start()),
              yield r.persistence.ci(
                (function () {
                  var a = (0, Te.Z)(function* (l) {
                    yield (function U$(n, e) {
                      return ox.apply(this, arguments);
                    })(r.yc.syncEngine, l),
                      r.gcScheduler &&
                        (l && !r.gcScheduler.started
                          ? r.gcScheduler.start()
                          : l || r.gcScheduler.stop()),
                      r.indexBackfillerScheduler &&
                        (l && !r.indexBackfillerScheduler.started
                          ? r.indexBackfillerScheduler.start()
                          : l || r.indexBackfillerScheduler.stop());
                  });
                  return function (l) {
                    return a.apply(this, arguments);
                  };
                })()
              );
          })();
        }
        dc(e) {
          const t = hF();
          if (!gM.V(t))
            throw new Ge(
              be.UNIMPLEMENTED,
              "IndexedDB persistence is only available on platforms that support LocalStorage."
            );
          const r = oM(
            e.databaseInfo.databaseId,
            e.databaseInfo.persistenceKey
          );
          return new gM(t, e.asyncQueue, r, e.clientId, e.initialUser);
        }
      }
      class hx {
        initialize(e, t) {
          var r = this;
          return (0, Te.Z)(function* () {
            r.localStore ||
              ((r.localStore = e.localStore),
              (r.sharedClientState = e.sharedClientState),
              (r.datastore = r.createDatastore(t)),
              (r.remoteStore = r.createRemoteStore(t)),
              (r.eventManager = r.createEventManager(t)),
              (r.syncEngine = r.createSyncEngine(t, !e.synchronizeTabs)),
              (r.sharedClientState.onlineStateHandler = (i) =>
                SF(r.syncEngine, i, 1)),
              (r.remoteStore.remoteSyncer.handleCredentialChange = O$.bind(
                null,
                r.syncEngine
              )),
              yield NM(r.remoteStore, r.syncEngine.isPrimaryClient));
          })();
        }
        createEventManager(e) {
          return new y$();
        }
        createDatastore(e) {
          const t = gw(e.databaseInfo.databaseId),
            r = new n$(e.databaseInfo);
          return new s$(e.authCredentials, e.appCheckCredentials, r, t);
        }
        createRemoteStore(e) {
          return (
            (t = this.localStore),
            (r = this.datastore),
            (i = e.asyncQueue),
            (a = (h) => SF(this.syncEngine, h, 0)),
            (l = dF.V() ? new dF() : new Xj()),
            new a$(t, r, i, a, l)
          );
          var t, r, i, a, l;
        }
        createSyncEngine(e, t) {
          return (function (r, i, a, l, h, m, v) {
            const b = new D$(r, i, a, l, h, m);
            return v && (b.ac = !0), b;
          })(
            this.localStore,
            this.remoteStore,
            this.eventManager,
            this.sharedClientState,
            e.initialUser,
            e.maxConcurrentLimboResolutions,
            t
          );
        }
        terminate() {
          return ((e = (0, Te.Z)(function* (t) {
            const r = gt(t);
            Je("RemoteStore", "RemoteStore shutting down."),
              r.lu.add(5),
              yield Im(r),
              r.du.shutdown(),
              r._u.set("Unknown");
          })),
          function (t) {
            return e.apply(this, arguments);
          })(this.remoteStore);
          var e;
        }
      }
      function PF(n, e = 10240) {
        let t = 0;
        return {
          read: () =>
            (0, Te.Z)(function* () {
              if (t < n.byteLength) {
                const r = { value: n.slice(t, t + e), done: !1 };
                return (t += e), r;
              }
              return { done: !0 };
            })(),
          cancel: () => (0, Te.Z)(function* () {})(),
          releaseLock() {},
          closed: Promise.reject("unimplemented"),
        };
      }
      class Yb {
        constructor(e) {
          (this.observer = e), (this.muted = !1);
        }
        next(e) {
          this.observer.next && this.Ic(this.observer.next, e);
        }
        error(e) {
          this.observer.error
            ? this.Ic(this.observer.error, e)
            : console.error("Uncaught Error in snapshot listener:", e);
        }
        Tc() {
          this.muted = !0;
        }
        Ic(e, t) {
          this.muted ||
            setTimeout(() => {
              this.muted || e(t);
            }, 0);
        }
      }
      class W$ {
        constructor(e, t) {
          (this.Ec = e),
            (this.wt = t),
            (this.metadata = new Vr()),
            (this.buffer = new Uint8Array()),
            (this.Ac = new TextDecoder("utf-8")),
            this.Rc().then(
              (r) => {
                r && r.Cu()
                  ? this.metadata.resolve(r.payload.metadata)
                  : this.metadata.reject(
                      new Error(
                        `The first element of the bundle is not a metadata, it is\n             ${JSON.stringify(
                          r?.payload
                        )}`
                      )
                    );
              },
              (r) => this.metadata.reject(r)
            );
        }
        close() {
          return this.Ec.cancel();
        }
        getMetadata() {
          var e = this;
          return (0, Te.Z)(function* () {
            return e.metadata.promise;
          })();
        }
        fc() {
          var e = this;
          return (0, Te.Z)(function* () {
            return yield e.getMetadata(), e.Rc();
          })();
        }
        Rc() {
          var e = this;
          return (0, Te.Z)(function* () {
            const t = yield e.bc();
            if (null === t) return null;
            const r = e.Ac.decode(t),
              i = Number(r);
            isNaN(i) && e.Pc(`length string (${r}) is not valid number`);
            const a = yield e.vc(i);
            return new w$(JSON.parse(a), t.length + i);
          })();
        }
        Vc() {
          return this.buffer.findIndex((e) => e === "{".charCodeAt(0));
        }
        bc() {
          var e = this;
          return (0, Te.Z)(function* () {
            for (; e.Vc() < 0 && !(yield e.Sc()); );
            if (0 === e.buffer.length) return null;
            const t = e.Vc();
            t < 0 &&
              e.Pc(
                "Reached the end of bundle when a length string is expected."
              );
            const r = e.buffer.slice(0, t);
            return (e.buffer = e.buffer.slice(t)), r;
          })();
        }
        vc(e) {
          var t = this;
          return (0, Te.Z)(function* () {
            for (; t.buffer.length < e; )
              (yield t.Sc()) &&
                t.Pc("Reached the end of bundle when more is expected.");
            const r = t.Ac.decode(t.buffer.slice(0, e));
            return (t.buffer = t.buffer.slice(e)), r;
          })();
        }
        Pc(e) {
          throw (this.Ec.cancel(), new Error(`Invalid bundle format: ${e}`));
        }
        Sc() {
          var e = this;
          return (0, Te.Z)(function* () {
            const t = yield e.Ec.read();
            if (!t.done) {
              const r = new Uint8Array(e.buffer.length + t.value.length);
              r.set(e.buffer), r.set(t.value, e.buffer.length), (e.buffer = r);
            }
            return t.done;
          })();
        }
      }
      class z$ {
        constructor(e) {
          (this.datastore = e),
            (this.readVersions = new Map()),
            (this.mutations = []),
            (this.committed = !1),
            (this.lastWriteError = null),
            (this.writtenDocs = new Set());
        }
        lookup(e) {
          var t = this;
          return (0, Te.Z)(function* () {
            if ((t.ensureCommitNotCalled(), t.mutations.length > 0))
              throw new Ge(
                be.INVALID_ARGUMENT,
                "Firestore transactions require all reads to be executed before all writes."
              );
            const r = yield ((i = (0, Te.Z)(function* (a, l) {
              const h = gt(a),
                m = sw(h.wt) + "/documents",
                v = { documents: l.map((F) => iw(h.wt, F)) },
                b = yield h.ao("BatchGetDocuments", m, v, l.length),
                D = new Map();
              b.forEach((F) => {
                const B = (function Z2(n, e) {
                  return "found" in e
                    ? (function (t, r) {
                        Wt(!!r.found);
                        const i = ka(t, r.found.name),
                          a = ni(r.found.updateTime),
                          l = new wi({ mapValue: { fields: r.found.fields } });
                        return nr.newFoundDocument(i, a, l);
                      })(n, e)
                    : "missing" in e
                    ? (function (t, r) {
                        Wt(!!r.missing), Wt(!!r.readTime);
                        const i = ka(t, r.missing),
                          a = ni(r.readTime);
                        return nr.newNoDocument(i, a);
                      })(n, e)
                    : Ct();
                })(h.wt, F);
                D.set(B.key.toString(), B);
              });
              const R = [];
              return (
                l.forEach((F) => {
                  const B = D.get(F.toString());
                  Wt(!!B), R.push(B);
                }),
                R
              );
            })),
            function (a, l) {
              return i.apply(this, arguments);
            })(t.datastore, e);
            var i;
            return r.forEach((i) => t.recordVersion(i)), r;
          })();
        }
        set(e, t) {
          this.write(t.toMutation(e, this.precondition(e))),
            this.writtenDocs.add(e.toString());
        }
        update(e, t) {
          try {
            this.write(t.toMutation(e, this.preconditionForUpdate(e)));
          } catch (r) {
            this.lastWriteError = r;
          }
          this.writtenDocs.add(e.toString());
        }
        delete(e) {
          this.write(new gm(e, this.precondition(e))),
            this.writtenDocs.add(e.toString());
        }
        commit() {
          var e = this;
          return (0, Te.Z)(function* () {
            if ((e.ensureCommitNotCalled(), e.lastWriteError))
              throw e.lastWriteError;
            const t = e.readVersions;
            var r;
            e.mutations.forEach((r) => {
              t.delete(r.key.toString());
            }),
              t.forEach((r, i) => {
                const a = u.fromPath(i);
                e.mutations.push(new zR(a, e.precondition(a)));
              }),
              yield ((r = (0, Te.Z)(function* (i, a) {
                const l = gt(i),
                  h = sw(l.wt) + "/documents",
                  m = { writes: a.map((v) => ow(l.wt, v)) };
                yield l.ro("Commit", h, m);
              })),
              function (i, a) {
                return r.apply(this, arguments);
              })(e.datastore, e.mutations),
              (e.committed = !0);
          })();
        }
        recordVersion(e) {
          let t;
          if (e.isFoundDocument()) t = e.version;
          else {
            if (!e.isNoDocument()) throw Ct();
            t = Kt.min();
          }
          const r = this.readVersions.get(e.key.toString());
          if (r) {
            if (!t.isEqual(r))
              throw new Ge(
                be.ABORTED,
                "Document version changed between two reads."
              );
          } else this.readVersions.set(e.key.toString(), t);
        }
        precondition(e) {
          const t = this.readVersions.get(e.toString());
          return !this.writtenDocs.has(e.toString()) && t
            ? yr.updateTime(t)
            : yr.none();
        }
        preconditionForUpdate(e) {
          const t = this.readVersions.get(e.toString());
          if (!this.writtenDocs.has(e.toString()) && t) {
            if (t.isEqual(Kt.min()))
              throw new Ge(
                be.INVALID_ARGUMENT,
                "Can't update a document that doesn't exist."
              );
            return yr.updateTime(t);
          }
          return yr.exists(!0);
        }
        write(e) {
          this.ensureCommitNotCalled(), this.mutations.push(e);
        }
        ensureCommitNotCalled() {}
      }
      class q$ {
        constructor(e, t, r, i, a) {
          (this.asyncQueue = e),
            (this.datastore = t),
            (this.options = r),
            (this.updateFunction = i),
            (this.deferred = a),
            (this.Dc = r.maxAttempts),
            (this.So = new mM(this.asyncQueue, "transaction_retry"));
        }
        run() {
          (this.Dc -= 1), this.Cc();
        }
        Cc() {
          var e = this;
          this.So.Io(
            (0, Te.Z)(function* () {
              const t = new z$(e.datastore),
                r = e.xc(t);
              r &&
                r
                  .then((i) => {
                    e.asyncQueue.enqueueAndForget(() =>
                      t
                        .commit()
                        .then(() => {
                          e.deferred.resolve(i);
                        })
                        .catch((a) => {
                          e.Nc(a);
                        })
                    );
                  })
                  .catch((i) => {
                    e.Nc(i);
                  });
            })
          );
        }
        xc(e) {
          try {
            const t = this.updateFunction(e);
            return !GE(t) && t.catch && t.then
              ? t
              : (this.deferred.reject(
                  Error("Transaction callback must return a Promise")
                ),
                null);
          } catch (t) {
            return this.deferred.reject(t), null;
          }
        }
        Nc(e) {
          this.Dc > 0 && this.kc(e)
            ? ((this.Dc -= 1),
              this.asyncQueue.enqueueAndForget(
                () => (this.Cc(), Promise.resolve())
              ))
            : this.deferred.reject(e);
        }
        kc(e) {
          if ("FirebaseError" === e.name) {
            const t = e.code;
            return "aborted" === t || "failed-precondition" === t || !n1(t);
          }
          return !1;
        }
      }
      class K$ {
        constructor(e, t, r, i) {
          var a = this;
          (this.authCredentials = e),
            (this.appCheckCredentials = t),
            (this.asyncQueue = r),
            (this.databaseInfo = i),
            (this.user = Pr.UNAUTHENTICATED),
            (this.clientId = FR.I()),
            (this.authCredentialListener = () => Promise.resolve()),
            (this.appCheckCredentialListener = () => Promise.resolve()),
            this.authCredentials.start(
              r,
              (function () {
                var l = (0, Te.Z)(function* (h) {
                  Je("FirestoreClient", "Received user=", h.uid),
                    yield a.authCredentialListener(h),
                    (a.user = h);
                });
                return function (h) {
                  return l.apply(this, arguments);
                };
              })()
            ),
            this.appCheckCredentials.start(
              r,
              (l) => (
                Je("FirestoreClient", "Received new app check token=", l),
                this.appCheckCredentialListener(l, this.user)
              )
            );
        }
        getConfiguration() {
          var e = this;
          return (0, Te.Z)(function* () {
            return {
              asyncQueue: e.asyncQueue,
              databaseInfo: e.databaseInfo,
              clientId: e.clientId,
              authCredentials: e.authCredentials,
              appCheckCredentials: e.appCheckCredentials,
              initialUser: e.user,
              maxConcurrentLimboResolutions: 100,
            };
          })();
        }
        setCredentialChangeListener(e) {
          this.authCredentialListener = e;
        }
        setAppCheckTokenChangeListener(e) {
          this.appCheckCredentialListener = e;
        }
        verifyNotTerminated() {
          if (this.asyncQueue.isShuttingDown)
            throw new Ge(
              be.FAILED_PRECONDITION,
              "The client has already been terminated."
            );
        }
        terminate() {
          var e = this;
          this.asyncQueue.enterRestrictedMode();
          const t = new Vr();
          return (
            this.asyncQueue.enqueueAndForgetEvenWhileRestricted(
              (0, Te.Z)(function* () {
                try {
                  e.onlineComponents && (yield e.onlineComponents.terminate()),
                    e.offlineComponents &&
                      (yield e.offlineComponents.terminate()),
                    e.authCredentials.shutdown(),
                    e.appCheckCredentials.shutdown(),
                    t.resolve();
                } catch (r) {
                  const i = Dm(r, "Failed to shutdown persistence");
                  t.reject(i);
                }
              })
            ),
            t.promise
          );
        }
      }
      function OF(n, e) {
        return fx.apply(this, arguments);
      }
      function fx() {
        return (
          (fx = (0, Te.Z)(function* (n, e) {
            n.asyncQueue.verifyOperationInProgress(),
              Je("FirestoreClient", "Initializing OfflineComponentProvider");
            const t = yield n.getConfiguration();
            yield e.initialize(t);
            let r = t.initialUser;
            n.setCredentialChangeListener(
              (function () {
                var i = (0, Te.Z)(function* (a) {
                  r.isEqual(a) || (yield nF(e.localStore, a), (r = a));
                });
                return function (a) {
                  return i.apply(this, arguments);
                };
              })()
            ),
              e.persistence.setDatabaseDeletedListener(() => n.terminate()),
              (n.offlineComponents = e);
          })),
          fx.apply(this, arguments)
        );
      }
      function kF(n, e) {
        return px.apply(this, arguments);
      }
      function px() {
        return (
          (px = (0, Te.Z)(function* (n, e) {
            n.asyncQueue.verifyOperationInProgress();
            const t = yield gx(n);
            Je("FirestoreClient", "Initializing OnlineComponentProvider");
            const r = yield n.getConfiguration();
            yield e.initialize(t, r),
              n.setCredentialChangeListener((i) => vF(e.remoteStore, i)),
              n.setAppCheckTokenChangeListener((i, a) => vF(e.remoteStore, a)),
              (n.onlineComponents = e);
          })),
          px.apply(this, arguments)
        );
      }
      function gx(n) {
        return mx.apply(this, arguments);
      }
      function mx() {
        return (
          (mx = (0, Te.Z)(function* (n) {
            return (
              n.offlineComponents ||
                (Je(
                  "FirestoreClient",
                  "Using default OfflineComponentProvider"
                ),
                yield OF(n, new xF())),
              n.offlineComponents
            );
          })),
          mx.apply(this, arguments)
        );
      }
      function Qb(n) {
        return _x.apply(this, arguments);
      }
      function _x() {
        return (
          (_x = (0, Te.Z)(function* (n) {
            return (
              n.onlineComponents ||
                (Je("FirestoreClient", "Using default OnlineComponentProvider"),
                yield kF(n, new hx())),
              n.onlineComponents
            );
          })),
          _x.apply(this, arguments)
        );
      }
      function FF(n) {
        return gx(n).then((e) => e.persistence);
      }
      function yx(n) {
        return gx(n).then((e) => e.localStore);
      }
      function LF(n) {
        return Qb(n).then((e) => e.remoteStore);
      }
      function vx(n) {
        return Qb(n).then((e) => e.syncEngine);
      }
      function Rm(n) {
        return Ex.apply(this, arguments);
      }
      function Ex() {
        return (
          (Ex = (0, Te.Z)(function* (n) {
            const e = yield Qb(n),
              t = e.eventManager;
            return (
              (t.onListen = T$.bind(null, e.syncEngine)),
              (t.onUnlisten = S$.bind(null, e.syncEngine)),
              t
            );
          })),
          Ex.apply(this, arguments)
        );
      }
      function VF(n, e, t = {}) {
        const r = new Vr();
        return (
          n.asyncQueue.enqueueAndForget(
            (0, Te.Z)(function* () {
              return (function (i, a, l, h, m) {
                const v = new Yb({
                    next: (D) => {
                      a.enqueueAndForget(() => LM(i, b));
                      const R = D.docs.has(l);
                      !R && D.fromCache
                        ? m.reject(
                            new Ge(
                              be.UNAVAILABLE,
                              "Failed to get document because the client is offline."
                            )
                          )
                        : R && D.fromCache && h && "server" === h.source
                        ? m.reject(
                            new Ge(
                              be.UNAVAILABLE,
                              'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to "server" to retrieve the cached document.)'
                            )
                          )
                        : m.resolve(D);
                    },
                    error: (D) => m.reject(D),
                  }),
                  b = new BM(cm(l.path), v, {
                    includeMetadataChanges: !0,
                    Du: !0,
                  });
                return kM(i, b);
              })(yield Rm(n), n.asyncQueue, e, t, r);
            })
          ),
          r.promise
        );
      }
      function UF(n, e, t = {}) {
        const r = new Vr();
        return (
          n.asyncQueue.enqueueAndForget(
            (0, Te.Z)(function* () {
              return (function (i, a, l, h, m) {
                const v = new Yb({
                    next: (D) => {
                      a.enqueueAndForget(() => LM(i, b)),
                        D.fromCache && "server" === h.source
                          ? m.reject(
                              new Ge(
                                be.UNAVAILABLE,
                                'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to "server" to retrieve the cached documents.)'
                              )
                            )
                          : m.resolve(D);
                    },
                    error: (D) => m.reject(D),
                  }),
                  b = new BM(l, v, { includeMetadataChanges: !0, Du: !0 });
                return kM(i, b);
              })(yield Rm(n), n.asyncQueue, e, t, r);
            })
          ),
          r.promise
        );
      }
      const BF = new Map();
      function wx(n, e, t) {
        if (!t)
          throw new Ge(
            be.INVALID_ARGUMENT,
            `Function ${n}() cannot be called with an empty ${e}.`
          );
      }
      function jF(n, e, t, r) {
        if (!0 === e && !0 === r)
          throw new Ge(
            be.INVALID_ARGUMENT,
            `${n} and ${t} cannot be used together.`
          );
      }
      function $F(n) {
        if (!u.isDocumentKey(n))
          throw new Ge(
            be.INVALID_ARGUMENT,
            `Invalid document reference. Document references must have an even number of segments, but ${n} has ${n.length}.`
          );
      }
      function HF(n) {
        if (u.isDocumentKey(n))
          throw new Ge(
            be.INVALID_ARGUMENT,
            `Invalid collection reference. Collection references must have an odd number of segments, but ${n} has ${n.length}.`
          );
      }
      function Jb(n) {
        if (void 0 === n) return "undefined";
        if (null === n) return "null";
        if ("string" == typeof n)
          return (
            n.length > 20 && (n = `${n.substring(0, 20)}...`), JSON.stringify(n)
          );
        if ("number" == typeof n || "boolean" == typeof n) return "" + n;
        if ("object" == typeof n) {
          if (n instanceof Array) return "an array";
          {
            const e = (t = n).constructor ? t.constructor.name : null;
            return e ? `a custom ${e} object` : "an object";
          }
        }
        var t;
        return "function" == typeof n ? "a function" : Ct();
      }
      function Rn(n, e) {
        if (("_delegate" in n && (n = n._delegate), !(n instanceof e))) {
          if (e.name === n.constructor.name)
            throw new Ge(
              be.INVALID_ARGUMENT,
              "Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?"
            );
          {
            const t = Jb(n);
            throw new Ge(
              be.INVALID_ARGUMENT,
              `Expected type '${e.name}', but it was: ${t}`
            );
          }
        }
        return n;
      }
      function GF(n, e) {
        if (e <= 0)
          throw new Ge(
            be.INVALID_ARGUMENT,
            `Function ${n}() requires a positive number, but it was: ${e}.`
          );
      }
      class WF {
        constructor(e) {
          var t;
          if (void 0 === e.host) {
            if (void 0 !== e.ssl)
              throw new Ge(
                be.INVALID_ARGUMENT,
                "Can't provide ssl option if host option is not set"
              );
            (this.host = "firestore.googleapis.com"), (this.ssl = !0);
          } else
            (this.host = e.host),
              (this.ssl = null === (t = e.ssl) || void 0 === t || t);
          if (
            ((this.credentials = e.credentials),
            (this.ignoreUndefinedProperties = !!e.ignoreUndefinedProperties),
            void 0 === e.cacheSizeBytes)
          )
            this.cacheSizeBytes = 41943040;
          else {
            if (-1 !== e.cacheSizeBytes && e.cacheSizeBytes < 1048576)
              throw new Ge(
                be.INVALID_ARGUMENT,
                "cacheSizeBytes must be at least 1048576"
              );
            this.cacheSizeBytes = e.cacheSizeBytes;
          }
          (this.experimentalForceLongPolling =
            !!e.experimentalForceLongPolling),
            (this.experimentalAutoDetectLongPolling =
              !!e.experimentalAutoDetectLongPolling),
            (this.useFetchStreams = !!e.useFetchStreams),
            jF(
              "experimentalForceLongPolling",
              e.experimentalForceLongPolling,
              "experimentalAutoDetectLongPolling",
              e.experimentalAutoDetectLongPolling
            );
        }
        isEqual(e) {
          return (
            this.host === e.host &&
            this.ssl === e.ssl &&
            this.credentials === e.credentials &&
            this.cacheSizeBytes === e.cacheSizeBytes &&
            this.experimentalForceLongPolling ===
              e.experimentalForceLongPolling &&
            this.experimentalAutoDetectLongPolling ===
              e.experimentalAutoDetectLongPolling &&
            this.ignoreUndefinedProperties === e.ignoreUndefinedProperties &&
            this.useFetchStreams === e.useFetchStreams
          );
        }
      }
      class yw {
        constructor(e, t, r) {
          (this._authCredentials = t),
            (this._appCheckCredentials = r),
            (this.type = "firestore-lite"),
            (this._persistenceKey = "(lite)"),
            (this._settings = new WF({})),
            (this._settingsFrozen = !1),
            e instanceof ku
              ? (this._databaseId = e)
              : ((this._app = e),
                (this._databaseId = (function (i) {
                  if (
                    !Object.prototype.hasOwnProperty.apply(i.options, [
                      "projectId",
                    ])
                  )
                    throw new Ge(
                      be.INVALID_ARGUMENT,
                      '"projectId" not provided in firebase.initializeApp.'
                    );
                  return new ku(i.options.projectId);
                })(e)));
        }
        get app() {
          if (!this._app)
            throw new Ge(
              be.FAILED_PRECONDITION,
              "Firestore was not initialized using the Firebase SDK. 'app' is not available"
            );
          return this._app;
        }
        get _initialized() {
          return this._settingsFrozen;
        }
        get _terminated() {
          return void 0 !== this._terminateTask;
        }
        _setSettings(e) {
          if (this._settingsFrozen)
            throw new Ge(
              be.FAILED_PRECONDITION,
              "Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object."
            );
          (this._settings = new WF(e)),
            void 0 !== e.credentials &&
              (this._authCredentials = (function (t) {
                if (!t) return new yk();
                switch (t.type) {
                  case "gapi":
                    const r = t.client;
                    return (
                      Wt(
                        !(
                          "object" != typeof r ||
                          null === r ||
                          !r.auth ||
                          !r.auth.getAuthHeaderValueForFirstParty
                        )
                      ),
                      new OR(r, t.sessionIndex || "0", t.iamToken || null)
                    );
                  case "provider":
                    return t.client;
                  default:
                    throw new Ge(
                      be.INVALID_ARGUMENT,
                      "makeAuthCredentialsProvider failed due to invalid credential type"
                    );
                }
              })(e.credentials));
        }
        _getSettings() {
          return this._settings;
        }
        _freezeSettings() {
          return (this._settingsFrozen = !0), this._settings;
        }
        _delete() {
          return (
            this._terminateTask || (this._terminateTask = this._terminate()),
            this._terminateTask
          );
        }
        toJSON() {
          return {
            app: this._app,
            databaseId: this._databaseId,
            settings: this._settings,
          };
        }
        _terminate() {
          return (
            (function (e) {
              const t = BF.get(e);
              t &&
                (Je("ComponentProvider", "Removing Datastore"),
                BF.delete(e),
                t.terminate());
            })(this),
            Promise.resolve()
          );
        }
      }
      class lr {
        constructor(e, t, r) {
          (this.converter = t),
            (this._key = r),
            (this.type = "document"),
            (this.firestore = e);
        }
        get _path() {
          return this._key.path;
        }
        get id() {
          return this._key.path.lastSegment();
        }
        get path() {
          return this._key.path.canonicalString();
        }
        get parent() {
          return new La(
            this.firestore,
            this.converter,
            this._key.path.popLast()
          );
        }
        withConverter(e) {
          return new lr(this.firestore, e, this._key);
        }
      }
      class xi {
        constructor(e, t, r) {
          (this.converter = t),
            (this._query = r),
            (this.type = "query"),
            (this.firestore = e);
        }
        withConverter(e) {
          return new xi(this.firestore, e, this._query);
        }
      }
      class La extends xi {
        constructor(e, t, r) {
          super(e, t, cm(r)), (this._path = r), (this.type = "collection");
        }
        get id() {
          return this._query.path.lastSegment();
        }
        get path() {
          return this._query.path.canonicalString();
        }
        get parent() {
          const e = this._path.popLast();
          return e.isEmpty() ? null : new lr(this.firestore, null, new u(e));
        }
        withConverter(e) {
          return new La(this.firestore, e, this._path);
        }
      }
      function zF(n, e, ...t) {
        if (
          ((n = (0, ee.m9)(n)), wx("collection", "path", e), n instanceof yw)
        ) {
          const r = An.fromString(e, ...t);
          return HF(r), new La(n, null, r);
        }
        {
          if (!(n instanceof lr || n instanceof La))
            throw new Ge(
              be.INVALID_ARGUMENT,
              "Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore"
            );
          const r = n._path.child(An.fromString(e, ...t));
          return HF(r), new La(n.firestore, null, r);
        }
      }
      function Xb(n, e, ...t) {
        if (
          ((n = (0, ee.m9)(n)),
          1 === arguments.length && (e = FR.I()),
          wx("doc", "path", e),
          n instanceof yw)
        ) {
          const r = An.fromString(e, ...t);
          return $F(r), new lr(n, null, new u(r));
        }
        {
          if (!(n instanceof lr || n instanceof La))
            throw new Ge(
              be.INVALID_ARGUMENT,
              "Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore"
            );
          const r = n._path.child(An.fromString(e, ...t));
          return (
            $F(r),
            new lr(n.firestore, n instanceof La ? n.converter : null, new u(r))
          );
        }
      }
      function qF(n, e) {
        return (
          (n = (0, ee.m9)(n)),
          (e = (0, ee.m9)(e)),
          (n instanceof lr || n instanceof La) &&
            (e instanceof lr || e instanceof La) &&
            n.firestore === e.firestore &&
            n.path === e.path &&
            n.converter === e.converter
        );
      }
      function KF(n, e) {
        return (
          (n = (0, ee.m9)(n)),
          (e = (0, ee.m9)(e)),
          n instanceof xi &&
            e instanceof xi &&
            n.firestore === e.firestore &&
            YE(n._query, e._query) &&
            n.converter === e.converter
        );
      }
      class sH {
        constructor() {
          (this.Oc = Promise.resolve()),
            (this.Mc = []),
            (this.Fc = !1),
            (this.$c = []),
            (this.Bc = null),
            (this.Lc = !1),
            (this.Uc = !1),
            (this.qc = []),
            (this.So = new mM(this, "async_queue_retry")),
            (this.Kc = () => {
              const t = qb();
              t &&
                Je(
                  "AsyncQueue",
                  "Visibility state changed to " + t.visibilityState
                ),
                this.So.Eo();
            });
          const e = qb();
          e &&
            "function" == typeof e.addEventListener &&
            e.addEventListener("visibilitychange", this.Kc);
        }
        get isShuttingDown() {
          return this.Fc;
        }
        enqueueAndForget(e) {
          this.enqueue(e);
        }
        enqueueAndForgetEvenWhileRestricted(e) {
          this.Gc(), this.Qc(e);
        }
        enterRestrictedMode(e) {
          if (!this.Fc) {
            (this.Fc = !0), (this.Uc = e || !1);
            const t = qb();
            t &&
              "function" == typeof t.removeEventListener &&
              t.removeEventListener("visibilitychange", this.Kc);
          }
        }
        enqueue(e) {
          if ((this.Gc(), this.Fc)) return new Promise(() => {});
          const t = new Vr();
          return this.Qc(() =>
            this.Fc && this.Uc
              ? Promise.resolve()
              : (e().then(t.resolve, t.reject), t.promise)
          ).then(() => t.promise);
        }
        enqueueRetryable(e) {
          this.enqueueAndForget(() => (this.Mc.push(e), this.jc()));
        }
        jc() {
          var e = this;
          return (0, Te.Z)(function* () {
            if (0 !== e.Mc.length) {
              try {
                yield e.Mc[0](), e.Mc.shift(), e.So.reset();
              } catch (t) {
                if (!nn(t)) throw t;
                Je("AsyncQueue", "Operation failed with retryable error: " + t);
              }
              e.Mc.length > 0 && e.So.Io(() => e.jc());
            }
          })();
        }
        Qc(e) {
          const t = this.Oc.then(
            () => (
              (this.Lc = !0),
              e()
                .catch((r) => {
                  throw (
                    ((this.Bc = r),
                    (this.Lc = !1),
                    _r(
                      "INTERNAL UNHANDLED ERROR: ",
                      (function (a) {
                        let l = a.message || "";
                        return (
                          a.stack &&
                            (l = a.stack.includes(a.message)
                              ? a.stack
                              : a.message + "\n" + a.stack),
                          l
                        );
                      })(r)
                    ),
                    r)
                  );
                })
                .then((r) => ((this.Lc = !1), r))
            )
          );
          return (this.Oc = t), t;
        }
        enqueueAfterDelay(e, t, r) {
          this.Gc(), this.qc.indexOf(e) > -1 && (t = 0);
          const i = OM.createAndSchedule(this, e, t, r, (a) => this.Wc(a));
          return this.$c.push(i), i;
        }
        Gc() {
          this.Bc && Ct();
        }
        verifyOperationInProgress() {}
        zc() {
          var e = this;
          return (0, Te.Z)(function* () {
            let t;
            do {
              (t = e.Oc), yield t;
            } while (t !== e.Oc);
          })();
        }
        Hc(e) {
          for (const t of this.$c) if (t.timerId === e) return !0;
          return !1;
        }
        Jc(e) {
          return this.zc().then(() => {
            this.$c.sort((t, r) => t.targetTimeMs - r.targetTimeMs);
            for (const t of this.$c)
              if ((t.skipDelay(), "all" !== e && t.timerId === e)) break;
            return this.zc();
          });
        }
        Yc(e) {
          this.qc.push(e);
        }
        Wc(e) {
          const t = this.$c.indexOf(e);
          this.$c.splice(t, 1);
        }
      }
      function Ix(n) {
        return (function (e, t) {
          if ("object" != typeof e || null === e) return !1;
          const r = e;
          for (const i of ["next", "error", "complete"])
            if (i in r && "function" == typeof r[i]) return !0;
          return !1;
        })(n);
      }
      class oH {
        constructor() {
          (this._progressObserver = {}),
            (this._taskCompletionResolver = new Vr()),
            (this._lastProgress = {
              taskState: "Running",
              totalBytes: 0,
              totalDocuments: 0,
              bytesLoaded: 0,
              documentsLoaded: 0,
            });
        }
        onProgress(e, t, r) {
          this._progressObserver = { next: e, error: t, complete: r };
        }
        catch(e) {
          return this._taskCompletionResolver.promise.catch(e);
        }
        then(e, t) {
          return this._taskCompletionResolver.promise.then(e, t);
        }
        _completeWith(e) {
          this._updateProgress(e),
            this._progressObserver.complete &&
              this._progressObserver.complete(),
            this._taskCompletionResolver.resolve(e);
        }
        _failWith(e) {
          (this._lastProgress.taskState = "Error"),
            this._progressObserver.next &&
              this._progressObserver.next(this._lastProgress),
            this._progressObserver.error && this._progressObserver.error(e),
            this._taskCompletionResolver.reject(e);
        }
        _updateProgress(e) {
          (this._lastProgress = e),
            this._progressObserver.next && this._progressObserver.next(e);
        }
      }
      class dr extends yw {
        constructor(e, t, r) {
          super(e, t, r),
            (this.type = "firestore"),
            (this._queue = new sH()),
            (this._persistenceKey = "name" in e ? e.name : "[DEFAULT]");
        }
        _terminate() {
          return (
            this._firestoreClient || ZF(this), this._firestoreClient.terminate()
          );
        }
      }
      function uH(n = (0, wn.getApp)()) {
        return (0, wn._getProvider)(n, "firestore").getImmediate();
      }
      function Br(n) {
        return (
          n._firestoreClient || ZF(n),
          n._firestoreClient.verifyNotTerminated(),
          n._firestoreClient
        );
      }
      function ZF(n) {
        var e;
        const t = n._freezeSettings(),
          r =
            ((a =
              (null === (e = n._app) || void 0 === e
                ? void 0
                : e.options.appId) || ""),
            new y2(
              n._databaseId,
              a,
              n._persistenceKey,
              (h = t).host,
              h.ssl,
              h.experimentalForceLongPolling,
              h.experimentalAutoDetectLongPolling,
              h.useFetchStreams
            ));
        var a, h;
        n._firestoreClient = new K$(
          n._authCredentials,
          n._appCheckCredentials,
          n._queue,
          r
        );
      }
      function YF(n, e, t) {
        const r = new Vr();
        return n.asyncQueue
          .enqueue(
            (0, Te.Z)(function* () {
              try {
                yield OF(n, t), yield kF(n, e), r.resolve();
              } catch (i) {
                const a = i;
                if (
                  !("FirebaseError" === (l = a).name
                    ? l.code === be.FAILED_PRECONDITION ||
                      l.code === be.UNIMPLEMENTED
                    : !(
                        typeof DOMException < "u" && l instanceof DOMException
                      ) ||
                      22 === l.code ||
                      20 === l.code ||
                      11 === l.code)
                )
                  throw a;
                console.warn(
                  "Error enabling offline persistence. Falling back to persistence disabled: " +
                    a
                ),
                  r.reject(a);
              }
              var l;
            })
          )
          .then(() => r.promise);
      }
      function QF(n) {
        if (n._initialized || n._terminated)
          throw new Ge(
            be.FAILED_PRECONDITION,
            "Firestore has already been started and persistence can no longer be enabled. You can only enable persistence before calling any other methods on a Firestore object."
          );
      }
      class Uu {
        constructor(...e) {
          for (let t = 0; t < e.length; ++t)
            if (0 === e[t].length)
              throw new Ge(
                be.INVALID_ARGUMENT,
                "Invalid field name at argument $(i + 1). Field names must not be empty."
              );
          this._internalPath = new o(e);
        }
        isEqual(e) {
          return this._internalPath.isEqual(e._internalPath);
        }
      }
      class Va {
        constructor(e) {
          this._byteString = e;
        }
        static fromBase64String(e) {
          try {
            return new Va(Kr.fromBase64String(e));
          } catch (t) {
            throw new Ge(
              be.INVALID_ARGUMENT,
              "Failed to construct data from Base64 string: " + t
            );
          }
        }
        static fromUint8Array(e) {
          return new Va(Kr.fromUint8Array(e));
        }
        toBase64() {
          return this._byteString.toBase64();
        }
        toUint8Array() {
          return this._byteString.toUint8Array();
        }
        toString() {
          return "Bytes(base64: " + this.toBase64() + ")";
        }
        isEqual(e) {
          return this._byteString.isEqual(e._byteString);
        }
      }
      class pf {
        constructor(e) {
          this._methodName = e;
        }
      }
      class eD {
        constructor(e, t) {
          if (!isFinite(e) || e < -90 || e > 90)
            throw new Ge(
              be.INVALID_ARGUMENT,
              "Latitude must be a number between -90 and 90, but was: " + e
            );
          if (!isFinite(t) || t < -180 || t > 180)
            throw new Ge(
              be.INVALID_ARGUMENT,
              "Longitude must be a number between -180 and 180, but was: " + t
            );
          (this._lat = e), (this._long = t);
        }
        get latitude() {
          return this._lat;
        }
        get longitude() {
          return this._long;
        }
        isEqual(e) {
          return this._lat === e._lat && this._long === e._long;
        }
        toJSON() {
          return { latitude: this._lat, longitude: this._long };
        }
        _compareTo(e) {
          return un(this._lat, e._lat) || un(this._long, e._long);
        }
      }
      const _H = /^__.*__$/;
      class yH {
        constructor(e, t, r) {
          (this.data = e), (this.fieldMask = t), (this.fieldTransforms = r);
        }
        toMutation(e, t) {
          return null !== this.fieldMask
            ? new Lu(e, this.data, this.fieldMask, t, this.fieldTransforms)
            : new pm(e, this.data, t, this.fieldTransforms);
        }
      }
      class JF {
        constructor(e, t, r) {
          (this.data = e), (this.fieldMask = t), (this.fieldTransforms = r);
        }
        toMutation(e, t) {
          return new Lu(e, this.data, this.fieldMask, t, this.fieldTransforms);
        }
      }
      function XF(n) {
        switch (n) {
          case 0:
          case 2:
          case 1:
            return !0;
          case 3:
          case 4:
            return !1;
          default:
            throw Ct();
        }
      }
      class tD {
        constructor(e, t, r, i, a, l) {
          (this.settings = e),
            (this.databaseId = t),
            (this.wt = r),
            (this.ignoreUndefinedProperties = i),
            void 0 === a && this.Xc(),
            (this.fieldTransforms = a || []),
            (this.fieldMask = l || []);
        }
        get path() {
          return this.settings.path;
        }
        get Zc() {
          return this.settings.Zc;
        }
        ta(e) {
          return new tD(
            Object.assign(Object.assign({}, this.settings), e),
            this.databaseId,
            this.wt,
            this.ignoreUndefinedProperties,
            this.fieldTransforms,
            this.fieldMask
          );
        }
        ea(e) {
          var t;
          const r =
              null === (t = this.path) || void 0 === t ? void 0 : t.child(e),
            i = this.ta({ path: r, na: !1 });
          return i.sa(e), i;
        }
        ia(e) {
          var t;
          const r =
              null === (t = this.path) || void 0 === t ? void 0 : t.child(e),
            i = this.ta({ path: r, na: !1 });
          return i.Xc(), i;
        }
        ra(e) {
          return this.ta({ path: void 0, na: !0 });
        }
        oa(e) {
          return iD(
            e,
            this.settings.methodName,
            this.settings.ua || !1,
            this.path,
            this.settings.ca
          );
        }
        contains(e) {
          return (
            void 0 !== this.fieldMask.find((t) => e.isPrefixOf(t)) ||
            void 0 !== this.fieldTransforms.find((t) => e.isPrefixOf(t.field))
          );
        }
        Xc() {
          if (this.path)
            for (let e = 0; e < this.path.length; e++)
              this.sa(this.path.get(e));
        }
        sa(e) {
          if (0 === e.length)
            throw this.oa("Document fields must not be empty");
          if (XF(this.Zc) && _H.test(e))
            throw this.oa('Document fields cannot begin and end with "__"');
        }
      }
      class vH {
        constructor(e, t, r) {
          (this.databaseId = e),
            (this.ignoreUndefinedProperties = t),
            (this.wt = r || gw(e));
        }
        aa(e, t, r, i = !1) {
          return new tD(
            { Zc: e, methodName: t, ca: r, path: o.emptyPath(), na: !1, ua: i },
            this.databaseId,
            this.wt,
            this.ignoreUndefinedProperties
          );
        }
      }
      function gf(n) {
        const e = n._freezeSettings(),
          t = gw(n._databaseId);
        return new vH(n._databaseId, !!e.ignoreUndefinedProperties, t);
      }
      function nD(n, e, t, r, i, a = {}) {
        const l = n.aa(a.merge || a.mergeFields ? 2 : 0, e, t, i);
        Tx("Data must be an object, but it was:", l, r);
        const h = nL(r, l);
        let m, v;
        if (a.merge) (m = new ks(l.fieldMask)), (v = l.fieldTransforms);
        else if (a.mergeFields) {
          const b = [];
          for (const D of a.mergeFields) {
            const R = Sx(e, D, t);
            if (!l.contains(R))
              throw new Ge(
                be.INVALID_ARGUMENT,
                `Field '${R}' is specified in your field mask but missing from your input data.`
              );
            iL(b, R) || b.push(R);
          }
          (m = new ks(b)),
            (v = l.fieldTransforms.filter((D) => m.covers(D.field)));
        } else (m = null), (v = l.fieldTransforms);
        return new yH(new wi(h), m, v);
      }
      class vw extends pf {
        _toFieldTransform(e) {
          if (2 !== e.Zc)
            throw e.oa(
              1 === e.Zc
                ? `${this._methodName}() can only appear at the top level of your update data`
                : `${this._methodName}() cannot be used with set() unless you pass {merge:true}`
            );
          return e.fieldMask.push(e.path), null;
        }
        isEqual(e) {
          return e instanceof vw;
        }
      }
      function eL(n, e, t) {
        return new tD(
          { Zc: 3, ca: e.settings.ca, methodName: n._methodName, na: t },
          e.databaseId,
          e.wt,
          e.ignoreUndefinedProperties
        );
      }
      class Cx extends pf {
        _toFieldTransform(e) {
          return new QE(e.path, new hm());
        }
        isEqual(e) {
          return e instanceof Cx;
        }
      }
      class EH extends pf {
        constructor(e, t) {
          super(e), (this.ha = t);
        }
        _toFieldTransform(e) {
          const t = eL(this, e, !0),
            r = this.ha.map((a) => mf(a, t)),
            i = new nf(r);
          return new QE(e.path, i);
        }
        isEqual(e) {
          return this === e;
        }
      }
      class wH extends pf {
        constructor(e, t) {
          super(e), (this.ha = t);
        }
        _toFieldTransform(e) {
          const t = eL(this, e, !0),
            r = this.ha.map((a) => mf(a, t)),
            i = new rf(r);
          return new QE(e.path, i);
        }
        isEqual(e) {
          return this === e;
        }
      }
      class IH extends pf {
        constructor(e, t) {
          super(e), (this.la = t);
        }
        _toFieldTransform(e) {
          const t = new fm(e.wt, Wk(e.wt, this.la));
          return new QE(e.path, t);
        }
        isEqual(e) {
          return this === e;
        }
      }
      function bx(n, e, t, r) {
        const i = n.aa(1, e, t);
        Tx("Data must be an object, but it was:", i, r);
        const a = [],
          l = wi.empty();
        Go(r, (m, v) => {
          const b = rD(e, m, t);
          v = (0, ee.m9)(v);
          const D = i.ia(b);
          if (v instanceof vw) a.push(b);
          else {
            const R = mf(v, D);
            null != R && (a.push(b), l.set(b, R));
          }
        });
        const h = new ks(a);
        return new JF(l, h, i.fieldTransforms);
      }
      function Dx(n, e, t, r, i, a) {
        const l = n.aa(1, e, t),
          h = [Sx(e, r, t)],
          m = [i];
        if (a.length % 2 != 0)
          throw new Ge(
            be.INVALID_ARGUMENT,
            `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`
          );
        for (let R = 0; R < a.length; R += 2)
          h.push(Sx(e, a[R])), m.push(a[R + 1]);
        const v = [],
          b = wi.empty();
        for (let R = h.length - 1; R >= 0; --R)
          if (!iL(v, h[R])) {
            const F = h[R];
            let B = m[R];
            B = (0, ee.m9)(B);
            const le = l.ia(F);
            if (B instanceof vw) v.push(F);
            else {
              const Ee = mf(B, le);
              null != Ee && (v.push(F), b.set(F, Ee));
            }
          }
        const D = new ks(v);
        return new JF(b, D, l.fieldTransforms);
      }
      function tL(n, e, t, r = !1) {
        return mf(t, n.aa(r ? 4 : 3, e));
      }
      function mf(n, e) {
        if (rL((n = (0, ee.m9)(n))))
          return Tx("Unsupported field value:", e, n), nL(n, e);
        if (n instanceof pf)
          return (
            (function (t, r) {
              if (!XF(r.Zc))
                throw r.oa(
                  `${t._methodName}() can only be used with update() and set()`
                );
              if (!r.path)
                throw r.oa(
                  `${t._methodName}() is not currently supported inside arrays`
                );
              const i = t._toFieldTransform(r);
              i && r.fieldTransforms.push(i);
            })(n, e),
            null
          );
        if (void 0 === n && e.ignoreUndefinedProperties) return null;
        if ((e.path && e.fieldMask.push(e.path), n instanceof Array)) {
          if (e.settings.na && 4 !== e.Zc)
            throw e.oa("Nested arrays are not supported");
          return (function (t, r) {
            const i = [];
            let a = 0;
            for (const l of t) {
              let h = mf(l, r.ra(a));
              null == h && (h = { nullValue: "NULL_VALUE" }), i.push(h), a++;
            }
            return { arrayValue: { values: i } };
          })(n, e);
        }
        return (function (t, r) {
          if (null === (t = (0, ee.m9)(t))) return { nullValue: "NULL_VALUE" };
          if ("number" == typeof t) return Wk(r.wt, t);
          if ("boolean" == typeof t) return { booleanValue: t };
          if ("string" == typeof t) return { stringValue: t };
          if (t instanceof Date) {
            const i = ur.fromDate(t);
            return { timestampValue: rw(r.wt, i) };
          }
          if (t instanceof ur) {
            const i = new ur(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));
            return { timestampValue: rw(r.wt, i) };
          }
          if (t instanceof eD)
            return {
              geoPointValue: { latitude: t.latitude, longitude: t.longitude },
            };
          if (t instanceof Va) return { bytesValue: h1(r.wt, t._byteString) };
          if (t instanceof lr) {
            const i = r.databaseId,
              a = t.firestore._databaseId;
            if (!a.isEqual(i))
              throw r.oa(
                `Document reference is for database ${a.projectId}/${a.database} but should be for database ${i.projectId}/${i.database}`
              );
            return {
              referenceValue: qR(
                t.firestore._databaseId || r.databaseId,
                t._key.path
              ),
            };
          }
          throw r.oa(`Unsupported field value: ${Jb(t)}`);
        })(n, e);
      }
      function nL(n, e) {
        const t = {};
        return (
          om(n)
            ? e.path && e.path.length > 0 && e.fieldMask.push(e.path)
            : Go(n, (r, i) => {
                const a = mf(i, e.ea(r));
                null != a && (t[r] = a);
              }),
          { mapValue: { fields: t } }
        );
      }
      function rL(n) {
        return !(
          "object" != typeof n ||
          null === n ||
          n instanceof Array ||
          n instanceof Date ||
          n instanceof ur ||
          n instanceof eD ||
          n instanceof Va ||
          n instanceof lr ||
          n instanceof pf
        );
      }
      function Tx(n, e, t) {
        if (
          !rL(t) ||
          "object" != typeof (r = t) ||
          null === r ||
          (Object.getPrototypeOf(r) !== Object.prototype &&
            null !== Object.getPrototypeOf(r))
        ) {
          const r = Jb(t);
          throw e.oa("an object" === r ? n + " a custom object" : n + " " + r);
        }
        var r;
      }
      function Sx(n, e, t) {
        if ((e = (0, ee.m9)(e)) instanceof Uu) return e._internalPath;
        if ("string" == typeof e) return rD(n, e);
        throw iD(
          "Field path arguments must be of type string or ",
          n,
          !1,
          void 0,
          t
        );
      }
      const CH = new RegExp("[~\\*/\\[\\]]");
      function rD(n, e, t) {
        if (e.search(CH) >= 0)
          throw iD(
            `Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`,
            n,
            !1,
            void 0,
            t
          );
        try {
          return new Uu(...e.split("."))._internalPath;
        } catch {
          throw iD(
            `Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`,
            n,
            !1,
            void 0,
            t
          );
        }
      }
      function iD(n, e, t, r, i) {
        const a = r && !r.isEmpty(),
          l = void 0 !== i;
        let h = `Function ${e}() called with invalid data`;
        t && (h += " (via `toFirestore()`)"), (h += ". ");
        let m = "";
        return (
          (a || l) &&
            ((m += " (found"),
            a && (m += ` in field ${r}`),
            l && (m += ` in document ${i}`),
            (m += ")")),
          new Ge(be.INVALID_ARGUMENT, h + n + m)
        );
      }
      function iL(n, e) {
        return n.some((t) => t.isEqual(e));
      }
      class Ew {
        constructor(e, t, r, i, a) {
          (this._firestore = e),
            (this._userDataWriter = t),
            (this._key = r),
            (this._document = i),
            (this._converter = a);
        }
        get id() {
          return this._key.path.lastSegment();
        }
        get ref() {
          return new lr(this._firestore, this._converter, this._key);
        }
        exists() {
          return null !== this._document;
        }
        data() {
          if (this._document) {
            if (this._converter) {
              const e = new bH(
                this._firestore,
                this._userDataWriter,
                this._key,
                this._document,
                null
              );
              return this._converter.fromFirestore(e);
            }
            return this._userDataWriter.convertValue(this._document.data.value);
          }
        }
        get(e) {
          if (this._document) {
            const t = this._document.data.field(sD("DocumentSnapshot.get", e));
            if (null !== t) return this._userDataWriter.convertValue(t);
          }
        }
      }
      class bH extends Ew {
        data() {
          return super.data();
        }
      }
      function sD(n, e) {
        return "string" == typeof e
          ? rD(n, e)
          : e instanceof Uu
          ? e._internalPath
          : e._delegate._internalPath;
      }
      class _f {
        constructor(e, t) {
          (this.hasPendingWrites = e), (this.fromCache = t);
        }
        isEqual(e) {
          return (
            this.hasPendingWrites === e.hasPendingWrites &&
            this.fromCache === e.fromCache
          );
        }
      }
      class Bu extends Ew {
        constructor(e, t, r, i, a, l) {
          super(e, t, r, i, l),
            (this._firestore = e),
            (this._firestoreImpl = e),
            (this.metadata = a);
        }
        exists() {
          return super.exists();
        }
        data(e = {}) {
          if (this._document) {
            if (this._converter) {
              const t = new ww(
                this._firestore,
                this._userDataWriter,
                this._key,
                this._document,
                this.metadata,
                null
              );
              return this._converter.fromFirestore(t, e);
            }
            return this._userDataWriter.convertValue(
              this._document.data.value,
              e.serverTimestamps
            );
          }
        }
        get(e, t = {}) {
          if (this._document) {
            const r = this._document.data.field(sD("DocumentSnapshot.get", e));
            if (null !== r)
              return this._userDataWriter.convertValue(r, t.serverTimestamps);
          }
        }
      }
      class ww extends Bu {
        data(e = {}) {
          return super.data(e);
        }
      }
      class Uc {
        constructor(e, t, r, i) {
          (this._firestore = e),
            (this._userDataWriter = t),
            (this._snapshot = i),
            (this.metadata = new _f(i.hasPendingWrites, i.fromCache)),
            (this.query = r);
        }
        get docs() {
          const e = [];
          return this.forEach((t) => e.push(t)), e;
        }
        get size() {
          return this._snapshot.docs.size;
        }
        get empty() {
          return 0 === this.size;
        }
        forEach(e, t) {
          this._snapshot.docs.forEach((r) => {
            e.call(
              t,
              new ww(
                this._firestore,
                this._userDataWriter,
                r.key,
                r,
                new _f(
                  this._snapshot.mutatedKeys.has(r.key),
                  this._snapshot.fromCache
                ),
                this.query.converter
              )
            );
          });
        }
        docChanges(e = {}) {
          const t = !!e.includeMetadataChanges;
          if (t && this._snapshot.excludesMetadataChanges)
            throw new Ge(
              be.INVALID_ARGUMENT,
              "To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot()."
            );
          return (
            (this._cachedChanges &&
              this._cachedChangesIncludeMetadataChanges === t) ||
              ((this._cachedChanges = (function (r, i) {
                if (r._snapshot.oldDocs.isEmpty()) {
                  let a = 0;
                  return r._snapshot.docChanges.map((l) => ({
                    type: "added",
                    doc: new ww(
                      r._firestore,
                      r._userDataWriter,
                      l.doc.key,
                      l.doc,
                      new _f(
                        r._snapshot.mutatedKeys.has(l.doc.key),
                        r._snapshot.fromCache
                      ),
                      r.query.converter
                    ),
                    oldIndex: -1,
                    newIndex: a++,
                  }));
                }
                {
                  let a = r._snapshot.oldDocs;
                  return r._snapshot.docChanges
                    .filter((l) => i || 3 !== l.type)
                    .map((l) => {
                      const h = new ww(
                        r._firestore,
                        r._userDataWriter,
                        l.doc.key,
                        l.doc,
                        new _f(
                          r._snapshot.mutatedKeys.has(l.doc.key),
                          r._snapshot.fromCache
                        ),
                        r.query.converter
                      );
                      let m = -1,
                        v = -1;
                      return (
                        0 !== l.type &&
                          ((m = a.indexOf(l.doc.key)),
                          (a = a.delete(l.doc.key))),
                        1 !== l.type &&
                          ((a = a.add(l.doc)), (v = a.indexOf(l.doc.key))),
                        { type: DH(l.type), doc: h, oldIndex: m, newIndex: v }
                      );
                    });
                }
              })(this, t)),
              (this._cachedChangesIncludeMetadataChanges = t)),
            this._cachedChanges
          );
        }
      }
      function DH(n) {
        switch (n) {
          case 0:
            return "added";
          case 2:
          case 3:
            return "modified";
          case 1:
            return "removed";
          default:
            return Ct();
        }
      }
      function sL(n, e) {
        return n instanceof Bu && e instanceof Bu
          ? n._firestore === e._firestore &&
              n._key.isEqual(e._key) &&
              (null === n._document
                ? null === e._document
                : n._document.isEqual(e._document)) &&
              n._converter === e._converter
          : n instanceof Uc &&
              e instanceof Uc &&
              n._firestore === e._firestore &&
              KF(n.query, e.query) &&
              n.metadata.isEqual(e.metadata) &&
              n._snapshot.isEqual(e._snapshot);
      }
      function oL(n) {
        if ("L" === n.limitType && 0 === n.explicitOrderBy.length)
          throw new Ge(
            be.UNIMPLEMENTED,
            "limitToLast() queries require specifying at least one orderBy() clause"
          );
      }
      class Iw {}
      function Bc(n, ...e) {
        for (const t of e) n = t._apply(n);
        return n;
      }
      class TH extends Iw {
        constructor(e, t, r) {
          super(),
            (this.fa = e),
            (this.da = t),
            (this._a = r),
            (this.type = "where");
        }
        _apply(e) {
          const t = gf(e.firestore),
            r = (function (i, a, l, h, m, v, b) {
              let D;
              if (m.isKeyField()) {
                if ("array-contains" === v || "array-contains-any" === v)
                  throw new Ge(
                    be.INVALID_ARGUMENT,
                    `Invalid Query. You can't perform '${v}' queries on documentId().`
                  );
                if ("in" === v || "not-in" === v) {
                  hL(b, v);
                  const F = [];
                  for (const B of b) F.push(dL(h, i, B));
                  D = { arrayValue: { values: F } };
                } else D = dL(h, i, b);
              } else
                ("in" !== v && "not-in" !== v && "array-contains-any" !== v) ||
                  hL(b, v),
                  (D = tL(l, "where", b, "in" === v || "not-in" === v));
              const R = Ii.create(m, v, D);
              return (
                (function (F, B) {
                  if (B.ht()) {
                    const Ee = $R(F);
                    if (null !== Ee && !Ee.isEqual(B.field))
                      throw new Ge(
                        be.INVALID_ARGUMENT,
                        `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${Ee.toString()}' and '${B.field.toString()}'`
                      );
                    const dt = jR(F);
                    null !== dt && fL(0, B.field, dt);
                  }
                  const le = (function (Ee, dt) {
                    for (const It of Ee.filters)
                      if (dt.indexOf(It.op) >= 0) return It.op;
                    return null;
                  })(
                    F,
                    (function (Ee) {
                      switch (Ee) {
                        case "!=":
                          return ["!=", "not-in"];
                        case "array-contains":
                          return [
                            "array-contains",
                            "array-contains-any",
                            "not-in",
                          ];
                        case "in":
                          return ["array-contains-any", "in", "not-in"];
                        case "array-contains-any":
                          return [
                            "array-contains",
                            "array-contains-any",
                            "in",
                            "not-in",
                          ];
                        case "not-in":
                          return [
                            "array-contains",
                            "array-contains-any",
                            "in",
                            "not-in",
                            "!=",
                          ];
                        default:
                          return [];
                      }
                    })(B.op)
                  );
                  if (null !== le)
                    throw new Ge(
                      be.INVALID_ARGUMENT,
                      le === B.op
                        ? `Invalid query. You cannot use more than one '${B.op.toString()}' filter.`
                        : `Invalid query. You cannot use '${B.op.toString()}' filters with '${le.toString()}' filters.`
                    );
                })(i, R),
                R
              );
            })(
              e._query,
              0,
              t,
              e.firestore._databaseId,
              this.fa,
              this.da,
              this._a
            );
          return new xi(
            e.firestore,
            e.converter,
            (function (i, a) {
              const l = i.filters.concat([a]);
              return new Fu(
                i.path,
                i.collectionGroup,
                i.explicitOrderBy.slice(),
                l,
                i.limit,
                i.limitType,
                i.startAt,
                i.endAt
              );
            })(e._query, r)
          );
        }
      }
      class AH extends Iw {
        constructor(e, t) {
          super(), (this.fa = e), (this.wa = t), (this.type = "orderBy");
        }
        _apply(e) {
          const t = (function (r, i, a) {
            if (null !== r.startAt)
              throw new Ge(
                be.INVALID_ARGUMENT,
                "Invalid query. You must not call startAt() or startAfter() before calling orderBy()."
              );
            if (null !== r.endAt)
              throw new Ge(
                be.INVALID_ARGUMENT,
                "Invalid query. You must not call endAt() or endBefore() before calling orderBy()."
              );
            const l = new lm(i, a);
            return (
              (function (h, m) {
                if (null === jR(h)) {
                  const v = $R(h);
                  null !== v && fL(0, v, m.field);
                }
              })(r, l),
              l
            );
          })(e._query, this.fa, this.wa);
          return new xi(
            e.firestore,
            e.converter,
            (function (r, i) {
              const a = r.explicitOrderBy.concat([i]);
              return new Fu(
                r.path,
                r.collectionGroup,
                a,
                r.filters.slice(),
                r.limit,
                r.limitType,
                r.startAt,
                r.endAt
              );
            })(e._query, t)
          );
        }
      }
      class aL extends Iw {
        constructor(e, t, r) {
          super(), (this.type = e), (this.ma = t), (this.ga = r);
        }
        _apply(e) {
          return new xi(
            e.firestore,
            e.converter,
            Uk(e._query, this.ma, this.ga)
          );
        }
      }
      class uL extends Iw {
        constructor(e, t, r) {
          super(), (this.type = e), (this.ya = t), (this.pa = r);
        }
        _apply(e) {
          const t = cL(e, this.type, this.ya, this.pa);
          return new xi(
            e.firestore,
            e.converter,
            ((i = t),
            new Fu(
              (r = e._query).path,
              r.collectionGroup,
              r.explicitOrderBy.slice(),
              r.filters.slice(),
              r.limit,
              r.limitType,
              i,
              r.endAt
            ))
          );
          var r, i;
        }
      }
      class lL extends Iw {
        constructor(e, t, r) {
          super(), (this.type = e), (this.ya = t), (this.pa = r);
        }
        _apply(e) {
          const t = cL(e, this.type, this.ya, this.pa);
          return new xi(
            e.firestore,
            e.converter,
            ((i = t),
            new Fu(
              (r = e._query).path,
              r.collectionGroup,
              r.explicitOrderBy.slice(),
              r.filters.slice(),
              r.limit,
              r.limitType,
              r.startAt,
              i
            ))
          );
          var r, i;
        }
      }
      function cL(n, e, t, r) {
        if (((t[0] = (0, ee.m9)(t[0])), t[0] instanceof Ew))
          return (function (i, a, l, h, m) {
            if (!h)
              throw new Ge(
                be.NOT_FOUND,
                `Can't use a DocumentSnapshot that doesn't exist for ${l}().`
              );
            const v = [];
            for (const b of dm(i))
              if (b.field.isKeyField()) v.push(ef(a, h.key));
              else {
                const D = h.data.field(b.field);
                if (VR(D))
                  throw new Ge(
                    be.INVALID_ARGUMENT,
                    'Invalid query. You are trying to start or end a query using a document for which the field "' +
                      b.field +
                      '" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)'
                  );
                if (null === D) {
                  const R = b.field.canonicalString();
                  throw new Ge(
                    be.INVALID_ARGUMENT,
                    `Invalid query. You are trying to start or end a query using a document for which the field '${R}' (used as the orderBy) does not exist.`
                  );
                }
                v.push(D);
              }
            return new Nc(v, m);
          })(n._query, n.firestore._databaseId, e, t[0]._document, r);
        {
          const i = gf(n.firestore);
          return (function (a, l, h, m, v, b) {
            const D = a.explicitOrderBy;
            if (v.length > D.length)
              throw new Ge(
                be.INVALID_ARGUMENT,
                `Too many arguments provided to ${m}(). The number of arguments must be less than or equal to the number of orderBy() clauses`
              );
            const R = [];
            for (let F = 0; F < v.length; F++) {
              const B = v[F];
              if (D[F].field.isKeyField()) {
                if ("string" != typeof B)
                  throw new Ge(
                    be.INVALID_ARGUMENT,
                    `Invalid query. Expected a string for document ID in ${m}(), but got a ${typeof B}`
                  );
                if (!HR(a) && -1 !== B.indexOf("/"))
                  throw new Ge(
                    be.INVALID_ARGUMENT,
                    `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${m}() must be a plain document ID, but '${B}' contains a slash.`
                  );
                const le = a.path.child(An.fromString(B));
                if (!u.isDocumentKey(le))
                  throw new Ge(
                    be.INVALID_ARGUMENT,
                    `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${m}() must result in a valid document path, but '${le}' is not because it contains an odd number of segments.`
                  );
                const Ee = new u(le);
                R.push(ef(l, Ee));
              } else {
                const le = tL(h, m, B);
                R.push(le);
              }
            }
            return new Nc(R, b);
          })(n._query, n.firestore._databaseId, i, e, t, r);
        }
      }
      function dL(n, e, t) {
        if ("string" == typeof (t = (0, ee.m9)(t))) {
          if ("" === t)
            throw new Ge(
              be.INVALID_ARGUMENT,
              "Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string."
            );
          if (!HR(e) && -1 !== t.indexOf("/"))
            throw new Ge(
              be.INVALID_ARGUMENT,
              `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${t}' contains a '/' character.`
            );
          const r = e.path.child(An.fromString(t));
          if (!u.isDocumentKey(r))
            throw new Ge(
              be.INVALID_ARGUMENT,
              `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`
            );
          return ef(n, new u(r));
        }
        if (t instanceof lr) return ef(n, t._key);
        throw new Ge(
          be.INVALID_ARGUMENT,
          `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${Jb(
            t
          )}.`
        );
      }
      function hL(n, e) {
        if (!Array.isArray(n) || 0 === n.length)
          throw new Ge(
            be.INVALID_ARGUMENT,
            `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`
          );
        if (n.length > 10)
          throw new Ge(
            be.INVALID_ARGUMENT,
            `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`
          );
      }
      function fL(n, e, t) {
        if (!t.isEqual(e))
          throw new Ge(
            be.INVALID_ARGUMENT,
            `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${t.toString()}' instead.`
          );
      }
      const FH = { maxAttempts: 5 };
      class Ax {
        convertValue(e, t = "none") {
          switch (Xh(e)) {
            case 0:
              return null;
            case 1:
              return e.booleanValue;
            case 2:
              return Ir(e.integerValue || e.doubleValue);
            case 3:
              return this.convertTimestamp(e.timestampValue);
            case 4:
              return this.convertServerTimestamp(e, t);
            case 5:
              return e.stringValue;
            case 6:
              return this.convertBytes(Jh(e.bytesValue));
            case 7:
              return this.convertReference(e.referenceValue);
            case 8:
              return this.convertGeoPoint(e.geoPointValue);
            case 9:
              return this.convertArray(e.arrayValue, t);
            case 10:
              return this.convertObject(e.mapValue, t);
            default:
              throw Ct();
          }
        }
        convertObject(e, t) {
          const r = {};
          return (
            Go(e.fields, (i, a) => {
              r[i] = this.convertValue(a, t);
            }),
            r
          );
        }
        convertGeoPoint(e) {
          return new eD(Ir(e.latitude), Ir(e.longitude));
        }
        convertArray(e, t) {
          return (e.values || []).map((r) => this.convertValue(r, t));
        }
        convertServerTimestamp(e, t) {
          switch (t) {
            case "previous":
              const r = Ck(e);
              return null == r ? null : this.convertValue(r, t);
            case "estimate":
              return this.convertTimestamp(HE(e));
            default:
              return null;
          }
        }
        convertTimestamp(e) {
          const t = Rc(e);
          return new ur(t.seconds, t.nanos);
        }
        convertDocumentKey(e, t) {
          const r = An.fromString(e);
          Wt(I1(r));
          const i = new ku(r.get(1), r.get(3)),
            a = new u(r.popFirst(5));
          return (
            i.isEqual(t) ||
              _r(
                `Document ${a} contains a document reference within a different database (${i.projectId}/${i.database}) which is not supported. It will be treated as a reference in the current database (${t.projectId}/${t.database}) instead.`
              ),
            a
          );
        }
      }
      function oD(n, e, t) {
        let r;
        return (
          (r = n
            ? t && (t.merge || t.mergeFields)
              ? n.toFirestore(e, t)
              : n.toFirestore(e)
            : e),
          r
        );
      }
      class LH extends Ax {
        constructor(e) {
          super(), (this.firestore = e);
        }
        convertBytes(e) {
          return new Va(e);
        }
        convertReference(e) {
          const t = this.convertDocumentKey(e, this.firestore._databaseId);
          return new lr(this.firestore, null, t);
        }
      }
      class pL {
        constructor(e, t) {
          (this._firestore = e),
            (this._commitHandler = t),
            (this._mutations = []),
            (this._committed = !1),
            (this._dataReader = gf(e));
        }
        set(e, t, r) {
          this._verifyNotCommitted();
          const i = jc(e, this._firestore),
            a = oD(i.converter, t, r),
            l = nD(
              this._dataReader,
              "WriteBatch.set",
              i._key,
              a,
              null !== i.converter,
              r
            );
          return this._mutations.push(l.toMutation(i._key, yr.none())), this;
        }
        update(e, t, r, ...i) {
          this._verifyNotCommitted();
          const a = jc(e, this._firestore);
          let l;
          return (
            (l =
              "string" == typeof (t = (0, ee.m9)(t)) || t instanceof Uu
                ? Dx(this._dataReader, "WriteBatch.update", a._key, t, r, i)
                : bx(this._dataReader, "WriteBatch.update", a._key, t)),
            this._mutations.push(l.toMutation(a._key, yr.exists(!0))),
            this
          );
        }
        delete(e) {
          this._verifyNotCommitted();
          const t = jc(e, this._firestore);
          return (
            (this._mutations = this._mutations.concat(
              new gm(t._key, yr.none())
            )),
            this
          );
        }
        commit() {
          return (
            this._verifyNotCommitted(),
            (this._committed = !0),
            this._mutations.length > 0
              ? this._commitHandler(this._mutations)
              : Promise.resolve()
          );
        }
        _verifyNotCommitted() {
          if (this._committed)
            throw new Ge(
              be.FAILED_PRECONDITION,
              "A write batch can no longer be used after commit() has been called."
            );
        }
      }
      function jc(n, e) {
        if ((n = (0, ee.m9)(n)).firestore !== e)
          throw new Ge(
            be.INVALID_ARGUMENT,
            "Provided document reference is from a different Firestore instance."
          );
        return n;
      }
      class yf extends Ax {
        constructor(e) {
          super(), (this.firestore = e);
        }
        convertBytes(e) {
          return new Va(e);
        }
        convertReference(e) {
          const t = this.convertDocumentKey(e, this.firestore._databaseId);
          return new lr(this.firestore, null, t);
        }
      }
      function gL(n, e, t) {
        n = Rn(n, lr);
        const r = Rn(n.firestore, dr),
          i = oD(n.converter, e, t);
        return Mm(r, [
          nD(gf(r), "setDoc", n._key, i, null !== n.converter, t).toMutation(
            n._key,
            yr.none()
          ),
        ]);
      }
      function mL(n, e, t, ...r) {
        n = Rn(n, lr);
        const i = Rn(n.firestore, dr),
          a = gf(i);
        let l;
        return (
          (l =
            "string" == typeof (e = (0, ee.m9)(e)) || e instanceof Uu
              ? Dx(a, "updateDoc", n._key, e, t, r)
              : bx(a, "updateDoc", n._key, e)),
          Mm(i, [l.toMutation(n._key, yr.exists(!0))])
        );
      }
      function _L(n, ...e) {
        var t, r, i;
        n = (0, ee.m9)(n);
        let a = { includeMetadataChanges: !1 },
          l = 0;
        "object" != typeof e[l] || Ix(e[l]) || ((a = e[l]), l++);
        const h = { includeMetadataChanges: a.includeMetadataChanges };
        if (Ix(e[l])) {
          const D = e[l];
          (e[l] = null === (t = D.next) || void 0 === t ? void 0 : t.bind(D)),
            (e[l + 1] =
              null === (r = D.error) || void 0 === r ? void 0 : r.bind(D)),
            (e[l + 2] =
              null === (i = D.complete) || void 0 === i ? void 0 : i.bind(D));
        }
        let m, v, b;
        if (n instanceof lr)
          (v = Rn(n.firestore, dr)),
            (b = cm(n._key.path)),
            (m = {
              next: (D) => {
                e[l] && e[l](Rx(v, n, D));
              },
              error: e[l + 1],
              complete: e[l + 2],
            });
        else {
          const D = Rn(n, xi);
          (v = Rn(D.firestore, dr)), (b = D._query);
          const R = new yf(v);
          (m = {
            next: (F) => {
              e[l] && e[l](new Uc(v, R, D, F));
            },
            error: e[l + 1],
            complete: e[l + 2],
          }),
            oL(n._query);
        }
        return (function (D, R, F, B) {
          const le = new Yb(B),
            Ee = new BM(R, le, F);
          return (
            D.asyncQueue.enqueueAndForget(
              (0, Te.Z)(function* () {
                return kM(yield Rm(D), Ee);
              })
            ),
            () => {
              le.Tc(),
                D.asyncQueue.enqueueAndForget(
                  (0, Te.Z)(function* () {
                    return LM(yield Rm(D), Ee);
                  })
                );
            }
          );
        })(Br(v), b, h, m);
      }
      function Mm(n, e) {
        return (function (t, r) {
          const i = new Vr();
          return (
            t.asyncQueue.enqueueAndForget(
              (0, Te.Z)(function* () {
                return (function A$(n, e, t) {
                  return WM.apply(this, arguments);
                })(yield vx(t), r, i);
              })
            ),
            i.promise
          );
        })(Br(n), e);
      }
      function Rx(n, e, t) {
        const r = t.docs.get(e._key),
          i = new yf(n);
        return new Bu(
          n,
          i,
          e._key,
          r,
          new _f(t.hasPendingWrites, t.fromCache),
          e.converter
        );
      }
      class qH extends class {
        constructor(e, t) {
          (this._firestore = e),
            (this._transaction = t),
            (this._dataReader = gf(e));
        }
        get(e) {
          const t = jc(e, this._firestore),
            r = new LH(this._firestore);
          return this._transaction.lookup([t._key]).then((i) => {
            if (!i || 1 !== i.length) return Ct();
            const a = i[0];
            if (a.isFoundDocument())
              return new Ew(this._firestore, r, a.key, a, t.converter);
            if (a.isNoDocument())
              return new Ew(this._firestore, r, t._key, null, t.converter);
            throw Ct();
          });
        }
        set(e, t, r) {
          const i = jc(e, this._firestore),
            a = oD(i.converter, t, r),
            l = nD(
              this._dataReader,
              "Transaction.set",
              i._key,
              a,
              null !== i.converter,
              r
            );
          return this._transaction.set(i._key, l), this;
        }
        update(e, t, r, ...i) {
          const a = jc(e, this._firestore);
          let l;
          return (
            (l =
              "string" == typeof (t = (0, ee.m9)(t)) || t instanceof Uu
                ? Dx(this._dataReader, "Transaction.update", a._key, t, r, i)
                : bx(this._dataReader, "Transaction.update", a._key, t)),
            this._transaction.update(a._key, l),
            this
          );
        }
        delete(e) {
          const t = jc(e, this._firestore);
          return this._transaction.delete(t._key), this;
        }
      } {
        constructor(e, t) {
          super(e, t), (this._firestore = e);
        }
        get(e) {
          const t = jc(e, this._firestore),
            r = new yf(this._firestore);
          return super
            .get(e)
            .then(
              (i) =>
                new Bu(
                  this._firestore,
                  r,
                  t._key,
                  i._document,
                  new _f(!1, !1),
                  t.converter
                )
            );
        }
      }
      function Mx(n, e) {
        if (void 0 === e) return { merge: !1 };
        if (void 0 !== e.mergeFields && void 0 !== e.merge)
          throw new Ge(
            "invalid-argument",
            `Invalid options passed to function ${n}(): You cannot specify both "merge" and "mergeFields".`
          );
        return e;
      }
      function vL() {
        if (typeof Uint8Array > "u")
          throw new Ge(
            "unimplemented",
            "Uint8Arrays are not available in this environment."
          );
      }
      function EL() {
        if (
          !(function m2() {
            return typeof atob < "u";
          })()
        )
          throw new Ge(
            "unimplemented",
            "Blobs are unavailable in Firestore in this environment."
          );
      }
      !(function (n, e = !0) {
        (Sc = wn.SDK_VERSION),
          (0, wn._registerComponent)(
            new Fi.wA(
              "firestore",
              (t, { options: r }) => {
                const i = t.getProvider("app").getImmediate(),
                  a = new dr(
                    i,
                    new NR(t.getProvider("auth-internal")),
                    new Ek(t.getProvider("app-check-internal"))
                  );
                return (
                  (r = Object.assign({ useFetchStreams: e }, r)),
                  a._setSettings(r),
                  a
                );
              },
              "PUBLIC"
            )
          ),
          (0, wn.registerVersion)(MR, "3.4.13", n),
          (0, wn.registerVersion)(MR, "3.4.13", "esm2017");
      })();
      class Cw {
        constructor(e) {
          this._delegate = e;
        }
        static fromBase64String(e) {
          return EL(), new Cw(Va.fromBase64String(e));
        }
        static fromUint8Array(e) {
          return vL(), new Cw(Va.fromUint8Array(e));
        }
        toBase64() {
          return EL(), this._delegate.toBase64();
        }
        toUint8Array() {
          return vL(), this._delegate.toUint8Array();
        }
        isEqual(e) {
          return this._delegate.isEqual(e._delegate);
        }
        toString() {
          return "Blob(base64: " + this.toBase64() + ")";
        }
      }
      function xx(n) {
        return (function nG(n, e) {
          if ("object" != typeof n || null === n) return !1;
          const t = n;
          for (const r of e) if (r in t && "function" == typeof t[r]) return !0;
          return !1;
        })(n, ["next", "error", "complete"]);
      }
      class rG {
        enableIndexedDbPersistence(e, t) {
          return (function lH(n, e) {
            QF((n = Rn(n, dr)));
            const t = Br(n),
              r = n._freezeSettings(),
              i = new hx();
            return YF(t, i, new NF(i, r.cacheSizeBytes, e?.forceOwnership));
          })(e._delegate, { forceOwnership: t });
        }
        enableMultiTabIndexedDbPersistence(e) {
          return (function cH(n) {
            QF((n = Rn(n, dr)));
            const e = Br(n),
              t = n._freezeSettings(),
              r = new hx();
            return YF(e, r, new G$(r, t.cacheSizeBytes));
          })(e._delegate);
        }
        clearIndexedDbPersistence(e) {
          return (function dH(n) {
            if (n._initialized && !n._terminated)
              throw new Ge(
                be.FAILED_PRECONDITION,
                "Persistence can only be cleared before a Firestore instance is initialized or after it is terminated."
              );
            const e = new Vr();
            return (
              n._queue.enqueueAndForgetEvenWhileRestricted(
                (0, Te.Z)(function* () {
                  try {
                    yield ((t = (0, Te.Z)(function* (r) {
                      if (!xt.V()) return Promise.resolve();
                      const i = r + "main";
                      yield xt.delete(i);
                    })),
                    function (r) {
                      return t.apply(this, arguments);
                    })(oM(n._databaseId, n._persistenceKey)),
                      e.resolve();
                  } catch (t) {
                    e.reject(t);
                  }
                  var t;
                })
              ),
              e.promise
            );
          })(e._delegate);
        }
      }
      class wL {
        constructor(e, t, r) {
          (this._delegate = t),
            (this._persistenceProvider = r),
            (this.INTERNAL = { delete: () => this.terminate() }),
            e instanceof ku || (this._appCompat = e);
        }
        get _databaseId() {
          return this._delegate._databaseId;
        }
        settings(e) {
          const t = this._delegate._getSettings();
          !e.merge &&
            t.host !== e.host &&
            Ac(
              "You are overriding the original host. If you did not intend to override your settings, use {merge: true}."
            ),
            e.merge &&
              delete (e = Object.assign(Object.assign({}, t), e)).merge,
            this._delegate._setSettings(e);
        }
        useEmulator(e, t, r = {}) {
          !(function rH(n, e, t, r = {}) {
            var i;
            const a = (n = Rn(n, yw))._getSettings();
            if (
              ("firestore.googleapis.com" !== a.host &&
                a.host !== e &&
                Ac(
                  "Host has been set in both settings() and useEmulator(), emulator host will be used"
                ),
              n._setSettings(
                Object.assign(Object.assign({}, a), {
                  host: `${e}:${t}`,
                  ssl: !1,
                })
              ),
              r.mockUserToken)
            ) {
              let l, h;
              if ("string" == typeof r.mockUserToken)
                (l = r.mockUserToken), (h = Pr.MOCK_USER);
              else {
                l = (0, ee.Sg)(
                  r.mockUserToken,
                  null === (i = n._app) || void 0 === i
                    ? void 0
                    : i.options.projectId
                );
                const m = r.mockUserToken.sub || r.mockUserToken.user_id;
                if (!m)
                  throw new Ge(
                    be.INVALID_ARGUMENT,
                    "mockUserToken must contain 'sub' or 'user_id' field!"
                  );
                h = new Pr(m);
              }
              n._authCredentials = new vk(new Cb(l, h));
            }
          })(this._delegate, e, t, r);
        }
        enableNetwork() {
          return (function fH(n) {
            return (function Z$(n) {
              return n.asyncQueue.enqueue(
                (0, Te.Z)(function* () {
                  const e = yield FF(n),
                    t = yield LF(n);
                  return (
                    e.setNetworkEnabled(!0),
                    (function (r) {
                      const i = gt(r);
                      return i.lu.delete(0), mw(i);
                    })(t)
                  );
                })
              );
            })(Br((n = Rn(n, dr))));
          })(this._delegate);
        }
        disableNetwork() {
          return (function pH(n) {
            return (function Y$(n) {
              return n.asyncQueue.enqueue(
                (0, Te.Z)(function* () {
                  const e = yield FF(n),
                    t = yield LF(n);
                  return (
                    e.setNetworkEnabled(!1),
                    ((r = (0, Te.Z)(function* (i) {
                      const a = gt(i);
                      a.lu.add(0), yield Im(a), a._u.set("Offline");
                    })),
                    function (i) {
                      return r.apply(this, arguments);
                    })(t)
                  );
                  var r;
                })
              );
            })(Br((n = Rn(n, dr))));
          })(this._delegate);
        }
        enablePersistence(e) {
          let t = !1,
            r = !1;
          return (
            e &&
              ((t = !!e.synchronizeTabs),
              (r = !!e.experimentalForceOwningTab),
              jF("synchronizeTabs", t, "experimentalForceOwningTab", r)),
            t
              ? this._persistenceProvider.enableMultiTabIndexedDbPersistence(
                  this
                )
              : this._persistenceProvider.enableIndexedDbPersistence(this, r)
          );
        }
        clearPersistence() {
          return this._persistenceProvider.clearIndexedDbPersistence(this);
        }
        terminate() {
          return (
            this._appCompat &&
              (this._appCompat._removeServiceInstance("firestore-compat"),
              this._appCompat._removeServiceInstance("firestore")),
            this._delegate._delete()
          );
        }
        waitForPendingWrites() {
          return (function hH(n) {
            return (function (e) {
              const t = new Vr();
              return (
                e.asyncQueue.enqueueAndForget(
                  (0, Te.Z)(function* () {
                    return (function N$(n, e) {
                      return YM.apply(this, arguments);
                    })(yield vx(e), t);
                  })
                ),
                t.promise
              );
            })(Br((n = Rn(n, dr))));
          })(this._delegate);
        }
        onSnapshotsInSync(e) {
          return (function zH(n, e) {
            return (function X$(n, e) {
              const t = new Yb(e);
              return (
                n.asyncQueue.enqueueAndForget(
                  (0, Te.Z)(function* () {
                    return (
                      (r = yield Rm(n)), (i = t), gt(r).Tu.add(i), void i.next()
                    );
                    var r, i;
                  })
                ),
                () => {
                  t.Tc(),
                    n.asyncQueue.enqueueAndForget(
                      (0, Te.Z)(function* () {
                        return (
                          (r = yield Rm(n)), (i = t), void gt(r).Tu.delete(i)
                        );
                        var r, i;
                      })
                    );
                }
              );
            })(Br((n = Rn(n, dr))), Ix(e) ? e : { next: e });
          })(this._delegate, e);
        }
        get app() {
          if (!this._appCompat)
            throw new Ge(
              "failed-precondition",
              "Firestore was not initialized using the Firebase SDK. 'app' is not available"
            );
          return this._appCompat;
        }
        collection(e) {
          try {
            return new xm(this, zF(this._delegate, e));
          } catch (t) {
            throw Hi(t, "collection()", "Firestore.collection()");
          }
        }
        doc(e) {
          try {
            return new co(this, Xb(this._delegate, e));
          } catch (t) {
            throw Hi(t, "doc()", "Firestore.doc()");
          }
        }
        collectionGroup(e) {
          try {
            return new Gi(
              this,
              (function iH(n, e) {
                if (
                  ((n = Rn(n, yw)),
                  wx("collectionGroup", "collection id", e),
                  e.indexOf("/") >= 0)
                )
                  throw new Ge(
                    be.INVALID_ARGUMENT,
                    `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`
                  );
                return new xi(n, null, ((t = e), new Fu(An.emptyPath(), t)));
                var t;
              })(this._delegate, e)
            );
          } catch (t) {
            throw Hi(t, "collectionGroup()", "Firestore.collectionGroup()");
          }
        }
        runTransaction(e) {
          return (function KH(n, e, t) {
            n = Rn(n, dr);
            const r = Object.assign(Object.assign({}, FH), t);
            return (
              (function (i) {
                if (i.maxAttempts < 1)
                  throw new Ge(
                    be.INVALID_ARGUMENT,
                    "Max attempts must be at least 1"
                  );
              })(r),
              (function eH(n, e, t) {
                const r = new Vr();
                return (
                  n.asyncQueue.enqueueAndForget(
                    (0, Te.Z)(function* () {
                      const i = yield ((a = n), Qb(a).then((l) => l.datastore));
                      var a;
                      new q$(n.asyncQueue, i, t, e, r).run();
                    })
                  ),
                  r.promise
                );
              })(Br(n), (i) => e(new qH(n, i)), r)
            );
          })(this._delegate, (t) => e(new IL(this, t)));
        }
        batch() {
          return (
            Br(this._delegate),
            new CL(new pL(this._delegate, (e) => Mm(this._delegate, e)))
          );
        }
        loadBundle(e) {
          return (function gH(n, e) {
            const t = Br((n = Rn(n, dr))),
              r = new oH();
            return (
              (function tH(n, e, t, r) {
                const i = (function (a, l) {
                  let h;
                  return (
                    (h =
                      "string" == typeof a ? new TextEncoder().encode(a) : a),
                    (m = (function (m, v) {
                      if (m instanceof Uint8Array) return PF(m, v);
                      if (m instanceof ArrayBuffer)
                        return PF(new Uint8Array(m), v);
                      if (m instanceof ReadableStream) return m.getReader();
                      throw new Error(
                        "Source of `toByteStreamReader` has to be a ArrayBuffer or ReadableStream"
                      );
                    })(h)),
                    new W$(m, l)
                  );
                  var m;
                })(t, gw(e));
                n.asyncQueue.enqueueAndForget(
                  (0, Te.Z)(function* () {
                    !(function H$(n, e, t) {
                      const r = gt(n);
                      var i;
                      ((i = (0, Te.Z)(function* (a, l, h) {
                        try {
                          const m = yield l.getMetadata();
                          if (
                            yield (function (R, F) {
                              const B = gt(R),
                                le = ni(F.createTime);
                              return B.persistence
                                .runTransaction(
                                  "hasNewerBundle",
                                  "readonly",
                                  (Ee) => B.Ds.getBundleMetadata(Ee, F.id)
                                )
                                .then(
                                  (Ee) =>
                                    !!Ee && Ee.createTime.compareTo(le) >= 0
                                );
                            })(a.localStore, m)
                          )
                            return (
                              yield l.close(),
                              h._completeWith({
                                taskState: "Success",
                                documentsLoaded: (R = m).totalDocuments,
                                bytesLoaded: R.totalBytes,
                                totalDocuments: R.totalDocuments,
                                totalBytes: R.totalBytes,
                              }),
                              Promise.resolve(new Set())
                            );
                          h._updateProgress(IF(m));
                          const v = new I$(m, a.localStore, l.wt);
                          let b = yield l.fc();
                          for (; b; ) {
                            const R = yield v.Nu(b);
                            R && h._updateProgress(R), (b = yield l.fc());
                          }
                          const D = yield v.complete();
                          return (
                            yield Vu(a, D.Mu, void 0),
                            yield (function (R, F) {
                              const B = gt(R);
                              return B.persistence.runTransaction(
                                "Save bundle",
                                "readwrite",
                                (le) => B.Ds.saveBundleMetadata(le, F)
                              );
                            })(a.localStore, m),
                            h._completeWith(D.progress),
                            Promise.resolve(D.Ou)
                          );
                        } catch (m) {
                          return (
                            Ac("SyncEngine", `Loading bundle failed with ${m}`),
                            h._failWith(m),
                            Promise.resolve(new Set())
                          );
                        }
                        var R;
                      })),
                      function (a, l, h) {
                        return i.apply(this, arguments);
                      })(r, e, t).then((i) => {
                        r.sharedClientState.notifyBundleLoaded(i);
                      });
                    })(yield vx(n), i, r);
                  })
                );
              })(t, n._databaseId, e, r),
              r
            );
          })(this._delegate, e);
        }
        namedQuery(e) {
          return (function mH(n, e) {
            return (function nH(n, e) {
              return n.asyncQueue.enqueue(
                (0, Te.Z)(function* () {
                  return (function (t, r) {
                    const i = gt(t);
                    return i.persistence.runTransaction(
                      "Get named query",
                      "readonly",
                      (a) => i.Ds.getNamedQuery(a, r)
                    );
                  })(yield yx(n), e);
                })
              );
            })(Br((n = Rn(n, dr))), e).then((t) =>
              t ? new xi(n, null, t.query) : null
            );
          })(this._delegate, e).then((t) => (t ? new Gi(this, t) : null));
        }
      }
      class aD extends Ax {
        constructor(e) {
          super(), (this.firestore = e);
        }
        convertBytes(e) {
          return new Cw(new Va(e));
        }
        convertReference(e) {
          const t = this.convertDocumentKey(e, this.firestore._databaseId);
          return co.forKey(t, this.firestore, null);
        }
      }
      class IL {
        constructor(e, t) {
          (this._firestore = e),
            (this._delegate = t),
            (this._userDataWriter = new aD(e));
        }
        get(e) {
          const t = Ef(e);
          return this._delegate
            .get(t)
            .then(
              (r) =>
                new bw(
                  this._firestore,
                  new Bu(
                    this._firestore._delegate,
                    this._userDataWriter,
                    r._key,
                    r._document,
                    r.metadata,
                    t.converter
                  )
                )
            );
        }
        set(e, t, r) {
          const i = Ef(e);
          return (
            r
              ? (Mx("Transaction.set", r), this._delegate.set(i, t, r))
              : this._delegate.set(i, t),
            this
          );
        }
        update(e, t, r, ...i) {
          const a = Ef(e);
          return (
            2 === arguments.length
              ? this._delegate.update(a, t)
              : this._delegate.update(a, t, r, ...i),
            this
          );
        }
        delete(e) {
          const t = Ef(e);
          return this._delegate.delete(t), this;
        }
      }
      class CL {
        constructor(e) {
          this._delegate = e;
        }
        set(e, t, r) {
          const i = Ef(e);
          return (
            r
              ? (Mx("WriteBatch.set", r), this._delegate.set(i, t, r))
              : this._delegate.set(i, t),
            this
          );
        }
        update(e, t, r, ...i) {
          const a = Ef(e);
          return (
            2 === arguments.length
              ? this._delegate.update(a, t)
              : this._delegate.update(a, t, r, ...i),
            this
          );
        }
        delete(e) {
          const t = Ef(e);
          return this._delegate.delete(t), this;
        }
        commit() {
          return this._delegate.commit();
        }
      }
      class vf {
        constructor(e, t, r) {
          (this._firestore = e),
            (this._userDataWriter = t),
            (this._delegate = r);
        }
        fromFirestore(e, t) {
          const r = new ww(
            this._firestore._delegate,
            this._userDataWriter,
            e._key,
            e._document,
            e.metadata,
            null
          );
          return this._delegate.fromFirestore(
            new Dw(this._firestore, r),
            t ?? {}
          );
        }
        toFirestore(e, t) {
          return t
            ? this._delegate.toFirestore(e, t)
            : this._delegate.toFirestore(e);
        }
        static getInstance(e, t) {
          const r = vf.INSTANCES;
          let i = r.get(e);
          i || ((i = new WeakMap()), r.set(e, i));
          let a = i.get(t);
          return a || ((a = new vf(e, new aD(e), t)), i.set(t, a)), a;
        }
      }
      vf.INSTANCES = new WeakMap();
      class co {
        constructor(e, t) {
          (this.firestore = e),
            (this._delegate = t),
            (this._userDataWriter = new aD(e));
        }
        static forPath(e, t, r) {
          if (e.length % 2 != 0)
            throw new Ge(
              "invalid-argument",
              `Invalid document reference. Document references must have an even number of segments, but ${e.canonicalString()} has ${
                e.length
              }`
            );
          return new co(t, new lr(t._delegate, r, new u(e)));
        }
        static forKey(e, t, r) {
          return new co(t, new lr(t._delegate, r, e));
        }
        get id() {
          return this._delegate.id;
        }
        get parent() {
          return new xm(this.firestore, this._delegate.parent);
        }
        get path() {
          return this._delegate.path;
        }
        collection(e) {
          try {
            return new xm(this.firestore, zF(this._delegate, e));
          } catch (t) {
            throw Hi(t, "collection()", "DocumentReference.collection()");
          }
        }
        isEqual(e) {
          return (e = (0, ee.m9)(e)) instanceof lr && qF(this._delegate, e);
        }
        set(e, t) {
          t = Mx("DocumentReference.set", t);
          try {
            return t ? gL(this._delegate, e, t) : gL(this._delegate, e);
          } catch (r) {
            throw Hi(r, "setDoc()", "DocumentReference.set()");
          }
        }
        update(e, t, ...r) {
          try {
            return 1 === arguments.length
              ? mL(this._delegate, e)
              : mL(this._delegate, e, t, ...r);
          } catch (i) {
            throw Hi(i, "updateDoc()", "DocumentReference.update()");
          }
        }
        delete() {
          return (function GH(n) {
            return Mm(Rn(n.firestore, dr), [new gm(n._key, yr.none())]);
          })(this._delegate);
        }
        onSnapshot(...e) {
          const t = bL(e),
            r = DL(
              e,
              (i) =>
                new bw(
                  this.firestore,
                  new Bu(
                    this.firestore._delegate,
                    this._userDataWriter,
                    i._key,
                    i._document,
                    i.metadata,
                    this._delegate.converter
                  )
                )
            );
          return _L(this._delegate, t, r);
        }
        get(e) {
          let t;
          return (
            (t =
              "cache" === e?.source
                ? (function UH(n) {
                    n = Rn(n, lr);
                    const e = Rn(n.firestore, dr),
                      t = Br(e),
                      r = new yf(e);
                    return (function Q$(n, e) {
                      const t = new Vr();
                      return (
                        n.asyncQueue.enqueueAndForget(
                          (0, Te.Z)(function* () {
                            return ((r = (0, Te.Z)(function* (i, a, l) {
                              try {
                                const h = yield (function (m, v) {
                                  const b = gt(m);
                                  return b.persistence.runTransaction(
                                    "read document",
                                    "readonly",
                                    (D) => b.localDocuments.getDocument(D, v)
                                  );
                                })(i, a);
                                h.isFoundDocument()
                                  ? l.resolve(h)
                                  : h.isNoDocument()
                                  ? l.resolve(null)
                                  : l.reject(
                                      new Ge(
                                        be.UNAVAILABLE,
                                        "Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)"
                                      )
                                    );
                              } catch (h) {
                                const m = Dm(
                                  h,
                                  `Failed to get document '${a} from cache`
                                );
                                l.reject(m);
                              }
                            })),
                            function (i, a, l) {
                              return r.apply(this, arguments);
                            })(yield yx(n), e, t);
                            var r;
                          })
                        ),
                        t.promise
                      );
                    })(t, n._key).then(
                      (i) =>
                        new Bu(
                          e,
                          r,
                          n._key,
                          i,
                          new _f(null !== i && i.hasLocalMutations, !0),
                          n.converter
                        )
                    );
                  })(this._delegate)
                : "server" === e?.source
                ? (function BH(n) {
                    n = Rn(n, lr);
                    const e = Rn(n.firestore, dr);
                    return VF(Br(e), n._key, { source: "server" }).then((t) =>
                      Rx(e, n, t)
                    );
                  })(this._delegate)
                : (function VH(n) {
                    n = Rn(n, lr);
                    const e = Rn(n.firestore, dr);
                    return VF(Br(e), n._key).then((t) => Rx(e, n, t));
                  })(this._delegate)),
            t.then(
              (r) =>
                new bw(
                  this.firestore,
                  new Bu(
                    this.firestore._delegate,
                    this._userDataWriter,
                    r._key,
                    r._document,
                    r.metadata,
                    this._delegate.converter
                  )
                )
            )
          );
        }
        withConverter(e) {
          return new co(
            this.firestore,
            this._delegate.withConverter(
              e ? vf.getInstance(this.firestore, e) : null
            )
          );
        }
      }
      function Hi(n, e, t) {
        return (n.message = n.message.replace(e, t)), n;
      }
      function bL(n) {
        for (const e of n) if ("object" == typeof e && !xx(e)) return e;
        return {};
      }
      function DL(n, e) {
        var t, r;
        let i;
        return (
          (i = xx(n[0])
            ? n[0]
            : xx(n[1])
            ? n[1]
            : "function" == typeof n[0]
            ? { next: n[0], error: n[1], complete: n[2] }
            : { next: n[1], error: n[2], complete: n[3] }),
          {
            next: (a) => {
              i.next && i.next(e(a));
            },
            error: null === (t = i.error) || void 0 === t ? void 0 : t.bind(i),
            complete:
              null === (r = i.complete) || void 0 === r ? void 0 : r.bind(i),
          }
        );
      }
      class bw {
        constructor(e, t) {
          (this._firestore = e), (this._delegate = t);
        }
        get ref() {
          return new co(this._firestore, this._delegate.ref);
        }
        get id() {
          return this._delegate.id;
        }
        get metadata() {
          return this._delegate.metadata;
        }
        get exists() {
          return this._delegate.exists();
        }
        data(e) {
          return this._delegate.data(e);
        }
        get(e, t) {
          return this._delegate.get(e, t);
        }
        isEqual(e) {
          return sL(this._delegate, e._delegate);
        }
      }
      class Dw extends bw {
        data(e) {
          const t = this._delegate.data(e);
          return (
            (function BE(n, e) {
              n || Ct();
            })(void 0 !== t),
            t
          );
        }
      }
      class Gi {
        constructor(e, t) {
          (this.firestore = e),
            (this._delegate = t),
            (this._userDataWriter = new aD(e));
        }
        where(e, t, r) {
          try {
            return new Gi(
              this.firestore,
              Bc(
                this._delegate,
                (function SH(n, e, t) {
                  const r = e,
                    i = sD("where", n);
                  return new TH(i, r, t);
                })(e, t, r)
              )
            );
          } catch (i) {
            throw Hi(i, /(orderBy|where)\(\)/, "Query.$1()");
          }
        }
        orderBy(e, t) {
          try {
            return new Gi(
              this.firestore,
              Bc(
                this._delegate,
                (function RH(n, e = "asc") {
                  const t = e,
                    r = sD("orderBy", n);
                  return new AH(r, t);
                })(e, t)
              )
            );
          } catch (r) {
            throw Hi(r, /(orderBy|where)\(\)/, "Query.$1()");
          }
        }
        limit(e) {
          try {
            return new Gi(
              this.firestore,
              Bc(
                this._delegate,
                (function MH(n) {
                  return GF("limit", n), new aL("limit", n, "F");
                })(e)
              )
            );
          } catch (t) {
            throw Hi(t, "limit()", "Query.limit()");
          }
        }
        limitToLast(e) {
          try {
            return new Gi(
              this.firestore,
              Bc(
                this._delegate,
                (function xH(n) {
                  return GF("limitToLast", n), new aL("limitToLast", n, "L");
                })(e)
              )
            );
          } catch (t) {
            throw Hi(t, "limitToLast()", "Query.limitToLast()");
          }
        }
        startAt(...e) {
          try {
            return new Gi(
              this.firestore,
              Bc(
                this._delegate,
                (function NH(...n) {
                  return new uL("startAt", n, !0);
                })(...e)
              )
            );
          } catch (t) {
            throw Hi(t, "startAt()", "Query.startAt()");
          }
        }
        startAfter(...e) {
          try {
            return new Gi(
              this.firestore,
              Bc(
                this._delegate,
                (function PH(...n) {
                  return new uL("startAfter", n, !1);
                })(...e)
              )
            );
          } catch (t) {
            throw Hi(t, "startAfter()", "Query.startAfter()");
          }
        }
        endBefore(...e) {
          try {
            return new Gi(
              this.firestore,
              Bc(
                this._delegate,
                (function OH(...n) {
                  return new lL("endBefore", n, !1);
                })(...e)
              )
            );
          } catch (t) {
            throw Hi(t, "endBefore()", "Query.endBefore()");
          }
        }
        endAt(...e) {
          try {
            return new Gi(
              this.firestore,
              Bc(
                this._delegate,
                (function kH(...n) {
                  return new lL("endAt", n, !0);
                })(...e)
              )
            );
          } catch (t) {
            throw Hi(t, "endAt()", "Query.endAt()");
          }
        }
        isEqual(e) {
          return KF(this._delegate, e._delegate);
        }
        get(e) {
          let t;
          return (
            (t =
              "cache" === e?.source
                ? (function $H(n) {
                    n = Rn(n, xi);
                    const e = Rn(n.firestore, dr),
                      t = Br(e),
                      r = new yf(e);
                    return (function J$(n, e) {
                      const t = new Vr();
                      return (
                        n.asyncQueue.enqueueAndForget(
                          (0, Te.Z)(function* () {
                            return ((r = (0, Te.Z)(function* (i, a, l) {
                              try {
                                const h = yield Gb(i, a, !0),
                                  m = new DF(a, h.ji),
                                  v = m.Ku(h.documents),
                                  b = m.applyChanges(v, !1);
                                l.resolve(b.snapshot);
                              } catch (h) {
                                const m = Dm(
                                  h,
                                  `Failed to execute query '${a} against cache`
                                );
                                l.reject(m);
                              }
                            })),
                            function (i, a, l) {
                              return r.apply(this, arguments);
                            })(yield yx(n), e, t);
                            var r;
                          })
                        ),
                        t.promise
                      );
                    })(t, n._query).then((i) => new Uc(e, r, n, i));
                  })(this._delegate)
                : "server" === e?.source
                ? (function HH(n) {
                    n = Rn(n, xi);
                    const e = Rn(n.firestore, dr),
                      t = Br(e),
                      r = new yf(e);
                    return UF(t, n._query, { source: "server" }).then(
                      (i) => new Uc(e, r, n, i)
                    );
                  })(this._delegate)
                : (function jH(n) {
                    n = Rn(n, xi);
                    const e = Rn(n.firestore, dr),
                      t = Br(e),
                      r = new yf(e);
                    return (
                      oL(n._query),
                      UF(t, n._query).then((i) => new Uc(e, r, n, i))
                    );
                  })(this._delegate)),
            t.then(
              (r) =>
                new Nx(
                  this.firestore,
                  new Uc(
                    this.firestore._delegate,
                    this._userDataWriter,
                    this._delegate,
                    r._snapshot
                  )
                )
            )
          );
        }
        onSnapshot(...e) {
          const t = bL(e),
            r = DL(
              e,
              (i) =>
                new Nx(
                  this.firestore,
                  new Uc(
                    this.firestore._delegate,
                    this._userDataWriter,
                    this._delegate,
                    i._snapshot
                  )
                )
            );
          return _L(this._delegate, t, r);
        }
        withConverter(e) {
          return new Gi(
            this.firestore,
            this._delegate.withConverter(
              e ? vf.getInstance(this.firestore, e) : null
            )
          );
        }
      }
      class sG {
        constructor(e, t) {
          (this._firestore = e), (this._delegate = t);
        }
        get type() {
          return this._delegate.type;
        }
        get doc() {
          return new Dw(this._firestore, this._delegate.doc);
        }
        get oldIndex() {
          return this._delegate.oldIndex;
        }
        get newIndex() {
          return this._delegate.newIndex;
        }
      }
      class Nx {
        constructor(e, t) {
          (this._firestore = e), (this._delegate = t);
        }
        get query() {
          return new Gi(this._firestore, this._delegate.query);
        }
        get metadata() {
          return this._delegate.metadata;
        }
        get size() {
          return this._delegate.size;
        }
        get empty() {
          return this._delegate.empty;
        }
        get docs() {
          return this._delegate.docs.map((e) => new Dw(this._firestore, e));
        }
        docChanges(e) {
          return this._delegate
            .docChanges(e)
            .map((t) => new sG(this._firestore, t));
        }
        forEach(e, t) {
          this._delegate.forEach((r) => {
            e.call(t, new Dw(this._firestore, r));
          });
        }
        isEqual(e) {
          return sL(this._delegate, e._delegate);
        }
      }
      class xm extends Gi {
        constructor(e, t) {
          super(e, t), (this.firestore = e), (this._delegate = t);
        }
        get id() {
          return this._delegate.id;
        }
        get path() {
          return this._delegate.path;
        }
        get parent() {
          const e = this._delegate.parent;
          return e ? new co(this.firestore, e) : null;
        }
        doc(e) {
          try {
            return new co(
              this.firestore,
              void 0 === e ? Xb(this._delegate) : Xb(this._delegate, e)
            );
          } catch (t) {
            throw Hi(t, "doc()", "CollectionReference.doc()");
          }
        }
        add(e) {
          return (function WH(n, e) {
            const t = Rn(n.firestore, dr),
              r = Xb(n),
              i = oD(n.converter, e);
            return Mm(t, [
              nD(
                gf(n.firestore),
                "addDoc",
                r._key,
                i,
                null !== n.converter,
                {}
              ).toMutation(r._key, yr.exists(!1)),
            ]).then(() => r);
          })(this._delegate, e).then((t) => new co(this.firestore, t));
        }
        isEqual(e) {
          return qF(this._delegate, e._delegate);
        }
        withConverter(e) {
          return new xm(
            this.firestore,
            this._delegate.withConverter(
              e ? vf.getInstance(this.firestore, e) : null
            )
          );
        }
      }
      function Ef(n) {
        return Rn(n, lr);
      }
      class Px {
        constructor(...e) {
          this._delegate = new Uu(...e);
        }
        static documentId() {
          return new Px(o.keyField().canonicalString());
        }
        isEqual(e) {
          return (
            (e = (0, ee.m9)(e)) instanceof Uu &&
            this._delegate._internalPath.isEqual(e._internalPath)
          );
        }
      }
      class wf {
        constructor(e) {
          this._delegate = e;
        }
        static serverTimestamp() {
          const e = (function YH() {
            return new Cx("serverTimestamp");
          })();
          return (e._methodName = "FieldValue.serverTimestamp"), new wf(e);
        }
        static delete() {
          const e = (function ZH() {
            return new vw("deleteField");
          })();
          return (e._methodName = "FieldValue.delete"), new wf(e);
        }
        static arrayUnion(...e) {
          const t = (function QH(...n) {
            return new EH("arrayUnion", n);
          })(...e);
          return (t._methodName = "FieldValue.arrayUnion"), new wf(t);
        }
        static arrayRemove(...e) {
          const t = (function JH(...n) {
            return new wH("arrayRemove", n);
          })(...e);
          return (t._methodName = "FieldValue.arrayRemove"), new wf(t);
        }
        static increment(e) {
          const t = (function XH(n) {
            return new IH("increment", n);
          })(e);
          return (t._methodName = "FieldValue.increment"), new wf(t);
        }
        isEqual(e) {
          return this._delegate.isEqual(e._delegate);
        }
      }
      const oG = {
        Firestore: wL,
        GeoPoint: eD,
        Timestamp: ur,
        Blob: Cw,
        Transaction: IL,
        WriteBatch: CL,
        DocumentReference: co,
        DocumentSnapshot: bw,
        Query: Gi,
        QueryDocumentSnapshot: Dw,
        QuerySnapshot: Nx,
        CollectionReference: xm,
        FieldPath: Px,
        FieldValue: wf,
        setLogLevel: function iG(n) {
          !(function xR(n) {
            Na.setLogLevel(n);
          })(n);
        },
        CACHE_SIZE_UNLIMITED: -1,
      };
      function TL(n, e) {
        return (function lG(n, e = FA.z) {
          return new kr.y((t) => {
            let r;
            return (
              null != e
                ? e.schedule(() => {
                    r = n.onSnapshot({ includeMetadataChanges: !0 }, t);
                  })
                : (r = n.onSnapshot({ includeMetadataChanges: !0 }, t)),
              () => {
                r?.();
              }
            );
          });
        })(n, e);
      }
      function Ox(n, e) {
        return TL(n, e).pipe((0, Ft.U)((t) => ({ payload: t, type: "query" })));
      }
      function uD(n, e) {
        return Ox(n, e).pipe(
          bl(void 0),
          wh(),
          (0, Ft.U)(([t, r]) => {
            const i = r.payload.docChanges(),
              a = i.map((l) => ({ type: l.type, payload: l }));
            return (
              t &&
                JSON.stringify(t.payload.metadata) !==
                  JSON.stringify(r.payload.metadata) &&
                r.payload.docs.forEach((l, h) => {
                  const m = i.find((b) => b.doc.ref.isEqual(l.ref)),
                    v = t?.payload.docs.find((b) => b.ref.isEqual(l.ref));
                  (m &&
                    JSON.stringify(m.doc.metadata) ===
                      JSON.stringify(l.metadata)) ||
                    (!m &&
                      v &&
                      JSON.stringify(v.metadata) ===
                        JSON.stringify(l.metadata)) ||
                    a.push({
                      type: "modified",
                      payload: {
                        oldIndex: h,
                        newIndex: h,
                        type: "modified",
                        doc: l,
                      },
                    });
                }),
              a
            );
          })
        );
      }
      function SL(n, e, t) {
        return uD(n, t).pipe(
          Sr(
            (r, i) =>
              (function dG(n, e, t) {
                return (
                  e.forEach((r) => {
                    t.indexOf(r.type) > -1 &&
                      (n = (function hG(n, e) {
                        switch (e.type) {
                          case "added":
                            if (
                              !n[e.newIndex] ||
                              !n[e.newIndex].doc.ref.isEqual(e.doc.ref)
                            )
                              return kx(n, e.newIndex, 0, e);
                            break;
                          case "modified":
                            if (
                              null == n[e.oldIndex] ||
                              n[e.oldIndex].doc.ref.isEqual(e.doc.ref)
                            ) {
                              if (e.oldIndex !== e.newIndex) {
                                const t = n.slice();
                                return (
                                  t.splice(e.oldIndex, 1),
                                  t.splice(e.newIndex, 0, e),
                                  t
                                );
                              }
                              return kx(n, e.newIndex, 1, e);
                            }
                            break;
                          case "removed":
                            if (
                              n[e.oldIndex] &&
                              n[e.oldIndex].doc.ref.isEqual(e.doc.ref)
                            )
                              return kx(n, e.oldIndex, 1);
                        }
                        return n;
                      })(n, r));
                  }),
                  n
                );
              })(
                r,
                i.map((a) => a.payload),
                e
              ),
            []
          ),
          Dv(),
          (0, Ft.U)((r) => r.map((i) => ({ type: i.type, payload: i })))
        );
      }
      function kx(n, e, t, ...r) {
        const i = n.slice();
        return i.splice(e, t, ...r), i;
      }
      function AL(n) {
        return (
          (!n || 0 === n.length) && (n = ["added", "removed", "modified"]), n
        );
      }
      !(function uG(n) {
        (function aG(n, e) {
          n.INTERNAL.registerComponent(
            new Fi.wA(
              "firestore-compat",
              (t) => {
                const r = t.getProvider("app-compat").getImmediate(),
                  i = t.getProvider("firestore").getImmediate();
                return e(r, i);
              },
              "PUBLIC"
            ).setServiceProps(Object.assign({}, oG))
          );
        })(n, (e, t) => new wL(e, t, new rG())),
          n.registerVersion("@firebase/firestore-compat", "0.1.22");
      })(jC.Z);
      class RL {
        constructor(e, t, r) {
          (this.ref = e), (this.query = t), (this.afs = r);
        }
        stateChanges(e) {
          let t = uD(this.query, this.afs.schedulers.outsideAngular);
          return (
            e &&
              e.length > 0 &&
              (t = t.pipe(
                (0, Ft.U)((r) => r.filter((i) => e.indexOf(i.type) > -1))
              )),
            t.pipe(
              bl(void 0),
              wh(),
              hi(([r, i]) => i.length > 0 || !r),
              (0, Ft.U)(([r, i]) => i),
              ot.iC
            )
          );
        }
        auditTrail(e) {
          return this.stateChanges(e).pipe(Sr((t, r) => [...t, ...r], []));
        }
        snapshotChanges(e) {
          const t = AL(e);
          return SL(this.query, t, this.afs.schedulers.outsideAngular).pipe(
            ot.iC
          );
        }
        valueChanges(e = {}) {
          return Ox(this.query, this.afs.schedulers.outsideAngular).pipe(
            (0, Ft.U)((t) =>
              t.payload.docs.map((r) =>
                e.idField
                  ? Object.assign(Object.assign({}, r.data()), {
                      [e.idField]: r.id,
                    })
                  : r.data()
              )
            ),
            ot.iC
          );
        }
        get(e) {
          return (0, jn.D)(this.query.get(e)).pipe(ot.iC);
        }
        add(e) {
          return this.ref.add(e);
        }
        doc(e) {
          return new ML(this.ref.doc(e), this.afs);
        }
      }
      class ML {
        constructor(e, t) {
          (this.ref = e), (this.afs = t);
        }
        set(e, t) {
          return this.ref.set(e, t);
        }
        update(e) {
          return this.ref.update(e);
        }
        delete() {
          return this.ref.delete();
        }
        collection(e, t) {
          const r = this.ref.collection(e),
            { ref: i, query: a } = PL(r, t);
          return new RL(i, a, this.afs);
        }
        snapshotChanges() {
          return (function cG(n, e) {
            return TL(n, e).pipe(
              bl(void 0),
              wh(),
              (0, Ft.U)(([t, r]) =>
                r.exists
                  ? t?.exists
                    ? { payload: r, type: "modified" }
                    : { payload: r, type: "added" }
                  : { payload: r, type: "removed" }
              )
            );
          })(this.ref, this.afs.schedulers.outsideAngular).pipe(ot.iC);
        }
        valueChanges(e = {}) {
          return this.snapshotChanges().pipe(
            (0, Ft.U)(({ payload: t }) =>
              e.idField
                ? Object.assign(Object.assign({}, t.data()), {
                    [e.idField]: t.id,
                  })
                : t.data()
            )
          );
        }
        get(e) {
          return (0, jn.D)(this.ref.get(e)).pipe(ot.iC);
        }
      }
      class fG {
        constructor(e, t) {
          (this.query = e), (this.afs = t);
        }
        stateChanges(e) {
          return e && 0 !== e.length
            ? uD(this.query, this.afs.schedulers.outsideAngular).pipe(
                (0, Ft.U)((t) => t.filter((r) => e.indexOf(r.type) > -1)),
                hi((t) => t.length > 0),
                ot.iC
              )
            : uD(this.query, this.afs.schedulers.outsideAngular).pipe(ot.iC);
        }
        auditTrail(e) {
          return this.stateChanges(e).pipe(Sr((t, r) => [...t, ...r], []));
        }
        snapshotChanges(e) {
          const t = AL(e);
          return SL(this.query, t, this.afs.schedulers.outsideAngular).pipe(
            ot.iC
          );
        }
        valueChanges(e = {}) {
          return Ox(this.query, this.afs.schedulers.outsideAngular).pipe(
            (0, Ft.U)((r) =>
              r.payload.docs.map((i) =>
                e.idField
                  ? Object.assign({ [e.idField]: i.id }, i.data())
                  : i.data()
              )
            ),
            ot.iC
          );
        }
        get(e) {
          return (0, jn.D)(this.query.get(e)).pipe(ot.iC);
        }
      }
      const xL = new f.OlP("angularfire2.enableFirestorePersistence"),
        NL = new f.OlP("angularfire2.firestore.persistenceSettings"),
        pG = new f.OlP("angularfire2.firestore.settings"),
        gG = new f.OlP("angularfire2.firestore.use-emulator");
      function PL(n, e = (t) => t) {
        return { query: e(n), ref: n };
      }
      let OL = (() => {
          class n {
            constructor(t, r, i, a, l, h, m, v, b, D, R, F, B, le, Ee, dt, It) {
              this.schedulers = m;
              const Lt = (0, Wr.on)(t, h, r),
                St = b;
              D && IC(Lt, h, R, B, le, Ee, F, dt),
                ([this.firestore, this.persistenceEnabled$] = (0, Wr.cc)(
                  `${Lt.name}.firestore`,
                  "AngularFirestore",
                  Lt.name,
                  () => {
                    const rn = h.runOutsideAngular(() => Lt.firestore());
                    if (
                      (a && rn.settings(a),
                      St && rn.useEmulator(...St),
                      i && !Bf(l))
                    ) {
                      const Cn = () => {
                        try {
                          return (0, jn.D)(
                            rn.enablePersistence(v || void 0).then(
                              () => !0,
                              () => !1
                            )
                          );
                        } catch (jr) {
                          return (
                            typeof console < "u" && console.warn(jr), pt(!1)
                          );
                        }
                      };
                      return [rn, h.runOutsideAngular(Cn)];
                    }
                    return [rn, pt(!1)];
                  },
                  [a, St, i]
                ));
            }
            collection(t, r) {
              let i;
              i = "string" == typeof t ? this.firestore.collection(t) : t;
              const { ref: a, query: l } = PL(i, r),
                h = this.schedulers.ngZone.run(() => a);
              return new RL(h, l, this);
            }
            collectionGroup(t, r) {
              const i = r || ((l) => l),
                a = this.firestore.collectionGroup(t);
              return new fG(i(a), this);
            }
            doc(t) {
              let r;
              r = "string" == typeof t ? this.firestore.doc(t) : t;
              const i = this.schedulers.ngZone.run(() => r);
              return new ML(i, this);
            }
            createId() {
              return this.firestore.collection("_").doc().id;
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(
                f.LFG(Wr.Dh),
                f.LFG(Wr.xv, 8),
                f.LFG(xL, 8),
                f.LFG(pG, 8),
                f.LFG(f.Lbi),
                f.LFG(f.R0b),
                f.LFG(ot.HU),
                f.LFG(NL, 8),
                f.LFG(gG, 8),
                f.LFG(bv, 8),
                f.LFG(mC, 8),
                f.LFG(_C, 8),
                f.LFG(yC, 8),
                f.LFG(vC, 8),
                f.LFG(EC, 8),
                f.LFG(wC, 8),
                f.LFG(xs, 8)
              );
            }),
            (n.ɵprov = f.Yz7({ token: n, factory: n.ɵfac, providedIn: "any" })),
            n
          );
        })(),
        mG = (() => {
          class n {
            constructor() {
              gg.Z.registerVersion("angularfire", ot.q4.full, "fst-compat");
            }
            static enablePersistence(t) {
              return {
                ngModule: n,
                providers: [
                  { provide: xL, useValue: !0 },
                  { provide: NL, useValue: t },
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = f.oAB({ type: n })),
            (n.ɵinj = f.cJS({ providers: [OL] })),
            n
          );
        })();
      const Tw_firebase = {
        projectId: "angular-store-example-25acc",
        appId: "1:626982961807:web:2c4484bc808ce0768f26fa",
        storageBucket: "angular-store-example-25acc.appspot.com",
        apiKey: "AIzaSyBo5OqwV2RhGzWNizINfznWdVfH4YboLzw",
        authDomain: "angular-store-example-25acc.firebaseapp.com",
        messagingSenderId: "626982961807",
        measurementId: "G-WKE3JVMM13",
      };
      var _G =
          "object" == typeof global &&
          global &&
          global.Object === Object &&
          global,
        vG = "object" == typeof self && self && self.Object === Object && self,
        wG = (_G || vG || Function("return this")()).Symbol,
        kL = Object.prototype,
        IG = kL.hasOwnProperty,
        CG = kL.toString,
        Sw = wG ? wG.toStringTag : void 0;
      var SG = Object.prototype.toString;
      var FL = wG ? wG.toStringTag : void 0;
      const PG = function NG(n) {
          return null == n
            ? void 0 === n
              ? "[object Undefined]"
              : "[object Null]"
            : FL && FL in Object(n)
            ? (function bG(n) {
                var e = IG.call(n, Sw),
                  t = n[Sw];
                try {
                  n[Sw] = void 0;
                  var r = !0;
                } catch {}
                var i = CG.call(n);
                return r && (e ? (n[Sw] = t) : delete n[Sw]), i;
              })(n)
            : (function AG(n) {
                return SG.call(n);
              })(n);
        },
        LL = function LG(n) {
          return (
            "symbol" == typeof n ||
            ((function OG(n) {
              return null != n && "object" == typeof n;
            })(n) &&
              "[object Symbol]" == PG(n))
          );
        },
        VL = function UG(n) {
          return "number" == typeof n ? n : LL(n) ? NaN : +n;
        },
        HG = Array.isArray;
      var UL = wG ? wG.prototype : void 0,
        BL = UL ? UL.toString : void 0;
      const $L = function jL(n) {
        if ("string" == typeof n) return n;
        if (HG(n))
          return (
            (function BG(n, e) {
              for (
                var t = -1, r = null == n ? 0 : n.length, i = Array(r);
                ++t < r;

              )
                i[t] = e(n[t], t, n);
              return i;
            })(n, jL) + ""
          );
        if (LL(n)) return BL ? BL.call(n) : "";
        var e = n + "";
        return "0" == e && 1 / n == -1 / 0 ? "-0" : e;
      };
      var zG = (function WG(n, e) {
        return function (t, r) {
          var i;
          if (void 0 === t && void 0 === r) return e;
          if ((void 0 !== t && (i = t), void 0 !== r)) {
            if (void 0 === i) return r;
            "string" == typeof t || "string" == typeof r
              ? ((t = $L(t)), (r = $L(r)))
              : ((t = VL(t)), (r = VL(r))),
              (i = n(t, r));
          }
          return i;
        };
      })(function (n, e) {
        return n + e;
      }, 0);
      const qG = zG,
        KG = function () {
          return ["/"];
        },
        ZG = function () {
          return ["/cart"];
        };
      let YG = (() => {
        class n {}
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵcmp = f.Xpm({
            type: n,
            selectors: [["app-top-bar"]],
            decls: 7,
            vars: 4,
            consts: [
              [3, "routerLink"],
              [1, "button", "fancy-button", 3, "routerLink"],
              [1, "material-icons"],
            ],
            template: function (t, r) {
              1 & t &&
                (f.TgZ(0, "a", 0)(1, "h1"),
                f._uU(2, "Gerrod's Store"),
                f.qZA()(),
                f.TgZ(3, "a", 1)(4, "i", 2),
                f._uU(5, "shopping_cart"),
                f.qZA(),
                f._uU(6, "Checkout"),
                f.qZA()),
                2 & t &&
                  (f.Q6J("routerLink", f.DdM(2, KG)),
                  f.xp6(3),
                  f.Q6J("routerLink", f.DdM(3, ZG)));
            },
            dependencies: [_u],
          })),
          n
        );
      })();
      function QG(n, e) {
        if ((1 & n && (f.TgZ(0, "li", 2), f._uU(1), f.qZA()), 2 & n)) {
          const t = e.$implicit;
          f.xp6(1), f.hij(" ", t.name, " ");
        }
      }
      let JG = (() => {
        class n {
          constructor(t) {
            (this.title = "app works!"),
              (this.items = t.collection("items").valueChanges()),
              console.log(true, qG(660, 6));
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.Y36(OL));
          }),
          (n.ɵcmp = f.Xpm({
            type: n,
            selectors: [["app-root"]],
            decls: 6,
            vars: 3,
            consts: [
              [1, "container"],
              ["class", "text", 4, "ngFor", "ngForOf"],
              [1, "text"],
            ],
            template: function (t, r) {
              1 & t &&
                (f._UZ(0, "app-top-bar"),
                f.TgZ(1, "div", 0),
                f._UZ(2, "router-outlet"),
                f.TgZ(3, "ul"),
                f.YNc(4, QG, 2, 1, "li", 1),
                f.ALo(5, "async"),
                f.qZA()()),
                2 & t && (f.xp6(4), f.Q6J("ngForOf", f.lcZ(5, 1, r.items)));
            },
            dependencies: [ui, A_, YG, Ku],
          })),
          n
        );
      })();
      const HL = [
        {
          id: 1,
          name: "Phone XL",
          price: 799,
          description: "A large phone with one of the best screens",
        },
        {
          id: 2,
          name: "Phone Mini",
          price: 699,
          description: "A great phone with one of the best cameras",
        },
        { id: 3, name: "Phone Standard", price: 299, description: "" },
      ];
      function XG(n, e) {
        if (1 & n) {
          const t = f.EpF();
          f.TgZ(0, "p")(1, "button", 1),
            f.NdJ("click", function () {
              f.CHM(t);
              const i = f.oxw();
              return f.KtG(i.notify.emit());
            }),
            f._uU(2, "Notify Me"),
            f.qZA()();
        }
      }
      let eW = (() => {
        class n {
          constructor() {
            this.notify = new f.vpe();
          }
          ngOnInit() {}
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵcmp = f.Xpm({
            type: n,
            selectors: [["app-product-alerts"]],
            inputs: { product: "product" },
            outputs: { notify: "notify" },
            decls: 1,
            vars: 1,
            consts: [
              [4, "ngIf"],
              ["type", "button", 3, "click"],
            ],
            template: function (t, r) {
              1 & t && f.YNc(0, XG, 3, 0, "p", 0),
                2 & t && f.Q6J("ngIf", r.product && r.product.price > 700);
            },
            dependencies: [Dr],
          })),
          n
        );
      })();
      function tW(n, e) {
        if ((1 & n && (f.TgZ(0, "p"), f._uU(1), f.qZA()), 2 & n)) {
          const t = f.oxw().$implicit;
          f.xp6(1), f.hij("Description: ", t.description, "");
        }
      }
      const nW = function (n) {
        return ["/products", n];
      };
      function rW(n, e) {
        if (1 & n) {
          const t = f.EpF();
          f.TgZ(0, "div")(1, "h3")(2, "a", 1),
            f._uU(3),
            f.qZA()(),
            f.YNc(4, tW, 2, 1, "p", 2),
            f.TgZ(5, "button", 3),
            f.NdJ("click", function () {
              f.CHM(t);
              const i = f.oxw();
              return f.KtG(i.share());
            }),
            f._uU(6, "Share"),
            f.qZA(),
            f.TgZ(7, "app-product-alerts", 4),
            f.NdJ("notify", function () {
              f.CHM(t);
              const i = f.oxw();
              return f.KtG(i.onNotify());
            }),
            f.qZA()();
        }
        if (2 & n) {
          const t = e.$implicit;
          f.xp6(2),
            f.Q6J("title", t.name + " details")(
              "routerLink",
              f.VKq(5, nW, t.id)
            ),
            f.xp6(1),
            f.hij(" ", t.name, " "),
            f.xp6(1),
            f.Q6J("ngIf", t.description),
            f.xp6(3),
            f.Q6J("product", t);
        }
      }
      let iW = (() => {
          class n {
            constructor() {
              this.products = HL;
            }
            share() {
              window.alert("The product has been shared!");
            }
            onNotify() {
              window.alert(
                "You will be notified when the product goes on sale"
              );
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵcmp = f.Xpm({
              type: n,
              selectors: [["app-product-list"]],
              decls: 3,
              vars: 1,
              consts: [
                [4, "ngFor", "ngForOf"],
                [3, "title", "routerLink"],
                [4, "ngIf"],
                ["type", "button", 3, "click"],
                [3, "product", "notify"],
              ],
              template: function (t, r) {
                1 & t &&
                  (f.TgZ(0, "h2"),
                  f._uU(1, "Products"),
                  f.qZA(),
                  f.YNc(2, rW, 8, 7, "div", 0)),
                  2 & t && (f.xp6(2), f.Q6J("ngForOf", r.products));
              },
              dependencies: [ui, Dr, _u, eW],
            })),
            n
          );
        })(),
        Fx = (() => {
          class n {
            constructor(t) {
              (this.http = t), (this.items = []);
            }
            addToCart(t) {
              this.items.push(t);
            }
            getItems() {
              return this.items;
            }
            clearCart() {
              return (this.items = []), this.items;
            }
            getShippingPrices() {
              return this.http.get("/assets/shipping.json");
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(f.LFG(Jp));
            }),
            (n.ɵprov = f.Yz7({
              token: n,
              factory: n.ɵfac,
              providedIn: "root",
            })),
            n
          );
        })();
      function sW(n, e) {
        if (1 & n) {
          const t = f.EpF();
          f.TgZ(0, "div")(1, "h3"),
            f._uU(2),
            f.qZA(),
            f.TgZ(3, "h4"),
            f._uU(4),
            f.ALo(5, "currency"),
            f.qZA(),
            f.TgZ(6, "p"),
            f._uU(7),
            f.qZA(),
            f.TgZ(8, "button", 1),
            f.NdJ("click", function () {
              f.CHM(t);
              const i = f.oxw();
              return f.KtG(i.addToCart(i.product));
            }),
            f._uU(9, "Buy"),
            f.qZA()();
        }
        if (2 & n) {
          const t = f.oxw();
          f.xp6(2),
            f.Oqu(t.product.name),
            f.xp6(2),
            f.Oqu(f.lcZ(5, 3, t.product.price)),
            f.xp6(3),
            f.Oqu(t.product.description);
        }
      }
      let oW = (() => {
        class n {
          constructor(t, r) {
            (this.route = t), (this.cartService = r);
          }
          ngOnInit() {
            const r = Number(this.route.snapshot.paramMap.get("productId"));
            this.product = HL.find((i) => i.id === r);
          }
          addToCart(t) {
            this.cartService.addToCart(t),
              window.alert("Your product has been added to the cart!");
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.Y36(Bt), f.Y36(Fx));
          }),
          (n.ɵcmp = f.Xpm({
            type: n,
            selectors: [["app-product-details"]],
            decls: 3,
            vars: 1,
            consts: [
              [4, "ngIf"],
              ["type", "button", 3, "click"],
            ],
            template: function (t, r) {
              1 & t &&
                (f.TgZ(0, "h2"),
                f._uU(1, "Product Details"),
                f.qZA(),
                f.YNc(2, sW, 10, 5, "div", 0)),
                2 & t && (f.xp6(2), f.Q6J("ngIf", r.product));
            },
            dependencies: [Dr, Yu],
          })),
          n
        );
      })();
      function aW(n, e) {
        if (
          (1 & n &&
            (f.TgZ(0, "div", 8)(1, "span"),
            f._uU(2),
            f.qZA(),
            f.TgZ(3, "span"),
            f._uU(4),
            f.ALo(5, "currency"),
            f.qZA()()),
          2 & n)
        ) {
          const t = e.$implicit;
          f.xp6(2), f.Oqu(t.name), f.xp6(2), f.Oqu(f.lcZ(5, 2, t.price));
        }
      }
      let uW = (() => {
        class n {
          constructor(t, r) {
            (this.cartService = t),
              (this.formBuilder = r),
              (this.items = this.cartService.getItems()),
              (this.checkoutForm = this.formBuilder.group({
                name: "",
                address: "",
              }));
          }
          ngOnInit() {}
          onSubmit() {
            (this.items = this.cartService.clearCart()),
              console.warn(
                "Your order has been submitted",
                this.checkoutForm.value
              ),
              this.checkoutForm.reset();
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.Y36(Fx), f.Y36(cS));
          }),
          (n.ɵcmp = f.Xpm({
            type: n,
            selectors: [["app-cart"]],
            decls: 17,
            vars: 2,
            consts: [
              ["routerLink", "/shipping"],
              ["class", "cart-item", 4, "ngFor", "ngForOf"],
              [3, "formGroup", "ngSubmit"],
              ["for", "name"],
              ["id", "name", "type", "text", "formControlName", "name"],
              ["for", "address"],
              ["id", "address", "type", "text", "formControlName", "address"],
              ["type", "submit", 1, "button"],
              [1, "cart-item"],
            ],
            template: function (t, r) {
              1 & t &&
                (f.TgZ(0, "h3"),
                f._uU(1, "Cart"),
                f.qZA(),
                f.TgZ(2, "p")(3, "a", 0),
                f._uU(4, "Shipping Prices"),
                f.qZA()(),
                f.YNc(5, aW, 6, 4, "div", 1),
                f.TgZ(6, "form", 2),
                f.NdJ("ngSubmit", function () {
                  return r.onSubmit();
                }),
                f.TgZ(7, "div")(8, "label", 3),
                f._uU(9, " Name "),
                f.qZA(),
                f._UZ(10, "input", 4),
                f.qZA(),
                f.TgZ(11, "div")(12, "label", 5),
                f._uU(13, " Address "),
                f.qZA(),
                f._UZ(14, "input", 6),
                f.qZA(),
                f.TgZ(15, "button", 7),
                f._uU(16, "Purchase"),
                f.qZA()()),
                2 & t &&
                  (f.xp6(5),
                  f.Q6J("ngForOf", r.items),
                  f.xp6(1),
                  f.Q6J("formGroup", r.checkoutForm));
            },
            dependencies: [ui, fI, qd, X0, Dy, Ly, Hp, _u, Yu],
          })),
          n
        );
      })();
      function lW(n, e) {
        if (
          (1 & n &&
            (f.TgZ(0, "div", 1)(1, "span"),
            f._uU(2),
            f.qZA(),
            f.TgZ(3, "span"),
            f._uU(4),
            f.ALo(5, "currency"),
            f.qZA()()),
          2 & n)
        ) {
          const t = e.$implicit;
          f.xp6(2), f.Oqu(t.type), f.xp6(2), f.Oqu(f.lcZ(5, 2, t.price));
        }
      }
      let cW = (() => {
        class n {
          constructor(t) {
            this.cartService = t;
          }
          ngOnInit() {
            this.shippingCosts = this.cartService.getShippingPrices();
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(f.Y36(Fx));
          }),
          (n.ɵcmp = f.Xpm({
            type: n,
            selectors: [["app-shipping"]],
            decls: 4,
            vars: 3,
            consts: [
              ["class", "shipping-item", 4, "ngFor", "ngForOf"],
              [1, "shipping-item"],
            ],
            template: function (t, r) {
              1 & t &&
                (f.TgZ(0, "h3"),
                f._uU(1, "Shipping Prices"),
                f.qZA(),
                f.YNc(2, lW, 6, 4, "div", 0),
                f.ALo(3, "async")),
                2 & t &&
                  (f.xp6(2), f.Q6J("ngForOf", f.lcZ(3, 1, r.shippingCosts)));
            },
            dependencies: [ui, Ku, Yu],
          })),
          n
        );
      })();
      const GL = "@firebase/database";
      let Lx = "";
      class hW {
        constructor(e) {
          (this.domStorage_ = e), (this.prefix_ = "firebase:");
        }
        set(e, t) {
          null == t
            ? this.domStorage_.removeItem(this.prefixedName_(e))
            : this.domStorage_.setItem(this.prefixedName_(e), (0, ee.Pz)(t));
        }
        get(e) {
          const t = this.domStorage_.getItem(this.prefixedName_(e));
          return null == t ? null : (0, ee.cI)(t);
        }
        remove(e) {
          this.domStorage_.removeItem(this.prefixedName_(e));
        }
        prefixedName_(e) {
          return this.prefix_ + e;
        }
        toString() {
          return this.domStorage_.toString();
        }
      }
      class fW {
        constructor() {
          (this.cache_ = {}), (this.isInMemoryStorage = !0);
        }
        set(e, t) {
          null == t ? delete this.cache_[e] : (this.cache_[e] = t);
        }
        get(e) {
          return (0, ee.r3)(this.cache_, e) ? this.cache_[e] : null;
        }
        remove(e) {
          delete this.cache_[e];
        }
      }
      const zL = function (n) {
          try {
            if (typeof window < "u" && typeof window[n] < "u") {
              const e = window[n];
              return (
                e.setItem("firebase:sentinel", "cache"),
                e.removeItem("firebase:sentinel"),
                new hW(e)
              );
            }
          } catch {}
          return new fW();
        },
        If = zL("localStorage"),
        Vx = zL("sessionStorage"),
        Pm = new Li.Yd("@firebase/database"),
        qL = (function () {
          let n = 1;
          return function () {
            return n++;
          };
        })(),
        KL = function (n) {
          const e = (0, ee.dS)(n),
            t = new ee.gQ();
          t.update(e);
          const r = t.digest();
          return ee.US.encodeByteArray(r);
        },
        Aw = function (...n) {
          let e = "";
          for (let t = 0; t < n.length; t++) {
            const r = n[t];
            Array.isArray(r) ||
            (r && "object" == typeof r && "number" == typeof r.length)
              ? (e += Aw.apply(null, r))
              : (e += "object" == typeof r ? (0, ee.Pz)(r) : r),
              (e += " ");
          }
          return e;
        };
      let Cf = null,
        ZL = !0;
      const si = function (...n) {
          if (
            (!0 === ZL &&
              ((ZL = !1),
              null === Cf &&
                !0 === Vx.get("logging_enabled") &&
                (function (n, e) {
                  (0, ee.hu)(
                    !e || !0 === n || !1 === n,
                    "Can't turn on custom loggers persistently."
                  ),
                    !0 === n
                      ? ((Pm.logLevel = Li.in.VERBOSE),
                        (Cf = Pm.log.bind(Pm)),
                        e && Vx.set("logging_enabled", !0))
                      : "function" == typeof n
                      ? (Cf = n)
                      : ((Cf = null), Vx.remove("logging_enabled"));
                })(!0)),
            Cf)
          ) {
            const e = Aw.apply(null, n);
            Cf(e);
          }
        },
        Rw = function (n) {
          return function (...e) {
            si(n, ...e);
          };
        },
        Ux = function (...n) {
          const e = "FIREBASE INTERNAL ERROR: " + Aw(...n);
          Pm.error(e);
        },
        Ua = function (...n) {
          const e = `FIREBASE FATAL ERROR: ${Aw(...n)}`;
          throw (Pm.error(e), new Error(e));
        },
        Ni = function (...n) {
          const e = "FIREBASE WARNING: " + Aw(...n);
          Pm.warn(e);
        },
        lD = function (n) {
          return (
            "number" == typeof n &&
            (n != n ||
              n === Number.POSITIVE_INFINITY ||
              n === Number.NEGATIVE_INFINITY)
          );
        },
        ju = "[MIN_NAME]",
        Ba = "[MAX_NAME]",
        bf = function (n, e) {
          if (n === e) return 0;
          if (n === ju || e === Ba) return -1;
          if (e === ju || n === Ba) return 1;
          {
            const t = cD(n),
              r = cD(e);
            return null !== t
              ? null !== r
                ? t - r == 0
                  ? n.length - e.length
                  : t - r
                : -1
              : null !== r
              ? 1
              : n < e
              ? -1
              : 1;
          }
        },
        mW = function (n, e) {
          return n === e ? 0 : n < e ? -1 : 1;
        },
        Mw = function (n, e) {
          if (e && n in e) return e[n];
          throw new Error(
            "Missing required key (" + n + ") in object: " + (0, ee.Pz)(e)
          );
        },
        Bx = function (n) {
          if ("object" != typeof n || null === n) return (0, ee.Pz)(n);
          const e = [];
          for (const r in n) e.push(r);
          e.sort();
          let t = "{";
          for (let r = 0; r < e.length; r++)
            0 !== r && (t += ","),
              (t += (0, ee.Pz)(e[r])),
              (t += ":"),
              (t += Bx(n[e[r]]));
          return (t += "}"), t;
        },
        QL = function (n, e) {
          const t = n.length;
          if (t <= e) return [n];
          const r = [];
          for (let i = 0; i < t; i += e)
            r.push(n.substring(i, i + e > t ? t : i + e));
          return r;
        };
      function oi(n, e) {
        for (const t in n) n.hasOwnProperty(t) && e(t, n[t]);
      }
      const JL = function (n) {
          (0, ee.hu)(!lD(n), "Invalid JSON number");
          const r = 1023;
          let i, a, l, h, m;
          0 === n
            ? ((a = 0), (l = 0), (i = 1 / n == -1 / 0 ? 1 : 0))
            : ((i = n < 0),
              (n = Math.abs(n)) >= Math.pow(2, 1 - r)
                ? ((h = Math.min(Math.floor(Math.log(n) / Math.LN2), r)),
                  (a = h + r),
                  (l = Math.round(n * Math.pow(2, 52 - h) - Math.pow(2, 52))))
                : ((a = 0), (l = Math.round(n / Math.pow(2, -1074)))));
          const v = [];
          for (m = 52; m; m -= 1)
            v.push(l % 2 ? 1 : 0), (l = Math.floor(l / 2));
          for (m = 11; m; m -= 1)
            v.push(a % 2 ? 1 : 0), (a = Math.floor(a / 2));
          v.push(i ? 1 : 0), v.reverse();
          const b = v.join("");
          let D = "";
          for (m = 0; m < 64; m += 8) {
            let R = parseInt(b.substr(m, 8), 2).toString(16);
            1 === R.length && (R = "0" + R), (D += R);
          }
          return D.toLowerCase();
        },
        EW = new RegExp("^-?(0*)\\d{1,10}$"),
        cD = function (n) {
          if (EW.test(n)) {
            const e = Number(n);
            if (e >= -2147483648 && e <= 2147483647) return e;
          }
          return null;
        },
        Om = function (n) {
          try {
            n();
          } catch (e) {
            setTimeout(() => {
              throw (
                (Ni("Exception was thrown by user callback.", e.stack || ""), e)
              );
            }, Math.floor(0));
          }
        },
        xw = function (n, e) {
          const t = setTimeout(n, e);
          return "object" == typeof t && t.unref && t.unref(), t;
        };
      class IW {
        constructor(e, t) {
          (this.appName_ = e),
            (this.appCheckProvider = t),
            (this.appCheck = t?.getImmediate({ optional: !0 })),
            this.appCheck || t?.get().then((r) => (this.appCheck = r));
        }
        getToken(e) {
          return this.appCheck
            ? this.appCheck.getToken(e)
            : new Promise((t, r) => {
                setTimeout(() => {
                  this.appCheck ? this.getToken(e).then(t, r) : t(null);
                }, 0);
              });
        }
        addTokenChangeListener(e) {
          var t;
          null === (t = this.appCheckProvider) ||
            void 0 === t ||
            t.get().then((r) => r.addTokenListener(e));
        }
        notifyForInvalidToken() {
          Ni(
            `Provided AppCheck credentials for the app named "${this.appName_}" are invalid. This usually indicates your app was not initialized correctly.`
          );
        }
      }
      class CW {
        constructor(e, t, r) {
          (this.appName_ = e),
            (this.firebaseOptions_ = t),
            (this.authProvider_ = r),
            (this.auth_ = null),
            (this.auth_ = r.getImmediate({ optional: !0 })),
            this.auth_ || r.onInit((i) => (this.auth_ = i));
        }
        getToken(e) {
          return this.auth_
            ? this.auth_
                .getToken(e)
                .catch((t) =>
                  t && "auth/token-not-initialized" === t.code
                    ? (si(
                        "Got auth/token-not-initialized error.  Treating as null token."
                      ),
                      null)
                    : Promise.reject(t)
                )
            : new Promise((t, r) => {
                setTimeout(() => {
                  this.auth_ ? this.getToken(e).then(t, r) : t(null);
                }, 0);
              });
        }
        addTokenChangeListener(e) {
          this.auth_
            ? this.auth_.addAuthTokenListener(e)
            : this.authProvider_.get().then((t) => t.addAuthTokenListener(e));
        }
        removeTokenChangeListener(e) {
          this.authProvider_.get().then((t) => t.removeAuthTokenListener(e));
        }
        notifyForInvalidToken() {
          let e =
            'Provided authentication credentials for the app named "' +
            this.appName_ +
            '" are invalid. This usually indicates your app was not initialized correctly. ';
          (e +=
            "credential" in this.firebaseOptions_
              ? 'Make sure the "credential" property provided to initializeApp() is authorized to access the specified "databaseURL" and is from the correct project.'
              : "serviceAccount" in this.firebaseOptions_
              ? 'Make sure the "serviceAccount" property provided to initializeApp() is authorized to access the specified "databaseURL" and is from the correct project.'
              : 'Make sure the "apiKey" and "databaseURL" properties provided to initializeApp() match the values provided for your app at https://console.firebase.google.com/.'),
            Ni(e);
        }
      }
      let Nw = (() => {
        class n {
          constructor(t) {
            this.accessToken = t;
          }
          getToken(t) {
            return Promise.resolve({ accessToken: this.accessToken });
          }
          addTokenChangeListener(t) {
            t(this.accessToken);
          }
          removeTokenChangeListener(t) {}
          notifyForInvalidToken() {}
        }
        return (n.OWNER = "owner"), n;
      })();
      const iV =
          /(console\.firebase|firebase-console-\w+\.corp|firebase\.corp)\.google\.com/,
        aV = "websocket",
        uV = "long_polling";
      class Hx {
        constructor(e, t, r, i, a = !1, l = "", h = !1) {
          (this.secure = t),
            (this.namespace = r),
            (this.webSocketOnly = i),
            (this.nodeAdmin = a),
            (this.persistenceKey = l),
            (this.includeNamespaceInQueryParams = h),
            (this._host = e.toLowerCase()),
            (this._domain = this._host.substr(this._host.indexOf(".") + 1)),
            (this.internalHost = If.get("host:" + e) || this._host);
        }
        isCacheableHost() {
          return "s-" === this.internalHost.substr(0, 2);
        }
        isCustomHost() {
          return (
            "firebaseio.com" !== this._domain &&
            "firebaseio-demo.com" !== this._domain
          );
        }
        get host() {
          return this._host;
        }
        set host(e) {
          e !== this.internalHost &&
            ((this.internalHost = e),
            this.isCacheableHost() &&
              If.set("host:" + this._host, this.internalHost));
        }
        toString() {
          let e = this.toURLString();
          return (
            this.persistenceKey && (e += "<" + this.persistenceKey + ">"), e
          );
        }
        toURLString() {
          return `${this.secure ? "https://" : "http://"}${this.host}/${
            this.includeNamespaceInQueryParams ? `?ns=${this.namespace}` : ""
          }`;
        }
      }
      function lV(n, e, t) {
        let r;
        if (
          ((0, ee.hu)("string" == typeof e, "typeof type must == string"),
          (0, ee.hu)("object" == typeof t, "typeof params must == object"),
          e === aV)
        )
          r = (n.secure ? "wss://" : "ws://") + n.internalHost + "/.ws?";
        else {
          if (e !== uV) throw new Error("Unknown connection type: " + e);
          r = (n.secure ? "https://" : "http://") + n.internalHost + "/.lp?";
        }
        (function bW(n) {
          return (
            n.host !== n.internalHost ||
            n.isCustomHost() ||
            n.includeNamespaceInQueryParams
          );
        })(n) && (t.ns = n.namespace);
        const i = [];
        return (
          oi(t, (a, l) => {
            i.push(a + "=" + l);
          }),
          r + i.join("&")
        );
      }
      class DW {
        constructor() {
          this.counters_ = {};
        }
        incrementCounter(e, t = 1) {
          (0, ee.r3)(this.counters_, e) || (this.counters_[e] = 0),
            (this.counters_[e] += t);
        }
        get() {
          return (0, ee.p$)(this.counters_);
        }
      }
      const Gx = {},
        Wx = {};
      function zx(n) {
        const e = n.toString();
        return Gx[e] || (Gx[e] = new DW()), Gx[e];
      }
      class SW {
        constructor(e) {
          (this.onMessage_ = e),
            (this.pendingResponses = []),
            (this.currentResponseNum = 0),
            (this.closeAfterResponse = -1),
            (this.onClose = null);
        }
        closeAfter(e, t) {
          (this.closeAfterResponse = e),
            (this.onClose = t),
            this.closeAfterResponse < this.currentResponseNum &&
              (this.onClose(), (this.onClose = null));
        }
        handleResponse(e, t) {
          for (
            this.pendingResponses[e] = t;
            this.pendingResponses[this.currentResponseNum];

          ) {
            const r = this.pendingResponses[this.currentResponseNum];
            delete this.pendingResponses[this.currentResponseNum];
            for (let i = 0; i < r.length; ++i)
              r[i] &&
                Om(() => {
                  this.onMessage_(r[i]);
                });
            if (this.currentResponseNum === this.closeAfterResponse) {
              this.onClose && (this.onClose(), (this.onClose = null));
              break;
            }
            this.currentResponseNum++;
          }
        }
      }
      class $c {
        constructor(e, t, r, i, a, l, h) {
          (this.connId = e),
            (this.repoInfo = t),
            (this.applicationId = r),
            (this.appCheckToken = i),
            (this.authToken = a),
            (this.transportSessionId = l),
            (this.lastSessionId = h),
            (this.bytesSent = 0),
            (this.bytesReceived = 0),
            (this.everConnected_ = !1),
            (this.log_ = Rw(e)),
            (this.stats_ = zx(t)),
            (this.urlFn = (m) => (
              this.appCheckToken && (m.ac = this.appCheckToken), lV(t, uV, m)
            ));
        }
        open(e, t) {
          (this.curSegmentNum = 0),
            (this.onDisconnect_ = t),
            (this.myPacketOrderer = new SW(e)),
            (this.isClosed_ = !1),
            (this.connectTimeoutTimer_ = setTimeout(() => {
              this.log_("Timed out trying to connect."),
                this.onClosed_(),
                (this.connectTimeoutTimer_ = null);
            }, Math.floor(3e4))),
            (function (n) {
              if ((0, ee.Yr)() || "complete" === document.readyState) n();
              else {
                let e = !1;
                const t = function () {
                  document.body
                    ? e || ((e = !0), n())
                    : setTimeout(t, Math.floor(10));
                };
                document.addEventListener
                  ? (document.addEventListener("DOMContentLoaded", t, !1),
                    window.addEventListener("load", t, !1))
                  : document.attachEvent &&
                    (document.attachEvent("onreadystatechange", () => {
                      "complete" === document.readyState && t();
                    }),
                    window.attachEvent("onload", t));
              }
            })(() => {
              if (this.isClosed_) return;
              this.scriptTagHolder = new qx(
                (...a) => {
                  const [l, h, m, v, b] = a;
                  if ((this.incrementIncomingBytes_(a), this.scriptTagHolder))
                    if (
                      (this.connectTimeoutTimer_ &&
                        (clearTimeout(this.connectTimeoutTimer_),
                        (this.connectTimeoutTimer_ = null)),
                      (this.everConnected_ = !0),
                      "start" === l)
                    )
                      (this.id = h), (this.password = m);
                    else {
                      if ("close" !== l)
                        throw new Error("Unrecognized command received: " + l);
                      h
                        ? ((this.scriptTagHolder.sendNewPolls = !1),
                          this.myPacketOrderer.closeAfter(h, () => {
                            this.onClosed_();
                          }))
                        : this.onClosed_();
                    }
                },
                (...a) => {
                  const [l, h] = a;
                  this.incrementIncomingBytes_(a),
                    this.myPacketOrderer.handleResponse(l, h);
                },
                () => {
                  this.onClosed_();
                },
                this.urlFn
              );
              const r = { start: "t" };
              (r.ser = Math.floor(1e8 * Math.random())),
                this.scriptTagHolder.uniqueCallbackIdentifier &&
                  (r.cb = this.scriptTagHolder.uniqueCallbackIdentifier),
                (r.v = "5"),
                this.transportSessionId && (r.s = this.transportSessionId),
                this.lastSessionId && (r.ls = this.lastSessionId),
                this.applicationId && (r.p = this.applicationId),
                this.appCheckToken && (r.ac = this.appCheckToken),
                typeof location < "u" &&
                  location.hostname &&
                  iV.test(location.hostname) &&
                  (r.r = "f");
              const i = this.urlFn(r);
              this.log_("Connecting via long-poll to " + i),
                this.scriptTagHolder.addTag(i, () => {});
            });
        }
        start() {
          this.scriptTagHolder.startLongPoll(this.id, this.password),
            this.addDisconnectPingFrame(this.id, this.password);
        }
        static forceAllow() {
          $c.forceAllow_ = !0;
        }
        static forceDisallow() {
          $c.forceDisallow_ = !0;
        }
        static isAvailable() {
          return !(
            (0, ee.Yr)() ||
            (!$c.forceAllow_ &&
              ($c.forceDisallow_ ||
                !(typeof document < "u") ||
                null == document.createElement ||
                ("object" == typeof window &&
                  window.chrome &&
                  window.chrome.extension &&
                  !/^chrome/.test(window.location.href)) ||
                ("object" == typeof Windows && "object" == typeof Windows.UI)))
          );
        }
        markConnectionHealthy() {}
        shutdown_() {
          (this.isClosed_ = !0),
            this.scriptTagHolder &&
              (this.scriptTagHolder.close(), (this.scriptTagHolder = null)),
            this.myDisconnFrame &&
              (document.body.removeChild(this.myDisconnFrame),
              (this.myDisconnFrame = null)),
            this.connectTimeoutTimer_ &&
              (clearTimeout(this.connectTimeoutTimer_),
              (this.connectTimeoutTimer_ = null));
        }
        onClosed_() {
          this.isClosed_ ||
            (this.log_("Longpoll is closing itself"),
            this.shutdown_(),
            this.onDisconnect_ &&
              (this.onDisconnect_(this.everConnected_),
              (this.onDisconnect_ = null)));
        }
        close() {
          this.isClosed_ ||
            (this.log_("Longpoll is being closed."), this.shutdown_());
        }
        send(e) {
          const t = (0, ee.Pz)(e);
          (this.bytesSent += t.length),
            this.stats_.incrementCounter("bytes_sent", t.length);
          const r = (0, ee.h$)(t),
            i = QL(r, 1840);
          for (let a = 0; a < i.length; a++)
            this.scriptTagHolder.enqueueSegment(
              this.curSegmentNum,
              i.length,
              i[a]
            ),
              this.curSegmentNum++;
        }
        addDisconnectPingFrame(e, t) {
          if ((0, ee.Yr)()) return;
          this.myDisconnFrame = document.createElement("iframe");
          const r = { dframe: "t" };
          (r.id = e),
            (r.pw = t),
            (this.myDisconnFrame.src = this.urlFn(r)),
            (this.myDisconnFrame.style.display = "none"),
            document.body.appendChild(this.myDisconnFrame);
        }
        incrementIncomingBytes_(e) {
          const t = (0, ee.Pz)(e).length;
          (this.bytesReceived += t),
            this.stats_.incrementCounter("bytes_received", t);
        }
      }
      class qx {
        constructor(e, t, r, i) {
          if (
            ((this.onDisconnect = r),
            (this.urlFn = i),
            (this.outstandingRequests = new Set()),
            (this.pendingSegs = []),
            (this.currentSerial = Math.floor(1e8 * Math.random())),
            (this.sendNewPolls = !0),
            (0, ee.Yr)())
          )
            (this.commandCB = e), (this.onMessageCB = t);
          else {
            (this.uniqueCallbackIdentifier = qL()),
              (window["pLPCommand" + this.uniqueCallbackIdentifier] = e),
              (window["pRTLPCB" + this.uniqueCallbackIdentifier] = t),
              (this.myIFrame = qx.createIFrame_());
            let a = "";
            this.myIFrame.src &&
              "javascript:" === this.myIFrame.src.substr(0, 11) &&
              (a =
                '<script>document.domain="' + document.domain + '";</script>');
            const l = "<html><body>" + a + "</body></html>";
            try {
              this.myIFrame.doc.open(),
                this.myIFrame.doc.write(l),
                this.myIFrame.doc.close();
            } catch (h) {
              si("frame writing exception"), h.stack && si(h.stack), si(h);
            }
          }
        }
        static createIFrame_() {
          const e = document.createElement("iframe");
          if (((e.style.display = "none"), !document.body))
            throw "Document body has not initialized. Wait to initialize Firebase until after the document is ready.";
          document.body.appendChild(e);
          try {
            e.contentWindow.document || si("No IE domain setting required");
          } catch {
            const r = document.domain;
            e.src =
              "javascript:void((function(){document.open();document.domain='" +
              r +
              "';document.close();})())";
          }
          return (
            e.contentDocument
              ? (e.doc = e.contentDocument)
              : e.contentWindow
              ? (e.doc = e.contentWindow.document)
              : e.document && (e.doc = e.document),
            e
          );
        }
        close() {
          (this.alive = !1),
            this.myIFrame &&
              ((this.myIFrame.doc.body.innerHTML = ""),
              setTimeout(() => {
                null !== this.myIFrame &&
                  (document.body.removeChild(this.myIFrame),
                  (this.myIFrame = null));
              }, Math.floor(0)));
          const e = this.onDisconnect;
          e && ((this.onDisconnect = null), e());
        }
        startLongPoll(e, t) {
          for (
            this.myID = e, this.myPW = t, this.alive = !0;
            this.newRequest_();

          );
        }
        newRequest_() {
          if (
            this.alive &&
            this.sendNewPolls &&
            this.outstandingRequests.size <
              (this.pendingSegs.length > 0 ? 2 : 1)
          ) {
            this.currentSerial++;
            const e = {};
            (e.id = this.myID),
              (e.pw = this.myPW),
              (e.ser = this.currentSerial);
            let t = this.urlFn(e),
              r = "",
              i = 0;
            for (
              ;
              this.pendingSegs.length > 0 &&
              this.pendingSegs[0].d.length + 30 + r.length <= 1870;

            ) {
              const l = this.pendingSegs.shift();
              (r =
                r +
                "&seg" +
                i +
                "=" +
                l.seg +
                "&ts" +
                i +
                "=" +
                l.ts +
                "&d" +
                i +
                "=" +
                l.d),
                i++;
            }
            return (t += r), this.addLongPollTag_(t, this.currentSerial), !0;
          }
          return !1;
        }
        enqueueSegment(e, t, r) {
          this.pendingSegs.push({ seg: e, ts: t, d: r }),
            this.alive && this.newRequest_();
        }
        addLongPollTag_(e, t) {
          this.outstandingRequests.add(t);
          const r = () => {
              this.outstandingRequests.delete(t), this.newRequest_();
            },
            i = setTimeout(r, Math.floor(25e3));
          this.addTag(e, () => {
            clearTimeout(i), r();
          });
        }
        addTag(e, t) {
          (0, ee.Yr)()
            ? this.doNodeLongPoll(e, t)
            : setTimeout(() => {
                try {
                  if (!this.sendNewPolls) return;
                  const r = this.myIFrame.doc.createElement("script");
                  (r.type = "text/javascript"),
                    (r.async = !0),
                    (r.src = e),
                    (r.onload = r.onreadystatechange =
                      function () {
                        const i = r.readyState;
                        (!i || "loaded" === i || "complete" === i) &&
                          ((r.onload = r.onreadystatechange = null),
                          r.parentNode && r.parentNode.removeChild(r),
                          t());
                      }),
                    (r.onerror = () => {
                      si("Long-poll script failed to load: " + e),
                        (this.sendNewPolls = !1),
                        this.close();
                    }),
                    this.myIFrame.doc.body.appendChild(r);
                } catch {}
              }, Math.floor(1));
        }
      }
      let hD = null;
      typeof MozWebSocket < "u"
        ? (hD = MozWebSocket)
        : typeof WebSocket < "u" && (hD = WebSocket);
      let km = (() => {
          class n {
            constructor(t, r, i, a, l, h, m) {
              (this.connId = t),
                (this.applicationId = i),
                (this.appCheckToken = a),
                (this.authToken = l),
                (this.keepaliveTimer = null),
                (this.frames = null),
                (this.totalFrames = 0),
                (this.bytesSent = 0),
                (this.bytesReceived = 0),
                (this.log_ = Rw(this.connId)),
                (this.stats_ = zx(r)),
                (this.connURL = n.connectionURL_(r, h, m, a, i)),
                (this.nodeAdmin = r.nodeAdmin);
            }
            static connectionURL_(t, r, i, a, l) {
              const h = { v: "5" };
              return (
                !(0, ee.Yr)() &&
                  typeof location < "u" &&
                  location.hostname &&
                  iV.test(location.hostname) &&
                  (h.r = "f"),
                r && (h.s = r),
                i && (h.ls = i),
                a && (h.ac = a),
                l && (h.p = l),
                lV(t, aV, h)
              );
            }
            open(t, r) {
              (this.onDisconnect = r),
                (this.onMessage = t),
                this.log_("Websocket connecting to " + this.connURL),
                (this.everConnected_ = !1),
                If.set("previous_websocket_failure", !0);
              try {
                let i;
                if ((0, ee.Yr)()) {
                  (i = {
                    headers: {
                      "User-Agent": `Firebase/5/${Lx}/${process.platform}/${
                        this.nodeAdmin ? "AdminNode" : "Node"
                      }`,
                      "X-Firebase-GMPID": this.applicationId || "",
                    },
                  }),
                    this.authToken &&
                      (i.headers.Authorization = `Bearer ${this.authToken}`),
                    this.appCheckToken &&
                      (i.headers["X-Firebase-AppCheck"] = this.appCheckToken);
                  const l = process.env,
                    h =
                      0 === this.connURL.indexOf("wss://")
                        ? l.HTTPS_PROXY || l.https_proxy
                        : l.HTTP_PROXY || l.http_proxy;
                  h && (i.proxy = { origin: h });
                }
                this.mySock = new hD(this.connURL, [], i);
              } catch (i) {
                this.log_("Error instantiating WebSocket.");
                const a = i.message || i.data;
                return a && this.log_(a), void this.onClosed_();
              }
              (this.mySock.onopen = () => {
                this.log_("Websocket connected."), (this.everConnected_ = !0);
              }),
                (this.mySock.onclose = () => {
                  this.log_("Websocket connection was disconnected."),
                    (this.mySock = null),
                    this.onClosed_();
                }),
                (this.mySock.onmessage = (i) => {
                  this.handleIncomingFrame(i);
                }),
                (this.mySock.onerror = (i) => {
                  this.log_("WebSocket error.  Closing connection.");
                  const a = i.message || i.data;
                  a && this.log_(a), this.onClosed_();
                });
            }
            start() {}
            static forceDisallow() {
              n.forceDisallow_ = !0;
            }
            static isAvailable() {
              let t = !1;
              if (typeof navigator < "u" && navigator.userAgent) {
                const i = navigator.userAgent.match(
                  /Android ([0-9]{0,}\.[0-9]{0,})/
                );
                i && i.length > 1 && parseFloat(i[1]) < 4.4 && (t = !0);
              }
              return !t && null !== hD && !n.forceDisallow_;
            }
            static previouslyFailed() {
              return (
                If.isInMemoryStorage ||
                !0 === If.get("previous_websocket_failure")
              );
            }
            markConnectionHealthy() {
              If.remove("previous_websocket_failure");
            }
            appendFrame_(t) {
              if (
                (this.frames.push(t), this.frames.length === this.totalFrames)
              ) {
                const r = this.frames.join("");
                this.frames = null;
                const i = (0, ee.cI)(r);
                this.onMessage(i);
              }
            }
            handleNewFrameCount_(t) {
              (this.totalFrames = t), (this.frames = []);
            }
            extractFrameCount_(t) {
              if (
                ((0, ee.hu)(
                  null === this.frames,
                  "We already have a frame buffer"
                ),
                t.length <= 6)
              ) {
                const r = Number(t);
                if (!isNaN(r)) return this.handleNewFrameCount_(r), null;
              }
              return this.handleNewFrameCount_(1), t;
            }
            handleIncomingFrame(t) {
              if (null === this.mySock) return;
              const r = t.data;
              if (
                ((this.bytesReceived += r.length),
                this.stats_.incrementCounter("bytes_received", r.length),
                this.resetKeepAlive(),
                null !== this.frames)
              )
                this.appendFrame_(r);
              else {
                const i = this.extractFrameCount_(r);
                null !== i && this.appendFrame_(i);
              }
            }
            send(t) {
              this.resetKeepAlive();
              const r = (0, ee.Pz)(t);
              (this.bytesSent += r.length),
                this.stats_.incrementCounter("bytes_sent", r.length);
              const i = QL(r, 16384);
              i.length > 1 && this.sendString_(String(i.length));
              for (let a = 0; a < i.length; a++) this.sendString_(i[a]);
            }
            shutdown_() {
              (this.isClosed_ = !0),
                this.keepaliveTimer &&
                  (clearInterval(this.keepaliveTimer),
                  (this.keepaliveTimer = null)),
                this.mySock && (this.mySock.close(), (this.mySock = null));
            }
            onClosed_() {
              this.isClosed_ ||
                (this.log_("WebSocket is closing itself"),
                this.shutdown_(),
                this.onDisconnect &&
                  (this.onDisconnect(this.everConnected_),
                  (this.onDisconnect = null)));
            }
            close() {
              this.isClosed_ ||
                (this.log_("WebSocket is being closed"), this.shutdown_());
            }
            resetKeepAlive() {
              clearInterval(this.keepaliveTimer),
                (this.keepaliveTimer = setInterval(() => {
                  this.mySock && this.sendString_("0"), this.resetKeepAlive();
                }, Math.floor(45e3)));
            }
            sendString_(t) {
              try {
                this.mySock.send(t);
              } catch (r) {
                this.log_(
                  "Exception thrown from WebSocket.send():",
                  r.message || r.data,
                  "Closing connection."
                ),
                  setTimeout(this.onClosed_.bind(this), 0);
              }
            }
          }
          return (
            (n.responsesRequiredToBeHealthy = 2), (n.healthyTimeout = 3e4), n
          );
        })(),
        mV = (() => {
          class n {
            constructor(t) {
              this.initTransports_(t);
            }
            static get ALL_TRANSPORTS() {
              return [$c, km];
            }
            static get IS_TRANSPORT_INITIALIZED() {
              return this.globalTransportInitialized_;
            }
            initTransports_(t) {
              const r = km && km.isAvailable();
              let i = r && !km.previouslyFailed();
              if (
                (t.webSocketOnly &&
                  (r ||
                    Ni(
                      "wss:// URL used, but browser isn't known to support websockets.  Trying anyway."
                    ),
                  (i = !0)),
                i)
              )
                this.transports_ = [km];
              else {
                const a = (this.transports_ = []);
                for (const l of n.ALL_TRANSPORTS)
                  l && l.isAvailable() && a.push(l);
                n.globalTransportInitialized_ = !0;
              }
            }
            initialTransport() {
              if (this.transports_.length > 0) return this.transports_[0];
              throw new Error("No transports available");
            }
            upgradeTransport() {
              return this.transports_.length > 1 ? this.transports_[1] : null;
            }
          }
          return (n.globalTransportInitialized_ = !1), n;
        })();
      class CV {
        constructor(e, t, r, i, a, l, h, m, v, b) {
          (this.id = e),
            (this.repoInfo_ = t),
            (this.applicationId_ = r),
            (this.appCheckToken_ = i),
            (this.authToken_ = a),
            (this.onMessage_ = l),
            (this.onReady_ = h),
            (this.onDisconnect_ = m),
            (this.onKill_ = v),
            (this.lastSessionId = b),
            (this.connectionCount = 0),
            (this.pendingDataMessages = []),
            (this.state_ = 0),
            (this.log_ = Rw("c:" + this.id + ":")),
            (this.transportManager_ = new mV(t)),
            this.log_("Connection created"),
            this.start_();
        }
        start_() {
          const e = this.transportManager_.initialTransport();
          (this.conn_ = new e(
            this.nextTransportId_(),
            this.repoInfo_,
            this.applicationId_,
            this.appCheckToken_,
            this.authToken_,
            null,
            this.lastSessionId
          )),
            (this.primaryResponsesRequired_ =
              e.responsesRequiredToBeHealthy || 0);
          const t = this.connReceiver_(this.conn_),
            r = this.disconnReceiver_(this.conn_);
          (this.tx_ = this.conn_),
            (this.rx_ = this.conn_),
            (this.secondaryConn_ = null),
            (this.isHealthy_ = !1),
            setTimeout(() => {
              this.conn_ && this.conn_.open(t, r);
            }, Math.floor(0));
          const i = e.healthyTimeout || 0;
          i > 0 &&
            (this.healthyTimeout_ = xw(() => {
              (this.healthyTimeout_ = null),
                this.isHealthy_ ||
                  (this.conn_ && this.conn_.bytesReceived > 102400
                    ? (this.log_(
                        "Connection exceeded healthy timeout but has received " +
                          this.conn_.bytesReceived +
                          " bytes.  Marking connection healthy."
                      ),
                      (this.isHealthy_ = !0),
                      this.conn_.markConnectionHealthy())
                    : this.conn_ && this.conn_.bytesSent > 10240
                    ? this.log_(
                        "Connection exceeded healthy timeout but has sent " +
                          this.conn_.bytesSent +
                          " bytes.  Leaving connection alive."
                      )
                    : (this.log_("Closing unhealthy connection after timeout."),
                      this.close()));
            }, Math.floor(i)));
        }
        nextTransportId_() {
          return "c:" + this.id + ":" + this.connectionCount++;
        }
        disconnReceiver_(e) {
          return (t) => {
            e === this.conn_
              ? this.onConnectionLost_(t)
              : e === this.secondaryConn_
              ? (this.log_("Secondary connection lost."),
                this.onSecondaryConnectionLost_())
              : this.log_("closing an old connection");
          };
        }
        connReceiver_(e) {
          return (t) => {
            2 !== this.state_ &&
              (e === this.rx_
                ? this.onPrimaryMessageReceived_(t)
                : e === this.secondaryConn_
                ? this.onSecondaryMessageReceived_(t)
                : this.log_("message on old connection"));
          };
        }
        sendRequest(e) {
          this.sendData_({ t: "d", d: e });
        }
        tryCleanupConnection() {
          this.tx_ === this.secondaryConn_ &&
            this.rx_ === this.secondaryConn_ &&
            (this.log_(
              "cleaning up and promoting a connection: " +
                this.secondaryConn_.connId
            ),
            (this.conn_ = this.secondaryConn_),
            (this.secondaryConn_ = null));
        }
        onSecondaryControl_(e) {
          if ("t" in e) {
            const t = e.t;
            "a" === t
              ? this.upgradeIfSecondaryHealthy_()
              : "r" === t
              ? (this.log_("Got a reset on secondary, closing it"),
                this.secondaryConn_.close(),
                (this.tx_ === this.secondaryConn_ ||
                  this.rx_ === this.secondaryConn_) &&
                  this.close())
              : "o" === t &&
                (this.log_("got pong on secondary."),
                this.secondaryResponsesRequired_--,
                this.upgradeIfSecondaryHealthy_());
          }
        }
        onSecondaryMessageReceived_(e) {
          const t = Mw("t", e),
            r = Mw("d", e);
          if ("c" === t) this.onSecondaryControl_(r);
          else {
            if ("d" !== t) throw new Error("Unknown protocol layer: " + t);
            this.pendingDataMessages.push(r);
          }
        }
        upgradeIfSecondaryHealthy_() {
          this.secondaryResponsesRequired_ <= 0
            ? (this.log_("Secondary connection is healthy."),
              (this.isHealthy_ = !0),
              this.secondaryConn_.markConnectionHealthy(),
              this.proceedWithUpgrade_())
            : (this.log_("sending ping on secondary."),
              this.secondaryConn_.send({ t: "c", d: { t: "p", d: {} } }));
        }
        proceedWithUpgrade_() {
          this.secondaryConn_.start(),
            this.log_("sending client ack on secondary"),
            this.secondaryConn_.send({ t: "c", d: { t: "a", d: {} } }),
            this.log_("Ending transmission on primary"),
            this.conn_.send({ t: "c", d: { t: "n", d: {} } }),
            (this.tx_ = this.secondaryConn_),
            this.tryCleanupConnection();
        }
        onPrimaryMessageReceived_(e) {
          const t = Mw("t", e),
            r = Mw("d", e);
          "c" === t ? this.onControl_(r) : "d" === t && this.onDataMessage_(r);
        }
        onDataMessage_(e) {
          this.onPrimaryResponse_(), this.onMessage_(e);
        }
        onPrimaryResponse_() {
          this.isHealthy_ ||
            (this.primaryResponsesRequired_--,
            this.primaryResponsesRequired_ <= 0 &&
              (this.log_("Primary connection is healthy."),
              (this.isHealthy_ = !0),
              this.conn_.markConnectionHealthy()));
        }
        onControl_(e) {
          const t = Mw("t", e);
          if ("d" in e) {
            const r = e.d;
            if ("h" === t) this.onHandshake_(r);
            else if ("n" === t) {
              this.log_("recvd end transmission on primary"),
                (this.rx_ = this.secondaryConn_);
              for (let i = 0; i < this.pendingDataMessages.length; ++i)
                this.onDataMessage_(this.pendingDataMessages[i]);
              (this.pendingDataMessages = []), this.tryCleanupConnection();
            } else
              "s" === t
                ? this.onConnectionShutdown_(r)
                : "r" === t
                ? this.onReset_(r)
                : "e" === t
                ? Ux("Server Error: " + r)
                : "o" === t
                ? (this.log_("got pong on primary."),
                  this.onPrimaryResponse_(),
                  this.sendPingOnPrimaryIfNecessary_())
                : Ux("Unknown control packet command: " + t);
          }
        }
        onHandshake_(e) {
          const t = e.ts,
            r = e.v,
            i = e.h;
          (this.sessionId = e.s),
            (this.repoInfo_.host = i),
            0 === this.state_ &&
              (this.conn_.start(),
              this.onConnectionEstablished_(this.conn_, t),
              "5" !== r && Ni("Protocol version mismatch detected"),
              this.tryStartUpgrade_());
        }
        tryStartUpgrade_() {
          const e = this.transportManager_.upgradeTransport();
          e && this.startUpgrade_(e);
        }
        startUpgrade_(e) {
          (this.secondaryConn_ = new e(
            this.nextTransportId_(),
            this.repoInfo_,
            this.applicationId_,
            this.appCheckToken_,
            this.authToken_,
            this.sessionId
          )),
            (this.secondaryResponsesRequired_ =
              e.responsesRequiredToBeHealthy || 0);
          const t = this.connReceiver_(this.secondaryConn_),
            r = this.disconnReceiver_(this.secondaryConn_);
          this.secondaryConn_.open(t, r),
            xw(() => {
              this.secondaryConn_ &&
                (this.log_("Timed out trying to upgrade."),
                this.secondaryConn_.close());
            }, Math.floor(6e4));
        }
        onReset_(e) {
          this.log_("Reset packet received.  New host: " + e),
            (this.repoInfo_.host = e),
            1 === this.state_
              ? this.close()
              : (this.closeConnections_(), this.start_());
        }
        onConnectionEstablished_(e, t) {
          this.log_("Realtime connection established."),
            (this.conn_ = e),
            (this.state_ = 1),
            this.onReady_ &&
              (this.onReady_(t, this.sessionId), (this.onReady_ = null)),
            0 === this.primaryResponsesRequired_
              ? (this.log_("Primary connection is healthy."),
                (this.isHealthy_ = !0))
              : xw(() => {
                  this.sendPingOnPrimaryIfNecessary_();
                }, Math.floor(5e3));
        }
        sendPingOnPrimaryIfNecessary_() {
          !this.isHealthy_ &&
            1 === this.state_ &&
            (this.log_("sending ping on primary."),
            this.sendData_({ t: "c", d: { t: "p", d: {} } }));
        }
        onSecondaryConnectionLost_() {
          const e = this.secondaryConn_;
          (this.secondaryConn_ = null),
            (this.tx_ === e || this.rx_ === e) && this.close();
        }
        onConnectionLost_(e) {
          (this.conn_ = null),
            e || 0 !== this.state_
              ? 1 === this.state_ && this.log_("Realtime connection lost.")
              : (this.log_("Realtime connection failed."),
                this.repoInfo_.isCacheableHost() &&
                  (If.remove("host:" + this.repoInfo_.host),
                  (this.repoInfo_.internalHost = this.repoInfo_.host))),
            this.close();
        }
        onConnectionShutdown_(e) {
          this.log_("Connection shutdown command received. Shutting down..."),
            this.onKill_ && (this.onKill_(e), (this.onKill_ = null)),
            (this.onDisconnect_ = null),
            this.close();
        }
        sendData_(e) {
          if (1 !== this.state_) throw "Connection is not connected";
          this.tx_.send(e);
        }
        close() {
          2 !== this.state_ &&
            (this.log_("Closing realtime connection."),
            (this.state_ = 2),
            this.closeConnections_(),
            this.onDisconnect_ &&
              (this.onDisconnect_(), (this.onDisconnect_ = null)));
        }
        closeConnections_() {
          this.log_("Shutting down all connections"),
            this.conn_ && (this.conn_.close(), (this.conn_ = null)),
            this.secondaryConn_ &&
              (this.secondaryConn_.close(), (this.secondaryConn_ = null)),
            this.healthyTimeout_ &&
              (clearTimeout(this.healthyTimeout_),
              (this.healthyTimeout_ = null));
        }
      }
      class bV {
        put(e, t, r, i) {}
        merge(e, t, r, i) {}
        refreshAuthToken(e) {}
        refreshAppCheckToken(e) {}
        onDisconnectPut(e, t, r) {}
        onDisconnectMerge(e, t, r) {}
        onDisconnectCancel(e, t) {}
        reportStats(e) {}
      }
      class DV {
        constructor(e) {
          (this.allowedEvents_ = e),
            (this.listeners_ = {}),
            (0, ee.hu)(
              Array.isArray(e) && e.length > 0,
              "Requires a non-empty array"
            );
        }
        trigger(e, ...t) {
          if (Array.isArray(this.listeners_[e])) {
            const r = [...this.listeners_[e]];
            for (let i = 0; i < r.length; i++)
              r[i].callback.apply(r[i].context, t);
          }
        }
        on(e, t, r) {
          this.validateEventType_(e),
            (this.listeners_[e] = this.listeners_[e] || []),
            this.listeners_[e].push({ callback: t, context: r });
          const i = this.getInitialEvent(e);
          i && t.apply(r, i);
        }
        off(e, t, r) {
          this.validateEventType_(e);
          const i = this.listeners_[e] || [];
          for (let a = 0; a < i.length; a++)
            if (i[a].callback === t && (!r || r === i[a].context))
              return void i.splice(a, 1);
        }
        validateEventType_(e) {
          (0, ee.hu)(
            this.allowedEvents_.find((t) => t === e),
            "Unknown event: " + e
          );
        }
      }
      class fD extends DV {
        constructor() {
          super(["online"]),
            (this.online_ = !0),
            typeof window < "u" &&
              typeof window.addEventListener < "u" &&
              !(0, ee.uI)() &&
              (window.addEventListener(
                "online",
                () => {
                  this.online_ ||
                    ((this.online_ = !0), this.trigger("online", !0));
                },
                !1
              ),
              window.addEventListener(
                "offline",
                () => {
                  this.online_ &&
                    ((this.online_ = !1), this.trigger("online", !1));
                },
                !1
              ));
        }
        static getInstance() {
          return new fD();
        }
        getInitialEvent(e) {
          return (
            (0, ee.hu)("online" === e, "Unknown event type: " + e),
            [this.online_]
          );
        }
        currentlyOnline() {
          return this.online_;
        }
      }
      class Hn {
        constructor(e, t) {
          if (void 0 === t) {
            this.pieces_ = e.split("/");
            let r = 0;
            for (let i = 0; i < this.pieces_.length; i++)
              this.pieces_[i].length > 0 &&
                ((this.pieces_[r] = this.pieces_[i]), r++);
            (this.pieces_.length = r), (this.pieceNum_ = 0);
          } else (this.pieces_ = e), (this.pieceNum_ = t);
        }
        toString() {
          let e = "";
          for (let t = this.pieceNum_; t < this.pieces_.length; t++)
            "" !== this.pieces_[t] && (e += "/" + this.pieces_[t]);
          return e || "/";
        }
      }
      function Fn() {
        return new Hn("");
      }
      function yn(n) {
        return n.pieceNum_ >= n.pieces_.length ? null : n.pieces_[n.pieceNum_];
      }
      function Hc(n) {
        return n.pieces_.length - n.pieceNum_;
      }
      function Zn(n) {
        let e = n.pieceNum_;
        return e < n.pieces_.length && e++, new Hn(n.pieces_, e);
      }
      function Zx(n) {
        return n.pieceNum_ < n.pieces_.length
          ? n.pieces_[n.pieces_.length - 1]
          : null;
      }
      function Pw(n, e = 0) {
        return n.pieces_.slice(n.pieceNum_ + e);
      }
      function AV(n) {
        if (n.pieceNum_ >= n.pieces_.length) return null;
        const e = [];
        for (let t = n.pieceNum_; t < n.pieces_.length - 1; t++)
          e.push(n.pieces_[t]);
        return new Hn(e, 0);
      }
      function hr(n, e) {
        const t = [];
        for (let r = n.pieceNum_; r < n.pieces_.length; r++)
          t.push(n.pieces_[r]);
        if (e instanceof Hn)
          for (let r = e.pieceNum_; r < e.pieces_.length; r++)
            t.push(e.pieces_[r]);
        else {
          const r = e.split("/");
          for (let i = 0; i < r.length; i++) r[i].length > 0 && t.push(r[i]);
        }
        return new Hn(t, 0);
      }
      function vn(n) {
        return n.pieceNum_ >= n.pieces_.length;
      }
      function Wi(n, e) {
        const t = yn(n),
          r = yn(e);
        if (null === t) return e;
        if (t === r) return Wi(Zn(n), Zn(e));
        throw new Error(
          "INTERNAL ERROR: innerPath (" +
            e +
            ") is not within outerPath (" +
            n +
            ")"
        );
      }
      function Yx(n, e) {
        if (Hc(n) !== Hc(e)) return !1;
        for (
          let t = n.pieceNum_, r = e.pieceNum_;
          t <= n.pieces_.length;
          t++, r++
        )
          if (n.pieces_[t] !== e.pieces_[r]) return !1;
        return !0;
      }
      function ho(n, e) {
        let t = n.pieceNum_,
          r = e.pieceNum_;
        if (Hc(n) > Hc(e)) return !1;
        for (; t < n.pieces_.length; ) {
          if (n.pieces_[t] !== e.pieces_[r]) return !1;
          ++t, ++r;
        }
        return !0;
      }
      class YW {
        constructor(e, t) {
          (this.errorPrefix_ = t),
            (this.parts_ = Pw(e, 0)),
            (this.byteLength_ = Math.max(1, this.parts_.length));
          for (let r = 0; r < this.parts_.length; r++)
            this.byteLength_ += (0, ee.ug)(this.parts_[r]);
          RV(this);
        }
      }
      function RV(n) {
        if (n.byteLength_ > 768)
          throw new Error(
            n.errorPrefix_ +
              "has a key path longer than 768 bytes (" +
              n.byteLength_ +
              ")."
          );
        if (n.parts_.length > 32)
          throw new Error(
            n.errorPrefix_ +
              "path specified exceeds the maximum depth that can be written (32) or object contains a cycle " +
              Df(n)
          );
      }
      function Df(n) {
        return 0 === n.parts_.length
          ? ""
          : "in property '" + n.parts_.join(".") + "'";
      }
      class Qx extends DV {
        constructor() {
          let e, t;
          super(["visible"]),
            typeof document < "u" &&
              typeof document.addEventListener < "u" &&
              (typeof document.hidden < "u"
                ? ((t = "visibilitychange"), (e = "hidden"))
                : typeof document.mozHidden < "u"
                ? ((t = "mozvisibilitychange"), (e = "mozHidden"))
                : typeof document.msHidden < "u"
                ? ((t = "msvisibilitychange"), (e = "msHidden"))
                : typeof document.webkitHidden < "u" &&
                  ((t = "webkitvisibilitychange"), (e = "webkitHidden"))),
            (this.visible_ = !0),
            t &&
              document.addEventListener(
                t,
                () => {
                  const r = !document[e];
                  r !== this.visible_ &&
                    ((this.visible_ = r), this.trigger("visible", r));
                },
                !1
              );
        }
        static getInstance() {
          return new Qx();
        }
        getInitialEvent(e) {
          return (
            (0, ee.hu)("visible" === e, "Unknown event type: " + e),
            [this.visible_]
          );
        }
      }
      const Ow = 1e3;
      let gD,
        Tf = (() => {
          class n extends bV {
            constructor(t, r, i, a, l, h, m, v) {
              if (
                (super(),
                (this.repoInfo_ = t),
                (this.applicationId_ = r),
                (this.onDataUpdate_ = i),
                (this.onConnectStatus_ = a),
                (this.onServerInfoUpdate_ = l),
                (this.authTokenProvider_ = h),
                (this.appCheckTokenProvider_ = m),
                (this.authOverride_ = v),
                (this.id = n.nextPersistentConnectionId_++),
                (this.log_ = Rw("p:" + this.id + ":")),
                (this.interruptReasons_ = {}),
                (this.listens = new Map()),
                (this.outstandingPuts_ = []),
                (this.outstandingGets_ = []),
                (this.outstandingPutCount_ = 0),
                (this.outstandingGetCount_ = 0),
                (this.onDisconnectRequestQueue_ = []),
                (this.connected_ = !1),
                (this.reconnectDelay_ = Ow),
                (this.maxReconnectDelay_ = 3e5),
                (this.securityDebugCallback_ = null),
                (this.lastSessionId = null),
                (this.establishConnectionTimer_ = null),
                (this.visible_ = !1),
                (this.requestCBHash_ = {}),
                (this.requestNumber_ = 0),
                (this.realtime_ = null),
                (this.authToken_ = null),
                (this.appCheckToken_ = null),
                (this.forceTokenRefresh_ = !1),
                (this.invalidAuthTokenCount_ = 0),
                (this.invalidAppCheckTokenCount_ = 0),
                (this.firstConnection_ = !0),
                (this.lastConnectionAttemptTime_ = null),
                (this.lastConnectionEstablishedTime_ = null),
                v && !(0, ee.Yr)())
              )
                throw new Error(
                  "Auth override specified in options, but not supported on non Node.js platforms"
                );
              Qx.getInstance().on("visible", this.onVisible_, this),
                -1 === t.host.indexOf("fblocal") &&
                  fD.getInstance().on("online", this.onOnline_, this);
            }
            sendRequest(t, r, i) {
              const a = ++this.requestNumber_,
                l = { r: a, a: t, b: r };
              this.log_((0, ee.Pz)(l)),
                (0, ee.hu)(
                  this.connected_,
                  "sendRequest call when we're not connected not allowed."
                ),
                this.realtime_.sendRequest(l),
                i && (this.requestCBHash_[a] = i);
            }
            get(t) {
              this.initConnection_();
              const r = new ee.BH(),
                i = { p: t._path.toString(), q: t._queryObject };
              return (
                this.outstandingGets_.push({
                  action: "g",
                  request: i,
                  onComplete: (h) => {
                    const m = h.d;
                    "ok" === h.s ? r.resolve(m) : r.reject(m);
                  },
                }),
                this.outstandingGetCount_++,
                this.connected_ &&
                  this.sendGet_(this.outstandingGets_.length - 1),
                r.promise
              );
            }
            listen(t, r, i, a) {
              this.initConnection_();
              const l = t._queryIdentifier,
                h = t._path.toString();
              this.log_("Listen called for " + h + " " + l),
                this.listens.has(h) || this.listens.set(h, new Map()),
                (0, ee.hu)(
                  t._queryParams.isDefault() || !t._queryParams.loadsAllData(),
                  "listen() called for non-default but complete query"
                ),
                (0, ee.hu)(
                  !this.listens.get(h).has(l),
                  "listen() called twice for same path/queryId."
                );
              const m = { onComplete: a, hashFn: r, query: t, tag: i };
              this.listens.get(h).set(l, m),
                this.connected_ && this.sendListen_(m);
            }
            sendGet_(t) {
              const r = this.outstandingGets_[t];
              this.sendRequest("g", r.request, (i) => {
                delete this.outstandingGets_[t],
                  this.outstandingGetCount_--,
                  0 === this.outstandingGetCount_ &&
                    (this.outstandingGets_ = []),
                  r.onComplete && r.onComplete(i);
              });
            }
            sendListen_(t) {
              const r = t.query,
                i = r._path.toString(),
                a = r._queryIdentifier;
              this.log_("Listen on " + i + " for " + a);
              const l = { p: i };
              t.tag && ((l.q = r._queryObject), (l.t = t.tag)),
                (l.h = t.hashFn()),
                this.sendRequest("q", l, (m) => {
                  const v = m.d,
                    b = m.s;
                  n.warnOnListenWarnings_(v, r),
                    (this.listens.get(i) && this.listens.get(i).get(a)) === t &&
                      (this.log_("listen response", m),
                      "ok" !== b && this.removeListen_(i, a),
                      t.onComplete && t.onComplete(b, v));
                });
            }
            static warnOnListenWarnings_(t, r) {
              if (t && "object" == typeof t && (0, ee.r3)(t, "w")) {
                const i = (0, ee.DV)(t, "w");
                if (Array.isArray(i) && ~i.indexOf("no_index")) {
                  const a =
                      '".indexOn": "' +
                      r._queryParams.getIndex().toString() +
                      '"',
                    l = r._path.toString();
                  Ni(
                    `Using an unspecified index. Your data will be downloaded and filtered on the client. Consider adding ${a} at ${l} to your security rules for better performance.`
                  );
                }
              }
            }
            refreshAuthToken(t) {
              (this.authToken_ = t),
                this.log_("Auth token refreshed"),
                this.authToken_
                  ? this.tryAuth()
                  : this.connected_ && this.sendRequest("unauth", {}, () => {}),
                this.reduceReconnectDelayIfAdminCredential_(t);
            }
            reduceReconnectDelayIfAdminCredential_(t) {
              ((t && 40 === t.length) || (0, ee.GJ)(t)) &&
                (this.log_(
                  "Admin auth credential detected.  Reducing max reconnect time."
                ),
                (this.maxReconnectDelay_ = 3e4));
            }
            refreshAppCheckToken(t) {
              (this.appCheckToken_ = t),
                this.log_("App check token refreshed"),
                this.appCheckToken_
                  ? this.tryAppCheck()
                  : this.connected_ &&
                    this.sendRequest("unappeck", {}, () => {});
            }
            tryAuth() {
              if (this.connected_ && this.authToken_) {
                const t = this.authToken_,
                  r = (0, ee.w9)(t) ? "auth" : "gauth",
                  i = { cred: t };
                null === this.authOverride_
                  ? (i.noauth = !0)
                  : "object" == typeof this.authOverride_ &&
                    (i.authvar = this.authOverride_),
                  this.sendRequest(r, i, (a) => {
                    const l = a.s,
                      h = a.d || "error";
                    this.authToken_ === t &&
                      ("ok" === l
                        ? (this.invalidAuthTokenCount_ = 0)
                        : this.onAuthRevoked_(l, h));
                  });
              }
            }
            tryAppCheck() {
              this.connected_ &&
                this.appCheckToken_ &&
                this.sendRequest(
                  "appcheck",
                  { token: this.appCheckToken_ },
                  (t) => {
                    const r = t.s,
                      i = t.d || "error";
                    "ok" === r
                      ? (this.invalidAppCheckTokenCount_ = 0)
                      : this.onAppCheckRevoked_(r, i);
                  }
                );
            }
            unlisten(t, r) {
              const i = t._path.toString(),
                a = t._queryIdentifier;
              this.log_("Unlisten called for " + i + " " + a),
                (0, ee.hu)(
                  t._queryParams.isDefault() || !t._queryParams.loadsAllData(),
                  "unlisten() called for non-default but complete query"
                ),
                this.removeListen_(i, a) &&
                  this.connected_ &&
                  this.sendUnlisten_(i, a, t._queryObject, r);
            }
            sendUnlisten_(t, r, i, a) {
              this.log_("Unlisten on " + t + " for " + r);
              const l = { p: t };
              a && ((l.q = i), (l.t = a)), this.sendRequest("n", l);
            }
            onDisconnectPut(t, r, i) {
              this.initConnection_(),
                this.connected_
                  ? this.sendOnDisconnect_("o", t, r, i)
                  : this.onDisconnectRequestQueue_.push({
                      pathString: t,
                      action: "o",
                      data: r,
                      onComplete: i,
                    });
            }
            onDisconnectMerge(t, r, i) {
              this.initConnection_(),
                this.connected_
                  ? this.sendOnDisconnect_("om", t, r, i)
                  : this.onDisconnectRequestQueue_.push({
                      pathString: t,
                      action: "om",
                      data: r,
                      onComplete: i,
                    });
            }
            onDisconnectCancel(t, r) {
              this.initConnection_(),
                this.connected_
                  ? this.sendOnDisconnect_("oc", t, null, r)
                  : this.onDisconnectRequestQueue_.push({
                      pathString: t,
                      action: "oc",
                      data: null,
                      onComplete: r,
                    });
            }
            sendOnDisconnect_(t, r, i, a) {
              const l = { p: r, d: i };
              this.log_("onDisconnect " + t, l),
                this.sendRequest(t, l, (h) => {
                  a &&
                    setTimeout(() => {
                      a(h.s, h.d);
                    }, Math.floor(0));
                });
            }
            put(t, r, i, a) {
              this.putInternal("p", t, r, i, a);
            }
            merge(t, r, i, a) {
              this.putInternal("m", t, r, i, a);
            }
            putInternal(t, r, i, a, l) {
              this.initConnection_();
              const h = { p: r, d: i };
              void 0 !== l && (h.h = l),
                this.outstandingPuts_.push({
                  action: t,
                  request: h,
                  onComplete: a,
                }),
                this.outstandingPutCount_++,
                this.connected_
                  ? this.sendPut_(this.outstandingPuts_.length - 1)
                  : this.log_("Buffering put: " + r);
            }
            sendPut_(t) {
              const r = this.outstandingPuts_[t].action,
                i = this.outstandingPuts_[t].request,
                a = this.outstandingPuts_[t].onComplete;
              (this.outstandingPuts_[t].queued = this.connected_),
                this.sendRequest(r, i, (l) => {
                  this.log_(r + " response", l),
                    delete this.outstandingPuts_[t],
                    this.outstandingPutCount_--,
                    0 === this.outstandingPutCount_ &&
                      (this.outstandingPuts_ = []),
                    a && a(l.s, l.d);
                });
            }
            reportStats(t) {
              if (this.connected_) {
                const r = { c: t };
                this.log_("reportStats", r),
                  this.sendRequest("s", r, (i) => {
                    "ok" !== i.s &&
                      this.log_("reportStats", "Error sending stats: " + i.d);
                  });
              }
            }
            onDataMessage_(t) {
              if ("r" in t) {
                this.log_("from server: " + (0, ee.Pz)(t));
                const r = t.r,
                  i = this.requestCBHash_[r];
                i && (delete this.requestCBHash_[r], i(t.b));
              } else {
                if ("error" in t)
                  throw "A server-side error has occurred: " + t.error;
                "a" in t && this.onDataPush_(t.a, t.b);
              }
            }
            onDataPush_(t, r) {
              this.log_("handleServerMessage", t, r),
                "d" === t
                  ? this.onDataUpdate_(r.p, r.d, !1, r.t)
                  : "m" === t
                  ? this.onDataUpdate_(r.p, r.d, !0, r.t)
                  : "c" === t
                  ? this.onListenRevoked_(r.p, r.q)
                  : "ac" === t
                  ? this.onAuthRevoked_(r.s, r.d)
                  : "apc" === t
                  ? this.onAppCheckRevoked_(r.s, r.d)
                  : "sd" === t
                  ? this.onSecurityDebugPacket_(r)
                  : Ux(
                      "Unrecognized action received from server: " +
                        (0, ee.Pz)(t) +
                        "\nAre you using the latest client?"
                    );
            }
            onReady_(t, r) {
              this.log_("connection ready"),
                (this.connected_ = !0),
                (this.lastConnectionEstablishedTime_ = new Date().getTime()),
                this.handleTimestamp_(t),
                (this.lastSessionId = r),
                this.firstConnection_ && this.sendConnectStats_(),
                this.restoreState_(),
                (this.firstConnection_ = !1),
                this.onConnectStatus_(!0);
            }
            scheduleConnect_(t) {
              (0, ee.hu)(
                !this.realtime_,
                "Scheduling a connect when we're already connected/ing?"
              ),
                this.establishConnectionTimer_ &&
                  clearTimeout(this.establishConnectionTimer_),
                (this.establishConnectionTimer_ = setTimeout(() => {
                  (this.establishConnectionTimer_ = null),
                    this.establishConnection_();
                }, Math.floor(t)));
            }
            initConnection_() {
              !this.realtime_ &&
                this.firstConnection_ &&
                this.scheduleConnect_(0);
            }
            onVisible_(t) {
              t &&
                !this.visible_ &&
                this.reconnectDelay_ === this.maxReconnectDelay_ &&
                (this.log_("Window became visible.  Reducing delay."),
                (this.reconnectDelay_ = Ow),
                this.realtime_ || this.scheduleConnect_(0)),
                (this.visible_ = t);
            }
            onOnline_(t) {
              t
                ? (this.log_("Browser went online."),
                  (this.reconnectDelay_ = Ow),
                  this.realtime_ || this.scheduleConnect_(0))
                : (this.log_("Browser went offline.  Killing connection."),
                  this.realtime_ && this.realtime_.close());
            }
            onRealtimeDisconnect_() {
              if (
                (this.log_("data client disconnected"),
                (this.connected_ = !1),
                (this.realtime_ = null),
                this.cancelSentTransactions_(),
                (this.requestCBHash_ = {}),
                this.shouldReconnect_())
              ) {
                this.visible_
                  ? this.lastConnectionEstablishedTime_ &&
                    (new Date().getTime() -
                      this.lastConnectionEstablishedTime_ >
                      3e4 && (this.reconnectDelay_ = Ow),
                    (this.lastConnectionEstablishedTime_ = null))
                  : (this.log_("Window isn't visible.  Delaying reconnect."),
                    (this.reconnectDelay_ = this.maxReconnectDelay_),
                    (this.lastConnectionAttemptTime_ = new Date().getTime()));
                const t =
                  new Date().getTime() - this.lastConnectionAttemptTime_;
                let r = Math.max(0, this.reconnectDelay_ - t);
                (r = Math.random() * r),
                  this.log_("Trying to reconnect in " + r + "ms"),
                  this.scheduleConnect_(r),
                  (this.reconnectDelay_ = Math.min(
                    this.maxReconnectDelay_,
                    1.3 * this.reconnectDelay_
                  ));
              }
              this.onConnectStatus_(!1);
            }
            establishConnection_() {
              var t = this;
              return (0, Te.Z)(function* () {
                if (t.shouldReconnect_()) {
                  t.log_("Making a connection attempt"),
                    (t.lastConnectionAttemptTime_ = new Date().getTime()),
                    (t.lastConnectionEstablishedTime_ = null);
                  const r = t.onDataMessage_.bind(t),
                    i = t.onReady_.bind(t),
                    a = t.onRealtimeDisconnect_.bind(t),
                    l = t.id + ":" + n.nextConnectionId_++,
                    h = t.lastSessionId;
                  let m = !1,
                    v = null;
                  const b = function () {
                    v ? v.close() : ((m = !0), a());
                  };
                  t.realtime_ = {
                    close: b,
                    sendRequest: function (F) {
                      (0, ee.hu)(
                        v,
                        "sendRequest call when we're not connected not allowed."
                      ),
                        v.sendRequest(F);
                    },
                  };
                  const R = t.forceTokenRefresh_;
                  t.forceTokenRefresh_ = !1;
                  try {
                    const [F, B] = yield Promise.all([
                      t.authTokenProvider_.getToken(R),
                      t.appCheckTokenProvider_.getToken(R),
                    ]);
                    m
                      ? si("getToken() completed but was canceled")
                      : (si("getToken() completed. Creating connection."),
                        (t.authToken_ = F && F.accessToken),
                        (t.appCheckToken_ = B && B.token),
                        (v = new CV(
                          l,
                          t.repoInfo_,
                          t.applicationId_,
                          t.appCheckToken_,
                          t.authToken_,
                          r,
                          i,
                          a,
                          (le) => {
                            Ni(le + " (" + t.repoInfo_.toString() + ")"),
                              t.interrupt("server_kill");
                          },
                          h
                        )));
                  } catch (F) {
                    t.log_("Failed to get token: " + F),
                      m || (t.repoInfo_.nodeAdmin && Ni(F), b());
                  }
                }
              })();
            }
            interrupt(t) {
              si("Interrupting connection for reason: " + t),
                (this.interruptReasons_[t] = !0),
                this.realtime_
                  ? this.realtime_.close()
                  : (this.establishConnectionTimer_ &&
                      (clearTimeout(this.establishConnectionTimer_),
                      (this.establishConnectionTimer_ = null)),
                    this.connected_ && this.onRealtimeDisconnect_());
            }
            resume(t) {
              si("Resuming connection for reason: " + t),
                delete this.interruptReasons_[t],
                (0, ee.xb)(this.interruptReasons_) &&
                  ((this.reconnectDelay_ = Ow),
                  this.realtime_ || this.scheduleConnect_(0));
            }
            handleTimestamp_(t) {
              const r = t - new Date().getTime();
              this.onServerInfoUpdate_({ serverTimeOffset: r });
            }
            cancelSentTransactions_() {
              for (let t = 0; t < this.outstandingPuts_.length; t++) {
                const r = this.outstandingPuts_[t];
                r &&
                  "h" in r.request &&
                  r.queued &&
                  (r.onComplete && r.onComplete("disconnect"),
                  delete this.outstandingPuts_[t],
                  this.outstandingPutCount_--);
              }
              0 === this.outstandingPutCount_ && (this.outstandingPuts_ = []);
            }
            onListenRevoked_(t, r) {
              let i;
              i = r ? r.map((l) => Bx(l)).join("$") : "default";
              const a = this.removeListen_(t, i);
              a && a.onComplete && a.onComplete("permission_denied");
            }
            removeListen_(t, r) {
              const i = new Hn(t).toString();
              let a;
              if (this.listens.has(i)) {
                const l = this.listens.get(i);
                (a = l.get(r)),
                  l.delete(r),
                  0 === l.size && this.listens.delete(i);
              } else a = void 0;
              return a;
            }
            onAuthRevoked_(t, r) {
              si("Auth token revoked: " + t + "/" + r),
                (this.authToken_ = null),
                (this.forceTokenRefresh_ = !0),
                this.realtime_.close(),
                ("invalid_token" === t || "permission_denied" === t) &&
                  (this.invalidAuthTokenCount_++,
                  this.invalidAuthTokenCount_ >= 3 &&
                    ((this.reconnectDelay_ = 3e4),
                    this.authTokenProvider_.notifyForInvalidToken()));
            }
            onAppCheckRevoked_(t, r) {
              si("App check token revoked: " + t + "/" + r),
                (this.appCheckToken_ = null),
                (this.forceTokenRefresh_ = !0),
                ("invalid_token" === t || "permission_denied" === t) &&
                  (this.invalidAppCheckTokenCount_++,
                  this.invalidAppCheckTokenCount_ >= 3 &&
                    this.appCheckTokenProvider_.notifyForInvalidToken());
            }
            onSecurityDebugPacket_(t) {
              this.securityDebugCallback_
                ? this.securityDebugCallback_(t)
                : "msg" in t &&
                  console.log(
                    "FIREBASE: " + t.msg.replace("\n", "\nFIREBASE: ")
                  );
            }
            restoreState_() {
              this.tryAuth(), this.tryAppCheck();
              for (const t of this.listens.values())
                for (const r of t.values()) this.sendListen_(r);
              for (let t = 0; t < this.outstandingPuts_.length; t++)
                this.outstandingPuts_[t] && this.sendPut_(t);
              for (; this.onDisconnectRequestQueue_.length; ) {
                const t = this.onDisconnectRequestQueue_.shift();
                this.sendOnDisconnect_(
                  t.action,
                  t.pathString,
                  t.data,
                  t.onComplete
                );
              }
              for (let t = 0; t < this.outstandingGets_.length; t++)
                this.outstandingGets_[t] && this.sendGet_(t);
            }
            sendConnectStats_() {
              const t = {};
              let r = "js";
              (0, ee.Yr)() &&
                (r = this.repoInfo_.nodeAdmin ? "admin_node" : "node"),
                (t["sdk." + r + "." + Lx.replace(/\./g, "-")] = 1),
                (0, ee.uI)()
                  ? (t["framework.cordova"] = 1)
                  : (0, ee.b$)() && (t["framework.reactnative"] = 1),
                this.reportStats(t);
            }
            shouldReconnect_() {
              const t = fD.getInstance().currentlyOnline();
              return (0, ee.xb)(this.interruptReasons_) && t;
            }
          }
          return (
            (n.nextPersistentConnectionId_ = 0), (n.nextConnectionId_ = 0), n
          );
        })();
      class In {
        constructor(e, t) {
          (this.name = e), (this.node = t);
        }
        static Wrap(e, t) {
          return new In(e, t);
        }
      }
      class pD {
        getCompare() {
          return this.compare.bind(this);
        }
        indexedValueChanged(e, t) {
          const r = new In(ju, e),
            i = new In(ju, t);
          return 0 !== this.compare(r, i);
        }
        minPost() {
          return In.MIN;
        }
      }
      class NV extends pD {
        static get __EMPTY_NODE() {
          return gD;
        }
        static set __EMPTY_NODE(e) {
          gD = e;
        }
        compare(e, t) {
          return bf(e.name, t.name);
        }
        isDefinedOn(e) {
          throw (0, ee.g5)("KeyIndex.isDefinedOn not expected to be called.");
        }
        indexedValueChanged(e, t) {
          return !1;
        }
        minPost() {
          return In.MIN;
        }
        maxPost() {
          return new In(Ba, gD);
        }
        makePost(e, t) {
          return (
            (0, ee.hu)(
              "string" == typeof e,
              "KeyIndex indexValue must always be a string."
            ),
            new In(e, gD)
          );
        }
        toString() {
          return ".key";
        }
      }
      const ja = new NV();
      class mD {
        constructor(e, t, r, i, a = null) {
          (this.isReverse_ = i),
            (this.resultGenerator_ = a),
            (this.nodeStack_ = []);
          let l = 1;
          for (; !e.isEmpty(); )
            if (((l = t ? r(e.key, t) : 1), i && (l *= -1), l < 0))
              e = this.isReverse_ ? e.left : e.right;
            else {
              if (0 === l) {
                this.nodeStack_.push(e);
                break;
              }
              this.nodeStack_.push(e), (e = this.isReverse_ ? e.right : e.left);
            }
        }
        getNext() {
          if (0 === this.nodeStack_.length) return null;
          let t,
            e = this.nodeStack_.pop();
          if (
            ((t = this.resultGenerator_
              ? this.resultGenerator_(e.key, e.value)
              : { key: e.key, value: e.value }),
            this.isReverse_)
          )
            for (e = e.left; !e.isEmpty(); )
              this.nodeStack_.push(e), (e = e.right);
          else
            for (e = e.right; !e.isEmpty(); )
              this.nodeStack_.push(e), (e = e.left);
          return t;
        }
        hasNext() {
          return this.nodeStack_.length > 0;
        }
        peek() {
          if (0 === this.nodeStack_.length) return null;
          const e = this.nodeStack_[this.nodeStack_.length - 1];
          return this.resultGenerator_
            ? this.resultGenerator_(e.key, e.value)
            : { key: e.key, value: e.value };
        }
      }
      let Xx,
        Wo = (() => {
          class n {
            constructor(t, r, i, a, l) {
              (this.key = t),
                (this.value = r),
                (this.color = i ?? n.RED),
                (this.left = a ?? cs.EMPTY_NODE),
                (this.right = l ?? cs.EMPTY_NODE);
            }
            copy(t, r, i, a, l) {
              return new n(
                t ?? this.key,
                r ?? this.value,
                i ?? this.color,
                a ?? this.left,
                l ?? this.right
              );
            }
            count() {
              return this.left.count() + 1 + this.right.count();
            }
            isEmpty() {
              return !1;
            }
            inorderTraversal(t) {
              return (
                this.left.inorderTraversal(t) ||
                !!t(this.key, this.value) ||
                this.right.inorderTraversal(t)
              );
            }
            reverseTraversal(t) {
              return (
                this.right.reverseTraversal(t) ||
                t(this.key, this.value) ||
                this.left.reverseTraversal(t)
              );
            }
            min_() {
              return this.left.isEmpty() ? this : this.left.min_();
            }
            minKey() {
              return this.min_().key;
            }
            maxKey() {
              return this.right.isEmpty() ? this.key : this.right.maxKey();
            }
            insert(t, r, i) {
              let a = this;
              const l = i(t, a.key);
              return (
                (a =
                  l < 0
                    ? a.copy(null, null, null, a.left.insert(t, r, i), null)
                    : 0 === l
                    ? a.copy(null, r, null, null, null)
                    : a.copy(null, null, null, null, a.right.insert(t, r, i))),
                a.fixUp_()
              );
            }
            removeMin_() {
              if (this.left.isEmpty()) return cs.EMPTY_NODE;
              let t = this;
              return (
                !t.left.isRed_() &&
                  !t.left.left.isRed_() &&
                  (t = t.moveRedLeft_()),
                (t = t.copy(null, null, null, t.left.removeMin_(), null)),
                t.fixUp_()
              );
            }
            remove(t, r) {
              let i, a;
              if (((i = this), r(t, i.key) < 0))
                !i.left.isEmpty() &&
                  !i.left.isRed_() &&
                  !i.left.left.isRed_() &&
                  (i = i.moveRedLeft_()),
                  (i = i.copy(null, null, null, i.left.remove(t, r), null));
              else {
                if (
                  (i.left.isRed_() && (i = i.rotateRight_()),
                  !i.right.isEmpty() &&
                    !i.right.isRed_() &&
                    !i.right.left.isRed_() &&
                    (i = i.moveRedRight_()),
                  0 === r(t, i.key))
                ) {
                  if (i.right.isEmpty()) return cs.EMPTY_NODE;
                  (a = i.right.min_()),
                    (i = i.copy(
                      a.key,
                      a.value,
                      null,
                      null,
                      i.right.removeMin_()
                    ));
                }
                i = i.copy(null, null, null, null, i.right.remove(t, r));
              }
              return i.fixUp_();
            }
            isRed_() {
              return this.color;
            }
            fixUp_() {
              let t = this;
              return (
                t.right.isRed_() && !t.left.isRed_() && (t = t.rotateLeft_()),
                t.left.isRed_() &&
                  t.left.left.isRed_() &&
                  (t = t.rotateRight_()),
                t.left.isRed_() && t.right.isRed_() && (t = t.colorFlip_()),
                t
              );
            }
            moveRedLeft_() {
              let t = this.colorFlip_();
              return (
                t.right.left.isRed_() &&
                  ((t = t.copy(null, null, null, null, t.right.rotateRight_())),
                  (t = t.rotateLeft_()),
                  (t = t.colorFlip_())),
                t
              );
            }
            moveRedRight_() {
              let t = this.colorFlip_();
              return (
                t.left.left.isRed_() &&
                  ((t = t.rotateRight_()), (t = t.colorFlip_())),
                t
              );
            }
            rotateLeft_() {
              const t = this.copy(null, null, n.RED, null, this.right.left);
              return this.right.copy(null, null, this.color, t, null);
            }
            rotateRight_() {
              const t = this.copy(null, null, n.RED, this.left.right, null);
              return this.left.copy(null, null, this.color, null, t);
            }
            colorFlip_() {
              const t = this.left.copy(
                  null,
                  null,
                  !this.left.color,
                  null,
                  null
                ),
                r = this.right.copy(null, null, !this.right.color, null, null);
              return this.copy(null, null, !this.color, t, r);
            }
            checkMaxDepth_() {
              const t = this.check_();
              return Math.pow(2, t) <= this.count() + 1;
            }
            check_() {
              if (this.isRed_() && this.left.isRed_())
                throw new Error(
                  "Red node has red child(" + this.key + "," + this.value + ")"
                );
              if (this.right.isRed_())
                throw new Error(
                  "Right child of (" + this.key + "," + this.value + ") is red"
                );
              const t = this.left.check_();
              if (t !== this.right.check_())
                throw new Error("Black depths differ");
              return t + (this.isRed_() ? 0 : 1);
            }
          }
          return (n.RED = !0), (n.BLACK = !1), n;
        })();
      class cs {
        constructor(e, t = cs.EMPTY_NODE) {
          (this.comparator_ = e), (this.root_ = t);
        }
        insert(e, t) {
          return new cs(
            this.comparator_,
            this.root_
              .insert(e, t, this.comparator_)
              .copy(null, null, Wo.BLACK, null, null)
          );
        }
        remove(e) {
          return new cs(
            this.comparator_,
            this.root_
              .remove(e, this.comparator_)
              .copy(null, null, Wo.BLACK, null, null)
          );
        }
        get(e) {
          let t,
            r = this.root_;
          for (; !r.isEmpty(); ) {
            if (((t = this.comparator_(e, r.key)), 0 === t)) return r.value;
            t < 0 ? (r = r.left) : t > 0 && (r = r.right);
          }
          return null;
        }
        getPredecessorKey(e) {
          let t,
            r = this.root_,
            i = null;
          for (; !r.isEmpty(); ) {
            if (((t = this.comparator_(e, r.key)), 0 === t)) {
              if (r.left.isEmpty()) return i ? i.key : null;
              for (r = r.left; !r.right.isEmpty(); ) r = r.right;
              return r.key;
            }
            t < 0 ? (r = r.left) : t > 0 && ((i = r), (r = r.right));
          }
          throw new Error(
            "Attempted to find predecessor key for a nonexistent key.  What gives?"
          );
        }
        isEmpty() {
          return this.root_.isEmpty();
        }
        count() {
          return this.root_.count();
        }
        minKey() {
          return this.root_.minKey();
        }
        maxKey() {
          return this.root_.maxKey();
        }
        inorderTraversal(e) {
          return this.root_.inorderTraversal(e);
        }
        reverseTraversal(e) {
          return this.root_.reverseTraversal(e);
        }
        getIterator(e) {
          return new mD(this.root_, null, this.comparator_, !1, e);
        }
        getIteratorFrom(e, t) {
          return new mD(this.root_, e, this.comparator_, !1, t);
        }
        getReverseIteratorFrom(e, t) {
          return new mD(this.root_, e, this.comparator_, !0, t);
        }
        getReverseIterator(e) {
          return new mD(this.root_, null, this.comparator_, !0, e);
        }
      }
      function iz(n, e) {
        return bf(n.name, e.name);
      }
      function Jx(n, e) {
        return bf(n, e);
      }
      cs.EMPTY_NODE = new (class rz {
        copy(e, t, r, i, a) {
          return this;
        }
        insert(e, t, r) {
          return new Wo(e, t, null);
        }
        remove(e, t) {
          return this;
        }
        count() {
          return 0;
        }
        isEmpty() {
          return !0;
        }
        inorderTraversal(e) {
          return !1;
        }
        reverseTraversal(e) {
          return !1;
        }
        minKey() {
          return null;
        }
        maxKey() {
          return null;
        }
        check_() {
          return 0;
        }
        isRed_() {
          return !1;
        }
      })();
      const PV = function (n) {
          return "number" == typeof n ? "number:" + JL(n) : "string:" + n;
        },
        OV = function (n) {
          if (n.isLeafNode()) {
            const e = n.val();
            (0, ee.hu)(
              "string" == typeof e ||
                "number" == typeof e ||
                ("object" == typeof e && (0, ee.r3)(e, ".sv")),
              "Priority must be a string or number."
            );
          } else
            (0, ee.hu)(n === Xx || n.isEmpty(), "priority of unexpected type.");
          (0, ee.hu)(
            n === Xx || n.getPriority().isEmpty(),
            "Priority nodes can't have a priority of their own."
          );
        };
      let kV,
        FV,
        LV,
        Fm = (() => {
          class n {
            constructor(t, r = n.__childrenNodeConstructor.EMPTY_NODE) {
              (this.value_ = t),
                (this.priorityNode_ = r),
                (this.lazyHash_ = null),
                (0, ee.hu)(
                  null != this.value_,
                  "LeafNode shouldn't be created with null/undefined value."
                ),
                OV(this.priorityNode_);
            }
            static set __childrenNodeConstructor(t) {
              kV = t;
            }
            static get __childrenNodeConstructor() {
              return kV;
            }
            isLeafNode() {
              return !0;
            }
            getPriority() {
              return this.priorityNode_;
            }
            updatePriority(t) {
              return new n(this.value_, t);
            }
            getImmediateChild(t) {
              return ".priority" === t
                ? this.priorityNode_
                : n.__childrenNodeConstructor.EMPTY_NODE;
            }
            getChild(t) {
              return vn(t)
                ? this
                : ".priority" === yn(t)
                ? this.priorityNode_
                : n.__childrenNodeConstructor.EMPTY_NODE;
            }
            hasChild() {
              return !1;
            }
            getPredecessorChildName(t, r) {
              return null;
            }
            updateImmediateChild(t, r) {
              return ".priority" === t
                ? this.updatePriority(r)
                : r.isEmpty() && ".priority" !== t
                ? this
                : n.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(
                    t,
                    r
                  ).updatePriority(this.priorityNode_);
            }
            updateChild(t, r) {
              const i = yn(t);
              return null === i
                ? r
                : r.isEmpty() && ".priority" !== i
                ? this
                : ((0, ee.hu)(
                    ".priority" !== i || 1 === Hc(t),
                    ".priority must be the last token in a path"
                  ),
                  this.updateImmediateChild(
                    i,
                    n.__childrenNodeConstructor.EMPTY_NODE.updateChild(Zn(t), r)
                  ));
            }
            isEmpty() {
              return !1;
            }
            numChildren() {
              return 0;
            }
            forEachChild(t, r) {
              return !1;
            }
            val(t) {
              return t && !this.getPriority().isEmpty()
                ? {
                    ".value": this.getValue(),
                    ".priority": this.getPriority().val(),
                  }
                : this.getValue();
            }
            hash() {
              if (null === this.lazyHash_) {
                let t = "";
                this.priorityNode_.isEmpty() ||
                  (t += "priority:" + PV(this.priorityNode_.val()) + ":");
                const r = typeof this.value_;
                (t += r + ":"),
                  (t += "number" === r ? JL(this.value_) : this.value_),
                  (this.lazyHash_ = KL(t));
              }
              return this.lazyHash_;
            }
            getValue() {
              return this.value_;
            }
            compareTo(t) {
              return t === n.__childrenNodeConstructor.EMPTY_NODE
                ? 1
                : t instanceof n.__childrenNodeConstructor
                ? -1
                : ((0, ee.hu)(t.isLeafNode(), "Unknown node type"),
                  this.compareToLeafNode_(t));
            }
            compareToLeafNode_(t) {
              const r = typeof t.value_,
                i = typeof this.value_,
                a = n.VALUE_TYPE_ORDER.indexOf(r),
                l = n.VALUE_TYPE_ORDER.indexOf(i);
              return (
                (0, ee.hu)(a >= 0, "Unknown leaf type: " + r),
                (0, ee.hu)(l >= 0, "Unknown leaf type: " + i),
                a === l
                  ? "object" === i
                    ? 0
                    : this.value_ < t.value_
                    ? -1
                    : this.value_ === t.value_
                    ? 0
                    : 1
                  : l - a
              );
            }
            withIndex() {
              return this;
            }
            isIndexed() {
              return !0;
            }
            equals(t) {
              if (t === this) return !0;
              if (t.isLeafNode()) {
                const r = t;
                return (
                  this.value_ === r.value_ &&
                  this.priorityNode_.equals(r.priorityNode_)
                );
              }
              return !1;
            }
          }
          return (
            (n.VALUE_TYPE_ORDER = ["object", "boolean", "number", "string"]), n
          );
        })();
      const rr = new (class uz extends pD {
          compare(e, t) {
            const r = e.node.getPriority(),
              i = t.node.getPriority(),
              a = r.compareTo(i);
            return 0 === a ? bf(e.name, t.name) : a;
          }
          isDefinedOn(e) {
            return !e.getPriority().isEmpty();
          }
          indexedValueChanged(e, t) {
            return !e.getPriority().equals(t.getPriority());
          }
          minPost() {
            return In.MIN;
          }
          maxPost() {
            return new In(Ba, new Fm("[PRIORITY-POST]", LV));
          }
          makePost(e, t) {
            const r = FV(e);
            return new In(t, new Fm("[PRIORITY-POST]", r));
          }
          toString() {
            return ".priority";
          }
        })(),
        lz = Math.log(2);
      class cz {
        constructor(e) {
          (this.count = parseInt(Math.log(e + 1) / lz, 10)),
            (this.current_ = this.count - 1);
          const i = ((a) => parseInt(Array(this.count + 1).join("1"), 2))();
          this.bits_ = (e + 1) & i;
        }
        nextBitIsOne() {
          const e = !(this.bits_ & (1 << this.current_));
          return this.current_--, e;
        }
      }
      const _D = function (n, e, t, r) {
        n.sort(e);
        const i = function (m, v) {
            const b = v - m;
            let D, R;
            if (0 === b) return null;
            if (1 === b)
              return (
                (D = n[m]),
                (R = t ? t(D) : D),
                new Wo(R, D.node, Wo.BLACK, null, null)
              );
            {
              const F = parseInt(b / 2, 10) + m,
                B = i(m, F),
                le = i(F + 1, v);
              return (
                (D = n[F]),
                (R = t ? t(D) : D),
                new Wo(R, D.node, Wo.BLACK, B, le)
              );
            }
          },
          h = (function (m) {
            let v = null,
              b = null,
              D = n.length;
            const R = function (B, le) {
                const Ee = D - B,
                  dt = D;
                D -= B;
                const It = i(Ee + 1, dt),
                  Lt = n[Ee],
                  St = t ? t(Lt) : Lt;
                F(new Wo(St, Lt.node, le, null, It));
              },
              F = function (B) {
                v ? ((v.left = B), (v = B)) : ((b = B), (v = B));
              };
            for (let B = 0; B < m.count; ++B) {
              const le = m.nextBitIsOne(),
                Ee = Math.pow(2, m.count - (B + 1));
              le ? R(Ee, Wo.BLACK) : (R(Ee, Wo.BLACK), R(Ee, Wo.RED));
            }
            return b;
          })(new cz(n.length));
        return new cs(r || e, h);
      };
      let eN;
      const Lm = {};
      class $u {
        constructor(e, t) {
          (this.indexes_ = e), (this.indexSet_ = t);
        }
        static get Default() {
          return (
            (0, ee.hu)(Lm && rr, "ChildrenNode.ts has not been loaded"),
            (eN = eN || new $u({ ".priority": Lm }, { ".priority": rr })),
            eN
          );
        }
        get(e) {
          const t = (0, ee.DV)(this.indexes_, e);
          if (!t) throw new Error("No index defined for " + e);
          return t instanceof cs ? t : null;
        }
        hasIndex(e) {
          return (0, ee.r3)(this.indexSet_, e.toString());
        }
        addIndex(e, t) {
          (0, ee.hu)(
            e !== ja,
            "KeyIndex always exists and isn't meant to be added to the IndexMap."
          );
          const r = [];
          let i = !1;
          const a = t.getIterator(In.Wrap);
          let h,
            l = a.getNext();
          for (; l; )
            (i = i || e.isDefinedOn(l.node)), r.push(l), (l = a.getNext());
          h = i ? _D(r, e.getCompare()) : Lm;
          const m = e.toString(),
            v = Object.assign({}, this.indexSet_);
          v[m] = e;
          const b = Object.assign({}, this.indexes_);
          return (b[m] = h), new $u(b, v);
        }
        addToIndexes(e, t) {
          const r = (0, ee.UI)(this.indexes_, (i, a) => {
            const l = (0, ee.DV)(this.indexSet_, a);
            if (
              ((0, ee.hu)(l, "Missing index implementation for " + a), i === Lm)
            ) {
              if (l.isDefinedOn(e.node)) {
                const h = [],
                  m = t.getIterator(In.Wrap);
                let v = m.getNext();
                for (; v; ) v.name !== e.name && h.push(v), (v = m.getNext());
                return h.push(e), _D(h, l.getCompare());
              }
              return Lm;
            }
            {
              const h = t.get(e.name);
              let m = i;
              return (
                h && (m = m.remove(new In(e.name, h))), m.insert(e, e.node)
              );
            }
          });
          return new $u(r, this.indexSet_);
        }
        removeFromIndexes(e, t) {
          const r = (0, ee.UI)(this.indexes_, (i) => {
            if (i === Lm) return i;
            {
              const a = t.get(e.name);
              return a ? i.remove(new In(e.name, a)) : i;
            }
          });
          return new $u(r, this.indexSet_);
        }
      }
      let kw,
        cn = (() => {
          class n {
            constructor(t, r, i) {
              (this.children_ = t),
                (this.priorityNode_ = r),
                (this.indexMap_ = i),
                (this.lazyHash_ = null),
                this.priorityNode_ && OV(this.priorityNode_),
                this.children_.isEmpty() &&
                  (0, ee.hu)(
                    !this.priorityNode_ || this.priorityNode_.isEmpty(),
                    "An empty node cannot have a priority"
                  );
            }
            static get EMPTY_NODE() {
              return kw || (kw = new n(new cs(Jx), null, $u.Default));
            }
            isLeafNode() {
              return !1;
            }
            getPriority() {
              return this.priorityNode_ || kw;
            }
            updatePriority(t) {
              return this.children_.isEmpty()
                ? this
                : new n(this.children_, t, this.indexMap_);
            }
            getImmediateChild(t) {
              if (".priority" === t) return this.getPriority();
              {
                const r = this.children_.get(t);
                return null === r ? kw : r;
              }
            }
            getChild(t) {
              const r = yn(t);
              return null === r
                ? this
                : this.getImmediateChild(r).getChild(Zn(t));
            }
            hasChild(t) {
              return null !== this.children_.get(t);
            }
            updateImmediateChild(t, r) {
              if (
                ((0, ee.hu)(r, "We should always be passing snapshot nodes"),
                ".priority" === t)
              )
                return this.updatePriority(r);
              {
                const i = new In(t, r);
                let a, l;
                r.isEmpty()
                  ? ((a = this.children_.remove(t)),
                    (l = this.indexMap_.removeFromIndexes(i, this.children_)))
                  : ((a = this.children_.insert(t, r)),
                    (l = this.indexMap_.addToIndexes(i, this.children_)));
                const h = a.isEmpty() ? kw : this.priorityNode_;
                return new n(a, h, l);
              }
            }
            updateChild(t, r) {
              const i = yn(t);
              if (null === i) return r;
              {
                (0, ee.hu)(
                  ".priority" !== yn(t) || 1 === Hc(t),
                  ".priority must be the last token in a path"
                );
                const a = this.getImmediateChild(i).updateChild(Zn(t), r);
                return this.updateImmediateChild(i, a);
              }
            }
            isEmpty() {
              return this.children_.isEmpty();
            }
            numChildren() {
              return this.children_.count();
            }
            val(t) {
              if (this.isEmpty()) return null;
              const r = {};
              let i = 0,
                a = 0,
                l = !0;
              if (
                (this.forEachChild(rr, (h, m) => {
                  (r[h] = m.val(t)),
                    i++,
                    l && n.INTEGER_REGEXP_.test(h)
                      ? (a = Math.max(a, Number(h)))
                      : (l = !1);
                }),
                !t && l && a < 2 * i)
              ) {
                const h = [];
                for (const m in r) h[m] = r[m];
                return h;
              }
              return (
                t &&
                  !this.getPriority().isEmpty() &&
                  (r[".priority"] = this.getPriority().val()),
                r
              );
            }
            hash() {
              if (null === this.lazyHash_) {
                let t = "";
                this.getPriority().isEmpty() ||
                  (t += "priority:" + PV(this.getPriority().val()) + ":"),
                  this.forEachChild(rr, (r, i) => {
                    const a = i.hash();
                    "" !== a && (t += ":" + r + ":" + a);
                  }),
                  (this.lazyHash_ = "" === t ? "" : KL(t));
              }
              return this.lazyHash_;
            }
            getPredecessorChildName(t, r, i) {
              const a = this.resolveIndex_(i);
              if (a) {
                const l = a.getPredecessorKey(new In(t, r));
                return l ? l.name : null;
              }
              return this.children_.getPredecessorKey(t);
            }
            getFirstChildName(t) {
              const r = this.resolveIndex_(t);
              if (r) {
                const i = r.minKey();
                return i && i.name;
              }
              return this.children_.minKey();
            }
            getFirstChild(t) {
              const r = this.getFirstChildName(t);
              return r ? new In(r, this.children_.get(r)) : null;
            }
            getLastChildName(t) {
              const r = this.resolveIndex_(t);
              if (r) {
                const i = r.maxKey();
                return i && i.name;
              }
              return this.children_.maxKey();
            }
            getLastChild(t) {
              const r = this.getLastChildName(t);
              return r ? new In(r, this.children_.get(r)) : null;
            }
            forEachChild(t, r) {
              const i = this.resolveIndex_(t);
              return i
                ? i.inorderTraversal((a) => r(a.name, a.node))
                : this.children_.inorderTraversal(r);
            }
            getIterator(t) {
              return this.getIteratorFrom(t.minPost(), t);
            }
            getIteratorFrom(t, r) {
              const i = this.resolveIndex_(r);
              if (i) return i.getIteratorFrom(t, (a) => a);
              {
                const a = this.children_.getIteratorFrom(t.name, In.Wrap);
                let l = a.peek();
                for (; null != l && r.compare(l, t) < 0; )
                  a.getNext(), (l = a.peek());
                return a;
              }
            }
            getReverseIterator(t) {
              return this.getReverseIteratorFrom(t.maxPost(), t);
            }
            getReverseIteratorFrom(t, r) {
              const i = this.resolveIndex_(r);
              if (i) return i.getReverseIteratorFrom(t, (a) => a);
              {
                const a = this.children_.getReverseIteratorFrom(
                  t.name,
                  In.Wrap
                );
                let l = a.peek();
                for (; null != l && r.compare(l, t) > 0; )
                  a.getNext(), (l = a.peek());
                return a;
              }
            }
            compareTo(t) {
              return this.isEmpty()
                ? t.isEmpty()
                  ? 0
                  : -1
                : t.isLeafNode() || t.isEmpty()
                ? 1
                : t === Fw
                ? -1
                : 0;
            }
            withIndex(t) {
              if (t === ja || this.indexMap_.hasIndex(t)) return this;
              {
                const r = this.indexMap_.addIndex(t, this.children_);
                return new n(this.children_, this.priorityNode_, r);
              }
            }
            isIndexed(t) {
              return t === ja || this.indexMap_.hasIndex(t);
            }
            equals(t) {
              if (t === this) return !0;
              if (t.isLeafNode()) return !1;
              {
                const r = t;
                if (this.getPriority().equals(r.getPriority())) {
                  if (this.children_.count() === r.children_.count()) {
                    const i = this.getIterator(rr),
                      a = r.getIterator(rr);
                    let l = i.getNext(),
                      h = a.getNext();
                    for (; l && h; ) {
                      if (l.name !== h.name || !l.node.equals(h.node))
                        return !1;
                      (l = i.getNext()), (h = a.getNext());
                    }
                    return null === l && null === h;
                  }
                  return !1;
                }
                return !1;
              }
            }
            resolveIndex_(t) {
              return t === ja ? null : this.indexMap_.get(t.toString());
            }
          }
          return (n.INTEGER_REGEXP_ = /^(0|[1-9]\d*)$/), n;
        })();
      const Fw = new (class dz extends cn {
        constructor() {
          super(new cs(Jx), cn.EMPTY_NODE, $u.Default);
        }
        compareTo(e) {
          return e === this ? 0 : 1;
        }
        equals(e) {
          return e === this;
        }
        getPriority() {
          return this;
        }
        getImmediateChild(e) {
          return cn.EMPTY_NODE;
        }
        isEmpty() {
          return !1;
        }
      })();
      function vr(n, e = null) {
        if (null === n) return cn.EMPTY_NODE;
        if (
          ("object" == typeof n && ".priority" in n && (e = n[".priority"]),
          (0, ee.hu)(
            null === e ||
              "string" == typeof e ||
              "number" == typeof e ||
              ("object" == typeof e && ".sv" in e),
            "Invalid priority type found: " + typeof e
          ),
          "object" == typeof n &&
            ".value" in n &&
            null !== n[".value"] &&
            (n = n[".value"]),
          "object" != typeof n || ".sv" in n)
        )
          return new Fm(n, vr(e));
        if (n instanceof Array) {
          let t = cn.EMPTY_NODE;
          return (
            oi(n, (r, i) => {
              if ((0, ee.r3)(n, r) && "." !== r.substring(0, 1)) {
                const a = vr(i);
                (a.isLeafNode() || !a.isEmpty()) &&
                  (t = t.updateImmediateChild(r, a));
              }
            }),
            t.updatePriority(vr(e))
          );
        }
        {
          const t = [];
          let r = !1;
          if (
            (oi(n, (l, h) => {
              if ("." !== l.substring(0, 1)) {
                const m = vr(h);
                m.isEmpty() ||
                  ((r = r || !m.getPriority().isEmpty()), t.push(new In(l, m)));
              }
            }),
            0 === t.length)
          )
            return cn.EMPTY_NODE;
          const a = _D(t, iz, (l) => l.name, Jx);
          if (r) {
            const l = _D(t, rr.getCompare());
            return new cn(
              a,
              vr(e),
              new $u({ ".priority": l }, { ".priority": rr })
            );
          }
          return new cn(a, vr(e), $u.Default);
        }
      }
      Object.defineProperties(In, {
        MIN: { value: new In(ju, cn.EMPTY_NODE) },
        MAX: { value: new In(Ba, Fw) },
      }),
        (NV.__EMPTY_NODE = cn.EMPTY_NODE),
        (Fm.__childrenNodeConstructor = cn),
        (function sz(n) {
          Xx = n;
        })(Fw),
        (function az(n) {
          LV = n;
        })(Fw),
        (function oz(n) {
          FV = n;
        })(vr);
      class tN extends pD {
        constructor(e) {
          super(),
            (this.indexPath_ = e),
            (0, ee.hu)(
              !vn(e) && ".priority" !== yn(e),
              "Can't create PathIndex with empty path or .priority key"
            );
        }
        extractChild(e) {
          return e.getChild(this.indexPath_);
        }
        isDefinedOn(e) {
          return !e.getChild(this.indexPath_).isEmpty();
        }
        compare(e, t) {
          const r = this.extractChild(e.node),
            i = this.extractChild(t.node),
            a = r.compareTo(i);
          return 0 === a ? bf(e.name, t.name) : a;
        }
        makePost(e, t) {
          const r = vr(e),
            i = cn.EMPTY_NODE.updateChild(this.indexPath_, r);
          return new In(t, i);
        }
        maxPost() {
          const e = cn.EMPTY_NODE.updateChild(this.indexPath_, Fw);
          return new In(Ba, e);
        }
        toString() {
          return Pw(this.indexPath_, 0).join("/");
        }
      }
      const nN = new (class fz extends pD {
        compare(e, t) {
          const r = e.node.compareTo(t.node);
          return 0 === r ? bf(e.name, t.name) : r;
        }
        isDefinedOn(e) {
          return !0;
        }
        indexedValueChanged(e, t) {
          return !e.equals(t);
        }
        minPost() {
          return In.MIN;
        }
        maxPost() {
          return In.MAX;
        }
        makePost(e, t) {
          const r = vr(e);
          return new In(t, r);
        }
        toString() {
          return ".value";
        }
      })();
      function Vw(n, e, t) {
        return {
          type: "child_changed",
          snapshotNode: e,
          childName: n,
          oldSnap: t,
        };
      }
      class sN {
        constructor() {
          (this.limitSet_ = !1),
            (this.startSet_ = !1),
            (this.startNameSet_ = !1),
            (this.startAfterSet_ = !1),
            (this.endSet_ = !1),
            (this.endNameSet_ = !1),
            (this.endBeforeSet_ = !1),
            (this.limit_ = 0),
            (this.viewFrom_ = ""),
            (this.indexStartValue_ = null),
            (this.indexStartName_ = ""),
            (this.indexEndValue_ = null),
            (this.indexEndName_ = ""),
            (this.index_ = rr);
        }
        hasStart() {
          return this.startSet_;
        }
        hasStartAfter() {
          return this.startAfterSet_;
        }
        hasEndBefore() {
          return this.endBeforeSet_;
        }
        isViewFromLeft() {
          return "" === this.viewFrom_
            ? this.startSet_
            : "l" === this.viewFrom_;
        }
        getIndexStartValue() {
          return (
            (0, ee.hu)(this.startSet_, "Only valid if start has been set"),
            this.indexStartValue_
          );
        }
        getIndexStartName() {
          return (
            (0, ee.hu)(this.startSet_, "Only valid if start has been set"),
            this.startNameSet_ ? this.indexStartName_ : ju
          );
        }
        hasEnd() {
          return this.endSet_;
        }
        getIndexEndValue() {
          return (
            (0, ee.hu)(this.endSet_, "Only valid if end has been set"),
            this.indexEndValue_
          );
        }
        getIndexEndName() {
          return (
            (0, ee.hu)(this.endSet_, "Only valid if end has been set"),
            this.endNameSet_ ? this.indexEndName_ : Ba
          );
        }
        hasLimit() {
          return this.limitSet_;
        }
        hasAnchoredLimit() {
          return this.limitSet_ && "" !== this.viewFrom_;
        }
        getLimit() {
          return (
            (0, ee.hu)(this.limitSet_, "Only valid if limit has been set"),
            this.limit_
          );
        }
        getIndex() {
          return this.index_;
        }
        loadsAllData() {
          return !(this.startSet_ || this.endSet_ || this.limitSet_);
        }
        isDefault() {
          return this.loadsAllData() && this.index_ === rr;
        }
        copy() {
          const e = new sN();
          return (
            (e.limitSet_ = this.limitSet_),
            (e.limit_ = this.limit_),
            (e.startSet_ = this.startSet_),
            (e.indexStartValue_ = this.indexStartValue_),
            (e.startNameSet_ = this.startNameSet_),
            (e.indexStartName_ = this.indexStartName_),
            (e.endSet_ = this.endSet_),
            (e.indexEndValue_ = this.indexEndValue_),
            (e.endNameSet_ = this.endNameSet_),
            (e.indexEndName_ = this.indexEndName_),
            (e.index_ = this.index_),
            (e.viewFrom_ = this.viewFrom_),
            e
          );
        }
      }
      function HV(n) {
        const e = {};
        if (n.isDefault()) return e;
        let t;
        return (
          n.index_ === rr
            ? (t = "$priority")
            : n.index_ === nN
            ? (t = "$value")
            : n.index_ === ja
            ? (t = "$key")
            : ((0, ee.hu)(n.index_ instanceof tN, "Unrecognized index type!"),
              (t = n.index_.toString())),
          (e.orderBy = (0, ee.Pz)(t)),
          n.startSet_ &&
            ((e.startAt = (0, ee.Pz)(n.indexStartValue_)),
            n.startNameSet_ &&
              (e.startAt += "," + (0, ee.Pz)(n.indexStartName_))),
          n.endSet_ &&
            ((e.endAt = (0, ee.Pz)(n.indexEndValue_)),
            n.endNameSet_ && (e.endAt += "," + (0, ee.Pz)(n.indexEndName_))),
          n.limitSet_ &&
            (n.isViewFromLeft()
              ? (e.limitToFirst = n.limit_)
              : (e.limitToLast = n.limit_)),
          e
        );
      }
      function GV(n) {
        const e = {};
        if (
          (n.startSet_ &&
            ((e.sp = n.indexStartValue_),
            n.startNameSet_ && (e.sn = n.indexStartName_)),
          n.endSet_ &&
            ((e.ep = n.indexEndValue_),
            n.endNameSet_ && (e.en = n.indexEndName_)),
          n.limitSet_)
        ) {
          e.l = n.limit_;
          let t = n.viewFrom_;
          "" === t && (t = n.isViewFromLeft() ? "l" : "r"), (e.vf = t);
        }
        return n.index_ !== rr && (e.i = n.index_.toString()), e;
      }
      class vD extends bV {
        constructor(e, t, r, i) {
          super(),
            (this.repoInfo_ = e),
            (this.onDataUpdate_ = t),
            (this.authTokenProvider_ = r),
            (this.appCheckTokenProvider_ = i),
            (this.log_ = Rw("p:rest:")),
            (this.listens_ = {});
        }
        reportStats(e) {
          throw new Error("Method not implemented.");
        }
        static getListenId_(e, t) {
          return void 0 !== t
            ? "tag$" + t
            : ((0, ee.hu)(
                e._queryParams.isDefault(),
                "should have a tag if it's not a default query."
              ),
              e._path.toString());
        }
        listen(e, t, r, i) {
          const a = e._path.toString();
          this.log_("Listen called for " + a + " " + e._queryIdentifier);
          const l = vD.getListenId_(e, r),
            h = {};
          this.listens_[l] = h;
          const m = HV(e._queryParams);
          this.restRequest_(a + ".json", m, (v, b) => {
            let D = b;
            if (
              (404 === v && ((D = null), (v = null)),
              null === v && this.onDataUpdate_(a, D, !1, r),
              (0, ee.DV)(this.listens_, l) === h)
            ) {
              let R;
              (R = v
                ? 401 === v
                  ? "permission_denied"
                  : "rest_error:" + v
                : "ok"),
                i(R, null);
            }
          });
        }
        unlisten(e, t) {
          const r = vD.getListenId_(e, t);
          delete this.listens_[r];
        }
        get(e) {
          const t = HV(e._queryParams),
            r = e._path.toString(),
            i = new ee.BH();
          return (
            this.restRequest_(r + ".json", t, (a, l) => {
              let h = l;
              404 === a && ((h = null), (a = null)),
                null === a
                  ? (this.onDataUpdate_(r, h, !1, null), i.resolve(h))
                  : i.reject(new Error(h));
            }),
            i.promise
          );
        }
        refreshAuthToken(e) {}
        restRequest_(e, t = {}, r) {
          return (
            (t.format = "export"),
            Promise.all([
              this.authTokenProvider_.getToken(!1),
              this.appCheckTokenProvider_.getToken(!1),
            ]).then(([i, a]) => {
              i && i.accessToken && (t.auth = i.accessToken),
                a && a.token && (t.ac = a.token);
              const l =
                (this.repoInfo_.secure ? "https://" : "http://") +
                this.repoInfo_.host +
                e +
                "?ns=" +
                this.repoInfo_.namespace +
                (0, ee.xO)(t);
              this.log_("Sending REST request for " + l);
              const h = new XMLHttpRequest();
              (h.onreadystatechange = () => {
                if (r && 4 === h.readyState) {
                  this.log_(
                    "REST Response for " + l + " received. status:",
                    h.status,
                    "response:",
                    h.responseText
                  );
                  let m = null;
                  if (h.status >= 200 && h.status < 300) {
                    try {
                      m = (0, ee.cI)(h.responseText);
                    } catch {
                      Ni(
                        "Failed to parse JSON response for " +
                          l +
                          ": " +
                          h.responseText
                      );
                    }
                    r(null, m);
                  } else
                    401 !== h.status &&
                      404 !== h.status &&
                      Ni(
                        "Got unsuccessful REST response for " +
                          l +
                          " Status: " +
                          h.status
                      ),
                      r(h.status);
                  r = null;
                }
              }),
                h.open("GET", l, !0),
                h.send();
            })
          );
        }
      }
      class Iz {
        constructor() {
          this.rootNode_ = cn.EMPTY_NODE;
        }
        getNode(e) {
          return this.rootNode_.getChild(e);
        }
        updateSnapshot(e, t) {
          this.rootNode_ = this.rootNode_.updateChild(e, t);
        }
      }
      function ED() {
        return { value: null, children: new Map() };
      }
      function Bm(n, e, t) {
        if (vn(e)) (n.value = t), n.children.clear();
        else if (null !== n.value) n.value = n.value.updateChild(e, t);
        else {
          const r = yn(e);
          n.children.has(r) || n.children.set(r, ED()),
            Bm(n.children.get(r), (e = Zn(e)), t);
        }
      }
      function lN(n, e, t) {
        null !== n.value
          ? t(e, n.value)
          : (function Cz(n, e) {
              n.children.forEach((t, r) => {
                e(r, t);
              });
            })(n, (r, i) => {
              lN(i, new Hn(e.toString() + "/" + r), t);
            });
      }
      class bz {
        constructor(e) {
          (this.collection_ = e), (this.last_ = null);
        }
        get() {
          const e = this.collection_.get(),
            t = Object.assign({}, e);
          return (
            this.last_ &&
              oi(this.last_, (r, i) => {
                t[r] = t[r] - i;
              }),
            (this.last_ = e),
            t
          );
        }
      }
      class Sz {
        constructor(e, t) {
          (this.server_ = t),
            (this.statsToReport_ = {}),
            (this.statsListener_ = new bz(e));
          const r = 1e4 + 2e4 * Math.random();
          xw(this.reportStats_.bind(this), Math.floor(r));
        }
        reportStats_() {
          const e = this.statsListener_.get(),
            t = {};
          let r = !1;
          oi(e, (i, a) => {
            a > 0 &&
              (0, ee.r3)(this.statsToReport_, i) &&
              ((t[i] = a), (r = !0));
          }),
            r && this.server_.reportStats(t),
            xw(
              this.reportStats_.bind(this),
              Math.floor(2 * Math.random() * 3e5)
            );
        }
      }
      var fo = (() => (
        (function (n) {
          (n[(n.OVERWRITE = 0)] = "OVERWRITE"),
            (n[(n.MERGE = 1)] = "MERGE"),
            (n[(n.ACK_USER_WRITE = 2)] = "ACK_USER_WRITE"),
            (n[(n.LISTEN_COMPLETE = 3)] = "LISTEN_COMPLETE");
        })(fo || (fo = {})),
        fo
      ))();
      function hN(n) {
        return { fromUser: !1, fromServer: !0, queryId: n, tagged: !0 };
      }
      class wD {
        constructor(e, t, r) {
          (this.path = e),
            (this.affectedTree = t),
            (this.revert = r),
            (this.type = fo.ACK_USER_WRITE),
            (this.source = {
              fromUser: !0,
              fromServer: !1,
              queryId: null,
              tagged: !1,
            });
        }
        operationForChild(e) {
          if (vn(this.path)) {
            if (null != this.affectedTree.value)
              return (
                (0, ee.hu)(
                  this.affectedTree.children.isEmpty(),
                  "affectedTree should not have overlapping affected paths."
                ),
                this
              );
            {
              const t = this.affectedTree.subtree(new Hn(e));
              return new wD(Fn(), t, this.revert);
            }
          }
          return (
            (0, ee.hu)(
              yn(this.path) === e,
              "operationForChild called for unrelated child."
            ),
            new wD(Zn(this.path), this.affectedTree, this.revert)
          );
        }
      }
      class Sf {
        constructor(e, t, r) {
          (this.source = e),
            (this.path = t),
            (this.snap = r),
            (this.type = fo.OVERWRITE);
        }
        operationForChild(e) {
          return vn(this.path)
            ? new Sf(this.source, Fn(), this.snap.getImmediateChild(e))
            : new Sf(this.source, Zn(this.path), this.snap);
        }
      }
      class jm {
        constructor(e, t, r) {
          (this.source = e),
            (this.path = t),
            (this.children = r),
            (this.type = fo.MERGE);
        }
        operationForChild(e) {
          if (vn(this.path)) {
            const t = this.children.subtree(new Hn(e));
            return t.isEmpty()
              ? null
              : t.value
              ? new Sf(this.source, Fn(), t.value)
              : new jm(this.source, Fn(), t);
          }
          return (
            (0, ee.hu)(
              yn(this.path) === e,
              "Can't get a merge for a child not on the path of the operation"
            ),
            new jm(this.source, Zn(this.path), this.children)
          );
        }
        toString() {
          return (
            "Operation(" +
            this.path +
            ": " +
            this.source.toString() +
            " merge: " +
            this.children.toString() +
            ")"
          );
        }
      }
      class Gc {
        constructor(e, t, r) {
          (this.node_ = e), (this.fullyInitialized_ = t), (this.filtered_ = r);
        }
        isFullyInitialized() {
          return this.fullyInitialized_;
        }
        isFiltered() {
          return this.filtered_;
        }
        isCompleteForPath(e) {
          if (vn(e)) return this.isFullyInitialized() && !this.filtered_;
          const t = yn(e);
          return this.isCompleteForChild(t);
        }
        isCompleteForChild(e) {
          return (
            (this.isFullyInitialized() && !this.filtered_) ||
            this.node_.hasChild(e)
          );
        }
        getNode() {
          return this.node_;
        }
      }
      function jw(n, e, t, r, i, a) {
        const l = r.filter((h) => h.type === t);
        l.sort((h, m) =>
          (function xz(n, e, t) {
            if (null == e.childName || null == t.childName)
              throw (0, ee.g5)("Should only compare child_ events.");
            const r = new In(e.childName, e.snapshotNode),
              i = new In(t.childName, t.snapshotNode);
            return n.index_.compare(r, i);
          })(n, h, m)
        ),
          l.forEach((h) => {
            const m = (function Mz(n, e, t) {
              return (
                "value" === e.type ||
                  "child_removed" === e.type ||
                  (e.prevName = t.getPredecessorChildName(
                    e.childName,
                    e.snapshotNode,
                    n.index_
                  )),
                e
              );
            })(n, h, a);
            i.forEach((v) => {
              v.respondsTo(h.type) && e.push(v.createEvent(m, n.query_));
            });
          });
      }
      function ID(n, e) {
        return { eventCache: n, serverCache: e };
      }
      function $w(n, e, t, r) {
        return ID(new Gc(e, t, r), n.serverCache);
      }
      function zV(n, e, t, r) {
        return ID(n.eventCache, new Gc(e, t, r));
      }
      function CD(n) {
        return n.eventCache.isFullyInitialized()
          ? n.eventCache.getNode()
          : null;
      }
      function Af(n) {
        return n.serverCache.isFullyInitialized()
          ? n.serverCache.getNode()
          : null;
      }
      let fN;
      class ir {
        constructor(e, t = (() => (fN || (fN = new cs(mW)), fN))()) {
          (this.value = e), (this.children = t);
        }
        static fromObject(e) {
          let t = new ir(null);
          return (
            oi(e, (r, i) => {
              t = t.set(new Hn(r), i);
            }),
            t
          );
        }
        isEmpty() {
          return null === this.value && this.children.isEmpty();
        }
        findRootMostMatchingPathAndValue(e, t) {
          if (null != this.value && t(this.value))
            return { path: Fn(), value: this.value };
          if (vn(e)) return null;
          {
            const r = yn(e),
              i = this.children.get(r);
            if (null !== i) {
              const a = i.findRootMostMatchingPathAndValue(Zn(e), t);
              return null != a
                ? { path: hr(new Hn(r), a.path), value: a.value }
                : null;
            }
            return null;
          }
        }
        findRootMostValueAndPath(e) {
          return this.findRootMostMatchingPathAndValue(e, () => !0);
        }
        subtree(e) {
          if (vn(e)) return this;
          {
            const t = yn(e),
              r = this.children.get(t);
            return null !== r ? r.subtree(Zn(e)) : new ir(null);
          }
        }
        set(e, t) {
          if (vn(e)) return new ir(t, this.children);
          {
            const r = yn(e),
              a = (this.children.get(r) || new ir(null)).set(Zn(e), t),
              l = this.children.insert(r, a);
            return new ir(this.value, l);
          }
        }
        remove(e) {
          if (vn(e))
            return this.children.isEmpty()
              ? new ir(null)
              : new ir(null, this.children);
          {
            const t = yn(e),
              r = this.children.get(t);
            if (r) {
              const i = r.remove(Zn(e));
              let a;
              return (
                (a = i.isEmpty()
                  ? this.children.remove(t)
                  : this.children.insert(t, i)),
                null === this.value && a.isEmpty()
                  ? new ir(null)
                  : new ir(this.value, a)
              );
            }
            return this;
          }
        }
        get(e) {
          if (vn(e)) return this.value;
          {
            const t = yn(e),
              r = this.children.get(t);
            return r ? r.get(Zn(e)) : null;
          }
        }
        setTree(e, t) {
          if (vn(e)) return t;
          {
            const r = yn(e),
              a = (this.children.get(r) || new ir(null)).setTree(Zn(e), t);
            let l;
            return (
              (l = a.isEmpty()
                ? this.children.remove(r)
                : this.children.insert(r, a)),
              new ir(this.value, l)
            );
          }
        }
        fold(e) {
          return this.fold_(Fn(), e);
        }
        fold_(e, t) {
          const r = {};
          return (
            this.children.inorderTraversal((i, a) => {
              r[i] = a.fold_(hr(e, i), t);
            }),
            t(e, this.value, r)
          );
        }
        findOnPath(e, t) {
          return this.findOnPath_(e, Fn(), t);
        }
        findOnPath_(e, t, r) {
          const i = !!this.value && r(t, this.value);
          if (i) return i;
          if (vn(e)) return null;
          {
            const a = yn(e),
              l = this.children.get(a);
            return l ? l.findOnPath_(Zn(e), hr(t, a), r) : null;
          }
        }
        foreachOnPath(e, t) {
          return this.foreachOnPath_(e, Fn(), t);
        }
        foreachOnPath_(e, t, r) {
          if (vn(e)) return this;
          {
            this.value && r(t, this.value);
            const i = yn(e),
              a = this.children.get(i);
            return a ? a.foreachOnPath_(Zn(e), hr(t, i), r) : new ir(null);
          }
        }
        foreach(e) {
          this.foreach_(Fn(), e);
        }
        foreach_(e, t) {
          this.children.inorderTraversal((r, i) => {
            i.foreach_(hr(e, r), t);
          }),
            this.value && t(e, this.value);
        }
        foreachChild(e) {
          this.children.inorderTraversal((t, r) => {
            r.value && e(t, r.value);
          });
        }
      }
      class zo {
        constructor(e) {
          this.writeTree_ = e;
        }
        static empty() {
          return new zo(new ir(null));
        }
      }
      function Hw(n, e, t) {
        if (vn(e)) return new zo(new ir(t));
        {
          const r = n.writeTree_.findRootMostValueAndPath(e);
          if (null != r) {
            const i = r.path;
            let a = r.value;
            const l = Wi(i, e);
            return (a = a.updateChild(l, t)), new zo(n.writeTree_.set(i, a));
          }
          {
            const i = new ir(t),
              a = n.writeTree_.setTree(e, i);
            return new zo(a);
          }
        }
      }
      function pN(n, e, t) {
        let r = n;
        return (
          oi(t, (i, a) => {
            r = Hw(r, hr(e, i), a);
          }),
          r
        );
      }
      function qV(n, e) {
        if (vn(e)) return zo.empty();
        {
          const t = n.writeTree_.setTree(e, new ir(null));
          return new zo(t);
        }
      }
      function gN(n, e) {
        return null != Rf(n, e);
      }
      function Rf(n, e) {
        const t = n.writeTree_.findRootMostValueAndPath(e);
        return null != t
          ? n.writeTree_.get(t.path).getChild(Wi(t.path, e))
          : null;
      }
      function KV(n) {
        const e = [],
          t = n.writeTree_.value;
        return (
          null != t
            ? t.isLeafNode() ||
              t.forEachChild(rr, (r, i) => {
                e.push(new In(r, i));
              })
            : n.writeTree_.children.inorderTraversal((r, i) => {
                null != i.value && e.push(new In(r, i.value));
              }),
          e
        );
      }
      function Wc(n, e) {
        if (vn(e)) return n;
        {
          const t = Rf(n, e);
          return new zo(null != t ? new ir(t) : n.writeTree_.subtree(e));
        }
      }
      function mN(n) {
        return n.writeTree_.isEmpty();
      }
      function $m(n, e) {
        return ZV(Fn(), n.writeTree_, e);
      }
      function ZV(n, e, t) {
        if (null != e.value) return t.updateChild(n, e.value);
        {
          let r = null;
          return (
            e.children.inorderTraversal((i, a) => {
              ".priority" === i
                ? ((0, ee.hu)(
                    null !== a.value,
                    "Priority writes must always be leaf nodes"
                  ),
                  (r = a.value))
                : (t = ZV(hr(n, i), a, t));
            }),
            !t.getChild(n).isEmpty() &&
              null !== r &&
              (t = t.updateChild(hr(n, ".priority"), r)),
            t
          );
        }
      }
      function bD(n, e) {
        return eU(e, n);
      }
      function Lz(n, e) {
        if (n.snap) return ho(n.path, e);
        for (const t in n.children)
          if (n.children.hasOwnProperty(t) && ho(hr(n.path, t), e)) return !0;
        return !1;
      }
      function Uz(n) {
        return n.visible;
      }
      function YV(n, e, t) {
        let r = zo.empty();
        for (let i = 0; i < n.length; ++i) {
          const a = n[i];
          if (e(a)) {
            const l = a.path;
            let h;
            if (a.snap)
              ho(t, l)
                ? ((h = Wi(t, l)), (r = Hw(r, h, a.snap)))
                : ho(l, t) &&
                  ((h = Wi(l, t)), (r = Hw(r, Fn(), a.snap.getChild(h))));
            else {
              if (!a.children)
                throw (0, ee.g5)("WriteRecord should have .snap or .children");
              if (ho(t, l)) (h = Wi(t, l)), (r = pN(r, h, a.children));
              else if (ho(l, t))
                if (((h = Wi(l, t)), vn(h))) r = pN(r, Fn(), a.children);
                else {
                  const m = (0, ee.DV)(a.children, yn(h));
                  if (m) {
                    const v = m.getChild(Zn(h));
                    r = Hw(r, Fn(), v);
                  }
                }
            }
          }
        }
        return r;
      }
      function QV(n, e, t, r, i) {
        if (r || i) {
          const a = Wc(n.visibleWrites, e);
          return !i && mN(a)
            ? t
            : i || null != t || gN(a, Fn())
            ? $m(
                YV(
                  n.allWrites,
                  function (v) {
                    return (
                      (v.visible || i) &&
                      (!r || !~r.indexOf(v.writeId)) &&
                      (ho(v.path, e) || ho(e, v.path))
                    );
                  },
                  e
                ),
                t || cn.EMPTY_NODE
              )
            : null;
        }
        {
          const a = Rf(n.visibleWrites, e);
          if (null != a) return a;
          {
            const l = Wc(n.visibleWrites, e);
            return mN(l)
              ? t
              : null != t || gN(l, Fn())
              ? $m(l, t || cn.EMPTY_NODE)
              : null;
          }
        }
      }
      function DD(n, e, t, r) {
        return QV(n.writeTree, n.treePath, e, t, r);
      }
      function _N(n, e) {
        return (function Bz(n, e, t) {
          let r = cn.EMPTY_NODE;
          const i = Rf(n.visibleWrites, e);
          if (i)
            return (
              i.isLeafNode() ||
                i.forEachChild(rr, (a, l) => {
                  r = r.updateImmediateChild(a, l);
                }),
              r
            );
          if (t) {
            const a = Wc(n.visibleWrites, e);
            return (
              t.forEachChild(rr, (l, h) => {
                const m = $m(Wc(a, new Hn(l)), h);
                r = r.updateImmediateChild(l, m);
              }),
              KV(a).forEach((l) => {
                r = r.updateImmediateChild(l.name, l.node);
              }),
              r
            );
          }
          return (
            KV(Wc(n.visibleWrites, e)).forEach((l) => {
              r = r.updateImmediateChild(l.name, l.node);
            }),
            r
          );
        })(n.writeTree, n.treePath, e);
      }
      function JV(n, e, t, r) {
        return (function jz(n, e, t, r, i) {
          (0, ee.hu)(
            r || i,
            "Either existingEventSnap or existingServerSnap must exist"
          );
          const a = hr(e, t);
          if (gN(n.visibleWrites, a)) return null;
          {
            const l = Wc(n.visibleWrites, a);
            return mN(l) ? i.getChild(t) : $m(l, i.getChild(t));
          }
        })(n.writeTree, n.treePath, e, t, r);
      }
      function TD(n, e) {
        return (function Hz(n, e) {
          return Rf(n.visibleWrites, e);
        })(n.writeTree, hr(n.treePath, e));
      }
      function yN(n, e, t) {
        return (function $z(n, e, t, r) {
          const i = hr(e, t),
            a = Rf(n.visibleWrites, i);
          return null != a
            ? a
            : r.isCompleteForChild(t)
            ? $m(Wc(n.visibleWrites, i), r.getNode().getImmediateChild(t))
            : null;
        })(n.writeTree, n.treePath, e, t);
      }
      function XV(n, e) {
        return eU(hr(n.treePath, e), n.writeTree);
      }
      function eU(n, e) {
        return { treePath: n, writeTree: e };
      }
      class qz {
        constructor() {
          this.changeMap = new Map();
        }
        trackChildChange(e) {
          const t = e.type,
            r = e.childName;
          (0, ee.hu)(
            "child_added" === t ||
              "child_changed" === t ||
              "child_removed" === t,
            "Only child changes supported for tracking"
          ),
            (0, ee.hu)(
              ".priority" !== r,
              "Only non-priority child changes can be tracked."
            );
          const i = this.changeMap.get(r);
          if (i) {
            const a = i.type;
            if ("child_added" === t && "child_removed" === a)
              this.changeMap.set(r, Vw(r, e.snapshotNode, i.snapshotNode));
            else if ("child_removed" === t && "child_added" === a)
              this.changeMap.delete(r);
            else if ("child_removed" === t && "child_changed" === a)
              this.changeMap.set(
                r,
                (function Lw(n, e) {
                  return {
                    type: "child_removed",
                    snapshotNode: e,
                    childName: n,
                  };
                })(r, i.oldSnap)
              );
            else if ("child_changed" === t && "child_added" === a)
              this.changeMap.set(
                r,
                (function Um(n, e) {
                  return { type: "child_added", snapshotNode: e, childName: n };
                })(r, e.snapshotNode)
              );
            else {
              if ("child_changed" !== t || "child_changed" !== a)
                throw (0, ee.g5)(
                  "Illegal combination of changes: " +
                    e +
                    " occurred after " +
                    i
                );
              this.changeMap.set(r, Vw(r, e.snapshotNode, i.oldSnap));
            }
          } else this.changeMap.set(r, e);
        }
        getChanges() {
          return Array.from(this.changeMap.values());
        }
      }
      const tU = new (class Kz {
        getCompleteChild(e) {
          return null;
        }
        getChildAfterChild(e, t, r) {
          return null;
        }
      })();
      class vN {
        constructor(e, t, r = null) {
          (this.writes_ = e),
            (this.viewCache_ = t),
            (this.optCompleteServerCache_ = r);
        }
        getCompleteChild(e) {
          const t = this.viewCache_.eventCache;
          if (t.isCompleteForChild(e)) return t.getNode().getImmediateChild(e);
          {
            const r =
              null != this.optCompleteServerCache_
                ? new Gc(this.optCompleteServerCache_, !0, !1)
                : this.viewCache_.serverCache;
            return yN(this.writes_, e, r);
          }
        }
        getChildAfterChild(e, t, r) {
          const i =
              null != this.optCompleteServerCache_
                ? this.optCompleteServerCache_
                : Af(this.viewCache_),
            a = (function zz(n, e, t, r, i, a) {
              return (function Gz(n, e, t, r, i, a, l) {
                let h;
                const m = Wc(n.visibleWrites, e),
                  v = Rf(m, Fn());
                if (null != v) h = v;
                else {
                  if (null == t) return [];
                  h = $m(m, t);
                }
                if (((h = h.withIndex(l)), h.isEmpty() || h.isLeafNode()))
                  return [];
                {
                  const b = [],
                    D = l.getCompare(),
                    R = a
                      ? h.getReverseIteratorFrom(r, l)
                      : h.getIteratorFrom(r, l);
                  let F = R.getNext();
                  for (; F && b.length < i; )
                    0 !== D(F, r) && b.push(F), (F = R.getNext());
                  return b;
                }
              })(n.writeTree, n.treePath, e, t, r, i, a);
            })(this.writes_, i, t, 1, r, e);
          return 0 === a.length ? null : a[0];
        }
      }
      function nU(n, e, t, r, i, a) {
        const l = e.eventCache;
        if (null != TD(r, t)) return e;
        {
          let h, m;
          if (vn(t))
            if (
              ((0, ee.hu)(
                e.serverCache.isFullyInitialized(),
                "If change path is empty, we must have complete server data"
              ),
              e.serverCache.isFiltered())
            ) {
              const v = Af(e),
                D = _N(r, v instanceof cn ? v : cn.EMPTY_NODE);
              h = n.filter.updateFullNode(e.eventCache.getNode(), D, a);
            } else {
              const v = DD(r, Af(e));
              h = n.filter.updateFullNode(e.eventCache.getNode(), v, a);
            }
          else {
            const v = yn(t);
            if (".priority" === v) {
              (0, ee.hu)(
                1 === Hc(t),
                "Can't have a priority with additional path components"
              );
              const b = l.getNode();
              m = e.serverCache.getNode();
              const D = JV(r, t, b, m);
              h = null != D ? n.filter.updatePriority(b, D) : l.getNode();
            } else {
              const b = Zn(t);
              let D;
              if (l.isCompleteForChild(v)) {
                m = e.serverCache.getNode();
                const R = JV(r, t, l.getNode(), m);
                D =
                  null != R
                    ? l.getNode().getImmediateChild(v).updateChild(b, R)
                    : l.getNode().getImmediateChild(v);
              } else D = yN(r, v, e.serverCache);
              h =
                null != D
                  ? n.filter.updateChild(l.getNode(), v, D, b, i, a)
                  : l.getNode();
            }
          }
          return $w(
            e,
            h,
            l.isFullyInitialized() || vn(t),
            n.filter.filtersNodes()
          );
        }
      }
      function SD(n, e, t, r, i, a, l, h) {
        const m = e.serverCache;
        let v;
        const b = l ? n.filter : n.filter.getIndexedFilter();
        if (vn(t)) v = b.updateFullNode(m.getNode(), r, null);
        else if (b.filtersNodes() && !m.isFiltered()) {
          const F = m.getNode().updateChild(t, r);
          v = b.updateFullNode(m.getNode(), F, null);
        } else {
          const F = yn(t);
          if (!m.isCompleteForPath(t) && Hc(t) > 1) return e;
          const B = Zn(t),
            Ee = m.getNode().getImmediateChild(F).updateChild(B, r);
          v =
            ".priority" === F
              ? b.updatePriority(m.getNode(), Ee)
              : b.updateChild(m.getNode(), F, Ee, B, tU, null);
        }
        const D = zV(e, v, m.isFullyInitialized() || vn(t), b.filtersNodes());
        return nU(n, D, t, i, new vN(i, D, a), h);
      }
      function EN(n, e, t, r, i, a, l) {
        const h = e.eventCache;
        let m, v;
        const b = new vN(i, e, a);
        if (vn(t))
          (v = n.filter.updateFullNode(e.eventCache.getNode(), r, l)),
            (m = $w(e, v, !0, n.filter.filtersNodes()));
        else {
          const D = yn(t);
          if (".priority" === D)
            (v = n.filter.updatePriority(e.eventCache.getNode(), r)),
              (m = $w(e, v, h.isFullyInitialized(), h.isFiltered()));
          else {
            const R = Zn(t),
              F = h.getNode().getImmediateChild(D);
            let B;
            if (vn(R)) B = r;
            else {
              const le = b.getCompleteChild(D);
              B =
                null != le
                  ? ".priority" === Zx(R) && le.getChild(AV(R)).isEmpty()
                    ? le
                    : le.updateChild(R, r)
                  : cn.EMPTY_NODE;
            }
            m = F.equals(B)
              ? e
              : $w(
                  e,
                  n.filter.updateChild(h.getNode(), D, B, R, b, l),
                  h.isFullyInitialized(),
                  n.filter.filtersNodes()
                );
          }
        }
        return m;
      }
      function rU(n, e) {
        return n.eventCache.isCompleteForChild(e);
      }
      function iU(n, e, t) {
        return (
          t.foreach((r, i) => {
            e = e.updateChild(r, i);
          }),
          e
        );
      }
      function wN(n, e, t, r, i, a, l, h) {
        if (
          e.serverCache.getNode().isEmpty() &&
          !e.serverCache.isFullyInitialized()
        )
          return e;
        let v,
          m = e;
        v = vn(t) ? r : new ir(null).setTree(t, r);
        const b = e.serverCache.getNode();
        return (
          v.children.inorderTraversal((D, R) => {
            if (b.hasChild(D)) {
              const B = iU(0, e.serverCache.getNode().getImmediateChild(D), R);
              m = SD(n, m, new Hn(D), B, i, a, l, h);
            }
          }),
          v.children.inorderTraversal((D, R) => {
            const F =
              !e.serverCache.isCompleteForChild(D) && void 0 === R.value;
            if (!b.hasChild(D) && !F) {
              const le = iU(0, e.serverCache.getNode().getImmediateChild(D), R);
              m = SD(n, m, new Hn(D), le, i, a, l, h);
            }
          }),
          m
        );
      }
      function o3(n, e) {
        const t = Af(n.viewCache_);
        return t &&
          (n.query._queryParams.loadsAllData() ||
            (!vn(e) && !t.getImmediateChild(yn(e)).isEmpty()))
          ? t.getChild(e)
          : null;
      }
      function aU(n, e, t, r) {
        e.type === fo.MERGE &&
          null !== e.source.queryId &&
          ((0, ee.hu)(
            Af(n.viewCache_),
            "We should always have a full cache before handling merges"
          ),
          (0, ee.hu)(
            CD(n.viewCache_),
            "Missing event cache, even though we have a server cache"
          ));
        const i = n.viewCache_,
          a = (function Qz(n, e, t, r, i) {
            const a = new qz();
            let l, h;
            if (t.type === fo.OVERWRITE) {
              const v = t;
              v.source.fromUser
                ? (l = EN(n, e, v.path, v.snap, r, i, a))
                : ((0, ee.hu)(v.source.fromServer, "Unknown source."),
                  (h =
                    v.source.tagged ||
                    (e.serverCache.isFiltered() && !vn(v.path))),
                  (l = SD(n, e, v.path, v.snap, r, i, h, a)));
            } else if (t.type === fo.MERGE) {
              const v = t;
              v.source.fromUser
                ? (l = (function Xz(n, e, t, r, i, a, l) {
                    let h = e;
                    return (
                      r.foreach((m, v) => {
                        const b = hr(t, m);
                        rU(e, yn(b)) && (h = EN(n, h, b, v, i, a, l));
                      }),
                      r.foreach((m, v) => {
                        const b = hr(t, m);
                        rU(e, yn(b)) || (h = EN(n, h, b, v, i, a, l));
                      }),
                      h
                    );
                  })(n, e, v.path, v.children, r, i, a))
                : ((0, ee.hu)(v.source.fromServer, "Unknown source."),
                  (h = v.source.tagged || e.serverCache.isFiltered()),
                  (l = wN(n, e, v.path, v.children, r, i, h, a)));
            } else if (t.type === fo.ACK_USER_WRITE) {
              const v = t;
              l = v.revert
                ? (function n3(n, e, t, r, i, a) {
                    let l;
                    if (null != TD(r, t)) return e;
                    {
                      const h = new vN(r, e, i),
                        m = e.eventCache.getNode();
                      let v;
                      if (vn(t) || ".priority" === yn(t)) {
                        let b;
                        if (e.serverCache.isFullyInitialized())
                          b = DD(r, Af(e));
                        else {
                          const D = e.serverCache.getNode();
                          (0, ee.hu)(
                            D instanceof cn,
                            "serverChildren would be complete if leaf node"
                          ),
                            (b = _N(r, D));
                        }
                        v = n.filter.updateFullNode(m, b, a);
                      } else {
                        const b = yn(t);
                        let D = yN(r, b, e.serverCache);
                        null == D &&
                          e.serverCache.isCompleteForChild(b) &&
                          (D = m.getImmediateChild(b)),
                          (v =
                            null != D
                              ? n.filter.updateChild(m, b, D, Zn(t), h, a)
                              : e.eventCache.getNode().hasChild(b)
                              ? n.filter.updateChild(
                                  m,
                                  b,
                                  cn.EMPTY_NODE,
                                  Zn(t),
                                  h,
                                  a
                                )
                              : m),
                          v.isEmpty() &&
                            e.serverCache.isFullyInitialized() &&
                            ((l = DD(r, Af(e))),
                            l.isLeafNode() &&
                              (v = n.filter.updateFullNode(v, l, a)));
                      }
                      return (
                        (l =
                          e.serverCache.isFullyInitialized() ||
                          null != TD(r, Fn())),
                        $w(e, v, l, n.filter.filtersNodes())
                      );
                    }
                  })(n, e, v.path, r, i, a)
                : (function e3(n, e, t, r, i, a, l) {
                    if (null != TD(i, t)) return e;
                    const h = e.serverCache.isFiltered(),
                      m = e.serverCache;
                    if (null != r.value) {
                      if (
                        (vn(t) && m.isFullyInitialized()) ||
                        m.isCompleteForPath(t)
                      )
                        return SD(n, e, t, m.getNode().getChild(t), i, a, h, l);
                      if (vn(t)) {
                        let v = new ir(null);
                        return (
                          m.getNode().forEachChild(ja, (b, D) => {
                            v = v.set(new Hn(b), D);
                          }),
                          wN(n, e, t, v, i, a, h, l)
                        );
                      }
                      return e;
                    }
                    {
                      let v = new ir(null);
                      return (
                        r.foreach((b, D) => {
                          const R = hr(t, b);
                          m.isCompleteForPath(R) &&
                            (v = v.set(b, m.getNode().getChild(R)));
                        }),
                        wN(n, e, t, v, i, a, h, l)
                      );
                    }
                  })(n, e, v.path, v.affectedTree, r, i, a);
            } else {
              if (t.type !== fo.LISTEN_COMPLETE)
                throw (0, ee.g5)("Unknown operation type: " + t.type);
              l = (function t3(n, e, t, r, i) {
                const a = e.serverCache;
                return nU(
                  n,
                  zV(
                    e,
                    a.getNode(),
                    a.isFullyInitialized() || vn(t),
                    a.isFiltered()
                  ),
                  t,
                  r,
                  tU,
                  i
                );
              })(n, e, t.path, r, a);
            }
            const m = a.getChanges();
            return (
              (function Jz(n, e, t) {
                const r = e.eventCache;
                if (r.isFullyInitialized()) {
                  const i = r.getNode().isLeafNode() || r.getNode().isEmpty(),
                    a = CD(n);
                  (t.length > 0 ||
                    !n.eventCache.isFullyInitialized() ||
                    (i && !r.getNode().equals(a)) ||
                    !r.getNode().getPriority().equals(a.getPriority())) &&
                    t.push(
                      (function $V(n) {
                        return { type: "value", snapshotNode: n };
                      })(CD(e))
                    );
                }
              })(e, l, m),
              { viewCache: l, changes: m }
            );
          })(n.processor_, i, e, t, r);
        return (
          (function Yz(n, e) {
            (0, ee.hu)(
              e.eventCache.getNode().isIndexed(n.filter.getIndex()),
              "Event snap not indexed"
            ),
              (0, ee.hu)(
                e.serverCache.getNode().isIndexed(n.filter.getIndex()),
                "Server snap not indexed"
              );
          })(n.processor_, a.viewCache),
          (0, ee.hu)(
            a.viewCache.serverCache.isFullyInitialized() ||
              !i.serverCache.isFullyInitialized(),
            "Once a server snap is complete, it should never go back"
          ),
          (n.viewCache_ = a.viewCache),
          (function uU(n, e, t, r) {
            return (function Rz(n, e, t, r) {
              const i = [],
                a = [];
              return (
                e.forEach((l) => {
                  "child_changed" === l.type &&
                    n.index_.indexedValueChanged(l.oldSnap, l.snapshotNode) &&
                    a.push(
                      (function gz(n, e) {
                        return {
                          type: "child_moved",
                          snapshotNode: e,
                          childName: n,
                        };
                      })(l.childName, l.snapshotNode)
                    );
                }),
                jw(n, i, "child_removed", e, r, t),
                jw(n, i, "child_added", e, r, t),
                jw(n, i, "child_moved", a, r, t),
                jw(n, i, "child_changed", e, r, t),
                jw(n, i, "value", e, r, t),
                i
              );
            })(n.eventGenerator_, e, t, r ? [r] : n.eventRegistrations_);
          })(n, a.changes, a.viewCache.eventCache.getNode(), null)
        );
      }
      let AD, MD;
      function IN(n, e, t, r) {
        const i = e.source.queryId;
        if (null !== i) {
          const a = n.views.get(i);
          return (
            (0, ee.hu)(
              null != a,
              "SyncTree gave us an op for an invalid query."
            ),
            aU(a, e, t, r)
          );
        }
        {
          let a = [];
          for (const l of n.views.values()) a = a.concat(aU(l, e, t, r));
          return a;
        }
      }
      function zc(n, e) {
        let t = null;
        for (const r of n.views.values()) t = t || o3(r, e);
        return t;
      }
      class fU {
        constructor(e) {
          (this.listenProvider_ = e),
            (this.syncPointTree_ = new ir(null)),
            (this.pendingWriteTree_ = (function Wz() {
              return {
                visibleWrites: zo.empty(),
                allWrites: [],
                lastWriteId: -1,
              };
            })()),
            (this.tagToQueryMap = new Map()),
            (this.queryToTagMap = new Map());
        }
      }
      function bN(n, e, t, r, i) {
        return (
          (function Pz(n, e, t, r, i) {
            (0, ee.hu)(
              r > n.lastWriteId,
              "Stacking an older write on top of newer ones"
            ),
              void 0 === i && (i = !0),
              n.allWrites.push({ path: e, snap: t, writeId: r, visible: i }),
              i && (n.visibleWrites = Hw(n.visibleWrites, e, t)),
              (n.lastWriteId = r);
          })(n.pendingWriteTree_, e, t, r, i),
          i
            ? Hm(
                n,
                new Sf(
                  { fromUser: !0, fromServer: !1, queryId: null, tagged: !1 },
                  e,
                  t
                )
              )
            : []
        );
      }
      function Kc(n, e, t = !1) {
        const r = (function kz(n, e) {
          for (let t = 0; t < n.allWrites.length; t++) {
            const r = n.allWrites[t];
            if (r.writeId === e) return r;
          }
          return null;
        })(n.pendingWriteTree_, e);
        if (
          (function Fz(n, e) {
            const t = n.allWrites.findIndex((h) => h.writeId === e);
            (0, ee.hu)(t >= 0, "removeWrite called with nonexistent writeId.");
            const r = n.allWrites[t];
            n.allWrites.splice(t, 1);
            let i = r.visible,
              a = !1,
              l = n.allWrites.length - 1;
            for (; i && l >= 0; ) {
              const h = n.allWrites[l];
              h.visible &&
                (l >= t && Lz(h, r.path)
                  ? (i = !1)
                  : ho(r.path, h.path) && (a = !0)),
                l--;
            }
            return (
              !!i &&
              (a
                ? ((function Vz(n) {
                    (n.visibleWrites = YV(n.allWrites, Uz, Fn())),
                      (n.lastWriteId =
                        n.allWrites.length > 0
                          ? n.allWrites[n.allWrites.length - 1].writeId
                          : -1);
                  })(n),
                  !0)
                : (r.snap
                    ? (n.visibleWrites = qV(n.visibleWrites, r.path))
                    : oi(r.children, (m) => {
                        n.visibleWrites = qV(n.visibleWrites, hr(r.path, m));
                      }),
                  !0))
            );
          })(n.pendingWriteTree_, e)
        ) {
          let a = new ir(null);
          return (
            null != r.snap
              ? (a = a.set(Fn(), !0))
              : oi(r.children, (l) => {
                  a = a.set(new Hn(l), !0);
                }),
            Hm(n, new wD(r.path, a, t))
          );
        }
        return [];
      }
      function Gw(n, e, t) {
        return Hm(
          n,
          new Sf(
            { fromUser: !1, fromServer: !0, queryId: null, tagged: !1 },
            e,
            t
          )
        );
      }
      function ND(n, e, t) {
        const i = n.pendingWriteTree_,
          a = n.syncPointTree_.findOnPath(e, (l, h) => {
            const v = zc(h, Wi(l, e));
            if (v) return v;
          });
        return QV(i, e, a, t, !0);
      }
      function Hm(n, e) {
        return _U(e, n.syncPointTree_, null, bD(n.pendingWriteTree_, Fn()));
      }
      function _U(n, e, t, r) {
        if (vn(n.path)) return yU(n, e, t, r);
        {
          const i = e.get(Fn());
          null == t && null != i && (t = zc(i, Fn()));
          let a = [];
          const l = yn(n.path),
            h = n.operationForChild(l),
            m = e.children.get(l);
          if (m && h) {
            const v = t ? t.getImmediateChild(l) : null,
              b = XV(r, l);
            a = a.concat(_U(h, m, v, b));
          }
          return i && (a = a.concat(IN(i, n, r, t))), a;
        }
      }
      function yU(n, e, t, r) {
        const i = e.get(Fn());
        null == t && null != i && (t = zc(i, Fn()));
        let a = [];
        return (
          e.children.inorderTraversal((l, h) => {
            const m = t ? t.getImmediateChild(l) : null,
              v = XV(r, l),
              b = n.operationForChild(l);
            b && (a = a.concat(yU(b, h, m, v)));
          }),
          i && (a = a.concat(IN(i, n, r, t))),
          a
        );
      }
      function DN(n, e) {
        return n.tagToQueryMap.get(e);
      }
      function TN(n) {
        const e = n.indexOf("$");
        return (
          (0, ee.hu)(-1 !== e && e < n.length - 1, "Bad queryKey."),
          { queryId: n.substr(e + 1), path: new Hn(n.substr(0, e)) }
        );
      }
      function SN(n, e, t) {
        const r = n.syncPointTree_.get(e);
        return (
          (0, ee.hu)(r, "Missing sync point for query tag that we're tracking"),
          IN(r, t, bD(n.pendingWriteTree_, e), null)
        );
      }
      class AN {
        constructor(e) {
          this.node_ = e;
        }
        getImmediateChild(e) {
          const t = this.node_.getImmediateChild(e);
          return new AN(t);
        }
        node() {
          return this.node_;
        }
      }
      class RN {
        constructor(e, t) {
          (this.syncTree_ = e), (this.path_ = t);
        }
        getImmediateChild(e) {
          const t = hr(this.path_, e);
          return new RN(this.syncTree_, t);
        }
        node() {
          return ND(this.syncTree_, this.path_);
        }
      }
      const EU = function (n, e, t) {
          return n && "object" == typeof n
            ? ((0, ee.hu)(
                ".sv" in n,
                "Unexpected leaf node or priority contents"
              ),
              "string" == typeof n[".sv"]
                ? R3(n[".sv"], e, t)
                : "object" == typeof n[".sv"]
                ? M3(n[".sv"], e)
                : void (0, ee.hu)(
                    !1,
                    "Unexpected server value: " + JSON.stringify(n, null, 2)
                  ))
            : n;
        },
        R3 = function (n, e, t) {
          if ("timestamp" === n) return t.timestamp;
          (0, ee.hu)(!1, "Unexpected server value: " + n);
        },
        M3 = function (n, e, t) {
          n.hasOwnProperty("increment") ||
            (0, ee.hu)(
              !1,
              "Unexpected server value: " + JSON.stringify(n, null, 2)
            );
          const r = n.increment;
          "number" != typeof r &&
            (0, ee.hu)(!1, "Unexpected increment value: " + r);
          const i = e.node();
          if (
            ((0, ee.hu)(
              null !== i && typeof i < "u",
              "Expected ChildrenNode.EMPTY_NODE for nulls"
            ),
            !i.isLeafNode())
          )
            return r;
          const l = i.getValue();
          return "number" != typeof l ? r : l + r;
        },
        MN = function (n, e, t) {
          return xN(n, new AN(e), t);
        };
      function xN(n, e, t) {
        const r = n.getPriority().val(),
          i = EU(r, e.getImmediateChild(".priority"), t);
        let a;
        if (n.isLeafNode()) {
          const l = n,
            h = EU(l.getValue(), e, t);
          return h !== l.getValue() || i !== l.getPriority().val()
            ? new Fm(h, vr(i))
            : n;
        }
        {
          const l = n;
          return (
            (a = l),
            i !== l.getPriority().val() && (a = a.updatePriority(new Fm(i))),
            l.forEachChild(rr, (h, m) => {
              const v = xN(m, e.getImmediateChild(h), t);
              v !== m && (a = a.updateImmediateChild(h, v));
            }),
            a
          );
        }
      }
      class NN {
        constructor(e = "", t = null, r = { children: {}, childCount: 0 }) {
          (this.name = e), (this.parent = t), (this.node = r);
        }
      }
      function OD(n, e) {
        let t = e instanceof Hn ? e : new Hn(e),
          r = n,
          i = yn(t);
        for (; null !== i; ) {
          const a = (0, ee.DV)(r.node.children, i) || {
            children: {},
            childCount: 0,
          };
          (r = new NN(i, r, a)), (t = Zn(t)), (i = yn(t));
        }
        return r;
      }
      function Mf(n) {
        return n.node.value;
      }
      function PN(n, e) {
        (n.node.value = e), ON(n);
      }
      function IU(n) {
        return n.node.childCount > 0;
      }
      function kD(n, e) {
        oi(n.node.children, (t, r) => {
          e(new NN(t, n, r));
        });
      }
      function CU(n, e, t, r) {
        t && !r && e(n),
          kD(n, (i) => {
            CU(i, e, !0, r);
          }),
          t && r && e(n);
      }
      function qw(n) {
        return new Hn(null === n.parent ? n.name : qw(n.parent) + "/" + n.name);
      }
      function ON(n) {
        null !== n.parent &&
          (function P3(n, e, t) {
            const r = (function x3(n) {
                return void 0 === Mf(n) && !IU(n);
              })(t),
              i = (0, ee.r3)(n.node.children, e);
            r && i
              ? (delete n.node.children[e], n.node.childCount--, ON(n))
              : !r &&
                !i &&
                ((n.node.children[e] = t.node), n.node.childCount++, ON(n));
          })(n.parent, n.name, n);
      }
      const O3 = /[\[\].#$\/\u0000-\u001F\u007F]/,
        k3 = /[\[\].#$\u0000-\u001F\u007F]/,
        kN = 10485760,
        FD = function (n) {
          return "string" == typeof n && 0 !== n.length && !O3.test(n);
        },
        Zw = function (n, e, t) {
          const r = t instanceof Hn ? new YW(t, n) : t;
          if (void 0 === e) throw new Error(n + "contains undefined " + Df(r));
          if ("function" == typeof e)
            throw new Error(
              n +
                "contains a function " +
                Df(r) +
                " with contents = " +
                e.toString()
            );
          if (lD(e))
            throw new Error(n + "contains " + e.toString() + " " + Df(r));
          if ("string" == typeof e && e.length > kN / 3 && (0, ee.ug)(e) > kN)
            throw new Error(
              n +
                "contains a string greater than " +
                kN +
                " utf8 bytes " +
                Df(r) +
                " ('" +
                e.substring(0, 50) +
                "...')"
            );
          if (e && "object" == typeof e) {
            let i = !1,
              a = !1;
            if (
              (oi(e, (l, h) => {
                if (".value" === l) i = !0;
                else if (".priority" !== l && ".sv" !== l && ((a = !0), !FD(l)))
                  throw new Error(
                    n +
                      " contains an invalid key (" +
                      l +
                      ") " +
                      Df(r) +
                      '.  Keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]"'
                  );
                (function QW(n, e) {
                  n.parts_.length > 0 && (n.byteLength_ += 1),
                    n.parts_.push(e),
                    (n.byteLength_ += (0, ee.ug)(e)),
                    RV(n);
                })(r, l),
                  Zw(n, h, r),
                  (function JW(n) {
                    const e = n.parts_.pop();
                    (n.byteLength_ -= (0, ee.ug)(e)),
                      n.parts_.length > 0 && (n.byteLength_ -= 1);
                  })(r);
              }),
              i && a)
            )
              throw new Error(
                n +
                  ' contains ".value" child ' +
                  Df(r) +
                  " in addition to actual children."
              );
          }
        },
        TU = function (n, e) {
          const t = e.path.toString();
          if (
            "string" != typeof e.repoInfo.host ||
            0 === e.repoInfo.host.length ||
            (!FD(e.repoInfo.namespace) &&
              "localhost" !== e.repoInfo.host.split(":")[0]) ||
            (0 !== t.length &&
              !(function (n) {
                return (
                  n && (n = n.replace(/^\/*\.info(\/|$)/, "/")),
                  (function (n) {
                    return (
                      "string" == typeof n && 0 !== n.length && !k3.test(n)
                    );
                  })(n)
                );
              })(t))
          )
            throw new Error(
              (0, ee.gK)(n, "url") +
                'must be a valid firebase URL and the path can\'t contain ".", "#", "$", "[", or "]".'
            );
        };
      class U3 {
        constructor() {
          (this.eventLists_ = []), (this.recursionDepth_ = 0);
        }
      }
      function po(n, e, t) {
        (function LD(n, e) {
          let t = null;
          for (let r = 0; r < e.length; r++) {
            const i = e[r],
              a = i.getPath();
            null !== t && !Yx(a, t.path) && (n.eventLists_.push(t), (t = null)),
              null === t && (t = { events: [], path: a }),
              t.events.push(i);
          }
          t && n.eventLists_.push(t);
        })(n, t),
          (function AU(n, e) {
            n.recursionDepth_++;
            let t = !0;
            for (let r = 0; r < n.eventLists_.length; r++) {
              const i = n.eventLists_[r];
              i &&
                (e(i.path)
                  ? (B3(n.eventLists_[r]), (n.eventLists_[r] = null))
                  : (t = !1));
            }
            t && (n.eventLists_ = []), n.recursionDepth_--;
          })(n, (r) => ho(r, e) || ho(e, r));
      }
      function B3(n) {
        for (let e = 0; e < n.events.length; e++) {
          const t = n.events[e];
          if (null !== t) {
            n.events[e] = null;
            const r = t.getEventRunner();
            Cf && si("event: " + t.toString()), Om(r);
          }
        }
      }
      class $3 {
        constructor(e, t, r, i) {
          (this.repoInfo_ = e),
            (this.forceRestClient_ = t),
            (this.authTokenProvider_ = r),
            (this.appCheckProvider_ = i),
            (this.dataUpdateCount = 0),
            (this.statsListener_ = null),
            (this.eventQueue_ = new U3()),
            (this.nextWriteId_ = 1),
            (this.interceptServerDataCallback_ = null),
            (this.onDisconnect_ = ED()),
            (this.transactionQueueTree_ = new NN()),
            (this.persistentConnection_ = null),
            (this.key = this.repoInfo_.toURLString());
        }
        toString() {
          return (
            (this.repoInfo_.secure ? "https://" : "http://") +
            this.repoInfo_.host
          );
        }
      }
      function MU(n) {
        const t =
          n.infoData_.getNode(new Hn(".info/serverTimeOffset")).val() || 0;
        return new Date().getTime() + t;
      }
      function Qw(n) {
        return (function (n) {
          return (
            ((n = n || {}).timestamp = n.timestamp || new Date().getTime()), n
          );
        })({ timestamp: MU(n) });
      }
      function xU(n, e, t, r, i) {
        n.dataUpdateCount++;
        const a = new Hn(e);
        t = n.interceptServerDataCallback_
          ? n.interceptServerDataCallback_(e, t)
          : t;
        let l = [];
        if (i)
          if (r) {
            const m = (0, ee.UI)(t, (v) => vr(v));
            l = (function I3(n, e, t, r) {
              const i = DN(n, r);
              if (i) {
                const a = TN(i),
                  l = a.path,
                  h = a.queryId,
                  m = Wi(l, e),
                  v = ir.fromObject(t);
                return SN(n, l, new jm(hN(h), m, v));
              }
              return [];
            })(n.serverSyncTree_, a, m, i);
          } else {
            const m = vr(t);
            l = (function pU(n, e, t, r) {
              const i = DN(n, r);
              if (null != i) {
                const a = TN(i),
                  l = a.path,
                  h = a.queryId,
                  m = Wi(l, e);
                return SN(n, l, new Sf(hN(h), m, t));
              }
              return [];
            })(n.serverSyncTree_, a, m, i);
          }
        else if (r) {
          const m = (0, ee.UI)(t, (v) => vr(v));
          l = (function y3(n, e, t) {
            const r = ir.fromObject(t);
            return Hm(
              n,
              new jm(
                { fromUser: !1, fromServer: !0, queryId: null, tagged: !1 },
                e,
                r
              )
            );
          })(n.serverSyncTree_, a, m);
        } else {
          const m = vr(t);
          l = Gw(n.serverSyncTree_, a, m);
        }
        let h = a;
        l.length > 0 && (h = Gm(n, a)), po(n.eventQueue_, h, l);
      }
      function NU(n, e) {
        VN(n, "connected", e),
          !1 === e &&
            (function q3(n) {
              xf(n, "onDisconnectEvents");
              const e = Qw(n),
                t = ED();
              lN(n.onDisconnect_, Fn(), (i, a) => {
                const l = (function (n, e, t, r) {
                  return xN(e, new RN(t, n), r);
                })(i, a, n.serverSyncTree_, e);
                Bm(t, i, l);
              });
              let r = [];
              lN(t, Fn(), (i, a) => {
                r = r.concat(Gw(n.serverSyncTree_, i, a));
                const l = (function $N(n, e) {
                  const t = qw(kU(n, e)),
                    r = OD(n.transactionQueueTree_, e);
                  return (
                    (function N3(n, e, t) {
                      let r = t ? n : n.parent;
                      for (; null !== r; ) {
                        if (e(r)) return !0;
                        r = r.parent;
                      }
                    })(r, (i) => {
                      HN(n, i);
                    }),
                    HN(n, r),
                    CU(r, (i) => {
                      HN(n, i);
                    }),
                    t
                  );
                })(n, i);
                Gm(n, l);
              }),
                (n.onDisconnect_ = ED()),
                po(n.eventQueue_, Fn(), r);
            })(n);
      }
      function VN(n, e, t) {
        const r = new Hn("/.info/" + e),
          i = vr(t);
        n.infoData_.updateSnapshot(r, i);
        const a = Gw(n.infoSyncTree_, r, i);
        po(n.eventQueue_, r, a);
      }
      function VD(n) {
        return n.nextWriteId_++;
      }
      function xf(n, ...e) {
        let t = "";
        n.persistentConnection_ && (t = n.persistentConnection_.id + ":"),
          si(t, ...e);
      }
      function jN(n, e, t) {
        return ND(n.serverSyncTree_, e, t) || cn.EMPTY_NODE;
      }
      function UD(n, e = n.transactionQueueTree_) {
        if ((e || BD(n, e), Mf(e))) {
          const t = FU(n, e);
          (0, ee.hu)(t.length > 0, "Sending zero length transaction queue"),
            t.every((i) => 0 === i.status) &&
              (function eq(n, e, t) {
                const r = t.map((v) => v.currentWriteId),
                  i = jN(n, e, r);
                let a = i;
                const l = i.hash();
                for (let v = 0; v < t.length; v++) {
                  const b = t[v];
                  (0, ee.hu)(
                    0 === b.status,
                    "tryToSendTransactionQueue_: items in queue should all be run."
                  ),
                    (b.status = 1),
                    b.retryCount++;
                  const D = Wi(e, b.path);
                  a = a.updateChild(D, b.currentOutputSnapshotRaw);
                }
                const h = a.val(!0),
                  m = e;
                n.server_.put(
                  m.toString(),
                  h,
                  (v) => {
                    xf(n, "transaction put response", {
                      path: m.toString(),
                      status: v,
                    });
                    let b = [];
                    if ("ok" === v) {
                      const D = [];
                      for (let R = 0; R < t.length; R++)
                        (t[R].status = 2),
                          (b = b.concat(
                            Kc(n.serverSyncTree_, t[R].currentWriteId)
                          )),
                          t[R].onComplete &&
                            D.push(() =>
                              t[R].onComplete(
                                null,
                                !0,
                                t[R].currentOutputSnapshotResolved
                              )
                            ),
                          t[R].unwatcher();
                      BD(n, OD(n.transactionQueueTree_, e)),
                        UD(n, n.transactionQueueTree_),
                        po(n.eventQueue_, e, b);
                      for (let R = 0; R < D.length; R++) Om(D[R]);
                    } else {
                      if ("datastale" === v)
                        for (let D = 0; D < t.length; D++)
                          t[D].status = 3 === t[D].status ? 4 : 0;
                      else {
                        Ni("transaction at " + m.toString() + " failed: " + v);
                        for (let D = 0; D < t.length; D++)
                          (t[D].status = 4), (t[D].abortReason = v);
                      }
                      Gm(n, e);
                    }
                  },
                  l
                );
              })(n, qw(e), t);
        } else
          IU(e) &&
            kD(e, (t) => {
              UD(n, t);
            });
      }
      function Gm(n, e) {
        const t = kU(n, e),
          r = qw(t);
        return (
          (function tq(n, e, t) {
            if (0 === e.length) return;
            const r = [];
            let i = [];
            const l = e
              .filter((h) => 0 === h.status)
              .map((h) => h.currentWriteId);
            for (let h = 0; h < e.length; h++) {
              const m = e[h],
                v = Wi(t, m.path);
              let D,
                b = !1;
              if (
                ((0, ee.hu)(
                  null !== v,
                  "rerunTransactionsUnderNode_: relativePath should not be null."
                ),
                4 === m.status)
              )
                (b = !0),
                  (D = m.abortReason),
                  (i = i.concat(Kc(n.serverSyncTree_, m.currentWriteId, !0)));
              else if (0 === m.status)
                if (m.retryCount >= 25)
                  (b = !0),
                    (D = "maxretry"),
                    (i = i.concat(Kc(n.serverSyncTree_, m.currentWriteId, !0)));
                else {
                  const R = jN(n, m.path, l);
                  m.currentInputSnapshot = R;
                  const F = e[h].update(R.val());
                  if (void 0 !== F) {
                    Zw("transaction failed: Data returned ", F, m.path);
                    let B = vr(F);
                    ("object" == typeof F &&
                      null != F &&
                      (0, ee.r3)(F, ".priority")) ||
                      (B = B.updatePriority(R.getPriority()));
                    const Ee = m.currentWriteId,
                      dt = Qw(n),
                      It = MN(B, R, dt);
                    (m.currentOutputSnapshotRaw = B),
                      (m.currentOutputSnapshotResolved = It),
                      (m.currentWriteId = VD(n)),
                      l.splice(l.indexOf(Ee), 1),
                      (i = i.concat(
                        bN(
                          n.serverSyncTree_,
                          m.path,
                          It,
                          m.currentWriteId,
                          m.applyLocally
                        )
                      )),
                      (i = i.concat(Kc(n.serverSyncTree_, Ee, !0)));
                  } else
                    (b = !0),
                      (D = "nodata"),
                      (i = i.concat(
                        Kc(n.serverSyncTree_, m.currentWriteId, !0)
                      ));
                }
              po(n.eventQueue_, t, i),
                (i = []),
                b &&
                  ((e[h].status = 2),
                  setTimeout(e[h].unwatcher, Math.floor(0)),
                  e[h].onComplete &&
                    r.push(
                      "nodata" === D
                        ? () =>
                            e[h].onComplete(null, !1, e[h].currentInputSnapshot)
                        : () => e[h].onComplete(new Error(D), !1, null)
                    ));
            }
            BD(n, n.transactionQueueTree_);
            for (let h = 0; h < r.length; h++) Om(r[h]);
            UD(n, n.transactionQueueTree_);
          })(n, FU(n, t), r),
          r
        );
      }
      function kU(n, e) {
        let t,
          r = n.transactionQueueTree_;
        for (t = yn(e); null !== t && void 0 === Mf(r); )
          (r = OD(r, t)), (t = yn((e = Zn(e))));
        return r;
      }
      function FU(n, e) {
        const t = [];
        return LU(n, e, t), t.sort((r, i) => r.order - i.order), t;
      }
      function LU(n, e, t) {
        const r = Mf(e);
        if (r) for (let i = 0; i < r.length; i++) t.push(r[i]);
        kD(e, (i) => {
          LU(n, i, t);
        });
      }
      function BD(n, e) {
        const t = Mf(e);
        if (t) {
          let r = 0;
          for (let i = 0; i < t.length; i++)
            2 !== t[i].status && ((t[r] = t[i]), r++);
          (t.length = r), PN(e, t.length > 0 ? t : void 0);
        }
        kD(e, (r) => {
          BD(n, r);
        });
      }
      function HN(n, e) {
        const t = Mf(e);
        if (t) {
          const r = [];
          let i = [],
            a = -1;
          for (let l = 0; l < t.length; l++)
            3 === t[l].status ||
              (1 === t[l].status
                ? ((0, ee.hu)(
                    a === l - 1,
                    "All SENT items should be at beginning of queue."
                  ),
                  (a = l),
                  (t[l].status = 3),
                  (t[l].abortReason = "set"))
                : ((0, ee.hu)(
                    0 === t[l].status,
                    "Unexpected transaction status in abort"
                  ),
                  t[l].unwatcher(),
                  (i = i.concat(
                    Kc(n.serverSyncTree_, t[l].currentWriteId, !0)
                  )),
                  t[l].onComplete &&
                    r.push(
                      t[l].onComplete.bind(null, new Error("set"), !1, null)
                    )));
          -1 === a ? PN(e, void 0) : (t.length = a + 1),
            po(n.eventQueue_, qw(e), i);
          for (let l = 0; l < r.length; l++) Om(r[l]);
        }
      }
      const GN = function (n, e) {
          const t = iq(n),
            r = t.namespace;
          return (
            "firebase.com" === t.domain &&
              Ua(
                t.host +
                  " is no longer supported. Please use <YOUR FIREBASE>.firebaseio.com instead"
              ),
            (!r || "undefined" === r) &&
              "localhost" !== t.domain &&
              Ua(
                "Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com"
              ),
            t.secure ||
              (typeof window < "u" &&
                window.location &&
                window.location.protocol &&
                -1 !== window.location.protocol.indexOf("https:") &&
                Ni(
                  "Insecure Firebase access from a secure page. Please use https in calls to new Firebase()."
                )),
            {
              repoInfo: new Hx(
                t.host,
                t.secure,
                r,
                "ws" === t.scheme || "wss" === t.scheme,
                e,
                "",
                r !== t.subdomain
              ),
              path: new Hn(t.pathString),
            }
          );
        },
        iq = function (n) {
          let e = "",
            t = "",
            r = "",
            i = "",
            a = "",
            l = !0,
            h = "https",
            m = 443;
          if ("string" == typeof n) {
            let v = n.indexOf("//");
            v >= 0 && ((h = n.substring(0, v - 1)), (n = n.substring(v + 2)));
            let b = n.indexOf("/");
            -1 === b && (b = n.length);
            let D = n.indexOf("?");
            -1 === D && (D = n.length),
              (e = n.substring(0, Math.min(b, D))),
              b < D &&
                (i = (function nq(n) {
                  let e = "";
                  const t = n.split("/");
                  for (let r = 0; r < t.length; r++)
                    if (t[r].length > 0) {
                      let i = t[r];
                      try {
                        i = decodeURIComponent(i.replace(/\+/g, " "));
                      } catch {}
                      e += "/" + i;
                    }
                  return e;
                })(n.substring(b, D)));
            const R = (function rq(n) {
              const e = {};
              "?" === n.charAt(0) && (n = n.substring(1));
              for (const t of n.split("&")) {
                if (0 === t.length) continue;
                const r = t.split("=");
                2 === r.length
                  ? (e[decodeURIComponent(r[0])] = decodeURIComponent(r[1]))
                  : Ni(`Invalid query segment '${t}' in query '${n}'`);
              }
              return e;
            })(n.substring(Math.min(n.length, D)));
            (v = e.indexOf(":")),
              v >= 0
                ? ((l = "https" === h || "wss" === h),
                  (m = parseInt(e.substring(v + 1), 10)))
                : (v = e.length);
            const F = e.slice(0, v);
            if ("localhost" === F.toLowerCase()) t = "localhost";
            else if (F.split(".").length <= 2) t = F;
            else {
              const B = e.indexOf(".");
              (r = e.substring(0, B).toLowerCase()),
                (t = e.substring(B + 1)),
                (a = r);
            }
            "ns" in R && (a = R.ns);
          }
          return {
            host: e,
            port: m,
            domain: t,
            subdomain: r,
            secure: l,
            scheme: h,
            pathString: i,
            namespace: a,
          };
        };
      class Fs {
        constructor(e, t, r, i) {
          (this._repo = e),
            (this._path = t),
            (this._queryParams = r),
            (this._orderByCalled = i);
        }
        get key() {
          return vn(this._path) ? null : Zx(this._path);
        }
        get ref() {
          return new qo(this._repo, this._path);
        }
        get _queryIdentifier() {
          const e = GV(this._queryParams),
            t = Bx(e);
          return "{}" === t ? "default" : t;
        }
        get _queryObject() {
          return GV(this._queryParams);
        }
        isEqual(e) {
          if (!((e = (0, ee.m9)(e)) instanceof Fs)) return !1;
          const t = this._repo === e._repo,
            r = Yx(this._path, e._path);
          return t && r && this._queryIdentifier === e._queryIdentifier;
        }
        toJSON() {
          return this.toString();
        }
        toString() {
          return (
            this._repo.toString() +
            (function KW(n) {
              let e = "";
              for (let t = n.pieceNum_; t < n.pieces_.length; t++)
                "" !== n.pieces_[t] &&
                  (e += "/" + encodeURIComponent(String(n.pieces_[t])));
              return e || "/";
            })(this._path)
          );
        }
      }
      class qo extends Fs {
        constructor(e, t) {
          super(e, t, new sN(), !1);
        }
        get parent() {
          const e = AV(this._path);
          return null === e ? null : new qo(this._repo, e);
        }
        get root() {
          let e = this;
          for (; null !== e.parent; ) e = e.parent;
          return e;
        }
      }
      (function l3(n) {
        (0, ee.hu)(!AD, "__referenceConstructor has already been defined"),
          (AD = n);
      })(qo),
        (function p3(n) {
          (0, ee.hu)(!MD, "__referenceConstructor has already been defined"),
            (MD = n);
        })(qo);
      const WN = {};
      class Cq {
        constructor(e, t) {
          (this._repoInternal = e),
            (this.app = t),
            (this.type = "database"),
            (this._instanceStarted = !1);
        }
        get _repo() {
          return (
            this._instanceStarted ||
              ((function H3(n, e, t) {
                if (
                  ((n.stats_ = zx(n.repoInfo_)),
                  n.forceRestClient_ ||
                    (
                      ("object" == typeof window &&
                        window.navigator &&
                        window.navigator.userAgent) ||
                      ""
                    ).search(
                      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i
                    ) >= 0)
                )
                  (n.server_ = new vD(
                    n.repoInfo_,
                    (r, i, a, l) => {
                      xU(n, r, i, a, l);
                    },
                    n.authTokenProvider_,
                    n.appCheckProvider_
                  )),
                    setTimeout(() => NU(n, !0), 0);
                else {
                  if (typeof t < "u" && null !== t) {
                    if ("object" != typeof t)
                      throw new Error(
                        "Only objects are supported for option databaseAuthVariableOverride"
                      );
                    try {
                      (0, ee.Pz)(t);
                    } catch (r) {
                      throw new Error("Invalid authOverride provided: " + r);
                    }
                  }
                  (n.persistentConnection_ = new Tf(
                    n.repoInfo_,
                    e,
                    (r, i, a, l) => {
                      xU(n, r, i, a, l);
                    },
                    (r) => {
                      NU(n, r);
                    },
                    (r) => {
                      !(function G3(n, e) {
                        oi(e, (t, r) => {
                          VN(n, t, r);
                        });
                      })(n, r);
                    },
                    n.authTokenProvider_,
                    n.appCheckProvider_,
                    t
                  )),
                    (n.server_ = n.persistentConnection_);
                }
                n.authTokenProvider_.addTokenChangeListener((r) => {
                  n.server_.refreshAuthToken(r);
                }),
                  n.appCheckProvider_.addTokenChangeListener((r) => {
                    n.server_.refreshAppCheckToken(r.token);
                  }),
                  (n.statsReporter_ = (function TW(n, e) {
                    const t = n.toString();
                    return Wx[t] || (Wx[t] = e()), Wx[t];
                  })(n.repoInfo_, () => new Sz(n.stats_, n.server_))),
                  (n.infoData_ = new Iz()),
                  (n.infoSyncTree_ = new fU({
                    startListening: (r, i, a, l) => {
                      let h = [];
                      const m = n.infoData_.getNode(r._path);
                      return (
                        m.isEmpty() ||
                          ((h = Gw(n.infoSyncTree_, r._path, m)),
                          setTimeout(() => {
                            l("ok");
                          }, 0)),
                        h
                      );
                    },
                    stopListening: () => {},
                  })),
                  VN(n, "connected", !1),
                  (n.serverSyncTree_ = new fU({
                    startListening: (r, i, a, l) => (
                      n.server_.listen(r, a, i, (h, m) => {
                        const v = l(h, m);
                        po(n.eventQueue_, r._path, v);
                      }),
                      []
                    ),
                    stopListening: (r, i) => {
                      n.server_.unlisten(r, i);
                    },
                  }));
              })(
                this._repoInternal,
                this.app.options.appId,
                this.app.options.databaseAuthVariableOverride
              ),
              (this._instanceStarted = !0)),
            this._repoInternal
          );
        }
        get _root() {
          return (
            this._rootInternal ||
              (this._rootInternal = new qo(this._repo, Fn())),
            this._rootInternal
          );
        }
        _delete() {
          return (
            null !== this._rootInternal &&
              ((function Eq(n, e) {
                const t = WN[e];
                (!t || t[n.key] !== n) &&
                  Ua(`Database ${e}(${n.repoInfo_}) has already been deleted.`),
                  (function OU(n) {
                    n.persistentConnection_ &&
                      n.persistentConnection_.interrupt("repo_interrupt");
                  })(n),
                  delete t[n.key];
              })(this._repo, this.app.name),
              (this._repoInternal = null),
              (this._rootInternal = null)),
            Promise.resolve()
          );
        }
        _checkNotDeleted(e) {
          null === this._rootInternal &&
            Ua("Cannot call " + e + " on a deleted database.");
        }
      }
      function bq(n = (0, wn.getApp)(), e) {
        return (0, wn._getProvider)(n, "database").getImmediate({
          identifier: e,
        });
      }
      (Tf.prototype.simpleListen = function (n, e) {
        this.sendRequest("q", { p: n }, e);
      }),
        (Tf.prototype.echo = function (n, e) {
          this.sendRequest("echo", { d: n }, e);
        }),
        (function Dq(n) {
          (function dW(n) {
            Lx = n;
          })(wn.SDK_VERSION),
            (0, wn._registerComponent)(
              new Fi.wA(
                "database",
                (e, { instanceIdentifier: t }) =>
                  (function vq(n, e, t, r, i) {
                    let a = r || n.options.databaseURL;
                    void 0 === a &&
                      (n.options.projectId ||
                        Ua(
                          "Can't determine Firebase Database URL. Be sure to include  a Project ID when calling firebase.initializeApp()."
                        ),
                      si(
                        "Using default host for project ",
                        n.options.projectId
                      ),
                      (a = `${n.options.projectId}-default-rtdb.firebaseio.com`));
                    let m,
                      v,
                      l = GN(a, i),
                      h = l.repoInfo;
                    typeof process < "u" &&
                      process.env &&
                      (v = process.env.FIREBASE_DATABASE_EMULATOR_HOST),
                      v
                        ? ((m = !0),
                          (a = `http://${v}?ns=${h.namespace}`),
                          (l = GN(a, i)),
                          (h = l.repoInfo))
                        : (m = !l.repoInfo.secure);
                    const b =
                      i && m ? new Nw(Nw.OWNER) : new CW(n.name, n.options, e);
                    TU("Invalid Firebase Database URL", l),
                      vn(l.path) ||
                        Ua(
                          "Database URL must point to the root of a Firebase Database (not including a child path)."
                        );
                    const D = (function wq(n, e, t, r) {
                      let i = WN[e.name];
                      i || ((i = {}), (WN[e.name] = i));
                      let a = i[n.toURLString()];
                      return (
                        a &&
                          Ua(
                            "Database initialized multiple times. Please make sure the format of the database URL matches with each database() call."
                          ),
                        (a = new $3(n, !1, t, r)),
                        (i[n.toURLString()] = a),
                        a
                      );
                    })(h, n, b, new IW(n.name, t));
                    return new Cq(D, n);
                  })(
                    e.getProvider("app").getImmediate(),
                    e.getProvider("auth-internal"),
                    e.getProvider("app-check-internal"),
                    t
                  ),
                "PUBLIC"
              ).setMultipleInstances(!0)
            ),
            (0, wn.registerVersion)(GL, "0.13.3", n),
            (0, wn.registerVersion)(GL, "0.13.3", "esm2017");
        })();
      class zN {
        constructor(e) {
          return e;
        }
      }
      const zU = "database",
        qN = new f.OlP("angularfire2.database-instances");
      function Mq(n) {
        return (e, t) => {
          const r = e.runOutsideAngular(() => n(t));
          return new zN(r);
        };
      }
      const xq = {
          provide: class Aq {
            constructor() {
              return (0, ot.vb)(zU);
            }
          },
          deps: [[new f.FiY(), qN]],
        },
        Nq = {
          provide: zN,
          useFactory: function Rq(n, e) {
            const t = (0, ot.JM)(zU, n, e);
            return t && new zN(t);
          },
          deps: [[new f.FiY(), qN], ki],
        };
      let Pq = (() => {
        class n {
          constructor() {
            (0, gr.KN)("angularfire", ot.q4.full, "rtdb");
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = f.oAB({ type: n })),
          (n.ɵinj = f.cJS({ providers: [Nq, xq] })),
          n
        );
      })();
      function Oq(n, ...e) {
        return {
          ngModule: Pq,
          providers: [
            {
              provide: qN,
              useFactory: Mq(n),
              multi: !0,
              deps: [
                f.R0b,
                f.zs3,
                ot.HU,
                ro,
                [new f.FiY(), rc],
                [new f.FiY(), xs],
                ...e,
              ],
            },
          ],
        };
      }
      const kq = (0, ot.u3)(bq, !0);
      class KN {
        constructor(e) {
          return e;
        }
      }
      const qU = "firestore",
        ZN = new f.OlP("angularfire2.firestore-instances");
      function Vq(n) {
        return (e, t) => {
          const r = e.runOutsideAngular(() => n(t));
          return new KN(r);
        };
      }
      const Uq = {
          provide: class Fq {
            constructor() {
              return (0, ot.vb)(qU);
            }
          },
          deps: [[new f.FiY(), ZN]],
        },
        Bq = {
          provide: KN,
          useFactory: function Lq(n, e) {
            const t = (0, ot.JM)(qU, n, e);
            return t && new KN(t);
          },
          deps: [[new f.FiY(), ZN], ki],
        };
      let jq = (() => {
        class n {
          constructor() {
            (0, gr.KN)("angularfire", ot.q4.full, "fst");
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = f.oAB({ type: n })),
          (n.ɵinj = f.cJS({ providers: [Bq, Uq] })),
          n
        );
      })();
      function $q(n, ...e) {
        return {
          ngModule: jq,
          providers: [
            {
              provide: ZN,
              useFactory: Vq(n),
              multi: !0,
              deps: [
                f.R0b,
                f.zs3,
                ot.HU,
                ro,
                [new f.FiY(), rc],
                [new f.FiY(), xs],
                ...e,
              ],
            },
          ],
        };
      }
      const Hq = (0, ot.u3)(uH, !0),
        QN = "functions";
      class Kq {
        constructor(e, t, r) {
          (this.auth = null),
            (this.messaging = null),
            (this.appCheck = null),
            (this.auth = e.getImmediate({ optional: !0 })),
            (this.messaging = t.getImmediate({ optional: !0 })),
            this.auth ||
              e.get().then(
                (i) => (this.auth = i),
                () => {}
              ),
            this.messaging ||
              t.get().then(
                (i) => (this.messaging = i),
                () => {}
              ),
            this.appCheck ||
              r.get().then(
                (i) => (this.appCheck = i),
                () => {}
              );
        }
        getAuthToken() {
          var e = this;
          return (0, Te.Z)(function* () {
            if (e.auth)
              try {
                return (yield e.auth.getToken())?.accessToken;
              } catch {
                return;
              }
          })();
        }
        getMessagingToken() {
          var e = this;
          return (0, Te.Z)(function* () {
            if (
              e.messaging &&
              "Notification" in self &&
              "granted" === Notification.permission
            )
              try {
                return yield e.messaging.getToken();
              } catch {
                return;
              }
          })();
        }
        getAppCheckToken() {
          var e = this;
          return (0, Te.Z)(function* () {
            if (e.appCheck) {
              const t = yield e.appCheck.getToken();
              return t.error ? null : t.token;
            }
            return null;
          })();
        }
        getContext() {
          var e = this;
          return (0, Te.Z)(function* () {
            return {
              authToken: yield e.getAuthToken(),
              messagingToken: yield e.getMessagingToken(),
              appCheckToken: yield e.getAppCheckToken(),
            };
          })();
        }
      }
      const JN = "us-central1";
      class Yq {
        constructor(e, t, r, i, a = JN, l) {
          (this.app = e),
            (this.fetchImpl = l),
            (this.emulatorOrigin = null),
            (this.contextProvider = new Kq(t, r, i)),
            (this.cancelAllRequests = new Promise((h) => {
              this.deleteService = () => Promise.resolve(h());
            }));
          try {
            const h = new URL(a);
            (this.customDomain = h.origin), (this.region = JN);
          } catch {
            (this.customDomain = null), (this.region = a);
          }
        }
        _delete() {
          return this.deleteService();
        }
        _url(e) {
          const t = this.app.options.projectId;
          return null !== this.emulatorOrigin
            ? `${this.emulatorOrigin}/${t}/${this.region}/${e}`
            : null !== this.customDomain
            ? `${this.customDomain}/${e}`
            : `https://${this.region}-${t}.cloudfunctions.net/${e}`;
        }
      }
      const QU = "@firebase/functions";
      function o6(n = (0, wn.getApp)(), e = JN) {
        return (0, wn._getProvider)((0, ee.m9)(n), QN).getImmediate({
          identifier: e,
        });
      }
      !(function s6(n, e) {
        (0, wn._registerComponent)(
          new Fi.wA(
            QN,
            (r, { instanceIdentifier: i }) => {
              const a = r.getProvider("app").getImmediate(),
                l = r.getProvider("auth-internal"),
                h = r.getProvider("messaging-internal"),
                m = r.getProvider("app-check-internal");
              return new Yq(a, l, h, m, i, n);
            },
            "PUBLIC"
          ).setMultipleInstances(!0)
        ),
          (0, wn.registerVersion)(QU, "0.8.4", e),
          (0, wn.registerVersion)(QU, "0.8.4", "esm2017");
      })(fetch.bind(self));
      class tP {
        constructor(e) {
          return e;
        }
      }
      const XU = "functions",
        nP = new f.OlP("angularfire2.functions-instances");
      function l6(n) {
        return (e, t) => {
          const r = e.runOutsideAngular(() => n(t));
          return new tP(r);
        };
      }
      const c6 = {
          provide: class a6 {
            constructor() {
              return (0, ot.vb)(XU);
            }
          },
          deps: [[new f.FiY(), nP]],
        },
        d6 = {
          provide: tP,
          useFactory: function u6(n, e) {
            const t = (0, ot.JM)(XU, n, e);
            return t && new tP(t);
          },
          deps: [[new f.FiY(), nP], ki],
        };
      let h6 = (() => {
        class n {
          constructor() {
            (0, gr.KN)("angularfire", ot.q4.full, "fn");
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = f.oAB({ type: n })),
          (n.ɵinj = f.cJS({ providers: [d6, c6] })),
          n
        );
      })();
      function f6(n, ...e) {
        return {
          ngModule: h6,
          providers: [
            {
              provide: nP,
              useFactory: l6(n),
              multi: !0,
              deps: [
                f.R0b,
                f.zs3,
                ot.HU,
                ro,
                [new f.FiY(), rc],
                [new f.FiY(), xs],
                ...e,
              ],
            },
          ],
        };
      }
      const p6 = (0, ot.u3)(o6, !0);
      var g6 = M(2375);
      class rP {
        constructor(e) {
          return e;
        }
      }
      const eB = "messaging",
        iP = new f.OlP("angularfire2.messaging-instances");
      function y6(n) {
        return (e, t) => {
          if (!ot.n1.sync()) return null;
          const r = e.runOutsideAngular(() => n(t));
          return new rP(r);
        };
      }
      const v6 = {
          provide: class m6 {
            constructor() {
              return (0, ot.vb)(eB);
            }
          },
          deps: [[new f.FiY(), iP]],
        },
        E6 = {
          provide: rP,
          useFactory: function _6(n, e) {
            if (!ot.n1.sync()) return null;
            const t = (0, ot.JM)(eB, n, e);
            return t && new rP(t);
          },
          deps: [[new f.FiY(), iP], ki],
        };
      let w6 = (() => {
        class n {
          constructor() {
            (0, gr.KN)("angularfire", ot.q4.full, "fcm");
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = f.oAB({ type: n })),
          (n.ɵinj = f.cJS({
            providers: [
              E6,
              v6,
              { provide: f.ip1, useValue: ot.n1.async, multi: !0 },
            ],
          })),
          n
        );
      })();
      function I6(n, ...e) {
        return {
          ngModule: w6,
          providers: [
            {
              provide: iP,
              useFactory: y6(n),
              multi: !0,
              deps: [f.R0b, f.zs3, ot.HU, ro, ...e],
            },
          ],
        };
      }
      const C6 = (0, ot.u3)(g6.KL, !0);
      M(2833);
      const tB = "@firebase/performance",
        sP = "0.5.12",
        oP = "FB-PERF-TRACE-MEASURE",
        aB = "@firebase/performance/config",
        uB = "@firebase/performance/configexpire",
        lB = "Performance",
        Ci = new ee.LL("performance", lB, {
          "trace started": "Trace {$traceName} was started before.",
          "trace stopped": "Trace {$traceName} is not running.",
          "nonpositive trace startTime":
            "Trace {$traceName} startTime should be positive.",
          "nonpositive trace duration":
            "Trace {$traceName} duration should be positive.",
          "no window": "Window is not available.",
          "no app id": "App id is not available.",
          "no project id": "Project id is not available.",
          "no api key": "Api key is not available.",
          "invalid cc log": "Attempted to queue invalid cc event",
          "FB not default":
            "Performance can only start when Firebase app instance is the default one.",
          "RC response not ok": "RC response is not ok",
          "invalid attribute name":
            "Attribute name {$attributeName} is invalid.",
          "invalid attribute value":
            "Attribute value {$attributeValue} is invalid.",
          "invalid custom metric name":
            "Custom metric name {$customMetricName} is invalid",
          "invalid String merger input":
            "Input for String merger is invalid, contact support team to resolve.",
          "already initialized":
            "initializePerformance() has already been called with different options. To avoid this error, call initializePerformance() with the same options as when it was originally called, or call getPerformance() to return the already initialized instance.",
        }),
        Ga = new Li.Yd(lB);
      let aP, cB, dB, lP;
      Ga.logLevel = Li.in.INFO;
      class ai {
        constructor(e) {
          if (((this.window = e), !e)) throw Ci.create("no window");
          (this.performance = e.performance),
            (this.PerformanceObserver = e.PerformanceObserver),
            (this.windowLocation = e.location),
            (this.navigator = e.navigator),
            (this.document = e.document),
            this.navigator &&
              this.navigator.cookieEnabled &&
              (this.localStorage = e.localStorage),
            e.perfMetrics &&
              e.perfMetrics.onFirstInputDelay &&
              (this.onFirstInputDelay = e.perfMetrics.onFirstInputDelay);
        }
        getUrl() {
          return this.windowLocation.href.split("?")[0];
        }
        mark(e) {
          !this.performance ||
            !this.performance.mark ||
            this.performance.mark(e);
        }
        measure(e, t, r) {
          !this.performance ||
            !this.performance.measure ||
            this.performance.measure(e, t, r);
        }
        getEntriesByType(e) {
          return this.performance && this.performance.getEntriesByType
            ? this.performance.getEntriesByType(e)
            : [];
        }
        getEntriesByName(e) {
          return this.performance && this.performance.getEntriesByName
            ? this.performance.getEntriesByName(e)
            : [];
        }
        getTimeOrigin() {
          return (
            this.performance &&
            (this.performance.timeOrigin ||
              this.performance.timing.navigationStart)
          );
        }
        requiredApisAvailable() {
          return fetch && Promise && (0, ee.zI)()
            ? !!(0, ee.hl)() ||
                (Ga.info("IndexedDB is not supported by current browswer"), !1)
            : (Ga.info(
                "Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled."
              ),
              !1);
        }
        setupObserver(e, t) {
          this.PerformanceObserver &&
            new this.PerformanceObserver((i) => {
              for (const a of i.getEntries()) t(a);
            }).observe({ entryTypes: [e] });
        }
        static getInstance() {
          return void 0 === aP && (aP = new ai(cB)), aP;
        }
      }
      function uP() {
        return dB;
      }
      function hB(n, e) {
        const t = n.length - e.length;
        if (t < 0 || t > 1) throw Ci.create("invalid String merger input");
        const r = [];
        for (let i = 0; i < n.length; i++)
          r.push(n.charAt(i)), e.length > i && r.push(e.charAt(i));
        return r.join("");
      }
      class Ls {
        constructor() {
          (this.instrumentationEnabled = !0),
            (this.dataCollectionEnabled = !0),
            (this.loggingEnabled = !1),
            (this.tracesSamplingRate = 1),
            (this.networkRequestsSamplingRate = 1),
            (this.logEndPointUrl =
              "https://firebaselogging.googleapis.com/v0cc/log?format=json_proto"),
            (this.flTransportEndpointUrl = hB(
              "hts/frbslgigp.ogepscmv/ieo/eaylg",
              "tp:/ieaeogn-agolai.o/1frlglgc/o"
            )),
            (this.transportKey = hB(
              "AzSC8r6ReiGqFMyfvgow",
              "Iayx0u-XT3vksVM-pIV"
            )),
            (this.logSource = 462),
            (this.logTraceAfterSampling = !1),
            (this.logNetworkAfterSampling = !1),
            (this.configTimeToLive = 12);
        }
        getFlTransportFullUrl() {
          return this.flTransportEndpointUrl.concat("?key=", this.transportKey);
        }
        static getInstance() {
          return void 0 === lP && (lP = new Ls()), lP;
        }
      }
      var Pf = (() => (
        (function (n) {
          (n[(n.UNKNOWN = 0)] = "UNKNOWN"),
            (n[(n.VISIBLE = 1)] = "VISIBLE"),
            (n[(n.HIDDEN = 2)] = "HIDDEN");
        })(Pf || (Pf = {})),
        Pf
      ))();
      const x6 = ["firebase_", "google_", "ga_"],
        N6 = new RegExp("^[a-zA-Z]\\w*$");
      function k6() {
        const n = ai.getInstance().navigator;
        return "serviceWorker" in n ? (n.serviceWorker.controller ? 2 : 3) : 1;
      }
      function fB() {
        switch (ai.getInstance().document.visibilityState) {
          case "visible":
            return Pf.VISIBLE;
          case "hidden":
            return Pf.HIDDEN;
          default:
            return Pf.UNKNOWN;
        }
      }
      function F6() {
        const e = ai.getInstance().navigator.connection;
        switch (e && e.effectiveType) {
          case "slow-2g":
            return 1;
          case "2g":
            return 2;
          case "3g":
            return 3;
          case "4g":
            return 4;
          default:
            return 0;
        }
      }
      function pB(n) {
        var e;
        const t = null === (e = n.options) || void 0 === e ? void 0 : e.appId;
        if (!t) throw Ci.create("no app id");
        return t;
      }
      const Ko = { loggingEnabled: !0 };
      const z6 = "Could not fetch config, will use default configs";
      function gB(n) {
        if (!n) return n;
        const e = Ls.getInstance(),
          t = n.entries || {};
        return (
          (e.loggingEnabled =
            void 0 !== t.fpr_enabled
              ? "true" === String(t.fpr_enabled)
              : Ko.loggingEnabled),
          t.fpr_log_source
            ? (e.logSource = Number(t.fpr_log_source))
            : Ko.logSource && (e.logSource = Ko.logSource),
          t.fpr_log_endpoint_url
            ? (e.logEndPointUrl = t.fpr_log_endpoint_url)
            : Ko.logEndPointUrl && (e.logEndPointUrl = Ko.logEndPointUrl),
          t.fpr_log_transport_key
            ? (e.transportKey = t.fpr_log_transport_key)
            : Ko.transportKey && (e.transportKey = Ko.transportKey),
          void 0 !== t.fpr_vc_network_request_sampling_rate
            ? (e.networkRequestsSamplingRate = Number(
                t.fpr_vc_network_request_sampling_rate
              ))
            : void 0 !== Ko.networkRequestsSamplingRate &&
              (e.networkRequestsSamplingRate = Ko.networkRequestsSamplingRate),
          void 0 !== t.fpr_vc_trace_sampling_rate
            ? (e.tracesSamplingRate = Number(t.fpr_vc_trace_sampling_rate))
            : void 0 !== Ko.tracesSamplingRate &&
              (e.tracesSamplingRate = Ko.tracesSamplingRate),
          (e.logTraceAfterSampling = mB(e.tracesSamplingRate)),
          (e.logNetworkAfterSampling = mB(e.networkRequestsSamplingRate)),
          n
        );
      }
      function mB(n) {
        return Math.random() <= n;
      }
      let dP,
        cP = 1;
      function _B(n) {
        return (
          (cP = 2),
          (dP =
            dP ||
            (function Y6(n) {
              return (function Q6() {
                const n = ai.getInstance().document;
                return new Promise((e) => {
                  if (n && "complete" !== n.readyState) {
                    const t = () => {
                      "complete" === n.readyState &&
                        (n.removeEventListener("readystatechange", t), e());
                    };
                    n.addEventListener("readystatechange", t);
                  } else e();
                });
              })()
                .then(() =>
                  (function R6(n) {
                    const e = n.getId();
                    return (
                      e.then((t) => {
                        dB = t;
                      }),
                      e
                    );
                  })(n.installations)
                )
                .then((e) =>
                  (function H6(n, e) {
                    const t = (function G6() {
                      const n = ai.getInstance().localStorage;
                      if (!n) return;
                      const e = n.getItem(uB);
                      if (
                        !e ||
                        !(function K6(n) {
                          return Number(n) > Date.now();
                        })(e)
                      )
                        return;
                      const t = n.getItem(aB);
                      if (t)
                        try {
                          return JSON.parse(t);
                        } catch {
                          return;
                        }
                    })();
                    return t
                      ? (gB(t), Promise.resolve())
                      : (function q6(n, e) {
                          return (function M6(n) {
                            const e = n.getToken();
                            return e.then((t) => {}), e;
                          })(n.installations)
                            .then((t) => {
                              const r = (function U6(n) {
                                  var e;
                                  const t =
                                    null === (e = n.options) || void 0 === e
                                      ? void 0
                                      : e.projectId;
                                  if (!t) throw Ci.create("no project id");
                                  return t;
                                })(n.app),
                                i = (function B6(n) {
                                  var e;
                                  const t =
                                    null === (e = n.options) || void 0 === e
                                      ? void 0
                                      : e.apiKey;
                                  if (!t) throw Ci.create("no api key");
                                  return t;
                                })(n.app),
                                l = new Request(
                                  `https://firebaseremoteconfig.googleapis.com/v1/projects/${r}/namespaces/fireperf:fetch?key=${i}`,
                                  {
                                    method: "POST",
                                    headers: {
                                      Authorization: `FIREBASE_INSTALLATIONS_AUTH ${t}`,
                                    },
                                    body: JSON.stringify({
                                      app_instance_id: e,
                                      app_instance_id_token: t,
                                      app_id: pB(n.app),
                                      app_version: "0.5.12",
                                      sdk_version: "0.0.1",
                                    }),
                                  }
                                );
                              return fetch(l).then((h) => {
                                if (h.ok) return h.json();
                                throw Ci.create("RC response not ok");
                              });
                            })
                            .catch(() => {
                              Ga.info(z6);
                            });
                        })(n, e)
                          .then(gB)
                          .then(
                            (r) =>
                              (function W6(n) {
                                const e = ai.getInstance().localStorage;
                                !n ||
                                  !e ||
                                  (e.setItem(aB, JSON.stringify(n)),
                                  e.setItem(
                                    uB,
                                    String(
                                      Date.now() +
                                        60 *
                                          Ls.getInstance().configTimeToLive *
                                          60 *
                                          1e3
                                    )
                                  ));
                              })(r),
                            () => {}
                          );
                  })(n, e)
                )
                .then(
                  () => yB(),
                  () => yB()
                );
            })(n)),
          dP
        );
      }
      function yB() {
        cP = 3;
      }
      let fP,
        zD = 3,
        Qc = [],
        EB = !1;
      function qD(n) {
        setTimeout(() => {
          if (0 !== zD) {
            if (!Qc.length) return qD(1e4);
            !(function t4() {
              const n = Qc.splice(0, 1e3),
                e = n.map((r) => ({
                  source_extension_json_proto3: r.message,
                  event_time_ms: String(r.eventTime),
                }));
              (function n4(n, e) {
                return (function r4(n) {
                  const e = Ls.getInstance().getFlTransportFullUrl();
                  return fetch(e, { method: "POST", body: JSON.stringify(n) });
                })(n)
                  .then(
                    (t) => (
                      t.ok || Ga.info("Call to Firebase backend failed."),
                      t.json()
                    )
                  )
                  .then((t) => {
                    const r = Number(t.nextRequestWaitMillis);
                    let i = 1e4;
                    isNaN(r) || (i = Math.max(r, i));
                    const a = t.logResponseDetails;
                    Array.isArray(a) &&
                      a.length > 0 &&
                      "RETRY_REQUEST_LATER" === a[0].responseAction &&
                      ((Qc = [...e, ...Qc]),
                      Ga.info("Retry transport request later.")),
                      (zD = 3),
                      qD(i);
                  });
              })(
                {
                  request_time_ms: String(Date.now()),
                  client_info: { client_type: 1, js_client_info: {} },
                  log_source: Ls.getInstance().logSource,
                  log_event: e,
                },
                n
              ).catch(() => {
                (Qc = [...n, ...Qc]),
                  zD--,
                  Ga.info(`Tries left: ${zD}.`),
                  qD(1e4);
              });
            })();
          }
        }, n);
      }
      function wB(n, e) {
        fP ||
          (fP = (function s4(n) {
            return (...e) => {
              !(function i4(n) {
                if (!n.eventTime || !n.message)
                  throw Ci.create("invalid cc log");
                Qc = [...Qc, n];
              })({ message: n(...e), eventTime: Date.now() });
            };
          })(a4)),
          fP(n, e);
      }
      function KD(n) {
        const e = Ls.getInstance();
        (!e.instrumentationEnabled && n.isAuto) ||
          (!e.dataCollectionEnabled && !n.isAuto) ||
          !ai.getInstance().requiredApisAvailable() ||
          (n.isAuto && fB() !== Pf.VISIBLE) ||
          ((function Z6() {
            return 3 === cP;
          })()
            ? pP(n)
            : _B(n.performanceController).then(
                () => pP(n),
                () => pP(n)
              ));
      }
      function pP(n) {
        if (!uP()) return;
        const e = Ls.getInstance();
        !e.loggingEnabled ||
          !e.logTraceAfterSampling ||
          setTimeout(() => wB(n, 1), 0);
      }
      function a4(n, e) {
        return 0 === e
          ? (function u4(n) {
              const e = {
                  url: n.url,
                  http_method: n.httpMethod || 0,
                  http_response_code: 200,
                  response_payload_bytes: n.responsePayloadBytes,
                  client_start_time_us: n.startTimeUs,
                  time_to_response_initiated_us: n.timeToResponseInitiatedUs,
                  time_to_response_completed_us: n.timeToResponseCompletedUs,
                },
                t = {
                  application_info: IB(n.performanceController.app),
                  network_request_metric: e,
                };
              return JSON.stringify(t);
            })(n)
          : (function l4(n) {
              const e = {
                name: n.name,
                is_auto: n.isAuto,
                client_start_time_us: n.startTimeUs,
                duration_us: n.durationUs,
              };
              0 !== Object.keys(n.counters).length && (e.counters = n.counters);
              const t = n.getAttributes();
              0 !== Object.keys(t).length && (e.custom_attributes = t);
              const r = {
                application_info: IB(n.performanceController.app),
                trace_metric: e,
              };
              return JSON.stringify(r);
            })(n);
      }
      function IB(n) {
        return {
          google_app_id: pB(n),
          app_instance_id: uP(),
          web_app_info: {
            sdk_version: "0.5.12",
            page_url: ai.getInstance().getUrl(),
            service_worker_status: k6(),
            visibility_state: fB(),
            effective_connection_type: F6(),
          },
          application_process_state: 0,
        };
      }
      const h4 = ["_fp", "_fcp", "_fid"];
      class Jc {
        constructor(e, t, r = !1, i) {
          (this.performanceController = e),
            (this.name = t),
            (this.isAuto = r),
            (this.state = 1),
            (this.customAttributes = {}),
            (this.counters = {}),
            (this.api = ai.getInstance()),
            (this.randomId = Math.floor(1e6 * Math.random())),
            this.isAuto ||
              ((this.traceStartMark = `FB-PERF-TRACE-START-${this.randomId}-${this.name}`),
              (this.traceStopMark = `FB-PERF-TRACE-STOP-${this.randomId}-${this.name}`),
              (this.traceMeasure = i || `${oP}-${this.randomId}-${this.name}`),
              i && this.calculateTraceMetrics());
        }
        start() {
          if (1 !== this.state)
            throw Ci.create("trace started", { traceName: this.name });
          this.api.mark(this.traceStartMark), (this.state = 2);
        }
        stop() {
          if (2 !== this.state)
            throw Ci.create("trace stopped", { traceName: this.name });
          (this.state = 3),
            this.api.mark(this.traceStopMark),
            this.api.measure(
              this.traceMeasure,
              this.traceStartMark,
              this.traceStopMark
            ),
            this.calculateTraceMetrics(),
            KD(this);
        }
        record(e, t, r) {
          if (e <= 0)
            throw Ci.create("nonpositive trace startTime", {
              traceName: this.name,
            });
          if (t <= 0)
            throw Ci.create("nonpositive trace duration", {
              traceName: this.name,
            });
          if (
            ((this.durationUs = Math.floor(1e3 * t)),
            (this.startTimeUs = Math.floor(1e3 * e)),
            r &&
              r.attributes &&
              (this.customAttributes = Object.assign({}, r.attributes)),
            r && r.metrics)
          )
            for (const i of Object.keys(r.metrics))
              isNaN(Number(r.metrics[i])) ||
                (this.counters[i] = Math.floor(Number(r.metrics[i])));
          KD(this);
        }
        incrementMetric(e, t = 1) {
          this.putMetric(
            e,
            void 0 === this.counters[e] ? t : this.counters[e] + t
          );
        }
        putMetric(e, t) {
          if (
            !(function f4(n, e) {
              return (
                !(0 === n.length || n.length > 100) &&
                ((e && e.startsWith("_wt_") && h4.indexOf(n) > -1) ||
                  !n.startsWith("_"))
              );
            })(e, this.name)
          )
            throw Ci.create("invalid custom metric name", {
              customMetricName: e,
            });
          this.counters[e] = (function p4(n) {
            const e = Math.floor(n);
            return (
              e < n &&
                Ga.info(
                  `Metric value should be an Integer, setting the value as : ${e}.`
                ),
              e
            );
          })(t ?? 0);
        }
        getMetric(e) {
          return this.counters[e] || 0;
        }
        putAttribute(e, t) {
          const r = (function L6(n) {
              return !(
                0 === n.length ||
                n.length > 40 ||
                x6.some((t) => n.startsWith(t)) ||
                !n.match(N6)
              );
            })(e),
            i = (function V6(n) {
              return 0 !== n.length && n.length <= 100;
            })(t);
          if (r && i) this.customAttributes[e] = t;
          else {
            if (!r)
              throw Ci.create("invalid attribute name", { attributeName: e });
            if (!i)
              throw Ci.create("invalid attribute value", { attributeValue: t });
          }
        }
        getAttribute(e) {
          return this.customAttributes[e];
        }
        removeAttribute(e) {
          void 0 !== this.customAttributes[e] &&
            delete this.customAttributes[e];
        }
        getAttributes() {
          return Object.assign({}, this.customAttributes);
        }
        setStartTime(e) {
          this.startTimeUs = e;
        }
        setDuration(e) {
          this.durationUs = e;
        }
        calculateTraceMetrics() {
          const e = this.api.getEntriesByName(this.traceMeasure),
            t = e && e[0];
          t &&
            ((this.durationUs = Math.floor(1e3 * t.duration)),
            (this.startTimeUs = Math.floor(
              1e3 * (t.startTime + this.api.getTimeOrigin())
            )));
        }
        static createOobTrace(e, t, r, i) {
          const a = ai.getInstance().getUrl();
          if (!a) return;
          const l = new Jc(e, "_wt_" + a, !0),
            h = Math.floor(1e3 * ai.getInstance().getTimeOrigin());
          if (
            (l.setStartTime(h),
            t &&
              t[0] &&
              (l.setDuration(Math.floor(1e3 * t[0].duration)),
              l.putMetric(
                "domInteractive",
                Math.floor(1e3 * t[0].domInteractive)
              ),
              l.putMetric(
                "domContentLoadedEventEnd",
                Math.floor(1e3 * t[0].domContentLoadedEventEnd)
              ),
              l.putMetric("loadEventEnd", Math.floor(1e3 * t[0].loadEventEnd))),
            r)
          ) {
            const b = r.find((R) => "first-paint" === R.name);
            b &&
              b.startTime &&
              l.putMetric("_fp", Math.floor(1e3 * b.startTime));
            const D = r.find((R) => "first-contentful-paint" === R.name);
            D &&
              D.startTime &&
              l.putMetric("_fcp", Math.floor(1e3 * D.startTime)),
              i && l.putMetric("_fid", Math.floor(1e3 * i));
          }
          KD(l);
        }
        static createUserTimingTrace(e, t) {
          KD(new Jc(e, t, !1, t));
        }
      }
      function CB(n, e) {
        const t = e;
        if (!t || void 0 === t.responseStart) return;
        const r = ai.getInstance().getTimeOrigin(),
          i = Math.floor(1e3 * (t.startTime + r)),
          a = t.responseStart
            ? Math.floor(1e3 * (t.responseStart - t.startTime))
            : void 0,
          l = Math.floor(1e3 * (t.responseEnd - t.startTime));
        !(function o4(n) {
          const e = Ls.getInstance();
          if (!e.instrumentationEnabled) return;
          const t = n.url,
            r = e.logEndPointUrl.split("?")[0],
            i = e.flTransportEndpointUrl.split("?")[0];
          t === r ||
            t === i ||
            !e.loggingEnabled ||
            !e.logNetworkAfterSampling ||
            setTimeout(() => wB(n, 0), 0);
        })({
          performanceController: n,
          url: t.name && t.name.split("?")[0],
          responsePayloadBytes: t.transferSize,
          startTimeUs: i,
          timeToResponseInitiatedUs: a,
          timeToResponseCompletedUs: l,
        });
      }
      function bB(n) {
        !uP() ||
          (setTimeout(
            () =>
              (function _4(n) {
                const e = ai.getInstance(),
                  t = e.getEntriesByType("navigation"),
                  r = e.getEntriesByType("paint");
                if (e.onFirstInputDelay) {
                  let i = setTimeout(() => {
                    Jc.createOobTrace(n, t, r), (i = void 0);
                  }, 5e3);
                  e.onFirstInputDelay((a) => {
                    i && (clearTimeout(i), Jc.createOobTrace(n, t, r, a));
                  });
                } else Jc.createOobTrace(n, t, r);
              })(n),
            0
          ),
          setTimeout(
            () =>
              (function m4(n) {
                const e = ai.getInstance(),
                  t = e.getEntriesByType("resource");
                for (const r of t) CB(n, r);
                e.setupObserver("resource", (r) => CB(n, r));
              })(n),
            0
          ),
          setTimeout(
            () =>
              (function y4(n) {
                const e = ai.getInstance(),
                  t = e.getEntriesByType("measure");
                for (const r of t) DB(n, r);
                e.setupObserver("measure", (r) => DB(n, r));
              })(n),
            0
          ));
      }
      function DB(n, e) {
        const t = e.name;
        t.substring(0, oP.length) !== oP && Jc.createUserTimingTrace(n, t);
      }
      class v4 {
        constructor(e, t) {
          (this.app = e), (this.installations = t), (this.initialized = !1);
        }
        _init(e) {
          this.initialized ||
            (void 0 !== e?.dataCollectionEnabled &&
              (this.dataCollectionEnabled = e.dataCollectionEnabled),
            void 0 !== e?.instrumentationEnabled &&
              (this.instrumentationEnabled = e.instrumentationEnabled),
            ai.getInstance().requiredApisAvailable()
              ? (0, ee.eu)()
                  .then((t) => {
                    t &&
                      ((function e4() {
                        EB || (qD(5500), (EB = !0));
                      })(),
                      _B(this).then(
                        () => bB(this),
                        () => bB(this)
                      ),
                      (this.initialized = !0));
                  })
                  .catch((t) => {
                    Ga.info(`Environment doesn't support IndexedDB: ${t}`);
                  })
              : Ga.info(
                  'Firebase Performance cannot start if the browser does not support "Fetch" and "Promise", or cookies are disabled.'
                ));
        }
        set instrumentationEnabled(e) {
          Ls.getInstance().instrumentationEnabled = e;
        }
        get instrumentationEnabled() {
          return Ls.getInstance().instrumentationEnabled;
        }
        set dataCollectionEnabled(e) {
          Ls.getInstance().dataCollectionEnabled = e;
        }
        get dataCollectionEnabled() {
          return Ls.getInstance().dataCollectionEnabled;
        }
      }
      function w4(n = (0, wn.getApp)()) {
        return (
          (n = (0, ee.m9)(n)),
          (0, wn._getProvider)(n, "performance").getImmediate()
        );
      }
      const I4 = (n, { options: e }) => {
        const t = n.getProvider("app").getImmediate(),
          r = n.getProvider("installations-internal").getImmediate();
        if ("[DEFAULT]" !== t.name) throw Ci.create("FB not default");
        if (typeof window > "u") throw Ci.create("no window");
        !(function A6(n) {
          cB = n;
        })(window);
        const i = new v4(t, r);
        return i._init(e), i;
      };
      !(function C4() {
        (0, wn._registerComponent)(new Fi.wA("performance", I4, "PUBLIC")),
          (0, wn.registerVersion)(tB, sP),
          (0, wn.registerVersion)(tB, sP, "esm2017");
      })();
      class gP {
        constructor(e) {
          return e;
        }
      }
      const TB = "performance",
        mP = new f.OlP("angularfire2.performance-instances");
      function T4(n) {
        return (e, t, r) => {
          if (!tl(t)) return null;
          const i = e.runOutsideAngular(() => n(r));
          return new gP(i);
        };
      }
      const S4 = {
          provide: class b4 {
            constructor() {
              return (0, ot.vb)(TB);
            }
          },
          deps: [[new f.FiY(), mP]],
        },
        A4 = {
          provide: gP,
          useFactory: function D4(n, e, t) {
            if (!tl(t)) return null;
            const r = (0, ot.JM)(TB, n, e);
            return r && new gP(r);
          },
          deps: [[new f.FiY(), mP], ki, f.Lbi],
        };
      let R4 = (() => {
        class n {
          constructor() {
            (0, gr.KN)("angularfire", ot.q4.full, "perf");
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = f.oAB({ type: n })),
          (n.ɵinj = f.cJS({ providers: [A4, S4] })),
          n
        );
      })();
      function M4(n, ...e) {
        return {
          ngModule: R4,
          providers: [
            {
              provide: mP,
              useFactory: T4(n),
              multi: !0,
              deps: [f.R0b, f.Lbi, f.zs3, ot.HU, ro, ...e],
            },
          ],
        };
      }
      const x4 = (0, ot.u3)(w4, !0);
      var N4 = M(3226);
      class _P {
        constructor(e) {
          return e;
        }
      }
      const SB = "remote-config",
        yP = new f.OlP("angularfire2.remote-config-instances");
      function k4(n) {
        return (e, t) => {
          if (!ot._J.sync()) return null;
          const r = e.runOutsideAngular(() => n(t));
          return new _P(r);
        };
      }
      const F4 = {
          provide: class P4 {
            constructor() {
              return (0, ot.vb)(SB);
            }
          },
          deps: [[new f.FiY(), yP]],
        },
        L4 = {
          provide: _P,
          useFactory: function O4(n, e) {
            if (!ot._J.sync()) return null;
            const t = (0, ot.JM)(SB, n, e);
            return t && new _P(t);
          },
          deps: [[new f.FiY(), yP], ki],
        };
      let V4 = (() => {
        class n {
          constructor() {
            (0, gr.KN)("angularfire", ot.q4.full, "rc");
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = f.oAB({ type: n })),
          (n.ɵinj = f.cJS({
            providers: [
              L4,
              F4,
              { provide: f.ip1, useValue: ot._J.async, multi: !0 },
            ],
          })),
          n
        );
      })();
      function U4(n, ...e) {
        return {
          ngModule: V4,
          providers: [
            {
              provide: yP,
              useFactory: k4(n),
              multi: !0,
              deps: [f.R0b, f.zs3, ot.HU, ro, ...e],
            },
          ],
        };
      }
      const B4 = (0, ot.u3)(N4.sN, !0),
        AB = "firebasestorage.googleapis.com";
      class Cr extends ee.ZR {
        constructor(e, t) {
          super(vP(e), `Firebase Storage: ${t} (${vP(e)})`),
            (this.customData = { serverResponse: null }),
            (this._baseMessage = this.message),
            Object.setPrototypeOf(this, Cr.prototype);
        }
        _codeEquals(e) {
          return vP(e) === this.code;
        }
        get serverResponse() {
          return this.customData.serverResponse;
        }
        set serverResponse(e) {
          (this.customData.serverResponse = e),
            (this.message = this.customData.serverResponse
              ? `${this._baseMessage}\n${this.customData.serverResponse}`
              : this._baseMessage);
        }
      }
      function vP(n) {
        return "storage/" + n;
      }
      function wP(n) {
        return new Cr("invalid-argument", n);
      }
      function NB() {
        return new Cr("app-deleted", "The Firebase app was deleted.");
      }
      class zi {
        constructor(e, t) {
          (this.bucket = e), (this.path_ = t);
        }
        get path() {
          return this.path_;
        }
        get isRoot() {
          return 0 === this.path.length;
        }
        fullServerUrl() {
          const e = encodeURIComponent;
          return "/b/" + e(this.bucket) + "/o/" + e(this.path);
        }
        bucketOnlyServerUrl() {
          return "/b/" + encodeURIComponent(this.bucket) + "/o";
        }
        static makeFromBucketSpec(e, t) {
          let r;
          try {
            r = zi.makeFromUrl(e, t);
          } catch {
            return new zi(e, "");
          }
          if ("" === r.path) return r;
          throw (function Y4(n) {
            return new Cr(
              "invalid-default-bucket",
              "Invalid default bucket '" + n + "'."
            );
          })(e);
        }
        static makeFromUrl(e, t) {
          let r = null;
          const i = "([A-Za-z0-9.\\-_]+)",
            h = new RegExp("^gs://" + i + "(/(.*))?$", "i");
          function v(St) {
            St.path_ = decodeURIComponent(St.path);
          }
          const D = t.replace(/[.]/g, "\\."),
            Lt = [
              {
                regex: h,
                indices: { bucket: 1, path: 3 },
                postModify: function a(St) {
                  "/" === St.path.charAt(St.path.length - 1) &&
                    (St.path_ = St.path_.slice(0, -1));
                },
              },
              {
                regex: new RegExp(
                  `^https?://${D}/v[A-Za-z0-9_]+/b/${i}/o(/([^?#]*).*)?$`,
                  "i"
                ),
                indices: { bucket: 1, path: 3 },
                postModify: v,
              },
              {
                regex: new RegExp(
                  `^https?://${
                    t === AB
                      ? "(?:storage.googleapis.com|storage.cloud.google.com)"
                      : t
                  }/${i}/([^?#]*)`,
                  "i"
                ),
                indices: { bucket: 1, path: 2 },
                postModify: v,
              },
            ];
          for (let St = 0; St < Lt.length; St++) {
            const rn = Lt[St],
              Cn = rn.regex.exec(e);
            if (Cn) {
              let Qo = Cn[rn.indices.path];
              Qo || (Qo = ""),
                (r = new zi(Cn[rn.indices.bucket], Qo)),
                rn.postModify(r);
              break;
            }
          }
          if (null == r)
            throw (function Z4(n) {
              return new Cr("invalid-url", "Invalid URL '" + n + "'.");
            })(e);
          return r;
        }
      }
      class tK {
        constructor(e) {
          this.promise_ = Promise.reject(e);
        }
        getPromise() {
          return this.promise_;
        }
        cancel(e = !1) {}
      }
      function CP(n, e, t, r) {
        if (r < e)
          throw wP(`Invalid value for '${n}'. Expected ${e} or greater.`);
        if (r > t) throw wP(`Invalid value for '${n}'. Expected ${t} or less.`);
      }
      var Xc = (() => (
        (function (n) {
          (n[(n.NO_ERROR = 0)] = "NO_ERROR"),
            (n[(n.NETWORK_ERROR = 1)] = "NETWORK_ERROR"),
            (n[(n.ABORT = 2)] = "ABORT");
        })(Xc || (Xc = {})),
        Xc
      ))();
      class aK {
        constructor(e, t, r, i, a, l, h, m, v, b, D) {
          (this.url_ = e),
            (this.method_ = t),
            (this.headers_ = r),
            (this.body_ = i),
            (this.successCodes_ = a),
            (this.additionalRetryCodes_ = l),
            (this.callback_ = h),
            (this.errorCallback_ = m),
            (this.timeout_ = v),
            (this.progressCallback_ = b),
            (this.connectionFactory_ = D),
            (this.pendingConnection_ = null),
            (this.backoffId_ = null),
            (this.canceled_ = !1),
            (this.appDelete_ = !1),
            (this.promise_ = new Promise((R, F) => {
              (this.resolve_ = R), (this.reject_ = F), this.start_();
            }));
        }
        start_() {
          const t = (r, i) => {
            const a = this.resolve_,
              l = this.reject_,
              h = i.connection;
            if (i.wasSuccessCode)
              try {
                const m = this.callback_(h, h.getResponse());
                !(function iK(n) {
                  return void 0 !== n;
                })(m)
                  ? a()
                  : a(m);
              } catch (m) {
                l(m);
              }
            else if (null !== h) {
              const m = (function EP() {
                return new Cr(
                  "unknown",
                  "An unknown error occurred, please check the error payload for server response."
                );
              })();
              (m.serverResponse = h.getErrorText()),
                l(this.errorCallback_ ? this.errorCallback_(h, m) : m);
            } else
              l(
                i.canceled
                  ? this.appDelete_
                    ? NB()
                    : (function MB() {
                        return new Cr(
                          "canceled",
                          "User canceled the upload/download."
                        );
                      })()
                  : (function K4() {
                      return new Cr(
                        "retry-limit-exceeded",
                        "Max retry time for operation exceeded, please try again."
                      );
                    })()
              );
          };
          this.canceled_
            ? t(0, new YD(!1, null, !0))
            : (this.backoffId_ = (function nK(n, e, t) {
                let r = 1,
                  i = null,
                  a = null,
                  l = !1,
                  h = 0;
                function m() {
                  return 2 === h;
                }
                let v = !1;
                function b(...Ee) {
                  v || ((v = !0), e.apply(null, Ee));
                }
                function D(Ee) {
                  i = setTimeout(() => {
                    (i = null), n(F, m());
                  }, Ee);
                }
                function R() {
                  a && clearTimeout(a);
                }
                function F(Ee, ...dt) {
                  if (v) return void R();
                  if (Ee) return R(), void b.call(null, Ee, ...dt);
                  if (m() || l) return R(), void b.call(null, Ee, ...dt);
                  let Lt;
                  r < 64 && (r *= 2),
                    1 === h
                      ? ((h = 2), (Lt = 0))
                      : (Lt = 1e3 * (r + Math.random())),
                    D(Lt);
                }
                let B = !1;
                function le(Ee) {
                  B ||
                    ((B = !0),
                    R(),
                    !v &&
                      (null !== i
                        ? (Ee || (h = 2), clearTimeout(i), D(0))
                        : Ee || (h = 1)));
                }
                return (
                  D(0),
                  (a = setTimeout(() => {
                    (l = !0), le(!0);
                  }, t)),
                  le
                );
              })(
                (r, i) => {
                  if (i) return void r(!1, new YD(!1, null, !0));
                  const a = this.connectionFactory_();
                  this.pendingConnection_ = a;
                  const l = (h) => {
                    null !== this.progressCallback_ &&
                      this.progressCallback_(
                        h.loaded,
                        h.lengthComputable ? h.total : -1
                      );
                  };
                  null !== this.progressCallback_ &&
                    a.addUploadProgressListener(l),
                    a
                      .send(this.url_, this.method_, this.body_, this.headers_)
                      .then(() => {
                        null !== this.progressCallback_ &&
                          a.removeUploadProgressListener(l),
                          (this.pendingConnection_ = null);
                        const h = a.getErrorCode() === Xc.NO_ERROR,
                          m = a.getStatus();
                        if (!h || this.isRetryStatusCode_(m)) {
                          const b = a.getErrorCode() === Xc.ABORT;
                          return void r(!1, new YD(!1, null, b));
                        }
                        const v = -1 !== this.successCodes_.indexOf(m);
                        r(!0, new YD(v, a));
                      });
                },
                t,
                this.timeout_
              ));
        }
        getPromise() {
          return this.promise_;
        }
        cancel(e) {
          (this.canceled_ = !0),
            (this.appDelete_ = e || !1),
            null !== this.backoffId_ &&
              (function rK(n) {
                n(!1);
              })(this.backoffId_),
            null !== this.pendingConnection_ && this.pendingConnection_.abort();
        }
        isRetryStatusCode_(e) {
          const t = e >= 500 && e < 600,
            i = -1 !== [408, 429].indexOf(e),
            a = -1 !== this.additionalRetryCodes_.indexOf(e);
          return t || i || a;
        }
      }
      class YD {
        constructor(e, t, r) {
          (this.wasSuccessCode = e),
            (this.connection = t),
            (this.canceled = !!r);
        }
      }
      class Of {
        constructor(e, t) {
          (this._service = e),
            (this._location = t instanceof zi ? t : zi.makeFromUrl(t, e.host));
        }
        toString() {
          return "gs://" + this._location.bucket + "/" + this._location.path;
        }
        _newRef(e, t) {
          return new Of(e, t);
        }
        get root() {
          const e = new zi(this._location.bucket, "");
          return this._newRef(this._service, e);
        }
        get bucket() {
          return this._location.bucket;
        }
        get fullPath() {
          return this._location.path;
        }
        get name() {
          return (function UB(n) {
            const e = n.lastIndexOf("/", n.length - 2);
            return -1 === e ? n : n.slice(e + 1);
          })(this._location.path);
        }
        get storage() {
          return this._service;
        }
        get parent() {
          const e = (function wK(n) {
            if (0 === n.length) return null;
            const e = n.lastIndexOf("/");
            return -1 === e ? "" : n.slice(0, e);
          })(this._location.path);
          if (null === e) return null;
          const t = new zi(this._location.bucket, e);
          return new Of(this._service, t);
        }
        _throwIfRoot(e) {
          if ("" === this._location.path)
            throw (function eK(n) {
              return new Cr(
                "invalid-root-operation",
                "The operation '" +
                  n +
                  "' cannot be performed on a root reference, create a non-root reference using child, such as .child('file.png')."
              );
            })(e);
        }
      }
      function e2(n, e) {
        const t = e?.storageBucket;
        return null == t ? null : zi.makeFromBucketSpec(t, n);
      }
      class MP {
        constructor(e, t, r, i, a) {
          (this.app = e),
            (this._authProvider = t),
            (this._appCheckProvider = r),
            (this._url = i),
            (this._firebaseVersion = a),
            (this._bucket = null),
            (this._host = AB),
            (this._protocol = "https"),
            (this._appId = null),
            (this._deleted = !1),
            (this._maxOperationRetryTime = 12e4),
            (this._maxUploadRetryTime = 6e5),
            (this._requests = new Set()),
            (this._bucket =
              null != i
                ? zi.makeFromBucketSpec(i, this._host)
                : e2(this._host, this.app.options));
        }
        get host() {
          return this._host;
        }
        set host(e) {
          (this._host = e),
            (this._bucket =
              null != this._url
                ? zi.makeFromBucketSpec(this._url, e)
                : e2(e, this.app.options));
        }
        get maxUploadRetryTime() {
          return this._maxUploadRetryTime;
        }
        set maxUploadRetryTime(e) {
          CP("time", 0, Number.POSITIVE_INFINITY, e),
            (this._maxUploadRetryTime = e);
        }
        get maxOperationRetryTime() {
          return this._maxOperationRetryTime;
        }
        set maxOperationRetryTime(e) {
          CP("time", 0, Number.POSITIVE_INFINITY, e),
            (this._maxOperationRetryTime = e);
        }
        _getAuthToken() {
          var e = this;
          return (0, Te.Z)(function* () {
            if (e._overrideAuthToken) return e._overrideAuthToken;
            const t = e._authProvider.getImmediate({ optional: !0 });
            if (t) {
              const r = yield t.getToken();
              if (null !== r) return r.accessToken;
            }
            return null;
          })();
        }
        _getAppCheckToken() {
          var e = this;
          return (0, Te.Z)(function* () {
            const t = e._appCheckProvider.getImmediate({ optional: !0 });
            return t ? (yield t.getToken()).token : null;
          })();
        }
        _delete() {
          return (
            this._deleted ||
              ((this._deleted = !0),
              this._requests.forEach((e) => e.cancel()),
              this._requests.clear()),
            Promise.resolve()
          );
        }
        _makeStorageReference(e) {
          return new Of(this, e);
        }
        _makeRequest(e, t, r, i) {
          if (this._deleted) return new tK(NB());
          {
            const a = (function hK(n, e, t, r, i, a) {
              const l = (function OB(n) {
                  const e = encodeURIComponent;
                  let t = "?";
                  for (const r in n)
                    n.hasOwnProperty(r) &&
                      (t = t + (e(r) + "=") + e(n[r]) + "&");
                  return (t = t.slice(0, -1)), t;
                })(n.urlParams),
                h = n.url + l,
                m = Object.assign({}, n.headers);
              return (
                (function cK(n, e) {
                  e && (n["X-Firebase-GMPID"] = e);
                })(m, e),
                (function uK(n, e) {
                  null !== e &&
                    e.length > 0 &&
                    (n.Authorization = "Firebase " + e);
                })(m, t),
                (function lK(n, e) {
                  n["X-Firebase-Storage-Version"] =
                    "webjs/" + (e ?? "AppManager");
                })(m, a),
                (function dK(n, e) {
                  null !== e && (n["X-Firebase-AppCheck"] = e);
                })(m, r),
                new aK(
                  h,
                  n.method,
                  m,
                  n.body,
                  n.successCodes,
                  n.additionalRetryCodes,
                  n.handler,
                  n.errorHandler,
                  n.timeout,
                  n.progressCallback,
                  i
                )
              );
            })(e, this._appId, r, i, t, this._firebaseVersion);
            return (
              this._requests.add(a),
              a.getPromise().then(
                () => this._requests.delete(a),
                () => this._requests.delete(a)
              ),
              a
            );
          }
        }
        makeRequestWithTokens(e, t) {
          var r = this;
          return (0, Te.Z)(function* () {
            const [i, a] = yield Promise.all([
              r._getAuthToken(),
              r._getAppCheckToken(),
            ]);
            return r._makeRequest(e, t, i, a).getPromise();
          })();
        }
      }
      const t2 = "@firebase/storage",
        r2 = "storage";
      function o8(n = (0, wn.getApp)(), e) {
        return (
          (n = (0, ee.m9)(n)),
          (0, wn._getProvider)(n, r2).getImmediate({ identifier: e })
        );
      }
      function a8(n, { instanceIdentifier: e }) {
        const t = n.getProvider("app").getImmediate(),
          r = n.getProvider("auth-internal"),
          i = n.getProvider("app-check-internal");
        return new MP(t, r, i, e, wn.SDK_VERSION);
      }
      !(function u8() {
        (0, wn._registerComponent)(
          new Fi.wA(r2, a8, "PUBLIC").setMultipleInstances(!0)
        ),
          (0, wn.registerVersion)(t2, "0.9.9", ""),
          (0, wn.registerVersion)(t2, "0.9.9", "esm2017");
      })();
      class xP {
        constructor(e) {
          return e;
        }
      }
      const i2 = "storage",
        NP = new f.OlP("angularfire2.storage-instances");
      function d8(n) {
        return (e, t) => {
          const r = e.runOutsideAngular(() => n(t));
          return new xP(r);
        };
      }
      const h8 = {
          provide: class l8 {
            constructor() {
              return (0, ot.vb)(i2);
            }
          },
          deps: [[new f.FiY(), NP]],
        },
        f8 = {
          provide: xP,
          useFactory: function c8(n, e) {
            const t = (0, ot.JM)(i2, n, e);
            return t && new xP(t);
          },
          deps: [[new f.FiY(), NP], ki],
        };
      let p8 = (() => {
        class n {
          constructor() {
            (0, gr.KN)("angularfire", ot.q4.full, "gcs");
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = f.oAB({ type: n })),
          (n.ɵinj = f.cJS({ providers: [f8, h8] })),
          n
        );
      })();
      function g8(n, ...e) {
        return {
          ngModule: p8,
          providers: [
            {
              provide: NP,
              useFactory: d8(n),
              multi: !0,
              deps: [
                f.R0b,
                f.zs3,
                ot.HU,
                ro,
                [new f.FiY(), rc],
                [new f.FiY(), xs],
                ...e,
              ],
            },
          ],
        };
      }
      const m8 = (0, ot.u3)(o8, !0);
      let _8 = (() => {
        class n {}
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = f.oAB({ type: n, bootstrap: [JG] })),
          (n.ɵinj = f.cJS({
            providers: [Uv, Eg],
            imports: [
              qn,
              Wr.hO.initializeApp(Tw_firebase),
              kA,
              mG,
              bS,
              DI,
              ny.forRoot([
                { path: "", component: iW },
                { path: "products/:productId", component: oW },
                { path: "cart", component: uW },
                { path: "shipping", component: cW },
              ]),
              ss(() => ec(Tw_firebase)),
              MA(() => gA()),
              SC(() => RC()),
              Oq(() => kq()),
              $q(() => Hq()),
              f6(() => p6()),
              I6(() => C6()),
              M4(() => x4()),
              U4(() => B4()),
              g8(() => m8()),
            ],
          })),
          n
        );
      })();
      (0, f.G48)(),
        Yf()
          .bootstrapModule(_8)
          .catch((n) => console.error(n));
    },
    7982: (wt, Oe, M) => {
      M.d(Oe, {
        Gb: () => f.Gb,
        IH: () => f.IH,
        Iv: () => f.Iv,
        Kz: () => f.Kz,
      });
      var f = M(579);
    },
    5867: (wt, Oe, M) => {
      M.d(Oe, {
        C6: () => f.getApps,
        KN: () => f.registerVersion,
        Mq: () => f.getApp,
        ZF: () => f.initializeApp,
      });
      var f = M(9681);
      (0, f.registerVersion)("firebase", "9.9.1", "app");
    },
    127: (wt, Oe, M) => {
      M.d(Oe, { Z: () => f.Z });
      var f = M(3942);
      f.Z.registerVersion("firebase", "9.9.1", "app-compat");
    },
    5881: (wt, Oe, M) => {
      M.r(Oe);
      var f = M(5861),
        V = M(3942),
        P = M(6457),
        re = M(2090),
        ce = (M(9681), M(1877), M(4859));
      function he() {
        return window;
      }
      function H() {
        return (H = (0, f.Z)(function* (L, x, k) {
          var J;
          const { BuildInfo: Se } = he();
          (0, P.aq)(x.sessionId, "AuthEvent did not contain a session ID");
          const Qe = yield de(x.sessionId),
            we = {};
          return (
            (0, P.ar)()
              ? (we.ibi = Se.packageName)
              : (0, P.as)()
              ? (we.apn = Se.packageName)
              : (0, P.at)(L, "operation-not-supported-in-this-environment"),
            Se.displayName && (we.appDisplayName = Se.displayName),
            (we.sessionId = Qe),
            (0, P.au)(
              L,
              k,
              x.type,
              void 0,
              null !== (J = x.eventId) && void 0 !== J ? J : void 0,
              we
            )
          );
        })).apply(this, arguments);
      }
      function Be() {
        return (Be = (0, f.Z)(function* (L) {
          const { BuildInfo: x } = he(),
            k = {};
          (0, P.ar)()
            ? (k.iosBundleId = x.packageName)
            : (0, P.as)()
            ? (k.androidPackageName = x.packageName)
            : (0, P.at)(L, "operation-not-supported-in-this-environment"),
            yield (0, P.av)(L, k);
        })).apply(this, arguments);
      }
      function tt() {
        return (tt = (0, f.Z)(function* (L, x, k) {
          const { cordova: J } = he();
          let Se = () => {};
          try {
            yield new Promise((Qe, we) => {
              let Ze = null;
              function mt() {
                var At;
                Qe();
                const Dn =
                  null === (At = J.plugins.browsertab) || void 0 === At
                    ? void 0
                    : At.close;
                "function" == typeof Dn && Dn(),
                  "function" == typeof k?.close && k.close();
              }
              function qt() {
                Ze ||
                  (Ze = window.setTimeout(() => {
                    we((0, P.aw)(L, "redirect-cancelled-by-user"));
                  }, 2e3));
              }
              function Tn() {
                "visible" === document?.visibilityState && qt();
              }
              x.addPassiveListener(mt),
                document.addEventListener("resume", qt, !1),
                (0, P.as)() &&
                  document.addEventListener("visibilitychange", Tn, !1),
                (Se = () => {
                  x.removePassiveListener(mt),
                    document.removeEventListener("resume", qt, !1),
                    document.removeEventListener("visibilitychange", Tn, !1),
                    Ze && window.clearTimeout(Ze);
                });
            });
          } finally {
            Se();
          }
        })).apply(this, arguments);
      }
      function de(L) {
        return at.apply(this, arguments);
      }
      function at() {
        return (at = (0, f.Z)(function* (L) {
          const x = rt(L),
            k = yield crypto.subtle.digest("SHA-256", x);
          return Array.from(new Uint8Array(k))
            .map((Se) => Se.toString(16).padStart(2, "0"))
            .join("");
        })).apply(this, arguments);
      }
      function rt(L) {
        if (
          ((0, P.aq)(
            /[0-9a-zA-Z]+/.test(L),
            "Can only convert alpha-numeric strings"
          ),
          typeof TextEncoder < "u")
        )
          return new TextEncoder().encode(L);
        const x = new ArrayBuffer(L.length),
          k = new Uint8Array(x);
        for (let J = 0; J < L.length; J++) k[J] = L.charCodeAt(J);
        return k;
      }
      class Ne extends P.aA {
        constructor() {
          super(...arguments),
            (this.passiveListeners = new Set()),
            (this.initPromise = new Promise((x) => {
              this.resolveInialized = x;
            }));
        }
        addPassiveListener(x) {
          this.passiveListeners.add(x);
        }
        removePassiveListener(x) {
          this.passiveListeners.delete(x);
        }
        resetRedirect() {
          (this.queuedRedirectEvent = null),
            (this.hasHandledPotentialRedirect = !1);
        }
        onEvent(x) {
          return (
            this.resolveInialized(),
            this.passiveListeners.forEach((k) => k(x)),
            super.onEvent(x)
          );
        }
        initialized() {
          var x = this;
          return (0, f.Z)(function* () {
            yield x.initPromise;
          })();
        }
      }
      function te(L) {
        return ye.apply(this, arguments);
      }
      function ye() {
        return (ye = (0, f.Z)(function* (L) {
          const x = yield ne()._get(se(L));
          return x && (yield ne()._remove(se(L))), x;
        })).apply(this, arguments);
      }
      function X() {
        const L = [],
          x = "1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
        for (let k = 0; k < 20; k++) {
          const J = Math.floor(Math.random() * x.length);
          L.push(x.charAt(J));
        }
        return L.join("");
      }
      function ne() {
        return (0, P.ay)(P.b);
      }
      function se(L) {
        return (0, P.az)("authEvent", L.config.apiKey, L.name);
      }
      function $e(L) {
        if (!L?.includes("?")) return {};
        const [x, ...k] = L.split("?");
        return (0, re.zd)(k.join("?"));
      }
      function et() {
        return {
          type: "unknown",
          eventId: null,
          sessionId: null,
          urlResponse: null,
          postBody: null,
          tenantId: null,
          error: (0, P.aw)("no-auth-event"),
        };
      }
      function Nt() {
        var L;
        return (
          (null === (L = self?.location) || void 0 === L
            ? void 0
            : L.protocol) || null
        );
      }
      function lt(L = (0, re.z$)()) {
        return !(
          ("file:" !== Nt() && "ionic:" !== Nt() && "capacitor:" !== Nt()) ||
          !L.toLowerCase().match(/iphone|ipad|ipod|android/)
        );
      }
      function Mn() {
        try {
          const L = self.localStorage,
            x = P.aI();
          if (L)
            return (
              L.setItem(x, "1"),
              L.removeItem(x),
              !(function en(L = (0, re.z$)()) {
                return (
                  (function Zt() {
                    return (0, re.w1)() && 11 === document?.documentMode;
                  })() ||
                  (function $t(L = (0, re.z$)()) {
                    return /Edge\/\d+/.test(L);
                  })(L)
                );
              })() || (0, re.hl)()
            );
        } catch {
          return On() && (0, re.hl)();
        }
        return !1;
      }
      function On() {
        return (
          typeof global < "u" &&
          "WorkerGlobalScope" in global &&
          "importScripts" in global
        );
      }
      function xn() {
        return (
          ((function ze() {
            return "http:" === Nt() || "https:" === Nt();
          })() ||
            (0, re.ru)() ||
            lt()) &&
          !(function yt() {
            return (0, re.b$)() || (0, re.UG)();
          })() &&
          Mn() &&
          !On()
        );
      }
      function Yn() {
        return lt() && typeof document < "u";
      }
      function fe() {
        return (fe = (0, f.Z)(function* () {
          return (
            !!Yn() &&
            new Promise((L) => {
              const x = setTimeout(() => {
                L(!1);
              }, 1e3);
              document.addEventListener("deviceready", () => {
                clearTimeout(x), L(!0);
              });
            })
          );
        })).apply(this, arguments);
      }
      const Ke = { LOCAL: "local", NONE: "none", SESSION: "session" },
        ct = P.ax,
        Ut = "persistence";
      function Yt(L) {
        return En.apply(this, arguments);
      }
      function En() {
        return (En = (0, f.Z)(function* (L) {
          yield L._initializationPromise;
          const x = bt(),
            k = P.az(Ut, L.config.apiKey, L.name);
          x && x.setItem(k, L._getPersistence());
        })).apply(this, arguments);
      }
      function bt() {
        var L;
        try {
          return (
            (null ===
              (L = (function Pe() {
                return typeof window < "u" ? window : null;
              })()) || void 0 === L
              ? void 0
              : L.sessionStorage) || null
          );
        } catch {
          return null;
        }
      }
      const qe = P.ax;
      class it {
        constructor() {
          (this.browserResolver = P.ay(P.k)),
            (this.cordovaResolver = P.ay(
              class Gt {
                constructor() {
                  (this._redirectPersistence = P.a),
                    (this._shouldInitProactively = !0),
                    (this.eventManagers = new Map()),
                    (this.originValidationPromises = {}),
                    (this._completeRedirectFn = P.aB),
                    (this._overrideRedirectResult = P.aC);
                }
                _initialize(x) {
                  var k = this;
                  return (0, f.Z)(function* () {
                    const J = x._key();
                    let Se = k.eventManagers.get(J);
                    return (
                      Se ||
                        ((Se = new Ne(x)),
                        k.eventManagers.set(J, Se),
                        k.attachCallbackListeners(x, Se)),
                      Se
                    );
                  })();
                }
                _openPopup(x) {
                  (0, P.at)(x, "operation-not-supported-in-this-environment");
                }
                _openRedirect(x, k, J, Se) {
                  var Qe = this;
                  return (0, f.Z)(function* () {
                    !(function ge(L) {
                      var x, k, J, Se, Qe, we, Ze, mt, qt, Tn;
                      const At = he();
                      (0, P.ax)(
                        "function" ==
                          typeof (null === (x = At?.universalLinks) ||
                          void 0 === x
                            ? void 0
                            : x.subscribe),
                        L,
                        "invalid-cordova-configuration",
                        { missingPlugin: "cordova-universal-links-plugin-fix" }
                      ),
                        (0, P.ax)(
                          typeof (null === (k = At?.BuildInfo) || void 0 === k
                            ? void 0
                            : k.packageName) < "u",
                          L,
                          "invalid-cordova-configuration",
                          { missingPlugin: "cordova-plugin-buildInfo" }
                        ),
                        (0, P.ax)(
                          "function" ==
                            typeof (null ===
                              (Qe =
                                null ===
                                  (Se =
                                    null === (J = At?.cordova) || void 0 === J
                                      ? void 0
                                      : J.plugins) || void 0 === Se
                                  ? void 0
                                  : Se.browsertab) || void 0 === Qe
                              ? void 0
                              : Qe.openUrl),
                          L,
                          "invalid-cordova-configuration",
                          { missingPlugin: "cordova-plugin-browsertab" }
                        ),
                        (0, P.ax)(
                          "function" ==
                            typeof (null ===
                              (mt =
                                null ===
                                  (Ze =
                                    null === (we = At?.cordova) || void 0 === we
                                      ? void 0
                                      : we.plugins) || void 0 === Ze
                                  ? void 0
                                  : Ze.browsertab) || void 0 === mt
                              ? void 0
                              : mt.isAvailable),
                          L,
                          "invalid-cordova-configuration",
                          { missingPlugin: "cordova-plugin-browsertab" }
                        ),
                        (0, P.ax)(
                          "function" ==
                            typeof (null ===
                              (Tn =
                                null === (qt = At?.cordova) || void 0 === qt
                                  ? void 0
                                  : qt.InAppBrowser) || void 0 === Tn
                              ? void 0
                              : Tn.open),
                          L,
                          "invalid-cordova-configuration",
                          { missingPlugin: "cordova-plugin-inappbrowser" }
                        );
                    })(x);
                    const we = yield Qe._initialize(x);
                    yield we.initialized(),
                      we.resetRedirect(),
                      (0, P.aD)(),
                      yield Qe._originValidation(x);
                    const Ze = (function Ae(L, x, k = null) {
                      return {
                        type: x,
                        eventId: k,
                        urlResponse: null,
                        sessionId: X(),
                        postBody: null,
                        tenantId: L.tenantId,
                        error: (0, P.aw)(L, "no-auth-event"),
                      };
                    })(x, J, Se);
                    yield (function Xe(L, x) {
                      return ne()._set(se(L), x);
                    })(x, Ze);
                    const mt = yield (function G(L, x, k) {
                        return H.apply(this, arguments);
                      })(x, Ze, k),
                      qt = yield (function Ue(L) {
                        const { cordova: x } = he();
                        return new Promise((k) => {
                          x.plugins.browsertab.isAvailable((J) => {
                            let Se = null;
                            J
                              ? x.plugins.browsertab.openUrl(L)
                              : (Se = x.InAppBrowser.open(
                                  L,
                                  (0, P.ap)() ? "_blank" : "_system",
                                  "location=yes"
                                )),
                              k(Se);
                          });
                        });
                      })(mt);
                    return (function Re(L, x, k) {
                      return tt.apply(this, arguments);
                    })(x, we, qt);
                  })();
                }
                _isIframeWebStorageSupported(x, k) {
                  throw new Error("Method not implemented.");
                }
                _originValidation(x) {
                  const k = x._key();
                  return (
                    this.originValidationPromises[k] ||
                      (this.originValidationPromises[k] = (function Q(L) {
                        return Be.apply(this, arguments);
                      })(x)),
                    this.originValidationPromises[k]
                  );
                }
                attachCallbackListeners(x, k) {
                  const {
                      universalLinks: J,
                      handleOpenURL: Se,
                      BuildInfo: Qe,
                    } = he(),
                    we = setTimeout(
                      (0, f.Z)(function* () {
                        yield te(x), k.onEvent(et());
                      }),
                      500
                    ),
                    Ze = (function () {
                      var Tn = (0, f.Z)(function* (At) {
                        clearTimeout(we);
                        const Dn = yield te(x);
                        let K = null;
                        Dn &&
                          At?.url &&
                          (K = (function De(L, x) {
                            var k, J;
                            const Se = (function ae(L) {
                              const x = $e(L),
                                k = x.link
                                  ? decodeURIComponent(x.link)
                                  : void 0,
                                J = $e(k).link,
                                Se = x.deep_link_id
                                  ? decodeURIComponent(x.deep_link_id)
                                  : void 0;
                              return $e(Se).link || Se || J || k || L;
                            })(x);
                            if (Se.includes("/__/auth/callback")) {
                              const Qe = $e(Se),
                                we = Qe.firebaseError
                                  ? (function ve(L) {
                                      try {
                                        return JSON.parse(L);
                                      } catch {
                                        return null;
                                      }
                                    })(decodeURIComponent(Qe.firebaseError))
                                  : null,
                                Ze =
                                  null ===
                                    (J =
                                      null === (k = we?.code) || void 0 === k
                                        ? void 0
                                        : k.split("auth/")) || void 0 === J
                                    ? void 0
                                    : J[1],
                                mt = Ze ? (0, P.aw)(Ze) : null;
                              return mt
                                ? {
                                    type: L.type,
                                    eventId: L.eventId,
                                    tenantId: L.tenantId,
                                    error: mt,
                                    urlResponse: null,
                                    sessionId: null,
                                    postBody: null,
                                  }
                                : {
                                    type: L.type,
                                    eventId: L.eventId,
                                    tenantId: L.tenantId,
                                    sessionId: L.sessionId,
                                    urlResponse: Se,
                                    postBody: null,
                                  };
                            }
                            return null;
                          })(Dn, At.url)),
                          k.onEvent(K || et());
                      });
                      return function (Dn) {
                        return Tn.apply(this, arguments);
                      };
                    })();
                  typeof J < "u" &&
                    "function" == typeof J.subscribe &&
                    J.subscribe(null, Ze);
                  const mt = Se,
                    qt = `${Qe.packageName.toLowerCase()}://`;
                  he().handleOpenURL = (function () {
                    var Tn = (0, f.Z)(function* (At) {
                      if (
                        (At.toLowerCase().startsWith(qt) && Ze({ url: At }),
                        "function" == typeof mt)
                      )
                        try {
                          mt(At);
                        } catch (Dn) {
                          console.error(Dn);
                        }
                    });
                    return function (At) {
                      return Tn.apply(this, arguments);
                    };
                  })();
                }
              }
            )),
            (this.underlyingResolver = null),
            (this._redirectPersistence = P.a),
            (this._completeRedirectFn = P.aB),
            (this._overrideRedirectResult = P.aC);
        }
        _initialize(x) {
          var k = this;
          return (0, f.Z)(function* () {
            return (
              yield k.selectUnderlyingResolver(),
              k.assertedUnderlyingResolver._initialize(x)
            );
          })();
        }
        _openPopup(x, k, J, Se) {
          var Qe = this;
          return (0, f.Z)(function* () {
            return (
              yield Qe.selectUnderlyingResolver(),
              Qe.assertedUnderlyingResolver._openPopup(x, k, J, Se)
            );
          })();
        }
        _openRedirect(x, k, J, Se) {
          var Qe = this;
          return (0, f.Z)(function* () {
            return (
              yield Qe.selectUnderlyingResolver(),
              Qe.assertedUnderlyingResolver._openRedirect(x, k, J, Se)
            );
          })();
        }
        _isIframeWebStorageSupported(x, k) {
          this.assertedUnderlyingResolver._isIframeWebStorageSupported(x, k);
        }
        _originValidation(x) {
          return this.assertedUnderlyingResolver._originValidation(x);
        }
        get _shouldInitProactively() {
          return Yn() || this.browserResolver._shouldInitProactively;
        }
        get assertedUnderlyingResolver() {
          return (
            qe(this.underlyingResolver, "internal-error"),
            this.underlyingResolver
          );
        }
        selectUnderlyingResolver() {
          var x = this;
          return (0, f.Z)(function* () {
            if (x.underlyingResolver) return;
            const k = yield (function Me() {
              return fe.apply(this, arguments);
            })();
            x.underlyingResolver = k ? x.cordovaResolver : x.browserResolver;
          })();
        }
      }
      function Bn(L) {
        return L.unwrap();
      }
      function Mt(L) {
        return bn(L);
      }
      function bn(L) {
        const { _tokenResponse: x } = L instanceof re.ZR ? L.customData : L;
        if (!x) return null;
        if (
          !(L instanceof re.ZR) &&
          "temporaryProof" in x &&
          "phoneNumber" in x
        )
          return P.P.credentialFromResult(L);
        const k = x.providerId;
        if (!k || k === P.o.PASSWORD) return null;
        let J;
        switch (k) {
          case P.o.GOOGLE:
            J = P.Q;
            break;
          case P.o.FACEBOOK:
            J = P.N;
            break;
          case P.o.GITHUB:
            J = P.T;
            break;
          case P.o.TWITTER:
            J = P.W;
            break;
          default:
            const {
              oauthIdToken: Se,
              oauthAccessToken: Qe,
              oauthTokenSecret: we,
              pendingToken: Ze,
              nonce: mt,
            } = x;
            return Qe || we || Se || Ze
              ? Ze
                ? k.startsWith("saml.")
                  ? P.aL._create(k, Ze)
                  : P.J._fromParams({
                      providerId: k,
                      signInMethod: k,
                      pendingToken: Ze,
                      idToken: Se,
                      accessToken: Qe,
                    })
                : new P.U(k).credential({
                    idToken: Se,
                    accessToken: Qe,
                    rawNonce: mt,
                  })
              : null;
        }
        return L instanceof re.ZR
          ? J.credentialFromError(L)
          : J.credentialFromResult(L);
      }
      function dn(L, x) {
        return x
          .catch((k) => {
            throw (
              (k instanceof re.ZR &&
                (function kn(L, x) {
                  var k, J;
                  const Se =
                    null === (k = x.customData) || void 0 === k
                      ? void 0
                      : k._tokenResponse;
                  if (
                    "auth/multi-factor-auth-required" ===
                    (null === (J = x) || void 0 === J ? void 0 : J.code)
                  )
                    x.resolver = new j(L, P.an(L, x));
                  else if (Se) {
                    const Qe = bn(x),
                      we = x;
                    Qe &&
                      ((we.credential = Qe),
                      (we.tenantId = Se.tenantId || void 0),
                      (we.email = Se.email || void 0),
                      (we.phoneNumber = Se.phoneNumber || void 0));
                  }
                })(L, k),
              k)
            );
          })
          .then((k) => {
            const Se = k.user;
            return {
              operationType: k.operationType,
              credential: Mt(k),
              additionalUserInfo: P.al(k),
              user: $.getOrCreate(Se),
            };
          });
      }
      function Jt(L, x) {
        return gn.apply(this, arguments);
      }
      function gn() {
        return (gn = (0, f.Z)(function* (L, x) {
          const k = yield x;
          return {
            verificationId: k.verificationId,
            confirm: (J) => dn(L, k.confirm(J)),
          };
        })).apply(this, arguments);
      }
      class j {
        constructor(x, k) {
          (this.resolver = k),
            (this.auth = (function Vn(L) {
              return L.wrapped();
            })(x));
        }
        get session() {
          return this.resolver.session;
        }
        get hints() {
          return this.resolver.hints;
        }
        resolveSignIn(x) {
          return dn(Bn(this.auth), this.resolver.resolveSignIn(x));
        }
      }
      class $ {
        constructor(x) {
          (this._delegate = x), (this.multiFactor = P.ao(x));
        }
        static getOrCreate(x) {
          return (
            $.USER_MAP.has(x) || $.USER_MAP.set(x, new $(x)), $.USER_MAP.get(x)
          );
        }
        delete() {
          return this._delegate.delete();
        }
        reload() {
          return this._delegate.reload();
        }
        toJSON() {
          return this._delegate.toJSON();
        }
        getIdTokenResult(x) {
          return this._delegate.getIdTokenResult(x);
        }
        getIdToken(x) {
          return this._delegate.getIdToken(x);
        }
        linkAndRetrieveDataWithCredential(x) {
          return this.linkWithCredential(x);
        }
        linkWithCredential(x) {
          var k = this;
          return (0, f.Z)(function* () {
            return dn(k.auth, P.Z(k._delegate, x));
          })();
        }
        linkWithPhoneNumber(x, k) {
          var J = this;
          return (0, f.Z)(function* () {
            return Jt(J.auth, P.l(J._delegate, x, k));
          })();
        }
        linkWithPopup(x) {
          var k = this;
          return (0, f.Z)(function* () {
            return dn(k.auth, P.d(k._delegate, x, it));
          })();
        }
        linkWithRedirect(x) {
          var k = this;
          return (0, f.Z)(function* () {
            return yield Yt(P.aE(k.auth)), P.g(k._delegate, x, it);
          })();
        }
        reauthenticateAndRetrieveDataWithCredential(x) {
          return this.reauthenticateWithCredential(x);
        }
        reauthenticateWithCredential(x) {
          var k = this;
          return (0, f.Z)(function* () {
            return dn(k.auth, P._(k._delegate, x));
          })();
        }
        reauthenticateWithPhoneNumber(x, k) {
          return Jt(this.auth, P.r(this._delegate, x, k));
        }
        reauthenticateWithPopup(x) {
          return dn(this.auth, P.e(this._delegate, x, it));
        }
        reauthenticateWithRedirect(x) {
          var k = this;
          return (0, f.Z)(function* () {
            return yield Yt(P.aE(k.auth)), P.h(k._delegate, x, it);
          })();
        }
        sendEmailVerification(x) {
          return P.ab(this._delegate, x);
        }
        unlink(x) {
          var k = this;
          return (0, f.Z)(function* () {
            return yield P.ak(k._delegate, x), k;
          })();
        }
        updateEmail(x) {
          return P.ag(this._delegate, x);
        }
        updatePassword(x) {
          return P.ah(this._delegate, x);
        }
        updatePhoneNumber(x) {
          return P.u(this._delegate, x);
        }
        updateProfile(x) {
          return P.af(this._delegate, x);
        }
        verifyBeforeUpdateEmail(x, k) {
          return P.ac(this._delegate, x, k);
        }
        get emailVerified() {
          return this._delegate.emailVerified;
        }
        get isAnonymous() {
          return this._delegate.isAnonymous;
        }
        get metadata() {
          return this._delegate.metadata;
        }
        get phoneNumber() {
          return this._delegate.phoneNumber;
        }
        get providerData() {
          return this._delegate.providerData;
        }
        get refreshToken() {
          return this._delegate.refreshToken;
        }
        get tenantId() {
          return this._delegate.tenantId;
        }
        get displayName() {
          return this._delegate.displayName;
        }
        get email() {
          return this._delegate.email;
        }
        get photoURL() {
          return this._delegate.photoURL;
        }
        get providerId() {
          return this._delegate.providerId;
        }
        get uid() {
          return this._delegate.uid;
        }
        get auth() {
          return this._delegate.auth;
        }
      }
      $.USER_MAP = new WeakMap();
      const U = P.ax;
      let z = (() => {
        class L {
          constructor(k, J) {
            if (((this.app = k), J.isInitialized()))
              return (
                (this._delegate = J.getImmediate()),
                void this.linkUnderlyingAuth()
              );
            const { apiKey: Se } = k.options;
            U(Se, "invalid-api-key", { appName: k.name }),
              U(Se, "invalid-api-key", { appName: k.name });
            const Qe = typeof window < "u" ? it : void 0;
            (this._delegate = J.initialize({
              options: {
                persistence: ke(Se, k.name),
                popupRedirectResolver: Qe,
              },
            })),
              this._delegate._updateErrorMap(P.B),
              this.linkUnderlyingAuth();
          }
          get emulatorConfig() {
            return this._delegate.emulatorConfig;
          }
          get currentUser() {
            return this._delegate.currentUser
              ? $.getOrCreate(this._delegate.currentUser)
              : null;
          }
          get languageCode() {
            return this._delegate.languageCode;
          }
          set languageCode(k) {
            this._delegate.languageCode = k;
          }
          get settings() {
            return this._delegate.settings;
          }
          get tenantId() {
            return this._delegate.tenantId;
          }
          set tenantId(k) {
            this._delegate.tenantId = k;
          }
          useDeviceLanguage() {
            this._delegate.useDeviceLanguage();
          }
          signOut() {
            return this._delegate.signOut();
          }
          useEmulator(k, J) {
            P.G(this._delegate, k, J);
          }
          applyActionCode(k) {
            return P.a2(this._delegate, k);
          }
          checkActionCode(k) {
            return P.a3(this._delegate, k);
          }
          confirmPasswordReset(k, J) {
            return P.a1(this._delegate, k, J);
          }
          createUserWithEmailAndPassword(k, J) {
            var Se = this;
            return (0, f.Z)(function* () {
              return dn(Se._delegate, P.a5(Se._delegate, k, J));
            })();
          }
          fetchProvidersForEmail(k) {
            return this.fetchSignInMethodsForEmail(k);
          }
          fetchSignInMethodsForEmail(k) {
            return P.aa(this._delegate, k);
          }
          isSignInWithEmailLink(k) {
            return P.a8(this._delegate, k);
          }
          getRedirectResult() {
            var k = this;
            return (0, f.Z)(function* () {
              U(
                xn(),
                k._delegate,
                "operation-not-supported-in-this-environment"
              );
              const J = yield P.j(k._delegate, it);
              return J
                ? dn(k._delegate, Promise.resolve(J))
                : { credential: null, user: null };
            })();
          }
          addFrameworkForLogging(k) {
            !(function Vt(L, x) {
              (0, P.aE)(L)._logFramework(x);
            })(this._delegate, k);
          }
          onAuthStateChanged(k, J, Se) {
            const { next: Qe, error: we, complete: Ze } = q(k, J, Se);
            return this._delegate.onAuthStateChanged(Qe, we, Ze);
          }
          onIdTokenChanged(k, J, Se) {
            const { next: Qe, error: we, complete: Ze } = q(k, J, Se);
            return this._delegate.onIdTokenChanged(Qe, we, Ze);
          }
          sendSignInLinkToEmail(k, J) {
            return P.a7(this._delegate, k, J);
          }
          sendPasswordResetEmail(k, J) {
            return P.a0(this._delegate, k, J || void 0);
          }
          setPersistence(k) {
            var J = this;
            return (0, f.Z)(function* () {
              let Se;
              switch (
                ((function Rt(L, x) {
                  ct(
                    Object.values(Ke).includes(x),
                    L,
                    "invalid-persistence-type"
                  ),
                    (0, re.b$)()
                      ? ct(x !== Ke.SESSION, L, "unsupported-persistence-type")
                      : (0, re.UG)()
                      ? ct(x === Ke.NONE, L, "unsupported-persistence-type")
                      : On()
                      ? ct(
                          x === Ke.NONE || (x === Ke.LOCAL && (0, re.hl)()),
                          L,
                          "unsupported-persistence-type"
                        )
                      : ct(
                          x === Ke.NONE || Mn(),
                          L,
                          "unsupported-persistence-type"
                        );
                })(J._delegate, k),
                k)
              ) {
                case Ke.SESSION:
                  Se = P.a;
                  break;
                case Ke.LOCAL:
                  Se = (yield P.ay(P.i)._isAvailable()) ? P.i : P.b;
                  break;
                case Ke.NONE:
                  Se = P.L;
                  break;
                default:
                  return P.at("argument-error", { appName: J._delegate.name });
              }
              return J._delegate.setPersistence(Se);
            })();
          }
          signInAndRetrieveDataWithCredential(k) {
            return this.signInWithCredential(k);
          }
          signInAnonymously() {
            return dn(this._delegate, P.X(this._delegate));
          }
          signInWithCredential(k) {
            return dn(this._delegate, P.Y(this._delegate, k));
          }
          signInWithCustomToken(k) {
            return dn(this._delegate, P.$(this._delegate, k));
          }
          signInWithEmailAndPassword(k, J) {
            return dn(this._delegate, P.a6(this._delegate, k, J));
          }
          signInWithEmailLink(k, J) {
            return dn(this._delegate, P.a9(this._delegate, k, J));
          }
          signInWithPhoneNumber(k, J) {
            return Jt(this._delegate, P.s(this._delegate, k, J));
          }
          signInWithPopup(k) {
            var J = this;
            return (0, f.Z)(function* () {
              return (
                U(
                  xn(),
                  J._delegate,
                  "operation-not-supported-in-this-environment"
                ),
                dn(J._delegate, P.c(J._delegate, k, it))
              );
            })();
          }
          signInWithRedirect(k) {
            var J = this;
            return (0, f.Z)(function* () {
              return (
                U(
                  xn(),
                  J._delegate,
                  "operation-not-supported-in-this-environment"
                ),
                yield Yt(J._delegate),
                P.f(J._delegate, k, it)
              );
            })();
          }
          updateCurrentUser(k) {
            return this._delegate.updateCurrentUser(k);
          }
          verifyPasswordResetCode(k) {
            return P.a4(this._delegate, k);
          }
          unwrap() {
            return this._delegate;
          }
          _delete() {
            return this._delegate._delete();
          }
          linkUnderlyingAuth() {
            this._delegate.wrapped = () => this;
          }
        }
        return (L.Persistence = Ke), L;
      })();
      function q(L, x, k) {
        let J = L;
        "function" != typeof L && ({ next: J, error: x, complete: k } = L);
        const Se = J;
        return {
          next: (we) => Se(we && $.getOrCreate(we)),
          error: x,
          complete: k,
        };
      }
      function ke(L, x) {
        const k = (function Nn(L, x) {
          const k = bt();
          if (!k) return [];
          const J = P.az(Ut, L, x);
          switch (k.getItem(J)) {
            case Ke.NONE:
              return [P.L];
            case Ke.LOCAL:
              return [P.i, P.a];
            case Ke.SESSION:
              return [P.a];
            default:
              return [];
          }
        })(L, x);
        if (
          (typeof self < "u" && !k.includes(P.i) && k.push(P.i),
          typeof window < "u")
        )
          for (const J of [P.b, P.a]) k.includes(J) || k.push(J);
        return k.includes(P.L) || k.push(P.L), k;
      }
      class st {
        constructor() {
          (this.providerId = "phone"),
            (this._delegate = new P.P(Bn(V.Z.auth())));
        }
        static credential(x, k) {
          return P.P.credential(x, k);
        }
        verifyPhoneNumber(x, k) {
          return this._delegate.verifyPhoneNumber(x, k);
        }
        unwrap() {
          return this._delegate;
        }
      }
      (st.PHONE_SIGN_IN_METHOD = P.P.PHONE_SIGN_IN_METHOD),
        (st.PROVIDER_ID = P.P.PROVIDER_ID);
      const Pt = P.ax;
      class sn {
        constructor(x, k, J = V.Z.app()) {
          var Se;
          Pt(
            null === (Se = J.options) || void 0 === Se ? void 0 : Se.apiKey,
            "invalid-api-key",
            { appName: J.name }
          ),
            (this._delegate = new P.R(x, k, J.auth())),
            (this.type = this._delegate.type);
        }
        clear() {
          this._delegate.clear();
        }
        render() {
          return this._delegate.render();
        }
        verify() {
          return this._delegate.verify();
        }
      }
      !(function ue(L) {
        L.INTERNAL.registerComponent(
          new ce.wA(
            "auth-compat",
            (x) => {
              const k = x.getProvider("app-compat").getImmediate(),
                J = x.getProvider("auth");
              return new z(k, J);
            },
            "PUBLIC"
          )
            .setServiceProps({
              ActionCodeInfo: {
                Operation: {
                  EMAIL_SIGNIN: P.A.EMAIL_SIGNIN,
                  PASSWORD_RESET: P.A.PASSWORD_RESET,
                  RECOVER_EMAIL: P.A.RECOVER_EMAIL,
                  REVERT_SECOND_FACTOR_ADDITION:
                    P.A.REVERT_SECOND_FACTOR_ADDITION,
                  VERIFY_AND_CHANGE_EMAIL: P.A.VERIFY_AND_CHANGE_EMAIL,
                  VERIFY_EMAIL: P.A.VERIFY_EMAIL,
                },
              },
              EmailAuthProvider: P.M,
              FacebookAuthProvider: P.N,
              GithubAuthProvider: P.T,
              GoogleAuthProvider: P.Q,
              OAuthProvider: P.U,
              SAMLAuthProvider: P.V,
              PhoneAuthProvider: st,
              PhoneMultiFactorGenerator: P.m,
              RecaptchaVerifier: sn,
              TwitterAuthProvider: P.W,
              Auth: z,
              AuthCredential: P.H,
              Error: re.ZR,
            })
            .setInstantiationMode("LAZY")
            .setMultipleInstances(!1)
        ),
          L.registerVersion("@firebase/auth-compat", "0.2.18");
      })(V.Z);
    },
    2375: (wt, Oe, M) => {
      M.d(Oe, { KL: () => mt, Gb: () => J });
      var f = M(5861),
        P = (M(2833), M(4859)),
        re = M(8766),
        Ie = M(2090),
        _e = M(9681);
      const ce = "/firebase-messaging-sw.js",
        he = "/firebase-cloud-messaging-push-scope",
        Ce =
          "BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4",
        H = "google.c.a.c_id",
        Q = "google.c.a.c_l",
        Be = "google.c.a.ts",
        Ue = "google.c.a.e";
      var tt = (() => {
        return (
          ((K = tt || (tt = {})).PUSH_RECEIVED = "push-received"),
          (K.NOTIFICATION_CLICKED = "notification-clicked"),
          tt
        );
        var K;
      })();
      function ge(K) {
        const me = new Uint8Array(K);
        return btoa(String.fromCharCode(...me))
          .replace(/=/g, "")
          .replace(/\+/g, "-")
          .replace(/\//g, "_");
      }
      function de(K) {
        const nt = (K + "=".repeat((4 - (K.length % 4)) % 4))
            .replace(/\-/g, "+")
            .replace(/_/g, "/"),
          He = atob(nt),
          Ot = new Uint8Array(He.length);
        for (let Y = 0; Y < He.length; ++Y) Ot[Y] = He.charCodeAt(Y);
        return Ot;
      }
      const at = "fcm_token_details_db",
        Ve = "fcm_token_object_Store";
      function Ne(K) {
        return Ae.apply(this, arguments);
      }
      function Ae() {
        return (
          (Ae = (0, f.Z)(function* (K) {
            if (
              "databases" in indexedDB &&
              !(yield indexedDB.databases()).map((Y) => Y.name).includes(at)
            )
              return null;
            let me = null;
            return (
              (yield (0, re.X3)(at, 5, {
                upgrade:
                  ((He = (0, f.Z)(function* (Ot, Y, pe, Fe) {
                    var ut;
                    if (Y < 2 || !Ot.objectStoreNames.contains(Ve)) return;
                    const Sn = Fe.objectStore(Ve),
                      hn = yield Sn.index("fcmSenderId").get(K);
                    if ((yield Sn.clear(), hn))
                      if (2 === Y) {
                        const Tt = hn;
                        if (!Tt.auth || !Tt.p256dh || !Tt.endpoint) return;
                        me = {
                          token: Tt.fcmToken,
                          createTime:
                            null !== (ut = Tt.createTime) && void 0 !== ut
                              ? ut
                              : Date.now(),
                          subscriptionOptions: {
                            auth: Tt.auth,
                            p256dh: Tt.p256dh,
                            endpoint: Tt.endpoint,
                            swScope: Tt.swScope,
                            vapidKey:
                              "string" == typeof Tt.vapidKey
                                ? Tt.vapidKey
                                : ge(Tt.vapidKey),
                          },
                        };
                      } else if (3 === Y) {
                        const Tt = hn;
                        me = {
                          token: Tt.fcmToken,
                          createTime: Tt.createTime,
                          subscriptionOptions: {
                            auth: ge(Tt.auth),
                            p256dh: ge(Tt.p256dh),
                            endpoint: Tt.endpoint,
                            swScope: Tt.swScope,
                            vapidKey: ge(Tt.vapidKey),
                          },
                        };
                      } else if (4 === Y) {
                        const Tt = hn;
                        me = {
                          token: Tt.fcmToken,
                          createTime: Tt.createTime,
                          subscriptionOptions: {
                            auth: ge(Tt.auth),
                            p256dh: ge(Tt.p256dh),
                            endpoint: Tt.endpoint,
                            swScope: Tt.swScope,
                            vapidKey: ge(Tt.vapidKey),
                          },
                        };
                      }
                  })),
                  function (Y, pe, Fe, ut) {
                    return He.apply(this, arguments);
                  }),
              })).close(),
              yield (0, re.Lj)(at),
              yield (0, re.Lj)("fcm_vapid_details_db"),
              yield (0, re.Lj)("undefined"),
              Xe(me) ? me : null
            );
            var He;
          })),
          Ae.apply(this, arguments)
        );
      }
      function Xe(K) {
        if (!K || !K.subscriptionOptions) return !1;
        const { subscriptionOptions: me } = K;
        return (
          "number" == typeof K.createTime &&
          K.createTime > 0 &&
          "string" == typeof K.token &&
          K.token.length > 0 &&
          "string" == typeof me.auth &&
          me.auth.length > 0 &&
          "string" == typeof me.p256dh &&
          me.p256dh.length > 0 &&
          "string" == typeof me.endpoint &&
          me.endpoint.length > 0 &&
          "string" == typeof me.swScope &&
          me.swScope.length > 0 &&
          "string" == typeof me.vapidKey &&
          me.vapidKey.length > 0
        );
      }
      const De = "firebase-messaging-store";
      let X = null;
      function ne() {
        return (
          X ||
            (X = (0, re.X3)("firebase-messaging-database", 1, {
              upgrade: (K, me) => {
                0 === me && K.createObjectStore(De);
              },
            })),
          X
        );
      }
      function se(K) {
        return ve.apply(this, arguments);
      }
      function ve() {
        return (ve = (0, f.Z)(function* (K) {
          const me = Dt(K),
            He = yield (yield ne()).transaction(De).objectStore(De).get(me);
          if (He) return He;
          {
            const Ot = yield Ne(K.appConfig.senderId);
            if (Ot) return yield ae(K, Ot), Ot;
          }
        })).apply(this, arguments);
      }
      function ae(K, me) {
        return $e.apply(this, arguments);
      }
      function $e() {
        return ($e = (0, f.Z)(function* (K, me) {
          const nt = Dt(K),
            Ot = (yield ne()).transaction(De, "readwrite");
          return yield Ot.objectStore(De).put(me, nt), yield Ot.done, me;
        })).apply(this, arguments);
      }
      function ht(K) {
        return Gt.apply(this, arguments);
      }
      function Gt() {
        return (Gt = (0, f.Z)(function* (K) {
          const me = Dt(K),
            He = (yield ne()).transaction(De, "readwrite");
          yield He.objectStore(De).delete(me), yield He.done;
        })).apply(this, arguments);
      }
      function Dt({ appConfig: K }) {
        return K.appId;
      }
      const Vt = new Ie.LL("messaging", "Messaging", {
        "missing-app-config-values":
          'Missing App configuration value: "{$valueName}"',
        "only-available-in-window":
          "This method is available in a Window context.",
        "only-available-in-sw":
          "This method is available in a service worker context.",
        "permission-default":
          "The notification permission was not granted and dismissed instead.",
        "permission-blocked":
          "The notification permission was not granted and blocked instead.",
        "unsupported-browser":
          "This browser doesn't support the API's required to use the Firebase SDK.",
        "indexed-db-unsupported":
          "This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)",
        "failed-service-worker-registration":
          "We are unable to register the default service worker. {$browserErrorMessage}",
        "token-subscribe-failed":
          "A problem occurred while subscribing the user to FCM: {$errorInfo}",
        "token-subscribe-no-token":
          "FCM returned no token when subscribing the user to push.",
        "token-unsubscribe-failed":
          "A problem occurred while unsubscribing the user from FCM: {$errorInfo}",
        "token-update-failed":
          "A problem occurred while updating the user from FCM: {$errorInfo}",
        "token-update-no-token":
          "FCM returned no token when updating the user to push.",
        "use-sw-after-get-token":
          "The useServiceWorker() method may only be called once and must be called before calling getToken() to ensure your service worker is used.",
        "invalid-sw-registration":
          "The input to useServiceWorker() must be a ServiceWorkerRegistration.",
        "invalid-bg-handler":
          "The input to setBackgroundMessageHandler() must be a function.",
        "invalid-vapid-key": "The public VAPID key must be a string.",
        "use-vapid-key-after-get-token":
          "The usePublicVapidKey() method may only be called once and must be called before calling getToken() to ensure your VAPID key is used.",
      });
      function Ln(K, me) {
        return pn.apply(this, arguments);
      }
      function pn() {
        return (pn = (0, f.Z)(function* (K, me) {
          var nt;
          const He = yield Zt(K),
            Ot = en(me),
            Y = { method: "POST", headers: He, body: JSON.stringify(Ot) };
          let pe;
          try {
            pe = yield (yield fetch(yt(K.appConfig), Y)).json();
          } catch (Fe) {
            throw Vt.create("token-subscribe-failed", {
              errorInfo:
                null === (nt = Fe) || void 0 === nt ? void 0 : nt.toString(),
            });
          }
          if (pe.error)
            throw Vt.create("token-subscribe-failed", {
              errorInfo: pe.error.message,
            });
          if (!pe.token) throw Vt.create("token-subscribe-no-token");
          return pe.token;
        })).apply(this, arguments);
      }
      function zt(K, me) {
        return Nt.apply(this, arguments);
      }
      function Nt() {
        return (Nt = (0, f.Z)(function* (K, me) {
          var nt;
          const He = yield Zt(K),
            Ot = en(me.subscriptionOptions),
            Y = { method: "PATCH", headers: He, body: JSON.stringify(Ot) };
          let pe;
          try {
            pe = yield (yield fetch(
              `${yt(K.appConfig)}/${me.token}`,
              Y
            )).json();
          } catch (Fe) {
            throw Vt.create("token-update-failed", {
              errorInfo:
                null === (nt = Fe) || void 0 === nt ? void 0 : nt.toString(),
            });
          }
          if (pe.error)
            throw Vt.create("token-update-failed", {
              errorInfo: pe.error.message,
            });
          if (!pe.token) throw Vt.create("token-update-no-token");
          return pe.token;
        })).apply(this, arguments);
      }
      function ze(K, me) {
        return lt.apply(this, arguments);
      }
      function lt() {
        return (lt = (0, f.Z)(function* (K, me) {
          var nt;
          const Ot = { method: "DELETE", headers: yield Zt(K) };
          try {
            const pe = yield (yield fetch(
              `${yt(K.appConfig)}/${me}`,
              Ot
            )).json();
            if (pe.error)
              throw Vt.create("token-unsubscribe-failed", {
                errorInfo: pe.error.message,
              });
          } catch (Y) {
            throw Vt.create("token-unsubscribe-failed", {
              errorInfo:
                null === (nt = Y) || void 0 === nt ? void 0 : nt.toString(),
            });
          }
        })).apply(this, arguments);
      }
      function yt({ projectId: K }) {
        return `https://fcmregistrations.googleapis.com/v1/projects/${K}/registrations`;
      }
      function Zt(K) {
        return $t.apply(this, arguments);
      }
      function $t() {
        return ($t = (0, f.Z)(function* ({ appConfig: K, installations: me }) {
          const nt = yield me.getToken();
          return new Headers({
            "Content-Type": "application/json",
            Accept: "application/json",
            "x-goog-api-key": K.apiKey,
            "x-goog-firebase-installations-auth": `FIS ${nt}`,
          });
        })).apply(this, arguments);
      }
      function en({ p256dh: K, auth: me, endpoint: nt, vapidKey: He }) {
        const Ot = { web: { endpoint: nt, auth: me, p256dh: K } };
        return He !== Ce && (Ot.web.applicationPubKey = He), Ot;
      }
      const Mn = 6048e5;
      function On(K) {
        return xn.apply(this, arguments);
      }
      function xn() {
        return (xn = (0, f.Z)(function* (K) {
          const me = yield Ut(K.swRegistration, K.vapidKey),
            nt = {
              vapidKey: K.vapidKey,
              swScope: K.swRegistration.scope,
              endpoint: me.endpoint,
              auth: ge(me.getKey("auth")),
              p256dh: ge(me.getKey("p256dh")),
            },
            He = yield se(K.firebaseDependencies);
          if (He) {
            if (Yt(He.subscriptionOptions, nt))
              return Date.now() >= He.createTime + Mn
                ? fe(K, {
                    token: He.token,
                    createTime: Date.now(),
                    subscriptionOptions: nt,
                  })
                : He.token;
            try {
              yield ze(K.firebaseDependencies, He.token);
            } catch (Ot) {
              console.warn(Ot);
            }
            return Ke(K.firebaseDependencies, nt);
          }
          return Ke(K.firebaseDependencies, nt);
        })).apply(this, arguments);
      }
      function Yn(K) {
        return Me.apply(this, arguments);
      }
      function Me() {
        return (Me = (0, f.Z)(function* (K) {
          const me = yield se(K.firebaseDependencies);
          me &&
            (yield ze(K.firebaseDependencies, me.token),
            yield ht(K.firebaseDependencies));
          const nt = yield K.swRegistration.pushManager.getSubscription();
          return !nt || nt.unsubscribe();
        })).apply(this, arguments);
      }
      function fe(K, me) {
        return Pe.apply(this, arguments);
      }
      function Pe() {
        return (Pe = (0, f.Z)(function* (K, me) {
          try {
            const nt = yield zt(K.firebaseDependencies, me),
              He = Object.assign(Object.assign({}, me), {
                token: nt,
                createTime: Date.now(),
              });
            return yield ae(K.firebaseDependencies, He), nt;
          } catch (nt) {
            throw (yield Yn(K), nt);
          }
        })).apply(this, arguments);
      }
      function Ke(K, me) {
        return ct.apply(this, arguments);
      }
      function ct() {
        return (ct = (0, f.Z)(function* (K, me) {
          const He = {
            token: yield Ln(K, me),
            createTime: Date.now(),
            subscriptionOptions: me,
          };
          return yield ae(K, He), He.token;
        })).apply(this, arguments);
      }
      function Ut(K, me) {
        return Rt.apply(this, arguments);
      }
      function Rt() {
        return (Rt = (0, f.Z)(function* (K, me) {
          return (
            (yield K.pushManager.getSubscription()) ||
            K.pushManager.subscribe({
              userVisibleOnly: !0,
              applicationServerKey: de(me),
            })
          );
        })).apply(this, arguments);
      }
      function Yt(K, me) {
        return (
          me.vapidKey === K.vapidKey &&
          me.endpoint === K.endpoint &&
          me.auth === K.auth &&
          me.p256dh === K.p256dh
        );
      }
      function En(K) {
        const me = {
          from: K.from,
          collapseKey: K.collapse_key,
          messageId: K.fcmMessageId,
        };
        return (
          (function Nn(K, me) {
            if (!me.notification) return;
            K.notification = {};
            const nt = me.notification.title;
            nt && (K.notification.title = nt);
            const He = me.notification.body;
            He && (K.notification.body = He);
            const Ot = me.notification.image;
            Ot && (K.notification.image = Ot);
          })(me, K),
          (function bt(K, me) {
            !me.data || (K.data = me.data);
          })(me, K),
          (function qe(K, me) {
            var nt, He, Ot, Y, pe;
            if (
              !(
                me.fcmOptions ||
                (null !== (nt = me.notification) &&
                  void 0 !== nt &&
                  nt.click_action)
              )
            )
              return;
            K.fcmOptions = {};
            const Fe =
              null !==
                (Ot =
                  null === (He = me.fcmOptions) || void 0 === He
                    ? void 0
                    : He.link) && void 0 !== Ot
                ? Ot
                : null === (Y = me.notification) || void 0 === Y
                ? void 0
                : Y.click_action;
            Fe && (K.fcmOptions.link = Fe);
            const ut =
              null === (pe = me.fcmOptions) || void 0 === pe
                ? void 0
                : pe.analytics_label;
            ut && (K.fcmOptions.analyticsLabel = ut);
          })(me, K),
          me
        );
      }
      function it(K) {
        return "object" == typeof K && !!K && H in K;
      }
      function Bn(K, me) {
        const nt = [];
        for (let He = 0; He < K.length; He++)
          nt.push(K.charAt(He)), He < me.length && nt.push(me.charAt(He));
        return nt.join("");
      }
      function Mt(K) {
        return Vt.create("missing-app-config-values", { valueName: K });
      }
      Bn("hts/frbslgigp.ogepscmv/ieo/eaylg", "tp:/ieaeogn-agolai.o/1frlglgc/o"),
        Bn("AzSCbw63g1R0nCw85jG8", "Iaya3yLKwmgvh7cF0q4");
      class kn {
        constructor(me, nt, He) {
          (this.deliveryMetricsExportedToBigQueryEnabled = !1),
            (this.onBackgroundMessageHandler = null),
            (this.onMessageHandler = null),
            (this.logEvents = []),
            (this.isLogServiceStarted = !1);
          const Ot = (function Vn(K) {
            if (!K || !K.options) throw Mt("App Configuration Object");
            if (!K.name) throw Mt("App Name");
            const me = ["projectId", "apiKey", "appId", "messagingSenderId"],
              { options: nt } = K;
            for (const He of me) if (!nt[He]) throw Mt(He);
            return {
              appName: K.name,
              projectId: nt.projectId,
              apiKey: nt.apiKey,
              appId: nt.appId,
              senderId: nt.messagingSenderId,
            };
          })(me);
          this.firebaseDependencies = {
            app: me,
            appConfig: Ot,
            installations: nt,
            analyticsProvider: He,
          };
        }
        _delete() {
          return Promise.resolve();
        }
      }
      function bn(K) {
        return dn.apply(this, arguments);
      }
      function dn() {
        return (dn = (0, f.Z)(function* (K) {
          var me;
          try {
            (K.swRegistration = yield navigator.serviceWorker.register(ce, {
              scope: he,
            })),
              K.swRegistration.update().catch(() => {});
          } catch (nt) {
            throw Vt.create("failed-service-worker-registration", {
              browserErrorMessage:
                null === (me = nt) || void 0 === me ? void 0 : me.message,
            });
          }
        })).apply(this, arguments);
      }
      function Jt(K, me) {
        return gn.apply(this, arguments);
      }
      function gn() {
        return (gn = (0, f.Z)(function* (K, me) {
          if (
            (!me && !K.swRegistration && (yield bn(K)), me || !K.swRegistration)
          ) {
            if (!(me instanceof ServiceWorkerRegistration))
              throw Vt.create("invalid-sw-registration");
            K.swRegistration = me;
          }
        })).apply(this, arguments);
      }
      function j(K, me) {
        return $.apply(this, arguments);
      }
      function $() {
        return ($ = (0, f.Z)(function* (K, me) {
          me ? (K.vapidKey = me) : K.vapidKey || (K.vapidKey = Ce);
        })).apply(this, arguments);
      }
      function z() {
        return (z = (0, f.Z)(function* (K, me) {
          if (!navigator) throw Vt.create("only-available-in-window");
          if (
            ("default" === Notification.permission &&
              (yield Notification.requestPermission()),
            "granted" !== Notification.permission)
          )
            throw Vt.create("permission-blocked");
          return (
            yield j(K, me?.vapidKey),
            yield Jt(K, me?.serviceWorkerRegistration),
            On(K)
          );
        })).apply(this, arguments);
      }
      function q(K, me, nt) {
        return ke.apply(this, arguments);
      }
      function ke() {
        return (ke = (0, f.Z)(function* (K, me, nt) {
          const He = st(me);
          (yield K.firebaseDependencies.analyticsProvider.get()).logEvent(He, {
            message_id: nt[H],
            message_name: nt[Q],
            message_time: nt[Be],
            message_device_time: Math.floor(Date.now() / 1e3),
          });
        })).apply(this, arguments);
      }
      function st(K) {
        switch (K) {
          case tt.NOTIFICATION_CLICKED:
            return "notification_open";
          case tt.PUSH_RECEIVED:
            return "notification_foreground";
          default:
            throw new Error();
        }
      }
      function sn() {
        return (sn = (0, f.Z)(function* (K, me) {
          const nt = me.data;
          if (!nt.isFirebaseMessaging) return;
          K.onMessageHandler &&
            nt.messageType === tt.PUSH_RECEIVED &&
            ("function" == typeof K.onMessageHandler
              ? K.onMessageHandler(En(nt))
              : K.onMessageHandler.next(En(nt)));
          const He = nt.data;
          it(He) && "1" === He[Ue] && (yield q(K, nt.messageType, He));
        })).apply(this, arguments);
      }
      const on = "@firebase/messaging",
        L = (K) => {
          const me = new kn(
            K.getProvider("app").getImmediate(),
            K.getProvider("installations-internal").getImmediate(),
            K.getProvider("analytics-internal")
          );
          return (
            navigator.serviceWorker.addEventListener("message", (nt) =>
              (function Pt(K, me) {
                return sn.apply(this, arguments);
              })(me, nt)
            ),
            me
          );
        },
        x = (K) => {
          const me = K.getProvider("messaging").getImmediate();
          return {
            getToken: (He) =>
              (function U(K, me) {
                return z.apply(this, arguments);
              })(me, He),
          };
        };
      function J() {
        return Se.apply(this, arguments);
      }
      function Se() {
        return (Se = (0, f.Z)(function* () {
          try {
            yield (0, Ie.eu)();
          } catch {
            return !1;
          }
          return (
            typeof window < "u" &&
            (0, Ie.hl)() &&
            (0, Ie.zI)() &&
            "serviceWorker" in navigator &&
            "PushManager" in window &&
            "Notification" in window &&
            "fetch" in window &&
            ServiceWorkerRegistration.prototype.hasOwnProperty(
              "showNotification"
            ) &&
            PushSubscription.prototype.hasOwnProperty("getKey")
          );
        })).apply(this, arguments);
      }
      function mt(K = (0, _e.getApp)()) {
        return (
          J().then(
            (me) => {
              if (!me) throw Vt.create("unsupported-browser");
            },
            (me) => {
              throw Vt.create("indexed-db-unsupported");
            }
          ),
          (0, _e._getProvider)((0, Ie.m9)(K), "messaging").getImmediate()
        );
      }
      !(function k() {
        (0, _e._registerComponent)(new P.wA("messaging", L, "PUBLIC")),
          (0, _e._registerComponent)(
            new P.wA("messaging-internal", x, "PRIVATE")
          ),
          (0, _e.registerVersion)(on, "0.9.16"),
          (0, _e.registerVersion)(on, "0.9.16", "esm2017");
      })();
    },
    3226: (wt, Oe, M) => {
      M.d(Oe, { sN: () => at, Gb: () => xn });
      var f = M(5861),
        V = M(9681),
        P = M(2090),
        re = M(4859),
        Ie = M(1877);
      M(2833);
      const ce = "@firebase/remote-config",
        G = "remote-config",
        Q = new P.LL("remoteconfig", "Remote Config", {
          "registration-window":
            "Undefined window object. This SDK only supports usage in a browser environment.",
          "registration-project-id":
            "Undefined project identifier. Check Firebase app initialization.",
          "registration-api-key":
            "Undefined API key. Check Firebase app initialization.",
          "registration-app-id":
            "Undefined app identifier. Check Firebase app initialization.",
          "storage-open":
            "Error thrown when opening storage. Original error: {$originalErrorMessage}.",
          "storage-get":
            "Error thrown when reading from storage. Original error: {$originalErrorMessage}.",
          "storage-set":
            "Error thrown when writing to storage. Original error: {$originalErrorMessage}.",
          "storage-delete":
            "Error thrown when deleting from storage. Original error: {$originalErrorMessage}.",
          "fetch-client-network":
            "Fetch client failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.",
          "fetch-timeout":
            'The config fetch request timed out.  Configure timeout using "fetchTimeoutMillis" SDK setting.',
          "fetch-throttle":
            'The config fetch request timed out while in an exponential backoff state. Configure timeout using "fetchTimeoutMillis" SDK setting. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',
          "fetch-client-parse":
            "Fetch client could not parse response. Original error: {$originalErrorMessage}.",
          "fetch-status":
            "Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.",
          "indexed-db-unavailable":
            "Indexed DB is not supported by current browser",
        });
      function at(Me = (0, V.getApp)()) {
        return (Me = (0, P.m9)(Me)), (0, V._getProvider)(Me, G).getImmediate();
      }
      class ae {
        constructor(fe, Pe, Ke, ct) {
          (this.client = fe),
            (this.storage = Pe),
            (this.storageCache = Ke),
            (this.logger = ct);
        }
        isCachedDataFresh(fe, Pe) {
          if (!Pe)
            return (
              this.logger.debug("Config fetch cache check. Cache unpopulated."),
              !1
            );
          const Ke = Date.now() - Pe,
            ct = Ke <= fe;
          return (
            this.logger.debug(
              `Config fetch cache check. Cache age millis: ${Ke}. Cache max age millis (minimumFetchIntervalMillis setting): ${fe}. Is cache hit: ${ct}.`
            ),
            ct
          );
        }
        fetch(fe) {
          var Pe = this;
          return (0, f.Z)(function* () {
            const [Ke, ct] = yield Promise.all([
              Pe.storage.getLastSuccessfulFetchTimestampMillis(),
              Pe.storage.getLastSuccessfulFetchResponse(),
            ]);
            if (ct && Pe.isCachedDataFresh(fe.cacheMaxAgeMillis, Ke)) return ct;
            fe.eTag = ct && ct.eTag;
            const Ut = yield Pe.client.fetch(fe),
              Rt = [
                Pe.storageCache.setLastSuccessfulFetchTimestampMillis(
                  Date.now()
                ),
              ];
            return (
              200 === Ut.status &&
                Rt.push(Pe.storage.setLastSuccessfulFetchResponse(Ut)),
              yield Promise.all(Rt),
              Ut
            );
          })();
        }
      }
      function $e(Me = navigator) {
        return (Me.languages && Me.languages[0]) || Me.language;
      }
      class ht {
        constructor(fe, Pe, Ke, ct, Ut, Rt) {
          (this.firebaseInstallations = fe),
            (this.sdkVersion = Pe),
            (this.namespace = Ke),
            (this.projectId = ct),
            (this.apiKey = Ut),
            (this.appId = Rt);
        }
        fetch(fe) {
          var Pe = this;
          return (0, f.Z)(function* () {
            var Ke, ct, Ut;
            const [Rt, Yt] = yield Promise.all([
                Pe.firebaseInstallations.getId(),
                Pe.firebaseInstallations.getToken(),
              ]),
              Nn = `${
                window.FIREBASE_REMOTE_CONFIG_URL_BASE ||
                "https://firebaseremoteconfig.googleapis.com"
              }/v1/projects/${Pe.projectId}/namespaces/${
                Pe.namespace
              }:fetch?key=${Pe.apiKey}`,
              bt = {
                "Content-Type": "application/json",
                "Content-Encoding": "gzip",
                "If-None-Match": fe.eTag || "*",
              },
              qe = {
                sdk_version: Pe.sdkVersion,
                app_instance_id: Rt,
                app_instance_id_token: Yt,
                app_id: Pe.appId,
                language_code: $e(),
              },
              it = { method: "POST", headers: bt, body: JSON.stringify(qe) },
              Bn = fetch(Nn, it),
              Vn = new Promise((gn, j) => {
                fe.signal.addEventListener(() => {
                  const $ = new Error("The operation was aborted.");
                  ($.name = "AbortError"), j($);
                });
              });
            let Mt;
            try {
              yield Promise.race([Bn, Vn]), (Mt = yield Bn);
            } catch (gn) {
              let j = "fetch-client-network";
              throw (
                ("AbortError" ===
                  (null === (Ke = gn) || void 0 === Ke ? void 0 : Ke.name) &&
                  (j = "fetch-timeout"),
                Q.create(j, {
                  originalErrorMessage:
                    null === (ct = gn) || void 0 === ct ? void 0 : ct.message,
                }))
              );
            }
            let kn = Mt.status;
            const bn = Mt.headers.get("ETag") || void 0;
            let dn, Jt;
            if (200 === Mt.status) {
              let gn;
              try {
                gn = yield Mt.json();
              } catch (j) {
                throw Q.create("fetch-client-parse", {
                  originalErrorMessage:
                    null === (Ut = j) || void 0 === Ut ? void 0 : Ut.message,
                });
              }
              (dn = gn.entries), (Jt = gn.state);
            }
            if (
              ("INSTANCE_STATE_UNSPECIFIED" === Jt
                ? (kn = 500)
                : "NO_CHANGE" === Jt
                ? (kn = 304)
                : ("NO_TEMPLATE" === Jt || "EMPTY_CONFIG" === Jt) && (dn = {}),
              304 !== kn && 200 !== kn)
            )
              throw Q.create("fetch-status", { httpStatus: kn });
            return { status: kn, eTag: bn, config: dn };
          })();
        }
      }
      class et {
        constructor(fe, Pe) {
          (this.client = fe), (this.storage = Pe);
        }
        fetch(fe) {
          var Pe = this;
          return (0, f.Z)(function* () {
            const Ke = (yield Pe.storage.getThrottleMetadata()) || {
              backoffCount: 0,
              throttleEndTimeMillis: Date.now(),
            };
            return Pe.attemptFetch(fe, Ke);
          })();
        }
        attemptFetch(fe, { throttleEndTimeMillis: Pe, backoffCount: Ke }) {
          var ct = this;
          return (0, f.Z)(function* () {
            yield (function Gt(Me, fe) {
              return new Promise((Pe, Ke) => {
                const ct = Math.max(fe - Date.now(), 0),
                  Ut = setTimeout(Pe, ct);
                Me.addEventListener(() => {
                  clearTimeout(Ut),
                    Ke(
                      Q.create("fetch-throttle", { throttleEndTimeMillis: fe })
                    );
                });
              });
            })(fe.signal, Pe);
            try {
              const Ut = yield ct.client.fetch(fe);
              return yield ct.storage.deleteThrottleMetadata(), Ut;
            } catch (Ut) {
              if (
                !(function Dt(Me) {
                  if (!(Me instanceof P.ZR && Me.customData)) return !1;
                  const fe = Number(Me.customData.httpStatus);
                  return 429 === fe || 500 === fe || 503 === fe || 504 === fe;
                })(Ut)
              )
                throw Ut;
              const Rt = {
                throttleEndTimeMillis: Date.now() + (0, P.$s)(Ke),
                backoffCount: Ke + 1,
              };
              return (
                yield ct.storage.setThrottleMetadata(Rt),
                ct.attemptFetch(fe, Rt)
              );
            }
          })();
        }
      }
      class pn {
        constructor(fe, Pe, Ke, ct, Ut) {
          (this.app = fe),
            (this._client = Pe),
            (this._storageCache = Ke),
            (this._storage = ct),
            (this._logger = Ut),
            (this._isInitializationComplete = !1),
            (this.settings = {
              fetchTimeoutMillis: 6e4,
              minimumFetchIntervalMillis: 432e5,
            }),
            (this.defaultConfig = {});
        }
        get fetchTimeMillis() {
          return (
            this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1
          );
        }
        get lastFetchStatus() {
          return this._storageCache.getLastFetchStatus() || "no-fetch-yet";
        }
      }
      function zt(Me, fe) {
        var Pe;
        const Ke = Me.target.error || void 0;
        return Q.create(fe, {
          originalErrorMessage:
            Ke && (null === (Pe = Ke) || void 0 === Pe ? void 0 : Pe.message),
        });
      }
      const Nt = "app_namespace_store";
      class Zt {
        constructor(
          fe,
          Pe,
          Ke,
          ct = (function yt() {
            return new Promise((Me, fe) => {
              var Pe;
              try {
                const Ke = indexedDB.open("firebase_remote_config", 1);
                (Ke.onerror = (ct) => {
                  fe(zt(ct, "storage-open"));
                }),
                  (Ke.onsuccess = (ct) => {
                    Me(ct.target.result);
                  }),
                  (Ke.onupgradeneeded = (ct) => {
                    0 === ct.oldVersion &&
                      ct.target.result.createObjectStore(Nt, {
                        keyPath: "compositeKey",
                      });
                  });
              } catch (Ke) {
                fe(
                  Q.create("storage-open", {
                    originalErrorMessage:
                      null === (Pe = Ke) || void 0 === Pe ? void 0 : Pe.message,
                  })
                );
              }
            });
          })()
        ) {
          (this.appId = fe),
            (this.appName = Pe),
            (this.namespace = Ke),
            (this.openDbPromise = ct);
        }
        getLastFetchStatus() {
          return this.get("last_fetch_status");
        }
        setLastFetchStatus(fe) {
          return this.set("last_fetch_status", fe);
        }
        getLastSuccessfulFetchTimestampMillis() {
          return this.get("last_successful_fetch_timestamp_millis");
        }
        setLastSuccessfulFetchTimestampMillis(fe) {
          return this.set("last_successful_fetch_timestamp_millis", fe);
        }
        getLastSuccessfulFetchResponse() {
          return this.get("last_successful_fetch_response");
        }
        setLastSuccessfulFetchResponse(fe) {
          return this.set("last_successful_fetch_response", fe);
        }
        getActiveConfig() {
          return this.get("active_config");
        }
        setActiveConfig(fe) {
          return this.set("active_config", fe);
        }
        getActiveConfigEtag() {
          return this.get("active_config_etag");
        }
        setActiveConfigEtag(fe) {
          return this.set("active_config_etag", fe);
        }
        getThrottleMetadata() {
          return this.get("throttle_metadata");
        }
        setThrottleMetadata(fe) {
          return this.set("throttle_metadata", fe);
        }
        deleteThrottleMetadata() {
          return this.delete("throttle_metadata");
        }
        get(fe) {
          var Pe = this;
          return (0, f.Z)(function* () {
            const Ke = yield Pe.openDbPromise;
            return new Promise((ct, Ut) => {
              var Rt;
              const En = Ke.transaction([Nt], "readonly").objectStore(Nt),
                Nn = Pe.createCompositeKey(fe);
              try {
                const bt = En.get(Nn);
                (bt.onerror = (qe) => {
                  Ut(zt(qe, "storage-get"));
                }),
                  (bt.onsuccess = (qe) => {
                    const it = qe.target.result;
                    ct(it ? it.value : void 0);
                  });
              } catch (bt) {
                Ut(
                  Q.create("storage-get", {
                    originalErrorMessage:
                      null === (Rt = bt) || void 0 === Rt ? void 0 : Rt.message,
                  })
                );
              }
            });
          })();
        }
        set(fe, Pe) {
          var Ke = this;
          return (0, f.Z)(function* () {
            const ct = yield Ke.openDbPromise;
            return new Promise((Ut, Rt) => {
              var Yt;
              const Nn = ct.transaction([Nt], "readwrite").objectStore(Nt),
                bt = Ke.createCompositeKey(fe);
              try {
                const qe = Nn.put({ compositeKey: bt, value: Pe });
                (qe.onerror = (it) => {
                  Rt(zt(it, "storage-set"));
                }),
                  (qe.onsuccess = () => {
                    Ut();
                  });
              } catch (qe) {
                Rt(
                  Q.create("storage-set", {
                    originalErrorMessage:
                      null === (Yt = qe) || void 0 === Yt ? void 0 : Yt.message,
                  })
                );
              }
            });
          })();
        }
        delete(fe) {
          var Pe = this;
          return (0, f.Z)(function* () {
            const Ke = yield Pe.openDbPromise;
            return new Promise((ct, Ut) => {
              var Rt;
              const En = Ke.transaction([Nt], "readwrite").objectStore(Nt),
                Nn = Pe.createCompositeKey(fe);
              try {
                const bt = En.delete(Nn);
                (bt.onerror = (qe) => {
                  Ut(zt(qe, "storage-delete"));
                }),
                  (bt.onsuccess = () => {
                    ct();
                  });
              } catch (bt) {
                Ut(
                  Q.create("storage-delete", {
                    originalErrorMessage:
                      null === (Rt = bt) || void 0 === Rt ? void 0 : Rt.message,
                  })
                );
              }
            });
          })();
        }
        createCompositeKey(fe) {
          return [this.appId, this.appName, this.namespace, fe].join();
        }
      }
      class $t {
        constructor(fe) {
          this.storage = fe;
        }
        getLastFetchStatus() {
          return this.lastFetchStatus;
        }
        getLastSuccessfulFetchTimestampMillis() {
          return this.lastSuccessfulFetchTimestampMillis;
        }
        getActiveConfig() {
          return this.activeConfig;
        }
        loadFromStorage() {
          var fe = this;
          return (0, f.Z)(function* () {
            const Pe = fe.storage.getLastFetchStatus(),
              Ke = fe.storage.getLastSuccessfulFetchTimestampMillis(),
              ct = fe.storage.getActiveConfig(),
              Ut = yield Pe;
            Ut && (fe.lastFetchStatus = Ut);
            const Rt = yield Ke;
            Rt && (fe.lastSuccessfulFetchTimestampMillis = Rt);
            const Yt = yield ct;
            Yt && (fe.activeConfig = Yt);
          })();
        }
        setLastFetchStatus(fe) {
          return (
            (this.lastFetchStatus = fe), this.storage.setLastFetchStatus(fe)
          );
        }
        setLastSuccessfulFetchTimestampMillis(fe) {
          return (
            (this.lastSuccessfulFetchTimestampMillis = fe),
            this.storage.setLastSuccessfulFetchTimestampMillis(fe)
          );
        }
        setActiveConfig(fe) {
          return (this.activeConfig = fe), this.storage.setActiveConfig(fe);
        }
      }
      function xn() {
        return Yn.apply(this, arguments);
      }
      function Yn() {
        return (Yn = (0, f.Z)(function* () {
          if (!(0, P.hl)()) return !1;
          try {
            return yield (0, P.eu)();
          } catch {
            return !1;
          }
        })).apply(this, arguments);
      }
      !(function en() {
        (0, V._registerComponent)(
          new re.wA(
            G,
            function Me(fe, { instanceIdentifier: Pe }) {
              const Ke = fe.getProvider("app").getImmediate(),
                ct = fe.getProvider("installations-internal").getImmediate();
              if (typeof window > "u") throw Q.create("registration-window");
              if (!(0, P.hl)()) throw Q.create("indexed-db-unavailable");
              const { projectId: Ut, apiKey: Rt, appId: Yt } = Ke.options;
              if (!Ut) throw Q.create("registration-project-id");
              if (!Rt) throw Q.create("registration-api-key");
              if (!Yt) throw Q.create("registration-app-id");
              const En = new Zt(Yt, Ke.name, (Pe = Pe || "firebase")),
                Nn = new $t(En),
                bt = new Ie.Yd(ce);
              bt.logLevel = Ie.in.ERROR;
              const qe = new ht(ct, V.SDK_VERSION, Pe, Ut, Rt, Yt),
                it = new et(qe, En),
                Bn = new ae(it, En, Nn, bt),
                Vn = new pn(Ke, Bn, Nn, En, bt);
              return (
                (function Ne(Me) {
                  const fe = (0, P.m9)(Me);
                  fe._initializePromise ||
                    (fe._initializePromise = fe._storageCache
                      .loadFromStorage()
                      .then(() => {
                        fe._isInitializationComplete = !0;
                      }));
                })(Vn),
                Vn
              );
            },
            "PUBLIC"
          ).setMultipleInstances(!0)
        ),
          (0, V.registerVersion)(ce, "0.3.11"),
          (0, V.registerVersion)(ce, "0.3.11", "esm2017");
      })();
    },
    9751: (wt, Oe, M) => {
      M.d(Oe, { y: () => he });
      var f = M(2961),
        V = M(727),
        P = M(8822),
        re = M(9635),
        Ie = M(2416),
        _e = M(576),
        ce = M(2806);
      let he = (() => {
        class Q {
          constructor(Ue) {
            Ue && (this._subscribe = Ue);
          }
          lift(Ue) {
            const Re = new Q();
            return (Re.source = this), (Re.operator = Ue), Re;
          }
          subscribe(Ue, Re, tt) {
            const ge = (function H(Q) {
              return (
                (Q && Q instanceof f.Lv) ||
                ((function G(Q) {
                  return (
                    Q &&
                    (0, _e.m)(Q.next) &&
                    (0, _e.m)(Q.error) &&
                    (0, _e.m)(Q.complete)
                  );
                })(Q) &&
                  (0, V.Nn)(Q))
              );
            })(Ue)
              ? Ue
              : new f.Hp(Ue, Re, tt);
            return (
              (0, ce.x)(() => {
                const { operator: de, source: at } = this;
                ge.add(
                  de
                    ? de.call(ge, at)
                    : at
                    ? this._subscribe(ge)
                    : this._trySubscribe(ge)
                );
              }),
              ge
            );
          }
          _trySubscribe(Ue) {
            try {
              return this._subscribe(Ue);
            } catch (Re) {
              Ue.error(Re);
            }
          }
          forEach(Ue, Re) {
            return new (Re = Ce(Re))((tt, ge) => {
              const de = new f.Hp({
                next: (at) => {
                  try {
                    Ue(at);
                  } catch (rt) {
                    ge(rt), de.unsubscribe();
                  }
                },
                error: ge,
                complete: tt,
              });
              this.subscribe(de);
            });
          }
          _subscribe(Ue) {
            var Re;
            return null === (Re = this.source) || void 0 === Re
              ? void 0
              : Re.subscribe(Ue);
          }
          [P.L]() {
            return this;
          }
          pipe(...Ue) {
            return (0, re.U)(Ue)(this);
          }
          toPromise(Ue) {
            return new (Ue = Ce(Ue))((Re, tt) => {
              let ge;
              this.subscribe(
                (de) => (ge = de),
                (de) => tt(de),
                () => Re(ge)
              );
            });
          }
        }
        return (Q.create = (Be) => new Q(Be)), Q;
      })();
      function Ce(Q) {
        var Be;
        return null !== (Be = Q ?? Ie.v.Promise) && void 0 !== Be
          ? Be
          : Promise;
      }
    },
    7579: (wt, Oe, M) => {
      M.d(Oe, { x: () => ce });
      var f = M(9751),
        V = M(727);
      const re = (0, M(3888).d)(
        (Ce) =>
          function () {
            Ce(this),
              (this.name = "ObjectUnsubscribedError"),
              (this.message = "object unsubscribed");
          }
      );
      var Ie = M(8737),
        _e = M(2806);
      let ce = (() => {
        class Ce extends f.y {
          constructor() {
            super(),
              (this.closed = !1),
              (this.currentObservers = null),
              (this.observers = []),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          lift(H) {
            const Q = new he(this, this);
            return (Q.operator = H), Q;
          }
          _throwIfClosed() {
            if (this.closed) throw new re();
          }
          next(H) {
            (0, _e.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.currentObservers ||
                  (this.currentObservers = Array.from(this.observers));
                for (const Q of this.currentObservers) Q.next(H);
              }
            });
          }
          error(H) {
            (0, _e.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                (this.hasError = this.isStopped = !0), (this.thrownError = H);
                const { observers: Q } = this;
                for (; Q.length; ) Q.shift().error(H);
              }
            });
          }
          complete() {
            (0, _e.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.isStopped = !0;
                const { observers: H } = this;
                for (; H.length; ) H.shift().complete();
              }
            });
          }
          unsubscribe() {
            (this.isStopped = this.closed = !0),
              (this.observers = this.currentObservers = null);
          }
          get observed() {
            var H;
            return (
              (null === (H = this.observers) || void 0 === H
                ? void 0
                : H.length) > 0
            );
          }
          _trySubscribe(H) {
            return this._throwIfClosed(), super._trySubscribe(H);
          }
          _subscribe(H) {
            return (
              this._throwIfClosed(),
              this._checkFinalizedStatuses(H),
              this._innerSubscribe(H)
            );
          }
          _innerSubscribe(H) {
            const { hasError: Q, isStopped: Be, observers: Ue } = this;
            return Q || Be
              ? V.Lc
              : ((this.currentObservers = null),
                Ue.push(H),
                new V.w0(() => {
                  (this.currentObservers = null), (0, Ie.P)(Ue, H);
                }));
          }
          _checkFinalizedStatuses(H) {
            const { hasError: Q, thrownError: Be, isStopped: Ue } = this;
            Q ? H.error(Be) : Ue && H.complete();
          }
          asObservable() {
            const H = new f.y();
            return (H.source = this), H;
          }
        }
        return (Ce.create = (G, H) => new he(G, H)), Ce;
      })();
      class he extends ce {
        constructor(G, H) {
          super(), (this.destination = G), (this.source = H);
        }
        next(G) {
          var H, Q;
          null ===
            (Q =
              null === (H = this.destination) || void 0 === H
                ? void 0
                : H.next) ||
            void 0 === Q ||
            Q.call(H, G);
        }
        error(G) {
          var H, Q;
          null ===
            (Q =
              null === (H = this.destination) || void 0 === H
                ? void 0
                : H.error) ||
            void 0 === Q ||
            Q.call(H, G);
        }
        complete() {
          var G, H;
          null ===
            (H =
              null === (G = this.destination) || void 0 === G
                ? void 0
                : G.complete) ||
            void 0 === H ||
            H.call(G);
        }
        _subscribe(G) {
          var H, Q;
          return null !==
            (Q =
              null === (H = this.source) || void 0 === H
                ? void 0
                : H.subscribe(G)) && void 0 !== Q
            ? Q
            : V.Lc;
        }
      }
    },
    2961: (wt, Oe, M) => {
      M.d(Oe, { Hp: () => tt, Lv: () => Q });
      var f = M(576),
        V = M(727),
        P = M(2416),
        re = M(7849);
      function Ie() {}
      const _e = Ce("C", void 0, void 0);
      function Ce(Ve, Ne, Ae) {
        return { kind: Ve, value: Ne, error: Ae };
      }
      var G = M(3410),
        H = M(2806);
      class Q extends V.w0 {
        constructor(Ne) {
          super(),
            (this.isStopped = !1),
            Ne
              ? ((this.destination = Ne), (0, V.Nn)(Ne) && Ne.add(this))
              : (this.destination = rt);
        }
        static create(Ne, Ae, Xe) {
          return new tt(Ne, Ae, Xe);
        }
        next(Ne) {
          this.isStopped
            ? at(
                (function he(Ve) {
                  return Ce("N", Ve, void 0);
                })(Ne),
                this
              )
            : this._next(Ne);
        }
        error(Ne) {
          this.isStopped
            ? at(
                (function ce(Ve) {
                  return Ce("E", void 0, Ve);
                })(Ne),
                this
              )
            : ((this.isStopped = !0), this._error(Ne));
        }
        complete() {
          this.isStopped
            ? at(_e, this)
            : ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed ||
            ((this.isStopped = !0),
            super.unsubscribe(),
            (this.destination = null));
        }
        _next(Ne) {
          this.destination.next(Ne);
        }
        _error(Ne) {
          try {
            this.destination.error(Ne);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      const Be = Function.prototype.bind;
      function Ue(Ve, Ne) {
        return Be.call(Ve, Ne);
      }
      class Re {
        constructor(Ne) {
          this.partialObserver = Ne;
        }
        next(Ne) {
          const { partialObserver: Ae } = this;
          if (Ae.next)
            try {
              Ae.next(Ne);
            } catch (Xe) {
              ge(Xe);
            }
        }
        error(Ne) {
          const { partialObserver: Ae } = this;
          if (Ae.error)
            try {
              Ae.error(Ne);
            } catch (Xe) {
              ge(Xe);
            }
          else ge(Ne);
        }
        complete() {
          const { partialObserver: Ne } = this;
          if (Ne.complete)
            try {
              Ne.complete();
            } catch (Ae) {
              ge(Ae);
            }
        }
      }
      class tt extends Q {
        constructor(Ne, Ae, Xe) {
          let te;
          if ((super(), (0, f.m)(Ne) || !Ne))
            te = {
              next: Ne ?? void 0,
              error: Ae ?? void 0,
              complete: Xe ?? void 0,
            };
          else {
            let ye;
            this && P.v.useDeprecatedNextContext
              ? ((ye = Object.create(Ne)),
                (ye.unsubscribe = () => this.unsubscribe()),
                (te = {
                  next: Ne.next && Ue(Ne.next, ye),
                  error: Ne.error && Ue(Ne.error, ye),
                  complete: Ne.complete && Ue(Ne.complete, ye),
                }))
              : (te = Ne);
          }
          this.destination = new Re(te);
        }
      }
      function ge(Ve) {
        P.v.useDeprecatedSynchronousErrorHandling
          ? (0, H.O)(Ve)
          : (0, re.h)(Ve);
      }
      function at(Ve, Ne) {
        const { onStoppedNotification: Ae } = P.v;
        Ae && G.z.setTimeout(() => Ae(Ve, Ne));
      }
      const rt = {
        closed: !0,
        next: Ie,
        error: function de(Ve) {
          throw Ve;
        },
        complete: Ie,
      };
    },
    727: (wt, Oe, M) => {
      M.d(Oe, { Lc: () => _e, w0: () => Ie, Nn: () => ce });
      var f = M(576);
      const P = (0, M(3888).d)(
        (Ce) =>
          function (H) {
            Ce(this),
              (this.message = H
                ? `${H.length} errors occurred during unsubscription:\n${H.map(
                    (Q, Be) => `${Be + 1}) ${Q.toString()}`
                  ).join("\n  ")}`
                : ""),
              (this.name = "UnsubscriptionError"),
              (this.errors = H);
          }
      );
      var re = M(8737);
      class Ie {
        constructor(G) {
          (this.initialTeardown = G),
            (this.closed = !1),
            (this._parentage = null),
            (this._finalizers = null);
        }
        unsubscribe() {
          let G;
          if (!this.closed) {
            this.closed = !0;
            const { _parentage: H } = this;
            if (H)
              if (((this._parentage = null), Array.isArray(H)))
                for (const Ue of H) Ue.remove(this);
              else H.remove(this);
            const { initialTeardown: Q } = this;
            if ((0, f.m)(Q))
              try {
                Q();
              } catch (Ue) {
                G = Ue instanceof P ? Ue.errors : [Ue];
              }
            const { _finalizers: Be } = this;
            if (Be) {
              this._finalizers = null;
              for (const Ue of Be)
                try {
                  he(Ue);
                } catch (Re) {
                  (G = G ?? []),
                    Re instanceof P ? (G = [...G, ...Re.errors]) : G.push(Re);
                }
            }
            if (G) throw new P(G);
          }
        }
        add(G) {
          var H;
          if (G && G !== this)
            if (this.closed) he(G);
            else {
              if (G instanceof Ie) {
                if (G.closed || G._hasParent(this)) return;
                G._addParent(this);
              }
              (this._finalizers =
                null !== (H = this._finalizers) && void 0 !== H ? H : []).push(
                G
              );
            }
        }
        _hasParent(G) {
          const { _parentage: H } = this;
          return H === G || (Array.isArray(H) && H.includes(G));
        }
        _addParent(G) {
          const { _parentage: H } = this;
          this._parentage = Array.isArray(H) ? (H.push(G), H) : H ? [H, G] : G;
        }
        _removeParent(G) {
          const { _parentage: H } = this;
          H === G
            ? (this._parentage = null)
            : Array.isArray(H) && (0, re.P)(H, G);
        }
        remove(G) {
          const { _finalizers: H } = this;
          H && (0, re.P)(H, G), G instanceof Ie && G._removeParent(this);
        }
      }
      Ie.EMPTY = (() => {
        const Ce = new Ie();
        return (Ce.closed = !0), Ce;
      })();
      const _e = Ie.EMPTY;
      function ce(Ce) {
        return (
          Ce instanceof Ie ||
          (Ce &&
            "closed" in Ce &&
            (0, f.m)(Ce.remove) &&
            (0, f.m)(Ce.add) &&
            (0, f.m)(Ce.unsubscribe))
        );
      }
      function he(Ce) {
        (0, f.m)(Ce) ? Ce() : Ce.unsubscribe();
      }
    },
    2416: (wt, Oe, M) => {
      M.d(Oe, { v: () => f });
      const f = {
        onUnhandledError: null,
        onStoppedNotification: null,
        Promise: void 0,
        useDeprecatedSynchronousErrorHandling: !1,
        useDeprecatedNextContext: !1,
      };
    },
    515: (wt, Oe, M) => {
      M.d(Oe, { E: () => V });
      const V = new (M(9751).y)((Ie) => Ie.complete());
    },
    8996: (wt, Oe, M) => {
      M.d(Oe, { D: () => Ne });
      var f = M(8421),
        V = M(5363),
        P = M(9468),
        _e = M(9751),
        he = M(2202),
        Ce = M(576),
        G = M(9672);
      function Q(Ae, Xe) {
        if (!Ae) throw new Error("Iterable cannot be null");
        return new _e.y((te) => {
          (0, G.f)(te, Xe, () => {
            const ye = Ae[Symbol.asyncIterator]();
            (0, G.f)(
              te,
              Xe,
              () => {
                ye.next().then((De) => {
                  De.done ? te.complete() : te.next(De.value);
                });
              },
              0,
              !0
            );
          });
        });
      }
      var Be = M(3670),
        Ue = M(8239),
        Re = M(1144),
        tt = M(6495),
        ge = M(2206),
        de = M(4532),
        at = M(3260);
      function Ne(Ae, Xe) {
        return Xe
          ? (function Ve(Ae, Xe) {
              if (null != Ae) {
                if ((0, Be.c)(Ae))
                  return (function re(Ae, Xe) {
                    return (0, f.Xf)(Ae).pipe((0, P.R)(Xe), (0, V.Q)(Xe));
                  })(Ae, Xe);
                if ((0, Re.z)(Ae))
                  return (function ce(Ae, Xe) {
                    return new _e.y((te) => {
                      let ye = 0;
                      return Xe.schedule(function () {
                        ye === Ae.length
                          ? te.complete()
                          : (te.next(Ae[ye++]), te.closed || this.schedule());
                      });
                    });
                  })(Ae, Xe);
                if ((0, Ue.t)(Ae))
                  return (function Ie(Ae, Xe) {
                    return (0, f.Xf)(Ae).pipe((0, P.R)(Xe), (0, V.Q)(Xe));
                  })(Ae, Xe);
                if ((0, ge.D)(Ae)) return Q(Ae, Xe);
                if ((0, tt.T)(Ae))
                  return (function H(Ae, Xe) {
                    return new _e.y((te) => {
                      let ye;
                      return (
                        (0, G.f)(te, Xe, () => {
                          (ye = Ae[he.h]()),
                            (0, G.f)(
                              te,
                              Xe,
                              () => {
                                let De, X;
                                try {
                                  ({ value: De, done: X } = ye.next());
                                } catch (ne) {
                                  return void te.error(ne);
                                }
                                X ? te.complete() : te.next(De);
                              },
                              0,
                              !0
                            );
                        }),
                        () => (0, Ce.m)(ye?.return) && ye.return()
                      );
                    });
                  })(Ae, Xe);
                if ((0, at.L)(Ae))
                  return (function rt(Ae, Xe) {
                    return Q((0, at.Q)(Ae), Xe);
                  })(Ae, Xe);
              }
              throw (0, de.z)(Ae);
            })(Ae, Xe)
          : (0, f.Xf)(Ae);
      }
    },
    8421: (wt, Oe, M) => {
      M.d(Oe, { Xf: () => Be });
      var f = M(655),
        V = M(1144),
        P = M(8239),
        re = M(9751),
        Ie = M(3670),
        _e = M(2206),
        ce = M(4532),
        he = M(6495),
        Ce = M(3260),
        G = M(576),
        H = M(7849),
        Q = M(8822);
      function Be(Ve) {
        if (Ve instanceof re.y) return Ve;
        if (null != Ve) {
          if ((0, Ie.c)(Ve))
            return (function Ue(Ve) {
              return new re.y((Ne) => {
                const Ae = Ve[Q.L]();
                if ((0, G.m)(Ae.subscribe)) return Ae.subscribe(Ne);
                throw new TypeError(
                  "Provided object does not correctly implement Symbol.observable"
                );
              });
            })(Ve);
          if ((0, V.z)(Ve))
            return (function Re(Ve) {
              return new re.y((Ne) => {
                for (let Ae = 0; Ae < Ve.length && !Ne.closed; Ae++)
                  Ne.next(Ve[Ae]);
                Ne.complete();
              });
            })(Ve);
          if ((0, P.t)(Ve))
            return (function tt(Ve) {
              return new re.y((Ne) => {
                Ve.then(
                  (Ae) => {
                    Ne.closed || (Ne.next(Ae), Ne.complete());
                  },
                  (Ae) => Ne.error(Ae)
                ).then(null, H.h);
              });
            })(Ve);
          if ((0, _e.D)(Ve)) return de(Ve);
          if ((0, he.T)(Ve))
            return (function ge(Ve) {
              return new re.y((Ne) => {
                for (const Ae of Ve) if ((Ne.next(Ae), Ne.closed)) return;
                Ne.complete();
              });
            })(Ve);
          if ((0, Ce.L)(Ve))
            return (function at(Ve) {
              return de((0, Ce.Q)(Ve));
            })(Ve);
        }
        throw (0, ce.z)(Ve);
      }
      function de(Ve) {
        return new re.y((Ne) => {
          (function rt(Ve, Ne) {
            var Ae, Xe, te, ye;
            return (0, f.mG)(this, void 0, void 0, function* () {
              try {
                for (Ae = (0, f.KL)(Ve); !(Xe = yield Ae.next()).done; )
                  if ((Ne.next(Xe.value), Ne.closed)) return;
              } catch (De) {
                te = { error: De };
              } finally {
                try {
                  Xe && !Xe.done && (ye = Ae.return) && (yield ye.call(Ae));
                } finally {
                  if (te) throw te.error;
                }
              }
              Ne.complete();
            });
          })(Ve, Ne).catch((Ae) => Ne.error(Ae));
        });
      }
    },
    6451: (wt, Oe, M) => {
      M.d(Oe, { T: () => _e });
      var f = M(8189),
        V = M(8421),
        P = M(515),
        re = M(7669),
        Ie = M(8996);
      function _e(...ce) {
        const he = (0, re.yG)(ce),
          Ce = (0, re._6)(ce, 1 / 0),
          G = ce;
        return G.length
          ? 1 === G.length
            ? (0, V.Xf)(G[0])
            : (0, f.J)(Ce)((0, Ie.D)(G, he))
          : P.E;
      }
    },
    5403: (wt, Oe, M) => {
      M.d(Oe, { Q: () => P, x: () => V });
      var f = M(2961);
      function V(re, Ie, _e, ce, he) {
        return new P(re, Ie, _e, ce, he);
      }
      class P extends f.Lv {
        constructor(Ie, _e, ce, he, Ce, G) {
          super(Ie),
            (this.onFinalize = Ce),
            (this.shouldUnsubscribe = G),
            (this._next = _e
              ? function (H) {
                  try {
                    _e(H);
                  } catch (Q) {
                    Ie.error(Q);
                  }
                }
              : super._next),
            (this._error = he
              ? function (H) {
                  try {
                    he(H);
                  } catch (Q) {
                    Ie.error(Q);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._error),
            (this._complete = ce
              ? function () {
                  try {
                    ce();
                  } catch (H) {
                    Ie.error(H);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._complete);
        }
        unsubscribe() {
          var Ie;
          if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            const { closed: _e } = this;
            super.unsubscribe(),
              !_e &&
                (null === (Ie = this.onFinalize) ||
                  void 0 === Ie ||
                  Ie.call(this));
          }
        }
      }
    },
    4004: (wt, Oe, M) => {
      M.d(Oe, { U: () => P });
      var f = M(4482),
        V = M(5403);
      function P(re, Ie) {
        return (0, f.e)((_e, ce) => {
          let he = 0;
          _e.subscribe(
            (0, V.x)(ce, (Ce) => {
              ce.next(re.call(Ie, Ce, he++));
            })
          );
        });
      }
    },
    8189: (wt, Oe, M) => {
      M.d(Oe, { J: () => P });
      var f = M(5577),
        V = M(4671);
      function P(re = 1 / 0) {
        return (0, f.z)(V.y, re);
      }
    },
    5577: (wt, Oe, M) => {
      M.d(Oe, { z: () => he });
      var f = M(4004),
        V = M(8421),
        P = M(4482),
        re = M(9672),
        Ie = M(5403),
        ce = M(576);
      function he(Ce, G, H = 1 / 0) {
        return (0, ce.m)(G)
          ? he(
              (Q, Be) =>
                (0, f.U)((Ue, Re) => G(Q, Ue, Be, Re))((0, V.Xf)(Ce(Q, Be))),
              H
            )
          : ("number" == typeof G && (H = G),
            (0, P.e)((Q, Be) =>
              (function _e(Ce, G, H, Q, Be, Ue, Re, tt) {
                const ge = [];
                let de = 0,
                  at = 0,
                  rt = !1;
                const Ve = () => {
                    rt && !ge.length && !de && G.complete();
                  },
                  Ne = (Xe) => (de < Q ? Ae(Xe) : ge.push(Xe)),
                  Ae = (Xe) => {
                    Ue && G.next(Xe), de++;
                    let te = !1;
                    (0, V.Xf)(H(Xe, at++)).subscribe(
                      (0, Ie.x)(
                        G,
                        (ye) => {
                          Be?.(ye), Ue ? Ne(ye) : G.next(ye);
                        },
                        () => {
                          te = !0;
                        },
                        void 0,
                        () => {
                          if (te)
                            try {
                              for (de--; ge.length && de < Q; ) {
                                const ye = ge.shift();
                                Re ? (0, re.f)(G, Re, () => Ae(ye)) : Ae(ye);
                              }
                              Ve();
                            } catch (ye) {
                              G.error(ye);
                            }
                        }
                      )
                    );
                  };
                return (
                  Ce.subscribe(
                    (0, Ie.x)(G, Ne, () => {
                      (rt = !0), Ve();
                    })
                  ),
                  () => {
                    tt?.();
                  }
                );
              })(Q, Be, Ce, H)
            ));
      }
    },
    5363: (wt, Oe, M) => {
      M.d(Oe, { Q: () => re });
      var f = M(9672),
        V = M(4482),
        P = M(5403);
      function re(Ie, _e = 0) {
        return (0, V.e)((ce, he) => {
          ce.subscribe(
            (0, P.x)(
              he,
              (Ce) => (0, f.f)(he, Ie, () => he.next(Ce), _e),
              () => (0, f.f)(he, Ie, () => he.complete(), _e),
              (Ce) => (0, f.f)(he, Ie, () => he.error(Ce), _e)
            )
          );
        });
      }
    },
    3099: (wt, Oe, M) => {
      M.d(Oe, { B: () => Ie });
      var f = M(8421),
        V = M(7579),
        P = M(2961),
        re = M(4482);
      function Ie(ce = {}) {
        const {
          connector: he = () => new V.x(),
          resetOnError: Ce = !0,
          resetOnComplete: G = !0,
          resetOnRefCountZero: H = !0,
        } = ce;
        return (Q) => {
          let Be,
            Ue,
            Re,
            tt = 0,
            ge = !1,
            de = !1;
          const at = () => {
              Ue?.unsubscribe(), (Ue = void 0);
            },
            rt = () => {
              at(), (Be = Re = void 0), (ge = de = !1);
            },
            Ve = () => {
              const Ne = Be;
              rt(), Ne?.unsubscribe();
            };
          return (0, re.e)((Ne, Ae) => {
            tt++, !de && !ge && at();
            const Xe = (Re = Re ?? he());
            Ae.add(() => {
              tt--, 0 === tt && !de && !ge && (Ue = _e(Ve, H));
            }),
              Xe.subscribe(Ae),
              !Be &&
                tt > 0 &&
                ((Be = new P.Hp({
                  next: (te) => Xe.next(te),
                  error: (te) => {
                    (de = !0), at(), (Ue = _e(rt, Ce, te)), Xe.error(te);
                  },
                  complete: () => {
                    (ge = !0), at(), (Ue = _e(rt, G)), Xe.complete();
                  },
                })),
                (0, f.Xf)(Ne).subscribe(Be));
          })(Q);
        };
      }
      function _e(ce, he, ...Ce) {
        if (!0 === he) return void ce();
        if (!1 === he) return;
        const G = new P.Hp({
          next: () => {
            G.unsubscribe(), ce();
          },
        });
        return he(...Ce).subscribe(G);
      }
    },
    9468: (wt, Oe, M) => {
      M.d(Oe, { R: () => V });
      var f = M(4482);
      function V(P, re = 0) {
        return (0, f.e)((Ie, _e) => {
          _e.add(P.schedule(() => Ie.subscribe(_e), re));
        });
      }
    },
    8505: (wt, Oe, M) => {
      M.d(Oe, { b: () => Ie });
      var f = M(576),
        V = M(4482),
        P = M(5403),
        re = M(4671);
      function Ie(_e, ce, he) {
        const Ce =
          (0, f.m)(_e) || ce || he ? { next: _e, error: ce, complete: he } : _e;
        return Ce
          ? (0, V.e)((G, H) => {
              var Q;
              null === (Q = Ce.subscribe) || void 0 === Q || Q.call(Ce);
              let Be = !0;
              G.subscribe(
                (0, P.x)(
                  H,
                  (Ue) => {
                    var Re;
                    null === (Re = Ce.next) || void 0 === Re || Re.call(Ce, Ue),
                      H.next(Ue);
                  },
                  () => {
                    var Ue;
                    (Be = !1),
                      null === (Ue = Ce.complete) ||
                        void 0 === Ue ||
                        Ue.call(Ce),
                      H.complete();
                  },
                  (Ue) => {
                    var Re;
                    (Be = !1),
                      null === (Re = Ce.error) ||
                        void 0 === Re ||
                        Re.call(Ce, Ue),
                      H.error(Ue);
                  },
                  () => {
                    var Ue, Re;
                    Be &&
                      (null === (Ue = Ce.unsubscribe) ||
                        void 0 === Ue ||
                        Ue.call(Ce)),
                      null === (Re = Ce.finalize) ||
                        void 0 === Re ||
                        Re.call(Ce);
                  }
                )
              );
            })
          : re.y;
      }
    },
    4408: (wt, Oe, M) => {
      M.d(Oe, { o: () => Ie });
      var f = M(727);
      class V extends f.w0 {
        constructor(ce, he) {
          super();
        }
        schedule(ce, he = 0) {
          return this;
        }
      }
      const P = {
        setInterval(_e, ce, ...he) {
          const { delegate: Ce } = P;
          return Ce?.setInterval
            ? Ce.setInterval(_e, ce, ...he)
            : setInterval(_e, ce, ...he);
        },
        clearInterval(_e) {
          const { delegate: ce } = P;
          return (ce?.clearInterval || clearInterval)(_e);
        },
        delegate: void 0,
      };
      var re = M(8737);
      class Ie extends V {
        constructor(ce, he) {
          super(ce, he),
            (this.scheduler = ce),
            (this.work = he),
            (this.pending = !1);
        }
        schedule(ce, he = 0) {
          if (this.closed) return this;
          this.state = ce;
          const Ce = this.id,
            G = this.scheduler;
          return (
            null != Ce && (this.id = this.recycleAsyncId(G, Ce, he)),
            (this.pending = !0),
            (this.delay = he),
            (this.id = this.id || this.requestAsyncId(G, this.id, he)),
            this
          );
        }
        requestAsyncId(ce, he, Ce = 0) {
          return P.setInterval(ce.flush.bind(ce, this), Ce);
        }
        recycleAsyncId(ce, he, Ce = 0) {
          if (null != Ce && this.delay === Ce && !1 === this.pending) return he;
          P.clearInterval(he);
        }
        execute(ce, he) {
          if (this.closed) return new Error("executing a cancelled action");
          this.pending = !1;
          const Ce = this._execute(ce, he);
          if (Ce) return Ce;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(ce, he) {
          let G,
            Ce = !1;
          try {
            this.work(ce);
          } catch (H) {
            (Ce = !0),
              (G = H || new Error("Scheduled action threw falsy error"));
          }
          if (Ce) return this.unsubscribe(), G;
        }
        unsubscribe() {
          if (!this.closed) {
            const { id: ce, scheduler: he } = this,
              { actions: Ce } = he;
            (this.work = this.state = this.scheduler = null),
              (this.pending = !1),
              (0, re.P)(Ce, this),
              null != ce && (this.id = this.recycleAsyncId(he, ce, null)),
              (this.delay = null),
              super.unsubscribe();
          }
        }
      }
    },
    7565: (wt, Oe, M) => {
      M.d(Oe, { v: () => P });
      var f = M(6063);
      class V {
        constructor(Ie, _e = V.now) {
          (this.schedulerActionCtor = Ie), (this.now = _e);
        }
        schedule(Ie, _e = 0, ce) {
          return new this.schedulerActionCtor(this, Ie).schedule(ce, _e);
        }
      }
      V.now = f.l.now;
      class P extends V {
        constructor(Ie, _e = V.now) {
          super(Ie, _e),
            (this.actions = []),
            (this._active = !1),
            (this._scheduled = void 0);
        }
        flush(Ie) {
          const { actions: _e } = this;
          if (this._active) return void _e.push(Ie);
          let ce;
          this._active = !0;
          do {
            if ((ce = Ie.execute(Ie.state, Ie.delay))) break;
          } while ((Ie = _e.shift()));
          if (((this._active = !1), ce)) {
            for (; (Ie = _e.shift()); ) Ie.unsubscribe();
            throw ce;
          }
        }
      }
    },
    4986: (wt, Oe, M) => {
      M.d(Oe, { z: () => P });
      var f = M(4408);
      const P = new (M(7565).v)(f.o);
    },
    6063: (wt, Oe, M) => {
      M.d(Oe, { l: () => f });
      const f = { now: () => (f.delegate || Date).now(), delegate: void 0 };
    },
    3410: (wt, Oe, M) => {
      M.d(Oe, { z: () => f });
      const f = {
        setTimeout(V, P, ...re) {
          const { delegate: Ie } = f;
          return Ie?.setTimeout
            ? Ie.setTimeout(V, P, ...re)
            : setTimeout(V, P, ...re);
        },
        clearTimeout(V) {
          const { delegate: P } = f;
          return (P?.clearTimeout || clearTimeout)(V);
        },
        delegate: void 0,
      };
    },
    2202: (wt, Oe, M) => {
      M.d(Oe, { h: () => V });
      const V = (function f() {
        return "function" == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : "@@iterator";
      })();
    },
    8822: (wt, Oe, M) => {
      M.d(Oe, { L: () => f });
      const f =
        ("function" == typeof Symbol && Symbol.observable) || "@@observable";
    },
    7669: (wt, Oe, M) => {
      M.d(Oe, { _6: () => _e, jO: () => re, yG: () => Ie });
      var f = M(576);
      function P(ce) {
        return ce[ce.length - 1];
      }
      function re(ce) {
        return (0, f.m)(P(ce)) ? ce.pop() : void 0;
      }
      function Ie(ce) {
        return (function V(ce) {
          return ce && (0, f.m)(ce.schedule);
        })(P(ce))
          ? ce.pop()
          : void 0;
      }
      function _e(ce, he) {
        return "number" == typeof P(ce) ? ce.pop() : he;
      }
    },
    8737: (wt, Oe, M) => {
      function f(V, P) {
        if (V) {
          const re = V.indexOf(P);
          0 <= re && V.splice(re, 1);
        }
      }
      M.d(Oe, { P: () => f });
    },
    3888: (wt, Oe, M) => {
      function f(V) {
        const re = V((Ie) => {
          Error.call(Ie), (Ie.stack = new Error().stack);
        });
        return (
          (re.prototype = Object.create(Error.prototype)),
          (re.prototype.constructor = re),
          re
        );
      }
      M.d(Oe, { d: () => f });
    },
    2806: (wt, Oe, M) => {
      M.d(Oe, { O: () => re, x: () => P });
      var f = M(2416);
      let V = null;
      function P(Ie) {
        if (f.v.useDeprecatedSynchronousErrorHandling) {
          const _e = !V;
          if ((_e && (V = { errorThrown: !1, error: null }), Ie(), _e)) {
            const { errorThrown: ce, error: he } = V;
            if (((V = null), ce)) throw he;
          }
        } else Ie();
      }
      function re(Ie) {
        f.v.useDeprecatedSynchronousErrorHandling &&
          V &&
          ((V.errorThrown = !0), (V.error = Ie));
      }
    },
    9672: (wt, Oe, M) => {
      function f(V, P, re, Ie = 0, _e = !1) {
        const ce = P.schedule(function () {
          re(), _e ? V.add(this.schedule(null, Ie)) : this.unsubscribe();
        }, Ie);
        if ((V.add(ce), !_e)) return ce;
      }
      M.d(Oe, { f: () => f });
    },
    4671: (wt, Oe, M) => {
      function f(V) {
        return V;
      }
      M.d(Oe, { y: () => f });
    },
    1144: (wt, Oe, M) => {
      M.d(Oe, { z: () => f });
      const f = (V) =>
        V && "number" == typeof V.length && "function" != typeof V;
    },
    2206: (wt, Oe, M) => {
      M.d(Oe, { D: () => V });
      var f = M(576);
      function V(P) {
        return Symbol.asyncIterator && (0, f.m)(P?.[Symbol.asyncIterator]);
      }
    },
    576: (wt, Oe, M) => {
      function f(V) {
        return "function" == typeof V;
      }
      M.d(Oe, { m: () => f });
    },
    3670: (wt, Oe, M) => {
      M.d(Oe, { c: () => P });
      var f = M(8822),
        V = M(576);
      function P(re) {
        return (0, V.m)(re[f.L]);
      }
    },
    6495: (wt, Oe, M) => {
      M.d(Oe, { T: () => P });
      var f = M(2202),
        V = M(576);
      function P(re) {
        return (0, V.m)(re?.[f.h]);
      }
    },
    8239: (wt, Oe, M) => {
      M.d(Oe, { t: () => V });
      var f = M(576);
      function V(P) {
        return (0, f.m)(P?.then);
      }
    },
    3260: (wt, Oe, M) => {
      M.d(Oe, { L: () => re, Q: () => P });
      var f = M(655),
        V = M(576);
      function P(Ie) {
        return (0, f.FC)(this, arguments, function* () {
          const ce = Ie.getReader();
          try {
            for (;;) {
              const { value: he, done: Ce } = yield (0, f.qq)(ce.read());
              if (Ce) return yield (0, f.qq)(void 0);
              yield yield (0, f.qq)(he);
            }
          } finally {
            ce.releaseLock();
          }
        });
      }
      function re(Ie) {
        return (0, V.m)(Ie?.getReader);
      }
    },
    4482: (wt, Oe, M) => {
      M.d(Oe, { A: () => V, e: () => P });
      var f = M(576);
      function V(re) {
        return (0, f.m)(re?.lift);
      }
      function P(re) {
        return (Ie) => {
          if (V(Ie))
            return Ie.lift(function (_e) {
              try {
                return re(_e, this);
              } catch (ce) {
                this.error(ce);
              }
            });
          throw new TypeError("Unable to lift unknown Observable type");
        };
      }
    },
    9635: (wt, Oe, M) => {
      M.d(Oe, { U: () => P, z: () => V });
      var f = M(4671);
      function V(...re) {
        return P(re);
      }
      function P(re) {
        return 0 === re.length
          ? f.y
          : 1 === re.length
          ? re[0]
          : function (_e) {
              return re.reduce((ce, he) => he(ce), _e);
            };
      }
    },
    7849: (wt, Oe, M) => {
      M.d(Oe, { h: () => P });
      var f = M(2416),
        V = M(3410);
      function P(re) {
        V.z.setTimeout(() => {
          const { onUnhandledError: Ie } = f.v;
          if (!Ie) throw re;
          Ie(re);
        });
      }
    },
    4532: (wt, Oe, M) => {
      function f(V) {
        return new TypeError(
          `You provided ${
            null !== V && "object" == typeof V ? "an invalid object" : `'${V}'`
          } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`
        );
      }
      M.d(Oe, { z: () => f });
    },
    655: (wt, Oe, M) => {
      function re(X, ne) {
        var se = {};
        for (var ve in X)
          Object.prototype.hasOwnProperty.call(X, ve) &&
            ne.indexOf(ve) < 0 &&
            (se[ve] = X[ve]);
        if (null != X && "function" == typeof Object.getOwnPropertySymbols) {
          var ae = 0;
          for (ve = Object.getOwnPropertySymbols(X); ae < ve.length; ae++)
            ne.indexOf(ve[ae]) < 0 &&
              Object.prototype.propertyIsEnumerable.call(X, ve[ae]) &&
              (se[ve[ae]] = X[ve[ae]]);
        }
        return se;
      }
      function he(X, ne, se, ve) {
        return new (se || (se = Promise))(function ($e, ht) {
          function Gt(Vt) {
            try {
              et(ve.next(Vt));
            } catch (Ln) {
              ht(Ln);
            }
          }
          function Dt(Vt) {
            try {
              et(ve.throw(Vt));
            } catch (Ln) {
              ht(Ln);
            }
          }
          function et(Vt) {
            Vt.done
              ? $e(Vt.value)
              : (function ae($e) {
                  return $e instanceof se
                    ? $e
                    : new se(function (ht) {
                        ht($e);
                      });
                })(Vt.value).then(Gt, Dt);
          }
          et((ve = ve.apply(X, ne || [])).next());
        });
      }
      function ge(X) {
        return this instanceof ge ? ((this.v = X), this) : new ge(X);
      }
      function de(X, ne, se) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var ae,
          ve = se.apply(X, ne || []),
          $e = [];
        return (
          (ae = {}),
          ht("next"),
          ht("throw"),
          ht("return"),
          (ae[Symbol.asyncIterator] = function () {
            return this;
          }),
          ae
        );
        function ht(pn) {
          ve[pn] &&
            (ae[pn] = function (zt) {
              return new Promise(function (Nt, ze) {
                $e.push([pn, zt, Nt, ze]) > 1 || Gt(pn, zt);
              });
            });
        }
        function Gt(pn, zt) {
          try {
            !(function Dt(pn) {
              pn.value instanceof ge
                ? Promise.resolve(pn.value.v).then(et, Vt)
                : Ln($e[0][2], pn);
            })(ve[pn](zt));
          } catch (Nt) {
            Ln($e[0][3], Nt);
          }
        }
        function et(pn) {
          Gt("next", pn);
        }
        function Vt(pn) {
          Gt("throw", pn);
        }
        function Ln(pn, zt) {
          pn(zt), $e.shift(), $e.length && Gt($e[0][0], $e[0][1]);
        }
      }
      function rt(X) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var se,
          ne = X[Symbol.asyncIterator];
        return ne
          ? ne.call(X)
          : ((X = (function Q(X) {
              var ne = "function" == typeof Symbol && Symbol.iterator,
                se = ne && X[ne],
                ve = 0;
              if (se) return se.call(X);
              if (X && "number" == typeof X.length)
                return {
                  next: function () {
                    return (
                      X && ve >= X.length && (X = void 0),
                      { value: X && X[ve++], done: !X }
                    );
                  },
                };
              throw new TypeError(
                ne
                  ? "Object is not iterable."
                  : "Symbol.iterator is not defined."
              );
            })(X)),
            (se = {}),
            ve("next"),
            ve("throw"),
            ve("return"),
            (se[Symbol.asyncIterator] = function () {
              return this;
            }),
            se);
        function ve($e) {
          se[$e] =
            X[$e] &&
            function (ht) {
              return new Promise(function (Gt, Dt) {
                !(function ae($e, ht, Gt, Dt) {
                  Promise.resolve(Dt).then(function (et) {
                    $e({ value: et, done: Gt });
                  }, ht);
                })(Gt, Dt, (ht = X[$e](ht)).done, ht.value);
              });
            };
        }
      }
      M.d(Oe, {
        FC: () => de,
        KL: () => rt,
        _T: () => re,
        mG: () => he,
        qq: () => ge,
      });
    },
    4650: (wt, Oe, M) => {
      M.d(Oe, {
        $8M: () => bo,
        $Z: () => Ay,
        AFp: () => mE,
        ALo: () => Qv,
        AaK: () => he,
        CHM: () => Eo,
        CRH: () => Og,
        CZH: () => ao,
        CqO: () => qI,
        D6c: () => OR,
        DdM: () => $o,
        EJc: () => Bh,
        EpF: () => WI,
        F4k: () => zI,
        FYo: () => $d,
        FiY: () => Zs,
        G48: () => qh,
        GfV: () => Hd,
        Gpc: () => H,
        JOm: () => Xs,
        KtG: () => ol,
        LFG: () => or,
        LSH: () => _p,
        Lbi: () => Zg,
        Lck: () => Ig,
        MMx: () => Wv,
        NdJ: () => Tu,
        OlP: () => tn,
        Oqu: () => Eh,
        PXZ: () => vR,
        Q6J: () => av,
        QGY: () => lv,
        QP$: () => oo,
        Qsj: () => x0,
        R0b: () => Mi,
        RDi: () => E_,
        Rgc: () => Au,
        SBq: () => jd,
        Sil: () => hR,
        Suo: () => Pg,
        TTD: () => gs,
        TgZ: () => Du,
        VKq: () => HC,
        X6Q: () => Eb,
        XFs: () => Me,
        Xpm: () => U,
        Xts: () => Ai,
        Y36: () => Yl,
        YKP: () => Gv,
        YNc: () => ov,
        Yjl: () => L,
        Yz7: () => zt,
        ZZ4: () => BE,
        _Bn: () => UC,
        _UZ: () => gh,
        _Vd: () => gu,
        _c5: () => NR,
        _uU: () => Cv,
        aQg: () => Ge,
        c2e: () => Yg,
        cJS: () => ze,
        cg1: () => Rv,
        dDg: () => _R,
        deG: () => Id,
        dqk: () => qe,
        eFA: () => bE,
        ekj: () => Iv,
        eoX: () => Hh,
        f3M: () => Al,
        g9A: () => Vh,
        h0i: () => uc,
        hGG: () => PR,
        hij: () => xs,
        iGM: () => rE,
        ifc: () => bt,
        ip1: () => Kg,
        kL8: () => SC,
        lG2: () => ue,
        lcZ: () => Mg,
        lqb: () => pu,
        lri: () => fb,
        n5z: () => wd,
        oAB: () => Pt,
        oxw: () => YI,
        q4F: () => U_,
        qLn: () => Wl,
        qOj: () => Wr,
        qZA: () => ph,
        rWj: () => pb,
        sBO: () => ME,
        sIi: () => gr,
        s_b: () => Th,
        soG: () => Qg,
        tb: () => Uh,
        tp0: () => Ys,
        uIk: () => jI,
        vHH: () => Re,
        vpe: () => Ns,
        wAp: () => jt,
        xp6: () => eI,
        z2F: () => Dc,
        zSh: () => k_,
        zs3: () => Uo,
      });
      var f = M(7579),
        V = M(727),
        P = M(9751),
        re = M(6451),
        Ie = M(3099);
      function _e(s) {
        for (let o in s) if (s[o] === _e) return o;
        throw Error("Could not find renamed property on target object.");
      }
      function ce(s, o) {
        for (const u in o)
          o.hasOwnProperty(u) && !s.hasOwnProperty(u) && (s[u] = o[u]);
      }
      function he(s) {
        if ("string" == typeof s) return s;
        if (Array.isArray(s)) return "[" + s.map(he).join(", ") + "]";
        if (null == s) return "" + s;
        if (s.overriddenName) return `${s.overriddenName}`;
        if (s.name) return `${s.name}`;
        const o = s.toString();
        if (null == o) return "" + o;
        const u = o.indexOf("\n");
        return -1 === u ? o : o.substring(0, u);
      }
      function Ce(s, o) {
        return null == s || "" === s
          ? null === o
            ? ""
            : o
          : null == o || "" === o
          ? s
          : s + " " + o;
      }
      const G = _e({ __forward_ref__: _e });
      function H(s) {
        return (
          (s.__forward_ref__ = H),
          (s.toString = function () {
            return he(this());
          }),
          s
        );
      }
      function Q(s) {
        return Be(s) ? s() : s;
      }
      function Be(s) {
        return (
          "function" == typeof s &&
          s.hasOwnProperty(G) &&
          s.__forward_ref__ === H
        );
      }
      class Re extends Error {
        constructor(o, u) {
          super(
            (function tt(s, o) {
              return `NG0${Math.abs(s)}${o ? ": " + o.trim() : ""}`;
            })(o, u)
          ),
            (this.code = o);
        }
      }
      function ge(s) {
        return "string" == typeof s ? s : null == s ? "" : String(s);
      }
      function Ne(s, o) {
        throw new Re(-201, !1);
      }
      function Dt(s, o) {
        null == s &&
          (function et(s, o, u, c) {
            throw new Error(
              `ASSERTION ERROR: ${s}` +
                (null == c ? "" : ` [Expected=> ${u} ${c} ${o} <=Actual]`)
            );
          })(o, s, null, "!=");
      }
      function zt(s) {
        return {
          token: s.token,
          providedIn: s.providedIn || null,
          factory: s.factory,
          value: void 0,
        };
      }
      function ze(s) {
        return { providers: s.providers || [], imports: s.imports || [] };
      }
      function lt(s) {
        return yt(s, Mn) || yt(s, xn);
      }
      function yt(s, o) {
        return s.hasOwnProperty(o) ? s[o] : null;
      }
      function en(s) {
        return s && (s.hasOwnProperty(On) || s.hasOwnProperty(Yn))
          ? s[On]
          : null;
      }
      const Mn = _e({ ɵprov: _e }),
        On = _e({ ɵinj: _e }),
        xn = _e({ ngInjectableDef: _e }),
        Yn = _e({ ngInjectorDef: _e });
      var Me = (() => (
        ((Me = Me || {})[(Me.Default = 0)] = "Default"),
        (Me[(Me.Host = 1)] = "Host"),
        (Me[(Me.Self = 2)] = "Self"),
        (Me[(Me.SkipSelf = 4)] = "SkipSelf"),
        (Me[(Me.Optional = 8)] = "Optional"),
        Me
      ))();
      let fe;
      function Ke(s) {
        const o = fe;
        return (fe = s), o;
      }
      function ct(s, o, u) {
        const c = lt(s);
        return c && "root" == c.providedIn
          ? void 0 === c.value
            ? (c.value = c.factory())
            : c.value
          : u & Me.Optional
          ? null
          : void 0 !== o
          ? o
          : void Ne(he(s));
      }
      function Rt(s) {
        return { toString: s }.toString();
      }
      var Yt = (() => (
          ((Yt = Yt || {})[(Yt.OnPush = 0)] = "OnPush"),
          (Yt[(Yt.Default = 1)] = "Default"),
          Yt
        ))(),
        bt = (() => {
          return (
            ((s = bt || (bt = {}))[(s.Emulated = 0)] = "Emulated"),
            (s[(s.None = 2)] = "None"),
            (s[(s.ShadowDom = 3)] = "ShadowDom"),
            bt
          );
          var s;
        })();
      const qe = (() =>
          (typeof globalThis < "u" && globalThis) ||
          (typeof global < "u" && global) ||
          (typeof window < "u" && window) ||
          (typeof self < "u" &&
            typeof WorkerGlobalScope < "u" &&
            self instanceof WorkerGlobalScope &&
            self))(),
        Vn = {},
        Mt = [],
        kn = _e({ ɵcmp: _e }),
        bn = _e({ ɵdir: _e }),
        dn = _e({ ɵpipe: _e }),
        Jt = _e({ ɵmod: _e }),
        gn = _e({ ɵfac: _e }),
        j = _e({ __NG_ELEMENT_ID__: _e });
      let $ = 0;
      function U(s) {
        return Rt(() => {
          const u = !0 === s.standalone,
            c = {},
            d = {
              type: s.type,
              providersResolver: null,
              decls: s.decls,
              vars: s.vars,
              factory: null,
              template: s.template || null,
              consts: s.consts || null,
              ngContentSelectors: s.ngContentSelectors,
              hostBindings: s.hostBindings || null,
              hostVars: s.hostVars || 0,
              hostAttrs: s.hostAttrs || null,
              contentQueries: s.contentQueries || null,
              declaredInputs: c,
              inputs: null,
              outputs: null,
              exportAs: s.exportAs || null,
              onPush: s.changeDetection === Yt.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              standalone: u,
              dependencies: (u && s.dependencies) || null,
              getStandaloneInjector: null,
              selectors: s.selectors || Mt,
              viewQuery: s.viewQuery || null,
              features: s.features || null,
              data: s.data || {},
              encapsulation: s.encapsulation || bt.Emulated,
              id: "c" + $++,
              styles: s.styles || Mt,
              _: null,
              setInput: null,
              schemas: s.schemas || null,
              tView: null,
            },
            p = s.dependencies,
            y = s.features;
          return (
            (d.inputs = on(s.inputs, c)),
            (d.outputs = on(s.outputs)),
            y && y.forEach((w) => w(d)),
            (d.directiveDefs = p
              ? () => ("function" == typeof p ? p() : p).map(q).filter(ke)
              : null),
            (d.pipeDefs = p
              ? () => ("function" == typeof p ? p() : p).map(J).filter(ke)
              : null),
            d
          );
        });
      }
      function q(s) {
        return x(s) || k(s);
      }
      function ke(s) {
        return null !== s;
      }
      const st = {};
      function Pt(s) {
        return Rt(() => {
          const o = {
            type: s.type,
            bootstrap: s.bootstrap || Mt,
            declarations: s.declarations || Mt,
            imports: s.imports || Mt,
            exports: s.exports || Mt,
            transitiveCompileScopes: null,
            schemas: s.schemas || null,
            id: s.id || null,
          };
          return null != s.id && (st[s.id] = s.type), o;
        });
      }
      function on(s, o) {
        if (null == s) return Vn;
        const u = {};
        for (const c in s)
          if (s.hasOwnProperty(c)) {
            let d = s[c],
              p = d;
            Array.isArray(d) && ((p = d[1]), (d = d[0])),
              (u[d] = c),
              o && (o[d] = p);
          }
        return u;
      }
      const ue = U;
      function L(s) {
        return {
          type: s.type,
          name: s.name,
          factory: null,
          pure: !1 !== s.pure,
          standalone: !0 === s.standalone,
          onDestroy: s.type.prototype.ngOnDestroy || null,
        };
      }
      function x(s) {
        return s[kn] || null;
      }
      function k(s) {
        return s[bn] || null;
      }
      function J(s) {
        return s[dn] || null;
      }
      function Se(s, o) {
        const u = s[Jt] || null;
        if (!u && !0 === o)
          throw new Error(`Type ${he(s)} does not have '\u0275mod' property.`);
        return u;
      }
      function Dr(s) {
        return Array.isArray(s) && "object" == typeof s[1];
      }
      function li(s) {
        return Array.isArray(s) && !0 === s[1];
      }
      function zu(s) {
        return 0 != (8 & s.flags);
      }
      function Us(s) {
        return 2 == (2 & s.flags);
      }
      function ea(s) {
        return 1 == (1 & s.flags);
      }
      function ci(s) {
        return null !== s.template;
      }
      function Ym(s) {
        return 0 != (256 & s[2]);
      }
      function fs(s, o) {
        return s.hasOwnProperty(gn) ? s[gn] : null;
      }
      class ps {
        constructor(o, u, c) {
          (this.previousValue = o),
            (this.currentValue = u),
            (this.firstChange = c);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function gs() {
        return ta;
      }
      function ta(s) {
        return s.type.prototype.ngOnChanges && (s.setInput = Yu), Xm;
      }
      function Xm() {
        const s = Ju(this),
          o = s?.current;
        if (o) {
          const u = s.previous;
          if (u === Vn) s.previous = o;
          else for (let c in o) u[c] = o[c];
          (s.current = null), this.ngOnChanges(o);
        }
      }
      function Yu(s, o, u, c) {
        const d =
            Ju(s) ||
            (function na(s, o) {
              return (s[Qu] = o);
            })(s, { previous: Vn, current: null }),
          p = d.current || (d.current = {}),
          y = d.previous,
          w = this.declaredInputs[u],
          C = y[w];
        (p[w] = new ps(C && C.currentValue, o, y === Vn)), (s[c] = o);
      }
      gs.ngInherit = !0;
      const Qu = "__ngSimpleChanges__";
      function Ju(s) {
        return s[Qu] || null;
      }
      function sr(s) {
        for (; Array.isArray(s); ) s = s[0];
        return s;
      }
      function qa(s, o) {
        return sr(o[s]);
      }
      function Di(s, o) {
        return sr(o[s.index]);
      }
      function Ka(s, o) {
        return s.data[o];
      }
      function Tr(s, o) {
        const u = o[s];
        return Dr(u) ? u : u[0];
      }
      function rl(s) {
        return 4 == (4 & s[2]);
      }
      function ra(s) {
        return 64 == (64 & s[2]);
      }
      function ms(s, o) {
        return null == o ? null : s[o];
      }
      function yo(s) {
        s[18] = 0;
      }
      function ia(s, o) {
        s[5] += o;
        let u = s,
          c = s[3];
        for (
          ;
          null !== c && ((1 === o && 1 === u[5]) || (-1 === o && 0 === u[5]));

        )
          (c[5] += o), (u = c), (c = c[3]);
      }
      const Ht = { lFrame: Kf(null), bindingsEnabled: !0 };
      function vo() {
        return Ht.bindingsEnabled;
      }
      function je() {
        return Ht.lFrame.lView;
      }
      function mn() {
        return Ht.lFrame.tView;
      }
      function Eo(s) {
        return (Ht.lFrame.contextLView = s), s[8];
      }
      function ol(s) {
        return (Ht.lFrame.contextLView = null), s;
      }
      function Jn() {
        let s = ad();
        for (; null !== s && 64 === s.type; ) s = s.parent;
        return s;
      }
      function ad() {
        return Ht.lFrame.currentTNode;
      }
      function Zi(s, o) {
        const u = Ht.lFrame;
        (u.currentTNode = s), (u.isParent = o);
      }
      function Za() {
        return Ht.lFrame.isParent;
      }
      function fr() {
        const s = Ht.lFrame;
        let o = s.bindingRootIndex;
        return (
          -1 === o && (o = s.bindingRootIndex = s.tView.bindingStartIndex), o
        );
      }
      function ys() {
        return Ht.lFrame.bindingIndex++;
      }
      function Wf(s, o) {
        const u = Ht.lFrame;
        (u.bindingIndex = u.bindingRootIndex = s), cd(o);
      }
      function cd(s) {
        Ht.lFrame.currentDirectiveIndex = s;
      }
      function zf() {
        return Ht.lFrame.currentQueryIndex;
      }
      function Qa(s) {
        Ht.lFrame.currentQueryIndex = s;
      }
      function n_(s) {
        const o = s[1];
        return 2 === o.type ? o.declTNode : 1 === o.type ? s[6] : null;
      }
      function aa(s, o, u) {
        if (u & Me.SkipSelf) {
          let d = o,
            p = s;
          for (
            ;
            !((d = d.parent),
            null !== d ||
              u & Me.Host ||
              ((d = n_(p)), null === d || ((p = p[15]), 10 & d.type)));

          );
          if (null === d) return !1;
          (o = d), (s = p);
        }
        const c = (Ht.lFrame = dd());
        return (c.currentTNode = o), (c.lView = s), !0;
      }
      function qf(s) {
        const o = dd(),
          u = s[1];
        (Ht.lFrame = o),
          (o.currentTNode = u.firstChild),
          (o.lView = s),
          (o.tView = u),
          (o.contextLView = s),
          (o.bindingIndex = u.bindingStartIndex),
          (o.inI18n = !1);
      }
      function dd() {
        const s = Ht.lFrame,
          o = null === s ? null : s.child;
        return null === o ? Kf(s) : o;
      }
      function Kf(s) {
        const o = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: s,
          child: null,
          inI18n: !1,
        };
        return null !== s && (s.child = o), o;
      }
      function ll() {
        const s = Ht.lFrame;
        return (
          (Ht.lFrame = s.parent), (s.currentTNode = null), (s.lView = null), s
        );
      }
      const Zf = ll;
      function cl() {
        const s = ll();
        (s.isParent = !0),
          (s.tView = null),
          (s.selectedIndex = -1),
          (s.contextLView = null),
          (s.elementDepthCount = 0),
          (s.currentDirectiveIndex = -1),
          (s.currentNamespace = null),
          (s.bindingRootIndex = -1),
          (s.bindingIndex = -1),
          (s.currentQueryIndex = 0);
      }
      function Or() {
        return Ht.lFrame.selectedIndex;
      }
      function Yr(s) {
        Ht.lFrame.selectedIndex = s;
      }
      function qn() {
        const s = Ht.lFrame;
        return Ka(s.tView, s.selectedIndex);
      }
      function hd(s, o) {
        for (let u = o.directiveStart, c = o.directiveEnd; u < c; u++) {
          const p = s.data[u].type.prototype,
            {
              ngAfterContentInit: y,
              ngAfterContentChecked: w,
              ngAfterViewInit: C,
              ngAfterViewChecked: T,
              ngOnDestroy: A,
            } = p;
          y && (s.contentHooks || (s.contentHooks = [])).push(-u, y),
            w &&
              ((s.contentHooks || (s.contentHooks = [])).push(u, w),
              (s.contentCheckHooks || (s.contentCheckHooks = [])).push(u, w)),
            C && (s.viewHooks || (s.viewHooks = [])).push(-u, C),
            T &&
              ((s.viewHooks || (s.viewHooks = [])).push(u, T),
              (s.viewCheckHooks || (s.viewCheckHooks = [])).push(u, T)),
            null != A && (s.destroyHooks || (s.destroyHooks = [])).push(u, A);
        }
      }
      function Qf(s, o, u) {
        $s(s, o, 3, u);
      }
      function fd(s, o, u, c) {
        (3 & s[2]) === u && $s(s, o, u, c);
      }
      function pd(s, o) {
        let u = s[2];
        (3 & u) === o && ((u &= 2047), (u += 1), (s[2] = u));
      }
      function $s(s, o, u, c) {
        const p = c ?? -1,
          y = o.length - 1;
        let w = 0;
        for (let C = void 0 !== c ? 65535 & s[18] : 0; C < y; C++)
          if ("number" == typeof o[C + 1]) {
            if (((w = o[C]), null != c && w >= c)) break;
          } else
            o[C] < 0 && (s[18] += 65536),
              (w < p || -1 == p) &&
                (p0(s, u, o, C), (s[18] = (4294901760 & s[18]) + C + 2)),
              C++;
      }
      function p0(s, o, u, c) {
        const d = u[c] < 0,
          p = u[c + 1],
          w = s[d ? -u[c] : u[c]];
        if (d) {
          if (s[2] >> 11 < s[18] >> 16 && (3 & s[2]) === o) {
            s[2] += 2048;
            try {
              p.call(w);
            } finally {
            }
          }
        } else
          try {
            p.call(w);
          } finally {
          }
      }
      class Es {
        constructor(o, u, c) {
          (this.factory = o),
            (this.resolving = !1),
            (this.canSeeViewProviders = u),
            (this.injectImpl = c);
        }
      }
      function gd(s, o, u) {
        let c = 0;
        for (; c < u.length; ) {
          const d = u[c];
          if ("number" == typeof d) {
            if (0 !== d) break;
            c++;
            const p = u[c++],
              y = u[c++],
              w = u[c++];
            s.setAttribute(o, y, w, p);
          } else {
            const p = d,
              y = u[++c];
            md(p) ? s.setProperty(o, p, y) : s.setAttribute(o, p, y), c++;
          }
        }
        return c;
      }
      function pl(s) {
        return 3 === s || 4 === s || 6 === s;
      }
      function md(s) {
        return 64 === s.charCodeAt(0);
      }
      function _d(s, o) {
        if (null !== o && 0 !== o.length)
          if (null === s || 0 === s.length) s = o.slice();
          else {
            let u = -1;
            for (let c = 0; c < o.length; c++) {
              const d = o[c];
              "number" == typeof d
                ? (u = d)
                : 0 === u ||
                  a_(s, u, d, null, -1 === u || 2 === u ? o[++c] : null);
            }
          }
        return s;
      }
      function a_(s, o, u, c, d) {
        let p = 0,
          y = s.length;
        if (-1 === o) y = -1;
        else
          for (; p < s.length; ) {
            const w = s[p++];
            if ("number" == typeof w) {
              if (w === o) {
                y = -1;
                break;
              }
              if (w > o) {
                y = p - 1;
                break;
              }
            }
          }
        for (; p < s.length; ) {
          const w = s[p];
          if ("number" == typeof w) break;
          if (w === u) {
            if (null === c) return void (null !== d && (s[p + 1] = d));
            if (c === s[p + 1]) return void (s[p + 2] = d);
          }
          p++, null !== c && p++, null !== d && p++;
        }
        -1 !== y && (s.splice(y, 0, o), (p = y + 1)),
          s.splice(p++, 0, u),
          null !== c && s.splice(p++, 0, c),
          null !== d && s.splice(p++, 0, d);
      }
      function u_(s) {
        return -1 !== s;
      }
      function gl(s) {
        return 32767 & s;
      }
      function ml(s, o) {
        let u = (function l_(s) {
            return s >> 16;
          })(s),
          c = o;
        for (; u > 0; ) (c = c[15]), u--;
        return c;
      }
      let _l = !0;
      function yd(s) {
        const o = _l;
        return (_l = s), o;
      }
      let Gn = 0;
      const pt = {};
      function $r(s, o) {
        const u = vd(s, o);
        if (-1 !== u) return u;
        const c = o[1];
        c.firstCreatePass &&
          ((s.injectorIndex = o.length),
          kr(c.data, s),
          kr(o, null),
          kr(c.blueprint, null));
        const d = yl(s, o),
          p = s.injectorIndex;
        if (u_(d)) {
          const y = gl(d),
            w = ml(d, o),
            C = w[1].data;
          for (let T = 0; T < 8; T++) o[p + T] = w[y + T] | C[y + T];
        }
        return (o[p + 8] = d), p;
      }
      function kr(s, o) {
        s.push(0, 0, 0, 0, 0, 0, 0, 0, o);
      }
      function vd(s, o) {
        return -1 === s.injectorIndex ||
          (s.parent && s.parent.injectorIndex === s.injectorIndex) ||
          null === o[s.injectorIndex + 8]
          ? -1
          : s.injectorIndex;
      }
      function yl(s, o) {
        if (s.parent && -1 !== s.parent.injectorIndex)
          return s.parent.injectorIndex;
        let u = 0,
          c = null,
          d = o;
        for (; null !== d; ) {
          if (((c = wl(d)), null === c)) return -1;
          if ((u++, (d = d[15]), -1 !== c.injectorIndex))
            return c.injectorIndex | (u << 16);
        }
        return -1;
      }
      function Xa(s, o, u) {
        !(function Ti(s, o, u) {
          let c;
          "string" == typeof u
            ? (c = u.charCodeAt(0) || 0)
            : u.hasOwnProperty(j) && (c = u[j]),
            null == c && (c = u[j] = Gn++);
          const d = 255 & c;
          o.data[s + (d >> 5)] |= 1 << d;
        })(s, o, u);
      }
      function ua(s, o, u) {
        if (u & Me.Optional) return s;
        Ne();
      }
      function Ed(s, o, u, c) {
        if (
          (u & Me.Optional && void 0 === c && (c = null),
          0 == (u & (Me.Self | Me.Host)))
        ) {
          const d = s[9],
            p = Ke(void 0);
          try {
            return d ? d.get(o, c, u & Me.Optional) : ct(o, c, u & Me.Optional);
          } finally {
            Ke(p);
          }
        }
        return ua(c, 0, u);
      }
      function Yi(s, o, u, c = Me.Default, d) {
        if (null !== s) {
          if (1024 & o[2]) {
            const y = (function tp(s, o, u, c, d) {
              let p = s,
                y = o;
              for (
                ;
                null !== p && null !== y && 1024 & y[2] && !(256 & y[2]);

              ) {
                const w = Ft(p, y, u, c | Me.Self, pt);
                if (w !== pt) return w;
                let C = p.parent;
                if (!C) {
                  const T = y[21];
                  if (T) {
                    const A = T.get(u, pt, c);
                    if (A !== pt) return A;
                  }
                  (C = wl(y)), (y = y[15]);
                }
                p = C;
              }
              return d;
            })(s, o, u, c, pt);
            if (y !== pt) return y;
          }
          const p = Ft(s, o, u, c, pt);
          if (p !== pt) return p;
        }
        return Ed(o, u, c, d);
      }
      function Ft(s, o, u, c, d) {
        const p = (function vl(s) {
          if ("string" == typeof s) return s.charCodeAt(0) || 0;
          const o = s.hasOwnProperty(j) ? s[j] : void 0;
          return "number" == typeof o ? (o >= 0 ? 255 & o : h_) : o;
        })(u);
        if ("function" == typeof p) {
          if (!aa(o, s, c)) return c & Me.Host ? ua(d, 0, c) : Ed(o, u, c, d);
          try {
            const y = p(c);
            if (null != y || c & Me.Optional) return y;
            Ne();
          } finally {
            Zf();
          }
        } else if ("number" == typeof p) {
          let y = null,
            w = vd(s, o),
            C = -1,
            T = c & Me.Host ? o[16][6] : null;
          for (
            (-1 === w || c & Me.SkipSelf) &&
            ((C = -1 === w ? yl(s, o) : o[w + 8]),
            -1 !== C && El(c, !1)
              ? ((y = o[1]), (w = gl(C)), (o = ml(C, o)))
              : (w = -1));
            -1 !== w;

          ) {
            const A = o[1];
            if (pr(p, w, A.data)) {
              const O = d_(w, o, u, y, c, T);
              if (O !== pt) return O;
            }
            (C = o[w + 8]),
              -1 !== C && El(c, o[1].data[w + 8] === T) && pr(p, w, o)
                ? ((y = A), (w = gl(C)), (o = ml(C, o)))
                : (w = -1);
          }
        }
        return d;
      }
      function d_(s, o, u, c, d, p) {
        const y = o[1],
          w = y.data[s + 8],
          A = la(
            w,
            y,
            u,
            null == c ? Us(w) && _l : c != y && 0 != (3 & w.type),
            d & Me.Host && p === w
          );
        return null !== A ? Co(o, y, A, w) : pt;
      }
      function la(s, o, u, c, d) {
        const p = s.providerIndexes,
          y = o.data,
          w = 1048575 & p,
          C = s.directiveStart,
          A = p >> 20,
          Z = d ? w + A : s.directiveEnd;
        for (let oe = c ? w : w + A; oe < Z; oe++) {
          const xe = y[oe];
          if ((oe < C && u === xe) || (oe >= C && xe.type === u)) return oe;
        }
        if (d) {
          const oe = y[C];
          if (oe && ci(oe) && oe.type === u) return C;
        }
        return null;
      }
      function Co(s, o, u, c) {
        let d = s[u];
        const p = o.data;
        if (
          (function Hs(s) {
            return s instanceof Es;
          })(d)
        ) {
          const y = d;
          y.resolving &&
            (function at(s, o) {
              const u = o ? `. Dependency path: ${o.join(" > ")} > ${s}` : "";
              throw new Re(
                -200,
                `Circular dependency in DI detected for ${s}${u}`
              );
            })(
              (function de(s) {
                return "function" == typeof s
                  ? s.name || s.toString()
                  : "object" == typeof s &&
                    null != s &&
                    "function" == typeof s.type
                  ? s.type.name || s.type.toString()
                  : ge(s);
              })(p[u])
            );
          const w = yd(y.canSeeViewProviders);
          y.resolving = !0;
          const C = y.injectImpl ? Ke(y.injectImpl) : null;
          aa(s, c, Me.Default);
          try {
            (d = s[u] = y.factory(void 0, p, s, c)),
              o.firstCreatePass &&
                u >= c.directiveStart &&
                (function f0(s, o, u) {
                  const {
                    ngOnChanges: c,
                    ngOnInit: d,
                    ngDoCheck: p,
                  } = o.type.prototype;
                  if (c) {
                    const y = ta(o);
                    (u.preOrderHooks || (u.preOrderHooks = [])).push(s, y),
                      (
                        u.preOrderCheckHooks || (u.preOrderCheckHooks = [])
                      ).push(s, y);
                  }
                  d &&
                    (u.preOrderHooks || (u.preOrderHooks = [])).push(0 - s, d),
                    p &&
                      ((u.preOrderHooks || (u.preOrderHooks = [])).push(s, p),
                      (
                        u.preOrderCheckHooks || (u.preOrderCheckHooks = [])
                      ).push(s, p));
                })(u, p[u], o);
          } finally {
            null !== C && Ke(C), yd(w), (y.resolving = !1), Zf();
          }
        }
        return d;
      }
      function pr(s, o, u) {
        return !!(u[o + (s >> 5)] & (1 << s));
      }
      function El(s, o) {
        return !(s & Me.Self || (s & Me.Host && o));
      }
      class Gs {
        constructor(o, u) {
          (this._tNode = o), (this._lView = u);
        }
        get(o, u, c) {
          return Yi(this._tNode, this._lView, o, c, u);
        }
      }
      function h_() {
        return new Gs(Jn(), je());
      }
      function wd(s) {
        return Rt(() => {
          const o = s.prototype.constructor,
            u = o[gn] || ca(o),
            c = Object.prototype;
          let d = Object.getPrototypeOf(s.prototype).constructor;
          for (; d && d !== c; ) {
            const p = d[gn] || ca(d);
            if (p && p !== u) return p;
            d = Object.getPrototypeOf(d);
          }
          return (p) => new p();
        });
      }
      function ca(s) {
        return Be(s)
          ? () => {
              const o = ca(Q(s));
              return o && o();
            }
          : fs(s);
      }
      function wl(s) {
        const o = s[1],
          u = o.type;
        return 2 === u ? o.declTNode : 1 === u ? s[6] : null;
      }
      function bo(s) {
        return (function c_(s, o) {
          if ("class" === o) return s.classes;
          if ("style" === o) return s.styles;
          const u = s.attrs;
          if (u) {
            const c = u.length;
            let d = 0;
            for (; d < c; ) {
              const p = u[d];
              if (pl(p)) break;
              if (0 === p) d += 2;
              else if ("number" == typeof p)
                for (d++; d < c && "string" == typeof u[d]; ) d++;
              else {
                if (p === o) return u[d + 1];
                d += 2;
              }
            }
          }
          return null;
        })(Jn(), s);
      }
      const Ws = "__parameters__";
      function Pi(s, o, u) {
        return Rt(() => {
          const c = (function Il(s) {
            return function (...u) {
              if (s) {
                const c = s(...u);
                for (const d in c) this[d] = c[d];
              }
            };
          })(o);
          function d(...p) {
            if (this instanceof d) return c.apply(this, p), this;
            const y = new d(...p);
            return (w.annotation = y), w;
            function w(C, T, A) {
              const O = C.hasOwnProperty(Ws)
                ? C[Ws]
                : Object.defineProperty(C, Ws, { value: [] })[Ws];
              for (; O.length <= A; ) O.push(null);
              return (O[A] = O[A] || []).push(y), C;
            }
          }
          return (
            u && (d.prototype = Object.create(u.prototype)),
            (d.prototype.ngMetadataName = s),
            (d.annotationCls = d),
            d
          );
        });
      }
      class tn {
        constructor(o, u) {
          (this._desc = o),
            (this.ngMetadataName = "InjectionToken"),
            (this.ɵprov = void 0),
            "number" == typeof u
              ? (this.__NG_ELEMENT_ID__ = u)
              : void 0 !== u &&
                (this.ɵprov = zt({
                  token: this,
                  providedIn: u.providedIn || "root",
                  factory: u.factory,
                }));
        }
        get multi() {
          return this;
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      const Id = new tn("AnalyzeForEntryComponents");
      function Sr(s, o) {
        void 0 === o && (o = s);
        for (let u = 0; u < s.length; u++) {
          let c = s[u];
          Array.isArray(c)
            ? (o === s && (o = s.slice(0, u)), Sr(c, o))
            : o !== s && o.push(c);
        }
        return o;
      }
      function fi(s, o) {
        s.forEach((u) => (Array.isArray(u) ? fi(u, o) : o(u)));
      }
      function bd(s, o, u) {
        o >= s.length ? s.push(u) : s.splice(o, 0, u);
      }
      function da(s, o) {
        return o >= s.length - 1 ? s.pop() : s.splice(o, 1)[0];
      }
      function er(s, o, u) {
        let c = Ro(s, o);
        return (
          c >= 0
            ? (s[1 | c] = u)
            : ((c = ~c),
              (function Dd(s, o, u, c) {
                let d = s.length;
                if (d == o) s.push(u, c);
                else if (1 === d) s.push(c, s[0]), (s[0] = u);
                else {
                  for (d--, s.push(s[d - 1], s[d]); d > o; )
                    (s[d] = s[d - 2]), d--;
                  (s[o] = u), (s[o + 1] = c);
                }
              })(s, c, o, u)),
          c
        );
      }
      function Tl(s, o) {
        const u = Ro(s, o);
        if (u >= 0) return s[1 | u];
      }
      function Ro(s, o) {
        return (function rp(s, o, u) {
          let c = 0,
            d = s.length >> u;
          for (; d !== c; ) {
            const p = c + ((d - c) >> 1),
              y = s[p << u];
            if (o === y) return p << u;
            y > o ? (d = p) : (c = p + 1);
          }
          return ~(d << u);
        })(s, o, 1);
      }
      const Is = {},
        Sl = "__NG_DI_FLAG__",
        ru = "ngTempTokenPath",
        Cs = /\n/gm,
        _a = "__source";
      let ya;
      function pi(s) {
        const o = ya;
        return (ya = s), o;
      }
      function sp(s, o = Me.Default) {
        if (void 0 === ya) throw new Re(-203, !1);
        return null === ya
          ? ct(s, void 0, o)
          : ya.get(s, o & Me.Optional ? null : void 0, o);
      }
      function or(s, o = Me.Default) {
        return (
          (function Pe() {
            return fe;
          })() || sp
        )(Q(s), o);
      }
      function Al(s, o = Me.Default) {
        return (
          "number" != typeof o &&
            (o =
              0 |
              (o.optional && 8) |
              (o.host && 1) |
              (o.self && 2) |
              (o.skipSelf && 4)),
          or(s, o)
        );
      }
      function va(s) {
        const o = [];
        for (let u = 0; u < s.length; u++) {
          const c = Q(s[u]);
          if (Array.isArray(c)) {
            if (0 === c.length) throw new Re(900, !1);
            let d,
              p = Me.Default;
            for (let y = 0; y < c.length; y++) {
              const w = c[y],
                C = Rl(w);
              "number" == typeof C
                ? -1 === C
                  ? (d = w.token)
                  : (p |= C)
                : (d = w);
            }
            o.push(or(d, p));
          } else o.push(or(c));
        }
        return o;
      }
      function bs(s, o) {
        return (s[Sl] = o), (s.prototype[Sl] = o), s;
      }
      function Rl(s) {
        return s[Sl];
      }
      const Zs = bs(Pi("Optional"), 8),
        Ys = bs(Pi("SkipSelf"), 4);
      let Qs;
      function E_(s) {
        Qs = s;
      }
      class Xi {
        constructor(o) {
          this.changingThisBreaksApplicationSecurity = o;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`;
        }
      }
      function es(s) {
        return s instanceof Xi ? s.changingThisBreaksApplicationSecurity : s;
      }
      const S =
          /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,
        ie =
          /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
      var Er = (() => (
        ((Er = Er || {})[(Er.NONE = 0)] = "NONE"),
        (Er[(Er.HTML = 1)] = "HTML"),
        (Er[(Er.STYLE = 2)] = "STYLE"),
        (Er[(Er.SCRIPT = 3)] = "SCRIPT"),
        (Er[(Er.URL = 4)] = "URL"),
        (Er[(Er.RESOURCE_URL = 5)] = "RESOURCE_URL"),
        Er
      ))();
      function _p(s) {
        const o = (function hu() {
          const s = je();
          return s && s[12];
        })();
        return o
          ? o.sanitize(Er.URL, s) || ""
          : (function lu(s, o) {
              const u = (function fp(s) {
                return (s instanceof Xi && s.getTypeName()) || null;
              })(s);
              if (null != u && u !== o) {
                if ("ResourceURL" === u && "URL" === o) return !0;
                throw new Error(
                  `Required a safe ${o}, got a ${u} (see https://g.co/ng/security#xss)`
                );
              }
              return u === o;
            })(s, "URL")
          ? es(s)
          : (function Le(s) {
              return (s = String(s)).match(S) || s.match(ie)
                ? s
                : "unsafe:" + s;
            })(ge(s));
      }
      const Ai = new tn("ENVIRONMENT_INITIALIZER"),
        x_ = new tn("INJECTOR", -1),
        N_ = new tn("INJECTOR_DEF_TYPES");
      class I0 {
        get(o, u = Is) {
          if (u === Is) {
            const c = new Error(`NullInjectorError: No provider for ${he(o)}!`);
            throw ((c.name = "NullInjectorError"), c);
          }
          return u;
        }
      }
      function iT(...s) {
        return { ɵproviders: P_(0, s) };
      }
      function P_(s, ...o) {
        const u = [],
          c = new Set();
        let d;
        return (
          fi(o, (p) => {
            const y = p;
            O_(y, u, [], c) && (d || (d = []), d.push(y));
          }),
          void 0 !== d && Ud(d, u),
          u
        );
      }
      function Ud(s, o) {
        for (let u = 0; u < s.length; u++) {
          const { providers: d } = s[u];
          fi(d, (p) => {
            o.push(p);
          });
        }
      }
      function O_(s, o, u, c) {
        if (!(s = Q(s))) return !1;
        let d = null,
          p = en(s);
        const y = !p && x(s);
        if (p || y) {
          if (y && !y.standalone) return !1;
          d = s;
        } else {
          const C = s.ngModule;
          if (((p = en(C)), !p)) return !1;
          d = C;
        }
        const w = c.has(d);
        if (y) {
          if (w) return !1;
          if ((c.add(d), y.dependencies)) {
            const C =
              "function" == typeof y.dependencies
                ? y.dependencies()
                : y.dependencies;
            for (const T of C) O_(T, o, u, c);
          }
        } else {
          if (!p) return !1;
          {
            if (null != p.imports && !w) {
              let T;
              c.add(d);
              try {
                fi(p.imports, (A) => {
                  O_(A, o, u, c) && (T || (T = []), T.push(A));
                });
              } finally {
              }
              void 0 !== T && Ud(T, o);
            }
            if (!w) {
              const T = fs(d) || (() => new d());
              o.push(
                { provide: d, useFactory: T, deps: Mt },
                { provide: N_, useValue: d, multi: !0 },
                { provide: Ai, useValue: () => or(d), multi: !0 }
              );
            }
            const C = p.providers;
            null == C ||
              w ||
              fi(C, (A) => {
                o.push(A);
              });
          }
        }
        return d !== s && void 0 !== s.providers;
      }
      const yp = _e({ provide: String, useValue: _e });
      function fu(s) {
        return null !== s && "object" == typeof s && yp in s;
      }
      function Ts(s) {
        return "function" == typeof s;
      }
      const k_ = new tn("Set Injector scope."),
        vp = {},
        sT = {};
      let F_;
      function Ep() {
        return void 0 === F_ && (F_ = new I0()), F_;
      }
      class pu {}
      class oT extends pu {
        constructor(o, u, c, d) {
          super(),
            (this.parent = u),
            (this.source = c),
            (this.scopes = d),
            (this.records = new Map()),
            (this._ngOnDestroyHooks = new Set()),
            (this._onDestroyHooks = []),
            (this._destroyed = !1),
            V_(o, (y) => this.processProvider(y)),
            this.records.set(x_, Hl(void 0, this)),
            d.has("environment") && this.records.set(pu, Hl(void 0, this));
          const p = this.records.get(k_);
          null != p && "string" == typeof p.value && this.scopes.add(p.value),
            (this.injectorDefTypes = new Set(this.get(N_.multi, Mt, Me.Self)));
        }
        get destroyed() {
          return this._destroyed;
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            for (const o of this._ngOnDestroyHooks) o.ngOnDestroy();
            for (const o of this._onDestroyHooks) o();
          } finally {
            this.records.clear(),
              this._ngOnDestroyHooks.clear(),
              this.injectorDefTypes.clear(),
              (this._onDestroyHooks.length = 0);
          }
        }
        onDestroy(o) {
          this._onDestroyHooks.push(o);
        }
        runInContext(o) {
          this.assertNotDestroyed();
          const u = pi(this),
            c = Ke(void 0);
          try {
            return o();
          } finally {
            pi(u), Ke(c);
          }
        }
        get(o, u = Is, c = Me.Default) {
          this.assertNotDestroyed();
          const d = pi(this),
            p = Ke(void 0);
          try {
            if (!(c & Me.SkipSelf)) {
              let w = this.records.get(o);
              if (void 0 === w) {
                const C =
                  (function lT(s) {
                    return (
                      "function" == typeof s ||
                      ("object" == typeof s && s instanceof tn)
                    );
                  })(o) && lt(o);
                (w = C && this.injectableDefInScope(C) ? Hl(L_(o), vp) : null),
                  this.records.set(o, w);
              }
              if (null != w) return this.hydrate(o, w);
            }
            return (c & Me.Self ? Ep() : this.parent).get(
              o,
              (u = c & Me.Optional && u === Is ? null : u)
            );
          } catch (y) {
            if ("NullInjectorError" === y.name) {
              if (((y[ru] = y[ru] || []).unshift(he(o)), d)) throw y;
              return (function Ml(s, o, u, c) {
                const d = s[ru];
                throw (
                  (o[_a] && d.unshift(o[_a]),
                  (s.message = (function m_(s, o, u, c = null) {
                    s =
                      s && "\n" === s.charAt(0) && "\u0275" == s.charAt(1)
                        ? s.slice(2)
                        : s;
                    let d = he(o);
                    if (Array.isArray(o)) d = o.map(he).join(" -> ");
                    else if ("object" == typeof o) {
                      let p = [];
                      for (let y in o)
                        if (o.hasOwnProperty(y)) {
                          let w = o[y];
                          p.push(
                            y +
                              ":" +
                              ("string" == typeof w ? JSON.stringify(w) : he(w))
                          );
                        }
                      d = `{${p.join(", ")}}`;
                    }
                    return `${u}${c ? "(" + c + ")" : ""}[${d}]: ${s.replace(
                      Cs,
                      "\n  "
                    )}`;
                  })("\n" + s.message, d, u, c)),
                  (s.ngTokenPath = d),
                  (s[ru] = null),
                  s)
                );
              })(y, o, "R3InjectorError", this.source);
            }
            throw y;
          } finally {
            Ke(p), pi(d);
          }
        }
        resolveInjectorInitializers() {
          const o = pi(this),
            u = Ke(void 0);
          try {
            const c = this.get(Ai.multi, Mt, Me.Self);
            for (const d of c) d();
          } finally {
            pi(o), Ke(u);
          }
        }
        toString() {
          const o = [],
            u = this.records;
          for (const c of u.keys()) o.push(he(c));
          return `R3Injector[${o.join(", ")}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new Re(205, !1);
        }
        processProvider(o) {
          let u = Ts((o = Q(o))) ? o : Q(o && o.provide);
          const c = (function $l(s) {
            return fu(s) ? Hl(void 0, s.useValue) : Hl(D0(s), vp);
          })(o);
          if (Ts(o) || !0 !== o.multi) this.records.get(u);
          else {
            let d = this.records.get(u);
            d ||
              ((d = Hl(void 0, vp, !0)),
              (d.factory = () => va(d.multi)),
              this.records.set(u, d)),
              (u = o),
              d.multi.push(o);
          }
          this.records.set(u, c);
        }
        hydrate(o, u) {
          return (
            u.value === vp && ((u.value = sT), (u.value = u.factory())),
            "object" == typeof u.value &&
              u.value &&
              (function uT(s) {
                return (
                  null !== s &&
                  "object" == typeof s &&
                  "function" == typeof s.ngOnDestroy
                );
              })(u.value) &&
              this._ngOnDestroyHooks.add(u.value),
            u.value
          );
        }
        injectableDefInScope(o) {
          if (!o.providedIn) return !1;
          const u = Q(o.providedIn);
          return "string" == typeof u
            ? "any" === u || this.scopes.has(u)
            : this.injectorDefTypes.has(u);
        }
      }
      function L_(s) {
        const o = lt(s),
          u = null !== o ? o.factory : fs(s);
        if (null !== u) return u;
        if (s instanceof tn) throw new Re(204, !1);
        if (s instanceof Function)
          return (function wp(s) {
            const o = s.length;
            if (o > 0)
              throw (
                ((function Ks(s, o) {
                  const u = [];
                  for (let c = 0; c < s; c++) u.push(o);
                  return u;
                })(o, "?"),
                new Re(204, !1))
              );
            const u = (function Zt(s) {
              const o = s && (s[Mn] || s[xn]);
              if (o) {
                const u = (function $t(s) {
                  if (s.hasOwnProperty("name")) return s.name;
                  const o = ("" + s).match(/^function\s*([^\s(]+)/);
                  return null === o ? "" : o[1];
                })(s);
                return (
                  console.warn(
                    `DEPRECATED: DI is instantiating a token "${u}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${u}" class.`
                  ),
                  o
                );
              }
              return null;
            })(s);
            return null !== u ? () => u.factory(s) : () => new s();
          })(s);
        throw new Re(204, !1);
      }
      function D0(s, o, u) {
        let c;
        if (Ts(s)) {
          const d = Q(s);
          return fs(d) || L_(d);
        }
        if (fu(s)) c = () => Q(s.useValue);
        else if (
          (function b0(s) {
            return !(!s || !s.useFactory);
          })(s)
        )
          c = () => s.useFactory(...va(s.deps || []));
        else if (
          (function C0(s) {
            return !(!s || !s.useExisting);
          })(s)
        )
          c = () => or(Q(s.useExisting));
        else {
          const d = Q(s && (s.useClass || s.provide));
          if (
            !(function aT(s) {
              return !!s.deps;
            })(s)
          )
            return fs(d) || L_(d);
          c = () => new d(...va(s.deps));
        }
        return c;
      }
      function Hl(s, o, u = !1) {
        return { factory: s, value: o, multi: u ? [] : void 0 };
      }
      function cT(s) {
        return !!s.ɵproviders;
      }
      function V_(s, o) {
        for (const u of s)
          Array.isArray(u) ? V_(u, o) : cT(u) ? V_(u.ɵproviders, o) : o(u);
      }
      class T0 {}
      class M0 {
        resolveComponentFactory(o) {
          throw (function S0(s) {
            const o = Error(
              `No component factory found for ${he(
                s
              )}. Did you add it to @NgModule.entryComponents?`
            );
            return (o.ngComponent = s), o;
          })(o);
        }
      }
      let gu = (() => {
        class s {}
        return (s.NULL = new M0()), s;
      })();
      function Ip() {
        return Gl(Jn(), je());
      }
      function Gl(s, o) {
        return new jd(Di(s, o));
      }
      let jd = (() => {
        class s {
          constructor(u) {
            this.nativeElement = u;
          }
        }
        return (s.__NG_ELEMENT_ID__ = Ip), s;
      })();
      function hT(s) {
        return s instanceof jd ? s.nativeElement : s;
      }
      class $d {}
      let x0 = (() => {
          class s {}
          return (
            (s.__NG_ELEMENT_ID__ = () =>
              (function N0() {
                const s = je(),
                  u = Tr(Jn().index, s);
                return (Dr(u) ? u : s)[11];
              })()),
            s
          );
        })(),
        Cp = (() => {
          class s {}
          return (
            (s.ɵprov = zt({
              token: s,
              providedIn: "root",
              factory: () => null,
            })),
            s
          );
        })();
      class Hd {
        constructor(o) {
          (this.full = o),
            (this.major = o.split(".")[0]),
            (this.minor = o.split(".")[1]),
            (this.patch = o.split(".").slice(2).join("."));
        }
      }
      const U_ = new Hd("14.1.0"),
        mu = {};
      function Dp(s) {
        return s.ngOriginalError;
      }
      class Wl {
        constructor() {
          this._console = console;
        }
        handleError(o) {
          const u = this._findOriginalError(o);
          this._console.error("ERROR", o),
            u && this._console.error("ORIGINAL ERROR", u);
        }
        _findOriginalError(o) {
          let u = o && Dp(o);
          for (; u && Dp(u); ) u = Dp(u);
          return u || null;
        }
      }
      const Gd = new Map();
      let wT = 0;
      const Q_ = "__ngContext__";
      function Qr(s, o) {
        Dr(o)
          ? ((s[Q_] = o[20]),
            (function CT(s) {
              Gd.set(s[20], s);
            })(o))
          : (s[Q_] = o);
      }
      function zd(s) {
        const o = s[Q_];
        return "number" == typeof o
          ? (function q_(s) {
              return Gd.get(s) || null;
            })(o)
          : o || null;
      }
      function J_(s) {
        const o = zd(s);
        return o ? (Dr(o) ? o : o.lView) : null;
      }
      const B0 = (() =>
        (
          (typeof requestAnimationFrame < "u" && requestAnimationFrame) ||
          setTimeout
        ).bind(qe))();
      function Fo(s) {
        return s instanceof Function ? s() : s;
      }
      var Xs = (() => (
        ((Xs = Xs || {})[(Xs.Important = 1)] = "Important"),
        (Xs[(Xs.DashCase = 2)] = "DashCase"),
        Xs
      ))();
      function ry(s, o) {
        return undefined(s, o);
      }
      function zl(s) {
        const o = s[3];
        return li(o) ? o[3] : o;
      }
      function iy(s) {
        return oy(s[13]);
      }
      function sy(s) {
        return oy(s[4]);
      }
      function oy(s) {
        for (; null !== s && !li(s); ) s = s[4];
        return s;
      }
      function ql(s, o, u, c, d) {
        if (null != c) {
          let p,
            y = !1;
          li(c) ? (p = c) : Dr(c) && ((y = !0), (c = c[0]));
          const w = sr(c);
          0 === s && null !== u
            ? null == d
              ? hy(o, u, w)
              : Ri(o, u, w, d || null, !0)
            : 1 === s && null !== u
            ? Ri(o, u, w, d || null, !0)
            : 2 === s
            ? (function yy(s, o, u) {
                const c = fy(s, o);
                c &&
                  (function ba(s, o, u, c) {
                    s.removeChild(o, u, c);
                  })(s, c, o, u);
              })(o, w, y)
            : 3 === s && o.destroyNode(w),
            null != p &&
              (function Z0(s, o, u, c, d) {
                const p = u[7];
                p !== sr(u) && ql(o, s, c, p, d);
                for (let w = 10; w < u.length; w++) {
                  const C = u[w];
                  Kl(C[1], C, s, o, c, p);
                }
              })(o, s, p, u, d);
        }
      }
      function uy(s, o, u) {
        return s.createElement(o, u);
      }
      function Ss(s, o) {
        const u = s[9],
          c = u.indexOf(o),
          d = o[3];
        512 & o[2] && ((o[2] &= -513), ia(d, -1)), u.splice(c, 1);
      }
      function ly(s, o) {
        if (s.length <= 10) return;
        const u = 10 + o,
          c = s[u];
        if (c) {
          const d = c[17];
          null !== d && d !== s && Ss(d, c), o > 0 && (s[u - 1][4] = c[4]);
          const p = da(s, 10 + o);
          !(function xT(s, o) {
            Kl(s, o, o[11], 2, null, null), (o[0] = null), (o[6] = null);
          })(c[1], c);
          const y = p[19];
          null !== y && y.detachView(p[1]),
            (c[3] = null),
            (c[4] = null),
            (c[2] &= -65);
        }
        return c;
      }
      function cy(s, o) {
        if (!(128 & o[2])) {
          const u = o[11];
          u.destroyNode && Kl(s, o, u, 3, null, null),
            (function PT(s) {
              let o = s[13];
              if (!o) return dy(s[1], s);
              for (; o; ) {
                let u = null;
                if (Dr(o)) u = o[13];
                else {
                  const c = o[10];
                  c && (u = c);
                }
                if (!u) {
                  for (; o && !o[4] && o !== s; )
                    Dr(o) && dy(o[1], o), (o = o[3]);
                  null === o && (o = s), Dr(o) && dy(o[1], o), (u = o && o[4]);
                }
                o = u;
              }
            })(o);
        }
      }
      function dy(s, o) {
        if (!(128 & o[2])) {
          (o[2] &= -65),
            (o[2] |= 128),
            (function kT(s, o) {
              let u;
              if (null != s && null != (u = s.destroyHooks))
                for (let c = 0; c < u.length; c += 2) {
                  const d = o[u[c]];
                  if (!(d instanceof Es)) {
                    const p = u[c + 1];
                    if (Array.isArray(p))
                      for (let y = 0; y < p.length; y += 2) {
                        const w = d[p[y]],
                          C = p[y + 1];
                        try {
                          C.call(w);
                        } finally {
                        }
                      }
                    else
                      try {
                        p.call(d);
                      } finally {
                      }
                  }
                }
            })(s, o),
            (function OT(s, o) {
              const u = s.cleanup,
                c = o[7];
              let d = -1;
              if (null !== u)
                for (let p = 0; p < u.length - 1; p += 2)
                  if ("string" == typeof u[p]) {
                    const y = u[p + 1],
                      w = "function" == typeof y ? y(o) : sr(o[y]),
                      C = c[(d = u[p + 2])],
                      T = u[p + 3];
                    "boolean" == typeof T
                      ? w.removeEventListener(u[p], C, T)
                      : T >= 0
                      ? c[(d = T)]()
                      : c[(d = -T)].unsubscribe(),
                      (p += 2);
                  } else {
                    const y = c[(d = u[p + 1])];
                    u[p].call(y);
                  }
              if (null !== c) {
                for (let p = d + 1; p < c.length; p++) (0, c[p])();
                o[7] = null;
              }
            })(s, o),
            1 === o[1].type && o[11].destroy();
          const u = o[17];
          if (null !== u && li(o[3])) {
            u !== o[3] && Ss(u, o);
            const c = o[19];
            null !== c && c.detachView(s);
          }
          !(function K_(s) {
            Gd.delete(s[20]);
          })(o);
        }
      }
      function qd(s, o, u) {
        return (function q0(s, o, u) {
          let c = o;
          for (; null !== c && 40 & c.type; ) c = (o = c).parent;
          if (null === c) return u[0];
          if (2 & c.flags) {
            const d = s.data[c.directiveStart].encapsulation;
            if (d === bt.None || d === bt.Emulated) return null;
          }
          return Di(c, u);
        })(s, o.parent, u);
      }
      function Ri(s, o, u, c, d) {
        s.insertBefore(o, u, c, d);
      }
      function hy(s, o, u) {
        s.appendChild(o, u);
      }
      function Gr(s, o, u, c, d) {
        null !== c ? Ri(s, o, u, c, d) : hy(s, o, u);
      }
      function fy(s, o) {
        return s.parentNode(o);
      }
      let my = function gy(s, o, u) {
        return 40 & s.type ? Di(s, u) : null;
      };
      function Kd(s, o, u, c) {
        const d = qd(s, c, o),
          p = o[11],
          w = (function py(s, o, u) {
            return my(s, o, u);
          })(c.parent || o[6], c, o);
        if (null != d)
          if (Array.isArray(u))
            for (let C = 0; C < u.length; C++) Gr(p, d, u[C], w, !1);
          else Gr(p, d, u, w, !1);
      }
      function Zd(s, o) {
        if (null !== o) {
          const u = o.type;
          if (3 & u) return Di(o, s);
          if (4 & u) return Ap(-1, s[o.index]);
          if (8 & u) {
            const c = o.child;
            if (null !== c) return Zd(s, c);
            {
              const d = s[o.index];
              return li(d) ? Ap(-1, d) : sr(d);
            }
          }
          if (32 & u) return ry(o, s)() || sr(s[o.index]);
          {
            const c = Yd(s, o);
            return null !== c
              ? Array.isArray(c)
                ? c[0]
                : Zd(zl(s[16]), c)
              : Zd(s, o.next);
          }
        }
        return null;
      }
      function Yd(s, o) {
        return null !== o ? s[16][6].projection[o.projection] : null;
      }
      function Ap(s, o) {
        const u = 10 + s + 1;
        if (u < o.length) {
          const c = o[u],
            d = c[1].firstChild;
          if (null !== d) return Zd(c, d);
        }
        return o[7];
      }
      function Rp(s, o, u, c, d, p, y) {
        for (; null != u; ) {
          const w = c[u.index],
            C = u.type;
          if (
            (y && 0 === o && (w && Qr(sr(w), c), (u.flags |= 4)),
            64 != (64 & u.flags))
          )
            if (8 & C) Rp(s, o, u.child, c, d, p, !1), ql(o, s, d, w, p);
            else if (32 & C) {
              const T = ry(u, c);
              let A;
              for (; (A = T()); ) ql(o, s, d, A, p);
              ql(o, s, d, w, p);
            } else 16 & C ? vy(s, o, c, u, d, p) : ql(o, s, d, w, p);
          u = y ? u.projectionNext : u.next;
        }
      }
      function Kl(s, o, u, c, d, p) {
        Rp(u, c, s.firstChild, o, d, p, !1);
      }
      function vy(s, o, u, c, d, p) {
        const y = u[16],
          C = y[6].projection[c.projection];
        if (Array.isArray(C))
          for (let T = 0; T < C.length; T++) ql(o, s, d, C[T], p);
        else Rp(s, o, C, y[3], d, p, !0);
      }
      function wy(s, o, u) {
        s.setAttribute(o, "style", u);
      }
      function Qd(s, o, u) {
        "" === u
          ? s.removeAttribute(o, "class")
          : s.setAttribute(o, "class", u);
      }
      function Iy(s, o, u) {
        let c = s.length;
        for (;;) {
          const d = s.indexOf(o, u);
          if (-1 === d) return d;
          if (0 === d || s.charCodeAt(d - 1) <= 32) {
            const p = o.length;
            if (d + p === c || s.charCodeAt(d + p) <= 32) return d;
          }
          u = d + 1;
        }
      }
      const Cy = "ng-template";
      function by(s, o, u) {
        let c = 0;
        for (; c < s.length; ) {
          let d = s[c++];
          if (u && "class" === d) {
            if (((d = s[c]), -1 !== Iy(d.toLowerCase(), o, 0))) return !0;
          } else if (1 === d) {
            for (; c < s.length && "string" == typeof (d = s[c++]); )
              if (d.toLowerCase() === o) return !0;
            return !1;
          }
        }
        return !1;
      }
      function Jd(s) {
        return 4 === s.type && s.value !== Cy;
      }
      function Y0(s, o, u) {
        return o === (4 !== s.type || u ? s.value : Cy);
      }
      function Q0(s, o, u) {
        let c = 4;
        const d = s.attrs || [],
          p = (function eO(s) {
            for (let o = 0; o < s.length; o++) if (pl(s[o])) return o;
            return s.length;
          })(d);
        let y = !1;
        for (let w = 0; w < o.length; w++) {
          const C = o[w];
          if ("number" != typeof C) {
            if (!y)
              if (4 & c) {
                if (
                  ((c = 2 | (1 & c)),
                  ("" !== C && !Y0(s, C, u)) || ("" === C && 1 === o.length))
                ) {
                  if (ts(c)) return !1;
                  y = !0;
                }
              } else {
                const T = 8 & c ? C : o[++w];
                if (8 & c && null !== s.attrs) {
                  if (!by(s.attrs, T, u)) {
                    if (ts(c)) return !1;
                    y = !0;
                  }
                  continue;
                }
                const O = mi(8 & c ? "class" : C, d, Jd(s), u);
                if (-1 === O) {
                  if (ts(c)) return !1;
                  y = !0;
                  continue;
                }
                if ("" !== T) {
                  let Z;
                  Z = O > p ? "" : d[O + 1].toLowerCase();
                  const oe = 8 & c ? Z : null;
                  if ((oe && -1 !== Iy(oe, T, 0)) || (2 & c && T !== Z)) {
                    if (ts(c)) return !1;
                    y = !0;
                  }
                }
              }
          } else {
            if (!y && !ts(c) && !ts(C)) return !1;
            if (y && ts(C)) continue;
            (y = !1), (c = C | (1 & c));
          }
        }
        return ts(c) || y;
      }
      function ts(s) {
        return 0 == (1 & s);
      }
      function mi(s, o, u, c) {
        if (null === o) return -1;
        let d = 0;
        if (c || !u) {
          let p = !1;
          for (; d < o.length; ) {
            const y = o[d];
            if (y === s) return d;
            if (3 === y || 6 === y) p = !0;
            else {
              if (1 === y || 2 === y) {
                let w = o[++d];
                for (; "string" == typeof w; ) w = o[++d];
                continue;
              }
              if (4 === y) break;
              if (0 === y) {
                d += 4;
                continue;
              }
            }
            d += p ? 1 : 2;
          }
          return -1;
        }
        return (function tO(s, o) {
          let u = s.indexOf(4);
          if (u > -1)
            for (u++; u < s.length; ) {
              const c = s[u];
              if ("number" == typeof c) return -1;
              if (c === o) return u;
              u++;
            }
          return -1;
        })(o, s);
      }
      function Vo(s, o, u = !1) {
        for (let c = 0; c < o.length; c++) if (Q0(s, o[c], u)) return !0;
        return !1;
      }
      function Dy(s, o) {
        return s ? ":not(" + o.trim() + ")" : o;
      }
      function Ty(s) {
        let o = s[0],
          u = 1,
          c = 2,
          d = "",
          p = !1;
        for (; u < s.length; ) {
          let y = s[u];
          if ("string" == typeof y)
            if (2 & c) {
              const w = s[++u];
              d += "[" + y + (w.length > 0 ? '="' + w + '"' : "") + "]";
            } else 8 & c ? (d += "." + y) : 4 & c && (d += " " + y);
          else
            "" !== d && !ts(y) && ((o += Dy(p, d)), (d = "")),
              (c = y),
              (p = p || !ts(c));
          u++;
        }
        return "" !== d && (o += Dy(p, d)), o;
      }
      const Qt = {};
      function eI(s) {
        UT(mn(), je(), Or() + s, !1);
      }
      function UT(s, o, u, c) {
        if (!c)
          if (3 == (3 & o[2])) {
            const p = s.preOrderCheckHooks;
            null !== p && Qf(o, p, u);
          } else {
            const p = s.preOrderHooks;
            null !== p && fd(o, p, 0, u);
          }
        Yr(u);
      }
      function nI(s, o = null, u = null, c) {
        const d = rI(s, o, u, c);
        return d.resolveInjectorInitializers(), d;
      }
      function rI(s, o = null, u = null, c, d = new Set()) {
        const p = [u || Mt, iT(s)];
        return (
          (c = c || ("object" == typeof s ? void 0 : he(s))),
          new oT(p, o || Ep(), c || null, d)
        );
      }
      let Uo = (() => {
        class s {
          static create(u, c) {
            if (Array.isArray(u)) return nI({ name: "" }, c, u, "");
            {
              const d = u.name ?? "";
              return nI({ name: d }, u.parent, u.providers, d);
            }
          }
        }
        return (
          (s.THROW_IF_NOT_FOUND = Is),
          (s.NULL = new I0()),
          (s.ɵprov = zt({
            token: s,
            providedIn: "any",
            factory: () => or(x_),
          })),
          (s.__NG_ELEMENT_ID__ = -1),
          s
        );
      })();
      function Yl(s, o = Me.Default) {
        const u = je();
        return null === u ? or(s, o) : Yi(Jn(), u, Q(s), o);
      }
      function Ay() {
        throw new Error("invalid");
      }
      function Ql(s, o) {
        return (s << 17) | (o << 2);
      }
      function As(s) {
        return (s >> 17) & 32767;
      }
      function xy(s) {
        return 2 | s;
      }
      function Ta(s) {
        return (131068 & s) >> 2;
      }
      function Ny(s, o) {
        return (-131069 & s) | (o << 2);
      }
      function rh(s) {
        return 1 | s;
      }
      function yI(s, o) {
        const u = s.contentQueries;
        if (null !== u)
          for (let c = 0; c < u.length; c += 2) {
            const d = u[c],
              p = u[c + 1];
            if (-1 !== p) {
              const y = s.data[p];
              Qa(d), y.contentQueries(2, o[p], p);
            }
          }
      }
      function Wp(s, o, u, c, d, p, y, w, C, T, A) {
        const O = o.blueprint.slice();
        return (
          (O[0] = d),
          (O[2] = 76 | c),
          (null !== A || (s && 1024 & s[2])) && (O[2] |= 1024),
          yo(O),
          (O[3] = O[15] = s),
          (O[8] = u),
          (O[10] = y || (s && s[10])),
          (O[11] = w || (s && s[11])),
          (O[12] = C || (s && s[12]) || null),
          (O[9] = T || (s && s[9]) || null),
          (O[6] = p),
          (O[20] = (function IT() {
            return wT++;
          })()),
          (O[21] = A),
          (O[16] = 2 == o.type ? s[16] : O),
          O
        );
      }
      function Eu(s, o, u, c, d) {
        let p = s.data[o];
        if (null === p)
          (p = (function zp(s, o, u, c, d) {
            const p = ad(),
              y = Za(),
              C = (s.data[o] = (function CI(s, o, u, c, d, p) {
                return {
                  type: u,
                  index: c,
                  insertBeforeIndex: null,
                  injectorIndex: o ? o.injectorIndex : -1,
                  directiveStart: -1,
                  directiveEnd: -1,
                  directiveStylingLast: -1,
                  propertyBindings: null,
                  flags: 0,
                  providerIndexes: 0,
                  value: d,
                  attrs: p,
                  mergedAttrs: null,
                  localNames: null,
                  initialInputs: void 0,
                  inputs: null,
                  outputs: null,
                  tViews: null,
                  next: null,
                  projectionNext: null,
                  child: null,
                  parent: o,
                  projection: null,
                  styles: null,
                  stylesWithoutHost: null,
                  residualStyles: void 0,
                  classes: null,
                  classesWithoutHost: null,
                  residualClasses: void 0,
                  classBindings: 0,
                  styleBindings: 0,
                };
              })(0, y ? p : p && p.parent, u, o, c, d));
            return (
              null === s.firstChild && (s.firstChild = C),
              null !== p &&
                (y
                  ? null == p.child && null !== C.parent && (p.child = C)
                  : null === p.next && (p.next = C)),
              C
            );
          })(s, o, u, c, d)),
            (function t_() {
              return Ht.lFrame.inI18n;
            })() && (p.flags |= 64);
        else if (64 & p.type) {
          (p.type = u), (p.value = c), (p.attrs = d);
          const y = (function wo() {
            const s = Ht.lFrame,
              o = s.currentTNode;
            return s.isParent ? o : o.parent;
          })();
          p.injectorIndex = null === y ? -1 : y.injectorIndex;
        }
        return Zi(p, !0), p;
      }
      function ns(s, o, u, c) {
        if (0 === u) return -1;
        const d = o.length;
        for (let p = 0; p < u; p++)
          o.push(c), s.blueprint.push(c), s.data.push(null);
        return d;
      }
      function qp(s, o, u) {
        qf(o);
        try {
          const c = s.viewQuery;
          null !== c && Jp(1, c, u);
          const d = s.template;
          null !== d && Wy(s, o, d, 1, u),
            s.firstCreatePass && (s.firstCreatePass = !1),
            s.staticContentQueries && yI(s, o),
            s.staticViewQueries && Jp(2, s.viewQuery, u);
          const p = s.components;
          null !== p &&
            (function Gy(s, o) {
              for (let u = 0; u < o.length; u++) MI(s, o[u]);
            })(o, p);
        } catch (c) {
          throw (
            (s.firstCreatePass &&
              ((s.incompleteFirstPass = !0), (s.firstCreatePass = !1)),
            c)
          );
        } finally {
          (o[2] &= -5), cl();
        }
      }
      function Xl(s, o, u, c) {
        const d = o[2];
        if (128 != (128 & d)) {
          qf(o);
          try {
            yo(o),
              (function ud(s) {
                return (Ht.lFrame.bindingIndex = s);
              })(s.bindingStartIndex),
              null !== u && Wy(s, o, u, 2, c);
            const y = 3 == (3 & d);
            if (y) {
              const T = s.preOrderCheckHooks;
              null !== T && Qf(o, T, null);
            } else {
              const T = s.preOrderHooks;
              null !== T && fd(o, T, 0, null), pd(o, 0);
            }
            if (
              ((function mS(s) {
                for (let o = iy(s); null !== o; o = sy(o)) {
                  if (!o[2]) continue;
                  const u = o[9];
                  for (let c = 0; c < u.length; c++) {
                    const d = u[c],
                      p = d[3];
                    0 == (512 & d[2]) && ia(p, 1), (d[2] |= 512);
                  }
                }
              })(o),
              (function EO(s) {
                for (let o = iy(s); null !== o; o = sy(o))
                  for (let u = 10; u < o.length; u++) {
                    const c = o[u],
                      d = c[1];
                    ra(c) && Xl(d, c, d.template, c[8]);
                  }
              })(o),
              null !== s.contentQueries && yI(s, o),
              y)
            ) {
              const T = s.contentCheckHooks;
              null !== T && Qf(o, T);
            } else {
              const T = s.contentHooks;
              null !== T && fd(o, T, 1), pd(o, 1);
            }
            !(function _I(s, o) {
              const u = s.hostBindingOpCodes;
              if (null !== u)
                try {
                  for (let c = 0; c < u.length; c++) {
                    const d = u[c];
                    if (d < 0) Yr(~d);
                    else {
                      const p = d,
                        y = u[++c],
                        w = u[++c];
                      Wf(y, p), w(2, o[p]);
                    }
                  }
                } finally {
                  Yr(-1);
                }
            })(s, o);
            const w = s.components;
            null !== w &&
              (function gO(s, o) {
                for (let u = 0; u < o.length; u++) _S(s, o[u]);
              })(o, w);
            const C = s.viewQuery;
            if ((null !== C && Jp(2, C, c), y)) {
              const T = s.viewCheckHooks;
              null !== T && Qf(o, T);
            } else {
              const T = s.viewHooks;
              null !== T && fd(o, T, 2), pd(o, 2);
            }
            !0 === s.firstUpdatePass && (s.firstUpdatePass = !1),
              (o[2] &= -41),
              512 & o[2] && ((o[2] &= -513), ia(o[3], -1));
          } finally {
            cl();
          }
        }
      }
      function oS(s, o, u, c) {
        const d = o[10],
          y = rl(o);
        try {
          !y && d.begin && d.begin(), y && qp(s, o, c), Xl(s, o, u, c);
        } finally {
          !y && d.end && d.end();
        }
      }
      function Wy(s, o, u, c, d) {
        const p = Or(),
          y = 2 & c;
        try {
          Yr(-1), y && o.length > 22 && UT(s, o, 22, !1), u(c, d);
        } finally {
          Yr(p);
        }
      }
      function zy(s, o, u) {
        !vo() ||
          ((function TI(s, o, u, c) {
            const d = u.directiveStart,
              p = u.directiveEnd;
            s.firstCreatePass || $r(u, o), Qr(c, o);
            const y = u.initialInputs;
            for (let w = d; w < p; w++) {
              const C = s.data[w],
                T = ci(C);
              T && pS(o, u, C);
              const A = Co(o, s, w, u);
              Qr(A, o),
                null !== y && gS(0, w - d, A, C, 0, y),
                T && (Tr(u.index, o)[8] = A);
            }
          })(s, o, u, Di(u, o)),
          128 == (128 & u.flags) &&
            (function cS(s, o, u) {
              const c = u.directiveStart,
                d = u.directiveEnd,
                p = u.index,
                y = (function ld() {
                  return Ht.lFrame.currentDirectiveIndex;
                })();
              try {
                Yr(p);
                for (let w = c; w < d; w++) {
                  const C = s.data[w],
                    T = o[w];
                  cd(w),
                    (null !== C.hostBindings ||
                      0 !== C.hostVars ||
                      null !== C.hostAttrs) &&
                      dS(C, T);
                }
              } finally {
                Yr(-1), cd(y);
              }
            })(s, o, u));
      }
      function ih(s, o, u = Di) {
        const c = o.localNames;
        if (null !== c) {
          let d = o.index + 1;
          for (let p = 0; p < c.length; p += 2) {
            const y = c[p + 1],
              w = -1 === y ? u(o, s) : s[y];
            s[d++] = w;
          }
        }
      }
      function qy(s) {
        const o = s.tView;
        return null === o || o.incompleteFirstPass
          ? (s.tView = Ky(
              1,
              null,
              s.template,
              s.decls,
              s.vars,
              s.directiveDefs,
              s.pipeDefs,
              s.viewQuery,
              s.schemas,
              s.consts
            ))
          : o;
      }
      function Ky(s, o, u, c, d, p, y, w, C, T) {
        const A = 22 + c,
          O = A + d,
          Z = (function EI(s, o) {
            const u = [];
            for (let c = 0; c < o; c++) u.push(c < s ? null : Qt);
            return u;
          })(A, O),
          oe = "function" == typeof T ? T() : T;
        return (Z[1] = {
          type: s,
          blueprint: Z,
          template: u,
          queries: null,
          viewQuery: w,
          declTNode: o,
          data: Z.slice().fill(null, A),
          bindingStartIndex: A,
          expandoStartIndex: O,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: "function" == typeof p ? p() : p,
          pipeRegistry: "function" == typeof y ? y() : y,
          firstChild: null,
          schemas: C,
          consts: oe,
          incompleteFirstPass: !1,
        });
      }
      function II(s, o, u, c) {
        const d = OI(o);
        null === u
          ? d.push(c)
          : (d.push(u), s.firstCreatePass && ES(s).push(c, d.length - 1));
      }
      function bI(s, o, u) {
        for (let c in s)
          if (s.hasOwnProperty(c)) {
            const d = s[c];
            (u = null === u ? {} : u).hasOwnProperty(c)
              ? u[c].push(o, d)
              : (u[c] = [o, d]);
          }
        return u;
      }
      function Zy(s, o) {
        const c = o.directiveEnd,
          d = s.data,
          p = o.attrs,
          y = [];
        let w = null,
          C = null;
        for (let T = o.directiveStart; T < c; T++) {
          const A = d[T],
            O = A.inputs,
            Z = null === p || Jd(o) ? null : RI(O, p);
          y.push(Z), (w = bI(O, T, w)), (C = bI(A.outputs, T, C));
        }
        null !== w &&
          (w.hasOwnProperty("class") && (o.flags |= 16),
          w.hasOwnProperty("style") && (o.flags |= 32)),
          (o.initialInputs = y),
          (o.inputs = w),
          (o.outputs = C);
      }
      function aS(s, o) {
        const u = Tr(o, s);
        16 & u[2] || (u[2] |= 32);
      }
      function Kp(s, o, u, c) {
        let d = !1;
        if (vo()) {
          const p = (function vO(s, o, u) {
              const c = s.directiveRegistry;
              let d = null;
              if (c)
                for (let p = 0; p < c.length; p++) {
                  const y = c[p];
                  Vo(u, y.selectors, !1) &&
                    (d || (d = []),
                    Xa($r(u, o), s, y.type),
                    ci(y) ? (hS(s, u), d.unshift(y)) : d.push(y));
                }
              return d;
            })(s, o, u),
            y = null === c ? null : { "": -1 };
          if (null !== p) {
            (d = !0), to(u, s.data.length, p.length);
            for (let A = 0; A < p.length; A++) {
              const O = p[A];
              O.providersResolver && O.providersResolver(O);
            }
            let w = !1,
              C = !1,
              T = ns(s, o, p.length, null);
            for (let A = 0; A < p.length; A++) {
              const O = p[A];
              (u.mergedAttrs = _d(u.mergedAttrs, O.hostAttrs)),
                fS(s, u, o, T, O),
                AI(T, O, y),
                null !== O.contentQueries && (u.flags |= 8),
                (null !== O.hostBindings ||
                  null !== O.hostAttrs ||
                  0 !== O.hostVars) &&
                  (u.flags |= 128);
              const Z = O.type.prototype;
              !w &&
                (Z.ngOnChanges || Z.ngOnInit || Z.ngDoCheck) &&
                ((s.preOrderHooks || (s.preOrderHooks = [])).push(u.index),
                (w = !0)),
                !C &&
                  (Z.ngOnChanges || Z.ngDoCheck) &&
                  ((s.preOrderCheckHooks || (s.preOrderCheckHooks = [])).push(
                    u.index
                  ),
                  (C = !0)),
                T++;
            }
            Zy(s, u);
          }
          y &&
            (function SI(s, o, u) {
              if (o) {
                const c = (s.localNames = []);
                for (let d = 0; d < o.length; d += 2) {
                  const p = u[o[d + 1]];
                  if (null == p) throw new Re(-301, !1);
                  c.push(o[d], p);
                }
              }
            })(u, c, y);
        }
        return (u.mergedAttrs = _d(u.mergedAttrs, u.attrs)), d;
      }
      function lS(s, o, u, c, d, p) {
        const y = p.hostBindings;
        if (y) {
          let w = s.hostBindingOpCodes;
          null === w && (w = s.hostBindingOpCodes = []);
          const C = ~o.index;
          (function yO(s) {
            let o = s.length;
            for (; o > 0; ) {
              const u = s[--o];
              if ("number" == typeof u && u < 0) return u;
            }
            return 0;
          })(w) != C && w.push(C),
            w.push(c, d, y);
        }
      }
      function dS(s, o) {
        null !== s.hostBindings && s.hostBindings(1, o);
      }
      function hS(s, o) {
        (o.flags |= 2), (s.components || (s.components = [])).push(o.index);
      }
      function AI(s, o, u) {
        if (u) {
          if (o.exportAs)
            for (let c = 0; c < o.exportAs.length; c++) u[o.exportAs[c]] = s;
          ci(o) && (u[""] = s);
        }
      }
      function to(s, o, u) {
        (s.flags |= 1),
          (s.directiveStart = o),
          (s.directiveEnd = o + u),
          (s.providerIndexes = o);
      }
      function fS(s, o, u, c, d) {
        s.data[c] = d;
        const p = d.factory || (d.factory = fs(d.type)),
          y = new Es(p, ci(d), Yl);
        (s.blueprint[c] = y),
          (u[c] = y),
          lS(s, o, 0, c, ns(s, u, d.hostVars, Qt), d);
      }
      function pS(s, o, u) {
        const c = Di(o, s),
          d = qy(u),
          p = s[10],
          y = Yp(
            s,
            Wp(
              s,
              d,
              null,
              u.onPush ? 32 : 16,
              c,
              o,
              p,
              p.createRenderer(c, u),
              null,
              null,
              null
            )
          );
        s[o.index] = y;
      }
      function no(s, o, u, c, d, p) {
        const y = Di(s, o);
        !(function Yy(s, o, u, c, d, p, y) {
          if (null == p) s.removeAttribute(o, d, u);
          else {
            const w = null == y ? ge(p) : y(p, c || "", d);
            s.setAttribute(o, d, w, u);
          }
        })(o[11], y, p, s.value, u, c, d);
      }
      function gS(s, o, u, c, d, p) {
        const y = p[o];
        if (null !== y) {
          const w = c.setInput;
          for (let C = 0; C < y.length; ) {
            const T = y[C++],
              A = y[C++],
              O = y[C++];
            null !== w ? c.setInput(u, O, T, A) : (u[A] = O);
          }
        }
      }
      function RI(s, o) {
        let u = null,
          c = 0;
        for (; c < o.length; ) {
          const d = o[c];
          if (0 !== d)
            if (5 !== d) {
              if ("number" == typeof d) break;
              s.hasOwnProperty(d) &&
                (null === u && (u = []), u.push(d, s[d], o[c + 1])),
                (c += 2);
            } else c += 2;
          else c += 4;
        }
        return u;
      }
      function jo(s, o, u, c) {
        return new Array(s, !0, !1, o, null, 0, c, u, null, null);
      }
      function _S(s, o) {
        const u = Tr(o, s);
        if (ra(u)) {
          const c = u[1];
          48 & u[2] ? Xl(c, u, c.template, u[8]) : u[5] > 0 && Zp(u);
        }
      }
      function Zp(s) {
        for (let c = iy(s); null !== c; c = sy(c))
          for (let d = 10; d < c.length; d++) {
            const p = c[d];
            if (512 & p[2]) {
              const y = p[1];
              Xl(y, p, y.template, p[8]);
            } else p[5] > 0 && Zp(p);
          }
        const u = s[1].components;
        if (null !== u)
          for (let c = 0; c < u.length; c++) {
            const d = Tr(u[c], s);
            ra(d) && d[5] > 0 && Zp(d);
          }
      }
      function MI(s, o) {
        const u = Tr(o, s),
          c = u[1];
        (function xI(s, o) {
          for (let u = o.length; u < s.blueprint.length; u++)
            o.push(s.blueprint[u]);
        })(c, u),
          qp(c, u, u[8]);
      }
      function Yp(s, o) {
        return s[13] ? (s[14][4] = o) : (s[13] = o), (s[14] = o), o;
      }
      function wu(s) {
        for (; s; ) {
          s[2] |= 32;
          const o = zl(s);
          if (Ym(s) && !o) return s;
          s = o;
        }
        return null;
      }
      function oh(s) {
        !(function Qp(s) {
          for (let o = 0; o < s.components.length; o++) {
            const u = s.components[o],
              c = J_(u);
            if (null !== c) {
              const d = c[1];
              oS(d, c, d.template, u);
            }
          }
        })(s[8]);
      }
      function Jp(s, o, u) {
        Qa(0), o(s, u);
      }
      const PI = (() => Promise.resolve(null))();
      function OI(s) {
        return s[7] || (s[7] = []);
      }
      function ES(s) {
        return s.cleanup || (s.cleanup = []);
      }
      function IS(s, o) {
        const u = s[9],
          c = u ? u.get(Wl, null) : null;
        c && c.handleError(o);
      }
      function kI(s, o, u, c, d) {
        for (let p = 0; p < u.length; ) {
          const y = u[p++],
            w = u[p++],
            C = o[y],
            T = s.data[y];
          null !== T.setInput ? T.setInput(C, d, c, w) : (C[w] = d);
        }
      }
      function Jy(s, o, u) {
        let c = u ? s.styles : null,
          d = u ? s.classes : null,
          p = 0;
        if (null !== o)
          for (let y = 0; y < o.length; y++) {
            const w = o[y];
            "number" == typeof w
              ? (p = w)
              : 1 == p
              ? (d = Ce(d, w))
              : 2 == p && (c = Ce(c, w + ": " + o[++y] + ";"));
          }
        u ? (s.styles = c) : (s.stylesWithoutHost = c),
          u ? (s.classes = d) : (s.classesWithoutHost = d);
      }
      function Xy(s, o, u, c, d = !1) {
        for (; null !== u; ) {
          const p = o[u.index];
          if ((null !== p && c.push(sr(p)), li(p)))
            for (let w = 10; w < p.length; w++) {
              const C = p[w],
                T = C[1].firstChild;
              null !== T && Xy(C[1], C, T, c);
            }
          const y = u.type;
          if (8 & y) Xy(s, o, u.child, c);
          else if (32 & y) {
            const w = ry(u, o);
            let C;
            for (; (C = w()); ) c.push(C);
          } else if (16 & y) {
            const w = Yd(o, u);
            if (Array.isArray(w)) c.push(...w);
            else {
              const C = zl(o[16]);
              Xy(C[1], C, w, c, !0);
            }
          }
          u = d ? u.projectionNext : u.next;
        }
        return c;
      }
      class Xp {
        constructor(o, u) {
          (this._lView = o),
            (this._cdRefInjectingView = u),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get rootNodes() {
          const o = this._lView,
            u = o[1];
          return Xy(u, o, u.firstChild, []);
        }
        get context() {
          return this._lView[8];
        }
        set context(o) {
          this._lView[8] = o;
        }
        get destroyed() {
          return 128 == (128 & this._lView[2]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const o = this._lView[3];
            if (li(o)) {
              const u = o[8],
                c = u ? u.indexOf(this) : -1;
              c > -1 && (ly(o, c), da(u, c));
            }
            this._attachedToViewContainer = !1;
          }
          cy(this._lView[1], this._lView);
        }
        onDestroy(o) {
          II(this._lView[1], this._lView, null, o);
        }
        markForCheck() {
          wu(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[2] &= -65;
        }
        reattach() {
          this._lView[2] |= 64;
        }
        detectChanges() {
          !(function sh(s, o, u) {
            const c = o[10];
            c.begin && c.begin();
            try {
              Xl(s, o, s.template, u);
            } catch (d) {
              throw (IS(o, d), d);
            } finally {
              c.end && c.end();
            }
          })(this._lView[1], this._lView, this.context);
        }
        checkNoChanges() {}
        attachToViewContainerRef() {
          if (this._appRef) throw new Re(902, !1);
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function JP(s, o) {
              Kl(s, o, o[11], 2, null, null);
            })(this._lView[1], this._lView);
        }
        attachToAppRef(o) {
          if (this._attachedToViewContainer) throw new Re(902, !1);
          this._appRef = o;
        }
      }
      class wO extends Xp {
        constructor(o) {
          super(o), (this._view = o);
        }
        detectChanges() {
          oh(this._view);
        }
        checkNoChanges() {}
        get context() {
          return null;
        }
      }
      class ev extends gu {
        constructor(o) {
          super(), (this.ngModule = o);
        }
        resolveComponentFactory(o) {
          const u = x(o);
          return new Iu(u, this.ngModule);
        }
      }
      function FI(s) {
        const o = [];
        for (let u in s)
          s.hasOwnProperty(u) && o.push({ propName: s[u], templateName: u });
        return o;
      }
      class tv {
        constructor(o, u) {
          (this.injector = o), (this.parentInjector = u);
        }
        get(o, u, c) {
          const d = this.injector.get(o, mu, c);
          return d !== mu || u === mu ? d : this.parentInjector.get(o, u, c);
        }
      }
      class Iu extends T0 {
        constructor(o, u) {
          super(),
            (this.componentDef = o),
            (this.ngModule = u),
            (this.componentType = o.type),
            (this.selector = (function Mp(s) {
              return s.map(Ty).join(",");
            })(o.selectors)),
            (this.ngContentSelectors = o.ngContentSelectors
              ? o.ngContentSelectors
              : []),
            (this.isBoundToModule = !!u);
        }
        get inputs() {
          return FI(this.componentDef.inputs);
        }
        get outputs() {
          return FI(this.componentDef.outputs);
        }
        create(o, u, c, d) {
          let p = (d = d || this.ngModule) instanceof pu ? d : d?.injector;
          p &&
            null !== this.componentDef.getStandaloneInjector &&
            (p = this.componentDef.getStandaloneInjector(p) || p);
          const y = p ? new tv(o, p) : o,
            w = y.get($d, null);
          if (null === w) throw new Re(407, !1);
          const C = y.get(Cp, null),
            T = w.createRenderer(null, this.componentDef),
            A = this.componentDef.selectors[0][0] || "div",
            O = c
              ? (function wI(s, o, u) {
                  return s.selectRootElement(o, u === bt.ShadowDom);
                })(T, c, this.componentDef.encapsulation)
              : uy(
                  w.createRenderer(null, this.componentDef),
                  A,
                  (function LI(s) {
                    const o = s.toLowerCase();
                    return "svg" === o ? "svg" : "math" === o ? "math" : null;
                  })(A)
                ),
            Z = this.componentDef.onPush ? 288 : 272,
            oe = (function CS(s, o) {
              return {
                components: [],
                scheduler: s || B0,
                clean: PI,
                playerHandler: o || null,
                flags: 0,
              };
            })(),
            xe = Ky(0, null, null, 1, 0, null, null, null, null, null),
            Ye = Wp(null, xe, oe, Z, null, null, w, T, C, y, null);
          let W, _t;
          qf(Ye);
          try {
            const xt = (function bO(s, o, u, c, d, p) {
              const y = u[1];
              u[22] = s;
              const C = Eu(y, 22, 2, "#host", null),
                T = (C.mergedAttrs = o.hostAttrs);
              null !== T &&
                (Jy(C, T, !0),
                null !== s &&
                  (gd(d, s, T),
                  null !== C.classes && Qd(d, s, C.classes),
                  null !== C.styles && wy(d, s, C.styles)));
              const A = c.createRenderer(s, o),
                O = Wp(
                  u,
                  qy(o),
                  null,
                  o.onPush ? 32 : 16,
                  u[22],
                  C,
                  c,
                  A,
                  p || null,
                  null,
                  null
                );
              return (
                y.firstCreatePass &&
                  (Xa($r(C, u), y, o.type), hS(y, C), to(C, u.length, 1)),
                Yp(u, O),
                (u[22] = O)
              );
            })(O, this.componentDef, Ye, w, T);
            if (O)
              if (c) gd(T, O, ["ng-version", U_.full]);
              else {
                const { attrs: We, classes: kt } = (function VT(s) {
                  const o = [],
                    u = [];
                  let c = 1,
                    d = 2;
                  for (; c < s.length; ) {
                    let p = s[c];
                    if ("string" == typeof p)
                      2 === d
                        ? "" !== p && o.push(p, s[++c])
                        : 8 === d && u.push(p);
                    else {
                      if (!ts(d)) break;
                      d = p;
                    }
                    c++;
                  }
                  return { attrs: o, classes: u };
                })(this.componentDef.selectors[0]);
                We && gd(T, O, We),
                  kt && kt.length > 0 && Qd(T, O, kt.join(" "));
              }
            if (((_t = Ka(xe, 22)), void 0 !== u)) {
              const We = (_t.projection = []);
              for (let kt = 0; kt < this.ngContentSelectors.length; kt++) {
                const nn = u[kt];
                We.push(null != nn ? Array.from(nn) : null);
              }
            }
            (W = (function DO(s, o, u, c, d) {
              const p = u[1],
                y = (function DI(s, o, u) {
                  const c = Jn();
                  s.firstCreatePass &&
                    (u.providersResolver && u.providersResolver(u),
                    fS(s, c, o, ns(s, o, 1, null), u),
                    Zy(s, c));
                  const d = Co(o, s, c.directiveStart, c);
                  Qr(d, o);
                  const p = Di(c, o);
                  return p && Qr(p, o), d;
                })(p, u, o);
              if ((c.components.push(y), (s[8] = y), null !== d))
                for (const C of d) C(y, o);
              if (o.contentQueries) {
                const C = Jn();
                o.contentQueries(1, y, C.directiveStart);
              }
              const w = Jn();
              return (
                !p.firstCreatePass ||
                  (null === o.hostBindings && null === o.hostAttrs) ||
                  (Yr(w.index),
                  lS(u[1], w, 0, w.directiveStart, w.directiveEnd, o),
                  dS(o, y)),
                y
              );
            })(xt, this.componentDef, Ye, oe, [bS])),
              qp(xe, Ye, null);
          } finally {
            cl();
          }
          return new nv(this.componentType, W, Gl(_t, Ye), Ye, _t);
        }
      }
      class nv extends class dT {} {
        constructor(o, u, c, d, p) {
          super(),
            (this.location = c),
            (this._rootLView = d),
            (this._tNode = p),
            (this.instance = u),
            (this.hostView = this.changeDetectorRef = new wO(d)),
            (this.componentType = o);
        }
        setInput(o, u) {
          const c = this._tNode.inputs;
          let d;
          if (null !== c && (d = c[o])) {
            const p = this._rootLView;
            kI(p[1], p, d, o, u), aS(p, this._tNode.index);
          }
        }
        get injector() {
          return new Gs(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(o) {
          this.hostView.onDestroy(o);
        }
      }
      function bS() {
        const s = Jn();
        hd(je()[1], s);
      }
      function Wr(s) {
        let o = (function DS(s) {
            return Object.getPrototypeOf(s.prototype).constructor;
          })(s.type),
          u = !0;
        const c = [s];
        for (; o; ) {
          let d;
          if (ci(s)) d = o.ɵcmp || o.ɵdir;
          else {
            if (o.ɵcmp) throw new Re(903, !1);
            d = o.ɵdir;
          }
          if (d) {
            if (u) {
              c.push(d);
              const y = s;
              (y.inputs = Cu(s.inputs)),
                (y.declaredInputs = Cu(s.declaredInputs)),
                (y.outputs = Cu(s.outputs));
              const w = d.hostBindings;
              w && AS(s, w);
              const C = d.viewQuery,
                T = d.contentQueries;
              if (
                (C && TS(s, C),
                T && SS(s, T),
                ce(s.inputs, d.inputs),
                ce(s.declaredInputs, d.declaredInputs),
                ce(s.outputs, d.outputs),
                ci(d) && d.data.animation)
              ) {
                const A = s.data;
                A.animation = (A.animation || []).concat(d.data.animation);
              }
            }
            const p = d.features;
            if (p)
              for (let y = 0; y < p.length; y++) {
                const w = p[y];
                w && w.ngInherit && w(s), w === Wr && (u = !1);
              }
          }
          o = Object.getPrototypeOf(o);
        }
        !(function rv(s) {
          let o = 0,
            u = null;
          for (let c = s.length - 1; c >= 0; c--) {
            const d = s[c];
            (d.hostVars = o += d.hostVars),
              (d.hostAttrs = _d(d.hostAttrs, (u = _d(u, d.hostAttrs))));
          }
        })(c);
      }
      function Cu(s) {
        return s === Vn ? {} : s === Mt ? [] : s;
      }
      function TS(s, o) {
        const u = s.viewQuery;
        s.viewQuery = u
          ? (c, d) => {
              o(c, d), u(c, d);
            }
          : o;
      }
      function SS(s, o) {
        const u = s.contentQueries;
        s.contentQueries = u
          ? (c, d, p) => {
              o(c, d, p), u(c, d, p);
            }
          : o;
      }
      function AS(s, o) {
        const u = s.hostBindings;
        s.hostBindings = u
          ? (c, d) => {
              o(c, d), u(c, d);
            }
          : o;
      }
      let tg = null;
      function Ra() {
        if (!tg) {
          const s = qe.Symbol;
          if (s && s.iterator) tg = s.iterator;
          else {
            const o = Object.getOwnPropertyNames(Map.prototype);
            for (let u = 0; u < o.length; ++u) {
              const c = o[u];
              "entries" !== c &&
                "size" !== c &&
                Map.prototype[c] === Map.prototype.entries &&
                (tg = c);
            }
          }
        }
        return tg;
      }
      function gr(s) {
        return (
          !!BI(s) && (Array.isArray(s) || (!(s instanceof Map) && Ra() in s))
        );
      }
      function BI(s) {
        return null !== s && ("function" == typeof s || "object" == typeof s);
      }
      function is(s, o, u) {
        return (s[o] = u);
      }
      function Jr(s, o, u) {
        return !Object.is(s[o], u) && ((s[o] = u), !0);
      }
      function jI(s, o, u, c) {
        const d = je();
        return Jr(d, ys(), o) && (mn(), no(qn(), d, s, o, u, c)), jI;
      }
      function ov(s, o, u, c, d, p, y, w) {
        const C = je(),
          T = mn(),
          A = s + 22,
          O = T.firstCreatePass
            ? (function NS(s, o, u, c, d, p, y, w, C) {
                const T = o.consts,
                  A = Eu(o, s, 4, y || null, ms(T, w));
                Kp(o, u, A, ms(T, C)), hd(o, A);
                const O = (A.tViews = Ky(
                  2,
                  A,
                  c,
                  d,
                  p,
                  o.directiveRegistry,
                  o.pipeRegistry,
                  null,
                  o.schemas,
                  T
                ));
                return (
                  null !== o.queries &&
                    (o.queries.template(o, A),
                    (O.queries = o.queries.embeddedTView(A))),
                  A
                );
              })(A, T, C, o, u, c, d, p, y)
            : T.data[A];
        Zi(O, !1);
        const Z = C[11].createComment("");
        Kd(T, C, Z, O),
          Qr(Z, C),
          Yp(C, (C[A] = jo(Z, C, Z, O))),
          ea(O) && zy(T, C, O),
          null != y && ih(C, O, w);
      }
      function av(s, o, u) {
        const c = je();
        return (
          Jr(c, ys(), o) &&
            (function rs(s, o, u, c, d, p, y, w) {
              const C = Di(o, u);
              let A,
                T = o.inputs;
              !w && null != T && (A = T[c])
                ? (kI(s, u, A, c, d), Us(o) && aS(u, o.index))
                : 3 & o.type &&
                  ((c = (function _O(s) {
                    return "class" === s
                      ? "className"
                      : "for" === s
                      ? "htmlFor"
                      : "formaction" === s
                      ? "formAction"
                      : "innerHtml" === s
                      ? "innerHTML"
                      : "readonly" === s
                      ? "readOnly"
                      : "tabindex" === s
                      ? "tabIndex"
                      : s;
                  })(c)),
                  (d = null != y ? y(d, o.value || "", c) : d),
                  p.setProperty(C, c, d));
            })(mn(), qn(), c, s, o, c[11], u, !1),
          av
        );
      }
      function uv(s, o, u, c, d) {
        const y = d ? "class" : "style";
        kI(s, u, o.inputs[y], y, c);
      }
      function Du(s, o, u, c) {
        const d = je(),
          p = mn(),
          y = 22 + s,
          w = d[11],
          C = (d[y] = uy(
            w,
            o,
            (function hl() {
              return Ht.lFrame.currentNamespace;
            })()
          )),
          T = p.firstCreatePass
            ? (function _i(s, o, u, c, d, p, y) {
                const w = o.consts,
                  T = Eu(o, s, 2, d, ms(w, p));
                return (
                  Kp(o, u, T, ms(w, y)),
                  null !== T.attrs && Jy(T, T.attrs, !1),
                  null !== T.mergedAttrs && Jy(T, T.mergedAttrs, !0),
                  null !== o.queries && o.queries.elementStart(o, T),
                  T
                );
              })(y, p, d, 0, o, u, c)
            : p.data[y];
        Zi(T, !0);
        const A = T.mergedAttrs;
        null !== A && gd(w, C, A);
        const O = T.classes;
        null !== O && Qd(w, C, O);
        const Z = T.styles;
        return (
          null !== Z && wy(w, C, Z),
          64 != (64 & T.flags) && Kd(p, d, C, T),
          0 ===
            (function $f() {
              return Ht.lFrame.elementDepthCount;
            })() && Qr(C, d),
          (function od() {
            Ht.lFrame.elementDepthCount++;
          })(),
          ea(T) &&
            (zy(p, d, T),
            (function vI(s, o, u) {
              if (zu(o)) {
                const d = o.directiveEnd;
                for (let p = o.directiveStart; p < d; p++) {
                  const y = s.data[p];
                  y.contentQueries && y.contentQueries(1, u[p], p);
                }
              }
            })(p, T, d)),
          null !== c && ih(d, T),
          Du
        );
      }
      function ph() {
        let s = Jn();
        Za()
          ? (function al() {
              Ht.lFrame.isParent = !1;
            })()
          : ((s = s.parent), Zi(s, !1));
        const o = s;
        !(function il() {
          Ht.lFrame.elementDepthCount--;
        })();
        const u = mn();
        return (
          u.firstCreatePass && (hd(u, s), zu(s) && u.queries.elementEnd(s)),
          null != o.classesWithoutHost &&
            (function s_(s) {
              return 0 != (16 & s.flags);
            })(o) &&
            uv(u, o, je(), o.classesWithoutHost, !0),
          null != o.stylesWithoutHost &&
            (function g0(s) {
              return 0 != (32 & s.flags);
            })(o) &&
            uv(u, o, je(), o.stylesWithoutHost, !1),
          ph
        );
      }
      function gh(s, o, u, c) {
        return Du(s, o, u, c), ph(), gh;
      }
      function WI() {
        return je();
      }
      function lv(s) {
        return !!s && "function" == typeof s.then;
      }
      function zI(s) {
        return !!s && "function" == typeof s.subscribe;
      }
      const qI = zI;
      function Tu(s, o, u, c) {
        const d = je(),
          p = mn(),
          y = Jn();
        return (
          (function dv(s, o, u, c, d, p, y, w) {
            const C = ea(c),
              A = s.firstCreatePass && ES(s),
              O = o[8],
              Z = OI(o);
            let oe = !0;
            if (3 & c.type || w) {
              const W = Di(c, o),
                _t = w ? w(W) : W,
                xt = Z.length,
                We = w ? (nn) => w(sr(nn[c.index])) : c.index;
              let kt = null;
              if (
                (!w &&
                  C &&
                  (kt = (function sg(s, o, u, c) {
                    const d = s.cleanup;
                    if (null != d)
                      for (let p = 0; p < d.length - 1; p += 2) {
                        const y = d[p];
                        if (y === u && d[p + 1] === c) {
                          const w = o[7],
                            C = d[p + 2];
                          return w.length > C ? w[C] : null;
                        }
                        "string" == typeof y && (p += 2);
                      }
                    return null;
                  })(s, o, d, c.index)),
                null !== kt)
              )
                ((kt.__ngLastListenerFn__ || kt).__ngNextListenerFn__ = p),
                  (kt.__ngLastListenerFn__ = p),
                  (oe = !1);
              else {
                p = ZI(c, o, O, p, !1);
                const nn = u.listen(_t, d, p);
                Z.push(p, nn), A && A.push(d, We, xt, xt + 1);
              }
            } else p = ZI(c, o, O, p, !1);
            const xe = c.outputs;
            let Ye;
            if (oe && null !== xe && (Ye = xe[d])) {
              const W = Ye.length;
              if (W)
                for (let _t = 0; _t < W; _t += 2) {
                  const Kn = o[Ye[_t]][Ye[_t + 1]].subscribe(p),
                    ji = Z.length;
                  Z.push(p, Kn), A && A.push(d, c.index, ji, -(ji + 1));
                }
            }
          })(p, d, d[11], y, s, o, 0, c),
          Tu
        );
      }
      function KI(s, o, u, c) {
        try {
          return !1 !== u(c);
        } catch (d) {
          return IS(s, d), !1;
        }
      }
      function ZI(s, o, u, c, d) {
        return function p(y) {
          if (y === Function) return c;
          wu(2 & s.flags ? Tr(s.index, o) : o);
          let C = KI(o, 0, c, y),
            T = p.__ngNextListenerFn__;
          for (; T; ) (C = KI(o, 0, T, y) && C), (T = T.__ngNextListenerFn__);
          return d && !1 === C && (y.preventDefault(), (y.returnValue = !1)), C;
        };
      }
      function YI(s = 1) {
        return (function Yf(s) {
          return (Ht.lFrame.contextLView = (function dl(s, o) {
            for (; s > 0; ) (o = o[15]), s--;
            return o;
          })(s, Ht.lFrame.contextLView))[8];
        })(s);
      }
      function eC(s, o, u, c, d) {
        const p = s[u + 1],
          y = null === o;
        let w = c ? As(p) : Ta(p),
          C = !1;
        for (; 0 !== w && (!1 === C || y); ) {
          const A = s[w + 1];
          VS(s[w], o) && ((C = !0), (s[w + 1] = c ? rh(A) : xy(A))),
            (w = c ? As(A) : Ta(A));
        }
        C && (s[u + 1] = c ? xy(p) : rh(p));
      }
      function VS(s, o) {
        return (
          null === s ||
          null == o ||
          (Array.isArray(s) ? s[1] : s) === o ||
          (!(!Array.isArray(s) || "string" != typeof o) && Ro(s, o) >= 0)
        );
      }
      function Iv(s, o) {
        return (
          (function Vi(s, o, u, c) {
            const d = je(),
              p = mn(),
              y = (function vs(s) {
                const o = Ht.lFrame,
                  u = o.bindingIndex;
                return (o.bindingIndex = o.bindingIndex + s), u;
              })(2);
            p.firstUpdatePass &&
              (function oC(s, o, u, c) {
                const d = s.data;
                if (null === d[u + 1]) {
                  const p = d[Or()],
                    y = (function sC(s, o) {
                      return o >= s.expandoStartIndex;
                    })(s, u);
                  (function hC(s, o) {
                    return 0 != (s.flags & (o ? 16 : 32));
                  })(p, c) &&
                    null === o &&
                    !y &&
                    (o = !1),
                    (o = (function aC(s, o, u, c) {
                      const d = (function oa(s) {
                        const o = Ht.lFrame.currentDirectiveIndex;
                        return -1 === o ? null : s[o];
                      })(s);
                      let p = c ? o.residualClasses : o.residualStyles;
                      if (null === d)
                        0 === (c ? o.classBindings : o.styleBindings) &&
                          ((u = dg((u = cg(null, s, o, u, c)), o.attrs, c)),
                          (p = null));
                      else {
                        const y = o.directiveStylingLast;
                        if (-1 === y || s[y] !== d)
                          if (((u = cg(d, s, o, u, c)), null === p)) {
                            let C = (function uC(s, o, u) {
                              const c = u ? o.classBindings : o.styleBindings;
                              if (0 !== Ta(c)) return s[As(c)];
                            })(s, o, c);
                            void 0 !== C &&
                              Array.isArray(C) &&
                              ((C = cg(null, s, o, C[1], c)),
                              (C = dg(C, o.attrs, c)),
                              (function lC(s, o, u, c) {
                                s[As(u ? o.classBindings : o.styleBindings)] =
                                  c;
                              })(s, o, c, C));
                          } else
                            p = (function cC(s, o, u) {
                              let c;
                              const d = o.directiveEnd;
                              for (
                                let p = 1 + o.directiveStylingLast;
                                p < d;
                                p++
                              )
                                c = dg(c, s[p].hostAttrs, u);
                              return dg(c, o.attrs, u);
                            })(s, o, c);
                      }
                      return (
                        void 0 !== p &&
                          (c
                            ? (o.residualClasses = p)
                            : (o.residualStyles = p)),
                        u
                      );
                    })(d, p, o, c)),
                    (function _v(s, o, u, c, d, p) {
                      let y = p ? o.classBindings : o.styleBindings,
                        w = As(y),
                        C = Ta(y);
                      s[c] = u;
                      let A,
                        T = !1;
                      if (Array.isArray(u)) {
                        const O = u;
                        (A = O[1]), (null === A || Ro(O, A) > 0) && (T = !0);
                      } else A = u;
                      if (d)
                        if (0 !== C) {
                          const Z = As(s[w + 1]);
                          (s[c + 1] = Ql(Z, w)),
                            0 !== Z && (s[Z + 1] = Ny(s[Z + 1], c)),
                            (s[w + 1] = (function My(s, o) {
                              return (131071 & s) | (o << 17);
                            })(s[w + 1], c));
                        } else
                          (s[c + 1] = Ql(w, 0)),
                            0 !== w && (s[w + 1] = Ny(s[w + 1], c)),
                            (w = c);
                      else
                        (s[c + 1] = Ql(C, 0)),
                          0 === w ? (w = c) : (s[C + 1] = Ny(s[C + 1], c)),
                          (C = c);
                      T && (s[c + 1] = xy(s[c + 1])),
                        eC(s, A, c, !0),
                        eC(s, A, c, !1),
                        (function LS(s, o, u, c, d) {
                          const p = d ? s.residualClasses : s.residualStyles;
                          null != p &&
                            "string" == typeof o &&
                            Ro(p, o) >= 0 &&
                            (u[c + 1] = rh(u[c + 1]));
                        })(o, A, s, c, p),
                        (y = Ql(w, C)),
                        p ? (o.classBindings = y) : (o.styleBindings = y);
                    })(d, p, o, u, y, c);
                }
              })(p, s, y, c),
              o !== Qt &&
                Jr(d, y, o) &&
                (function hg(s, o, u, c, d, p, y, w) {
                  if (!(3 & o.type)) return;
                  const C = s.data,
                    T = C[w + 1];
                  fg(
                    (function Jl(s) {
                      return 1 == (1 & s);
                    })(T)
                      ? WS(C, o, u, d, Ta(T), y)
                      : void 0
                  ) ||
                    (fg(p) ||
                      ((function Ry(s) {
                        return 2 == (2 & s);
                      })(T) &&
                        (p = WS(C, null, u, d, w, y))),
                    (function Ey(s, o, u, c, d) {
                      if (o) d ? s.addClass(u, c) : s.removeClass(u, c);
                      else {
                        let p = -1 === c.indexOf("-") ? void 0 : Xs.DashCase;
                        null == d
                          ? s.removeStyle(u, c, p)
                          : ("string" == typeof d &&
                              d.endsWith("!important") &&
                              ((d = d.slice(0, -10)), (p |= Xs.Important)),
                            s.setStyle(u, c, d, p));
                      }
                    })(c, y, qa(Or(), u), d, p));
                })(
                  p,
                  p.data[Or()],
                  d,
                  d[11],
                  s,
                  (d[y + 1] = (function dC(s, o) {
                    return (
                      null == s ||
                        ("string" == typeof o
                          ? (s += o)
                          : "object" == typeof s && (s = he(es(s)))),
                      s
                    );
                  })(o, u)),
                  c,
                  y
                );
          })(s, o, null, !0),
          Iv
        );
      }
      function cg(s, o, u, c, d) {
        let p = null;
        const y = u.directiveEnd;
        let w = u.directiveStylingLast;
        for (
          -1 === w ? (w = u.directiveStart) : w++;
          w < y && ((p = o[w]), (c = dg(c, p.hostAttrs, d)), p !== s);

        )
          w++;
        return null !== s && (u.directiveStylingLast = w), c;
      }
      function dg(s, o, u) {
        const c = u ? 1 : 2;
        let d = -1;
        if (null !== o)
          for (let p = 0; p < o.length; p++) {
            const y = o[p];
            "number" == typeof y
              ? (d = y)
              : d === c &&
                (Array.isArray(s) || (s = void 0 === s ? [] : ["", s]),
                er(s, y, !!u || o[++p]));
          }
        return void 0 === s ? null : s;
      }
      function WS(s, o, u, c, d, p) {
        const y = null === o;
        let w;
        for (; d > 0; ) {
          const C = s[d],
            T = Array.isArray(C),
            A = T ? C[1] : C,
            O = null === A;
          let Z = u[d + 1];
          Z === Qt && (Z = O ? Mt : void 0);
          let oe = O ? Tl(Z, c) : A === c ? Z : void 0;
          if ((T && !fg(oe) && (oe = Tl(C, c)), fg(oe) && ((w = oe), y)))
            return w;
          const xe = s[d + 1];
          d = y ? As(xe) : Ta(xe);
        }
        if (null !== o) {
          let C = p ? o.residualClasses : o.residualStyles;
          null != C && (w = Tl(C, c));
        }
        return w;
      }
      function fg(s) {
        return void 0 !== s;
      }
      function Cv(s, o = "") {
        const u = je(),
          c = mn(),
          d = s + 22,
          p = c.firstCreatePass ? Eu(c, d, 1, o, null) : c.data[d],
          y = (u[d] = (function Tp(s, o) {
            return s.createText(o);
          })(u[11], o));
        Kd(c, u, y, p), Zi(p, !1);
      }
      function Eh(s) {
        return xs("", s, ""), Eh;
      }
      function xs(s, o, u) {
        const c = je(),
          d = (function lh(s, o, u, c) {
            return Jr(s, ys(), u) ? o + ge(u) + c : Qt;
          })(c, s, o, u);
        return (
          d !== Qt &&
            (function Aa(s, o, u) {
              const c = qa(o, s);
              !(function W0(s, o, u) {
                s.setValue(o, u);
              })(s[11], c, u);
            })(c, Or(), d),
          xs
        );
      }
      const ic = void 0;
      var XS = [
        "en",
        [["a", "p"], ["AM", "PM"], ic],
        [["AM", "PM"], ic, ic],
        [
          ["S", "M", "T", "W", "T", "F", "S"],
          ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ],
          ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
        ],
        ic,
        [
          ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
        ],
        ic,
        [
          ["B", "A"],
          ["BC", "AD"],
          ["Before Christ", "Anno Domini"],
        ],
        0,
        [6, 0],
        ["M/d/yy", "MMM d, y", "MMMM d, y", "EEEE, MMMM d, y"],
        ["h:mm a", "h:mm:ss a", "h:mm:ss a z", "h:mm:ss a zzzz"],
        ["{1}, {0}", ic, "{1} 'at' {0}", ic],
        [
          ".",
          ",",
          ";",
          "%",
          "+",
          "-",
          "E",
          "\xd7",
          "\u2030",
          "\u221e",
          "NaN",
          ":",
        ],
        ["#,##0.###", "#,##0%", "\xa4#,##0.00", "#E0"],
        "USD",
        "$",
        "US Dollar",
        {},
        "ltr",
        function Av(s) {
          const u = Math.floor(Math.abs(s)),
            c = s.toString().replace(/^[^.]*\.?/, "").length;
          return 1 === u && 0 === c ? 1 : 5;
        },
      ];
      let sc = {};
      function Rv(s) {
        const o = (function LO(s) {
          return s.toLowerCase().replace(/_/g, "-");
        })(s);
        let u = AC(o);
        if (u) return u;
        const c = o.split("-")[0];
        if (((u = AC(c)), u)) return u;
        if ("en" === c) return XS;
        throw new Re(701, !1);
      }
      function SC(s) {
        return Rv(s)[jt.PluralCase];
      }
      function AC(s) {
        return (
          s in sc ||
            (sc[s] =
              qe.ng &&
              qe.ng.common &&
              qe.ng.common.locales &&
              qe.ng.common.locales[s]),
          sc[s]
        );
      }
      var jt = (() => (
        ((jt = jt || {})[(jt.LocaleId = 0)] = "LocaleId"),
        (jt[(jt.DayPeriodsFormat = 1)] = "DayPeriodsFormat"),
        (jt[(jt.DayPeriodsStandalone = 2)] = "DayPeriodsStandalone"),
        (jt[(jt.DaysFormat = 3)] = "DaysFormat"),
        (jt[(jt.DaysStandalone = 4)] = "DaysStandalone"),
        (jt[(jt.MonthsFormat = 5)] = "MonthsFormat"),
        (jt[(jt.MonthsStandalone = 6)] = "MonthsStandalone"),
        (jt[(jt.Eras = 7)] = "Eras"),
        (jt[(jt.FirstDayOfWeek = 8)] = "FirstDayOfWeek"),
        (jt[(jt.WeekendRange = 9)] = "WeekendRange"),
        (jt[(jt.DateFormat = 10)] = "DateFormat"),
        (jt[(jt.TimeFormat = 11)] = "TimeFormat"),
        (jt[(jt.DateTimeFormat = 12)] = "DateTimeFormat"),
        (jt[(jt.NumberSymbols = 13)] = "NumberSymbols"),
        (jt[(jt.NumberFormats = 14)] = "NumberFormats"),
        (jt[(jt.CurrencyCode = 15)] = "CurrencyCode"),
        (jt[(jt.CurrencySymbol = 16)] = "CurrencySymbol"),
        (jt[(jt.CurrencyName = 17)] = "CurrencyName"),
        (jt[(jt.Currencies = 18)] = "Currencies"),
        (jt[(jt.Directionality = 19)] = "Directionality"),
        (jt[(jt.PluralCase = 20)] = "PluralCase"),
        (jt[(jt.ExtraData = 21)] = "ExtraData"),
        jt
      ))();
      const Ch = "en-US";
      let RC = Ch;
      function Bv(s, o, u, c, d) {
        if (((s = Q(s)), Array.isArray(s)))
          for (let p = 0; p < s.length; p++) Bv(s[p], o, u, c, d);
        else {
          const p = mn(),
            y = je();
          let w = Ts(s) ? s : Q(s.provide),
            C = D0(s);
          const T = Jn(),
            A = 1048575 & T.providerIndexes,
            O = T.directiveStart,
            Z = T.providerIndexes >> 20;
          if (Ts(s) || !s.multi) {
            const oe = new Es(C, d, Yl),
              xe = $v(w, o, d ? A : A + Z, O);
            -1 === xe
              ? (Xa($r(T, y), p, w),
                jv(p, s, o.length),
                o.push(w),
                T.directiveStart++,
                T.directiveEnd++,
                d && (T.providerIndexes += 1048576),
                u.push(oe),
                y.push(oe))
              : ((u[xe] = oe), (y[xe] = oe));
          } else {
            const oe = $v(w, o, A + Z, O),
              xe = $v(w, o, A, A + Z),
              Ye = oe >= 0 && u[oe],
              W = xe >= 0 && u[xe];
            if ((d && !W) || (!d && !Ye)) {
              Xa($r(T, y), p, w);
              const _t = (function PA(s, o, u, c, d) {
                const p = new Es(s, u, Yl);
                return (
                  (p.multi = []),
                  (p.index = o),
                  (p.componentProviders = 0),
                  VC(p, d, c && !u),
                  p
                );
              })(d ? NA : xA, u.length, d, c, C);
              !d && W && (u[xe].providerFactory = _t),
                jv(p, s, o.length, 0),
                o.push(w),
                T.directiveStart++,
                T.directiveEnd++,
                d && (T.providerIndexes += 1048576),
                u.push(_t),
                y.push(_t);
            } else jv(p, s, oe > -1 ? oe : xe, VC(u[d ? xe : oe], C, !d && c));
            !d && c && W && u[xe].componentProviders++;
          }
        }
      }
      function jv(s, o, u, c) {
        const d = Ts(o),
          p = (function Bd(s) {
            return !!s.useClass;
          })(o);
        if (d || p) {
          const C = (p ? Q(o.useClass) : o).prototype.ngOnDestroy;
          if (C) {
            const T = s.destroyHooks || (s.destroyHooks = []);
            if (!d && o.multi) {
              const A = T.indexOf(u);
              -1 === A ? T.push(u, [c, C]) : T[A + 1].push(c, C);
            } else T.push(u, C);
          }
        }
      }
      function VC(s, o, u) {
        return u && s.componentProviders++, s.multi.push(o) - 1;
      }
      function $v(s, o, u, c) {
        for (let d = u; d < c; d++) if (o[d] === s) return d;
        return -1;
      }
      function xA(s, o, u, c) {
        return Hv(this.multi, []);
      }
      function NA(s, o, u, c) {
        const d = this.multi;
        let p;
        if (this.providerFactory) {
          const y = this.providerFactory.componentProviders,
            w = Co(u, u[1], this.providerFactory.index, c);
          (p = w.slice(0, y)), Hv(d, p);
          for (let C = y; C < w.length; C++) p.push(w[C]);
        } else (p = []), Hv(d, p);
        return p;
      }
      function Hv(s, o) {
        for (let u = 0; u < s.length; u++) o.push((0, s[u])());
        return o;
      }
      function UC(s, o = []) {
        return (u) => {
          u.providersResolver = (c, d) =>
            (function MA(s, o, u) {
              const c = mn();
              if (c.firstCreatePass) {
                const d = ci(s);
                Bv(u, c.data, c.blueprint, d, !0),
                  Bv(o, c.data, c.blueprint, d, !1);
              }
            })(c, d ? d(s) : s, o);
        };
      }
      class uc {}
      class Gv {}
      function Ig(s, o) {
        return new lc(s, o ?? null);
      }
      class lc extends uc {
        constructor(o, u) {
          super(),
            (this._parent = u),
            (this._bootstrapComponents = []),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new ev(this));
          const c = Se(o);
          (this._bootstrapComponents = Fo(c.bootstrap)),
            (this._r3Injector = rI(
              o,
              u,
              [
                { provide: uc, useValue: this },
                { provide: gu, useValue: this.componentFactoryResolver },
              ],
              he(o),
              new Set(["environment"])
            )),
            this._r3Injector.resolveInjectorInitializers(),
            (this.instance = this._r3Injector.get(o));
        }
        get injector() {
          return this._r3Injector;
        }
        destroy() {
          const o = this._r3Injector;
          !o.destroyed && o.destroy(),
            this.destroyCbs.forEach((u) => u()),
            (this.destroyCbs = null);
        }
        onDestroy(o) {
          this.destroyCbs.push(o);
        }
      }
      class Cg extends Gv {
        constructor(o) {
          super(), (this.moduleType = o);
        }
        create(o) {
          return new lc(this.moduleType, o);
        }
      }
      class OA extends uc {
        constructor(o, u, c) {
          super(),
            (this.componentFactoryResolver = new ev(this)),
            (this.instance = null);
          const d = new oT(
            [
              ...o,
              { provide: uc, useValue: this },
              { provide: gu, useValue: this.componentFactoryResolver },
            ],
            u || Ep(),
            c,
            new Set(["environment"])
          );
          (this.injector = d), d.resolveInjectorInitializers();
        }
        destroy() {
          this.injector.destroy();
        }
        onDestroy(o) {
          this.injector.onDestroy(o);
        }
      }
      function Wv(s, o, u = null) {
        return new OA(s, o, u).injector;
      }
      function $o(s, o, u) {
        const c = fr() + s,
          d = je();
        return d[c] === Qt
          ? is(d, c, u ? o.call(u) : o())
          : (function ah(s, o) {
              return s[o];
            })(d, c);
      }
      function HC(s, o, u, c) {
        return Ag(je(), fr(), s, o, u, c);
      }
      function Ag(s, o, u, c, d, p) {
        const y = o + u;
        return Jr(s, y, d)
          ? is(s, y + 1, p ? c.call(p, d) : c(d))
          : (function Mr(s, o) {
              const u = s[o];
              return u === Qt ? void 0 : u;
            })(s, y + 1);
      }
      function Qv(s, o) {
        const u = mn();
        let c;
        const d = s + 22;
        u.firstCreatePass
          ? ((c = (function KC(s, o) {
              if (o)
                for (let u = o.length - 1; u >= 0; u--) {
                  const c = o[u];
                  if (s === c.name) return c;
                }
            })(o, u.pipeRegistry)),
            (u.data[d] = c),
            c.onDestroy &&
              (u.destroyHooks || (u.destroyHooks = [])).push(d, c.onDestroy))
          : (c = u.data[d]);
        const p = c.factory || (c.factory = fs(c.type)),
          y = Ke(Yl);
        try {
          const w = yd(!1),
            C = p();
          return (
            yd(w),
            (function PS(s, o, u, c) {
              u >= s.data.length &&
                ((s.data[u] = null), (s.blueprint[u] = null)),
                (o[u] = c);
            })(u, je(), d, C),
            C
          );
        } finally {
          Ke(y);
        }
      }
      function Mg(s, o, u) {
        const c = s + 22,
          d = je(),
          p = (function mo(s, o) {
            return s[o];
          })(d, c);
        return (function Su(s, o) {
          return s[1].data[o].pure;
        })(d, c)
          ? Ag(d, fr(), o, p.transform, u, p)
          : p.transform(u);
      }
      function Jv(s) {
        return (o) => {
          setTimeout(s, void 0, o);
        };
      }
      const Ns = class YC extends f.x {
        constructor(o = !1) {
          super(), (this.__isAsync = o);
        }
        emit(o) {
          super.next(o);
        }
        subscribe(o, u, c) {
          let d = o,
            p = u || (() => null),
            y = c;
          if (o && "object" == typeof o) {
            const C = o;
            (d = C.next?.bind(C)),
              (p = C.error?.bind(C)),
              (y = C.complete?.bind(C));
          }
          this.__isAsync && ((p = Jv(p)), d && (d = Jv(d)), y && (y = Jv(y)));
          const w = super.subscribe({ next: d, error: p, complete: y });
          return o instanceof V.w0 && o.add(w), w;
        }
      };
      function xg() {
        return this._results[Ra()]();
      }
      class Dh {
        constructor(o = !1) {
          (this._emitDistinctChangesOnly = o),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const u = Ra(),
            c = Dh.prototype;
          c[u] || (c[u] = xg);
        }
        get changes() {
          return this._changes || (this._changes = new Ns());
        }
        get(o) {
          return this._results[o];
        }
        map(o) {
          return this._results.map(o);
        }
        filter(o) {
          return this._results.filter(o);
        }
        find(o) {
          return this._results.find(o);
        }
        reduce(o, u) {
          return this._results.reduce(o, u);
        }
        forEach(o) {
          this._results.forEach(o);
        }
        some(o) {
          return this._results.some(o);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(o, u) {
          const c = this;
          c.dirty = !1;
          const d = Sr(o);
          (this._changesDetected = !(function Cd(s, o, u) {
            if (s.length !== o.length) return !1;
            for (let c = 0; c < s.length; c++) {
              let d = s[c],
                p = o[c];
              if ((u && ((d = u(d)), (p = u(p))), p !== d)) return !1;
            }
            return !0;
          })(c._results, d, u)) &&
            ((c._results = d),
            (c.length = d.length),
            (c.last = d[this.length - 1]),
            (c.first = d[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      let Au = (() => {
        class s {}
        return (s.__NG_ELEMENT_ID__ = WA), s;
      })();
      const Xv = Au,
        GA = class extends Xv {
          constructor(o, u, c) {
            super(),
              (this._declarationLView = o),
              (this._declarationTContainer = u),
              (this.elementRef = c);
          }
          createEmbeddedView(o, u) {
            const c = this._declarationTContainer.tViews,
              d = Wp(
                this._declarationLView,
                c,
                o,
                16,
                null,
                c.declTNode,
                null,
                null,
                null,
                null,
                u || null
              );
            d[17] = this._declarationLView[this._declarationTContainer.index];
            const y = this._declarationLView[19];
            return (
              null !== y && (d[19] = y.createEmbeddedView(c)),
              qp(c, d, o),
              new Xp(d)
            );
          }
        };
      function WA() {
        return hc(Jn(), je());
      }
      function hc(s, o) {
        return 4 & s.type ? new GA(o, s, Gl(s, o)) : null;
      }
      let Th = (() => {
        class s {}
        return (s.__NG_ELEMENT_ID__ = zA), s;
      })();
      function zA() {
        return pc(Jn(), je());
      }
      const qA = Th,
        qr = class extends qA {
          constructor(o, u, c) {
            super(),
              (this._lContainer = o),
              (this._hostTNode = u),
              (this._hostLView = c);
          }
          get element() {
            return Gl(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new Gs(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const o = yl(this._hostTNode, this._hostLView);
            if (u_(o)) {
              const u = ml(o, this._hostLView),
                c = gl(o);
              return new Gs(u[1].data[c + 8], u);
            }
            return new Gs(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(o) {
            const u = fc(this._lContainer);
            return (null !== u && u[o]) || null;
          }
          get length() {
            return this._lContainer.length - 10;
          }
          createEmbeddedView(o, u, c) {
            let d, p;
            "number" == typeof c
              ? (d = c)
              : null != c && ((d = c.index), (p = c.injector));
            const y = o.createEmbeddedView(u || {}, p);
            return this.insert(y, d), y;
          }
          createComponent(o, u, c, d, p) {
            const y =
              o &&
              !(function Xn(s) {
                return "function" == typeof s;
              })(o);
            let w;
            if (y) w = u;
            else {
              const O = u || {};
              (w = O.index),
                (c = O.injector),
                (d = O.projectableNodes),
                (p = O.environmentInjector || O.ngModuleRef);
            }
            const C = y ? o : new Iu(x(o)),
              T = c || this.parentInjector;
            if (!p && null == C.ngModule) {
              const Z = (y ? T : this.parentInjector).get(pu, null);
              Z && (p = Z);
            }
            const A = C.create(T, d, void 0, p);
            return this.insert(A.hostView, w), A;
          }
          insert(o, u) {
            const c = o._lView,
              d = c[1];
            if (
              (function _o(s) {
                return li(s[3]);
              })(c)
            ) {
              const A = this.indexOf(o);
              if (-1 !== A) this.detach(A);
              else {
                const O = c[3],
                  Z = new qr(O, O[6], O[3]);
                Z.detach(Z.indexOf(o));
              }
            }
            const p = this._adjustIndex(u),
              y = this._lContainer;
            !(function z0(s, o, u, c) {
              const d = 10 + c,
                p = u.length;
              c > 0 && (u[d - 1][4] = o),
                c < p - 10
                  ? ((o[4] = u[d]), bd(u, 10 + c, o))
                  : (u.push(o), (o[4] = null)),
                (o[3] = u);
              const y = o[17];
              null !== y &&
                u !== y &&
                (function vu(s, o) {
                  const u = s[9];
                  o[16] !== o[3][3][16] && (s[2] = !0),
                    null === u ? (s[9] = [o]) : u.push(o);
                })(y, o);
              const w = o[19];
              null !== w && w.insertView(s), (o[2] |= 64);
            })(d, c, y, p);
            const w = Ap(p, y),
              C = c[11],
              T = fy(C, y[7]);
            return (
              null !== T &&
                (function NT(s, o, u, c, d, p) {
                  (c[0] = d), (c[6] = o), Kl(s, c, u, 1, d, p);
                })(d, y[6], C, c, T, w),
              o.attachToViewContainerRef(),
              bd(eE(y), p, o),
              o
            );
          }
          move(o, u) {
            return this.insert(o, u);
          }
          indexOf(o) {
            const u = fc(this._lContainer);
            return null !== u ? u.indexOf(o) : -1;
          }
          remove(o) {
            const u = this._adjustIndex(o, -1),
              c = ly(this._lContainer, u);
            c && (da(eE(this._lContainer), u), cy(c[1], c));
          }
          detach(o) {
            const u = this._adjustIndex(o, -1),
              c = ly(this._lContainer, u);
            return c && null != da(eE(this._lContainer), u) ? new Xp(c) : null;
          }
          _adjustIndex(o, u = 0) {
            return o ?? this.length + u;
          }
        };
      function fc(s) {
        return s[8];
      }
      function eE(s) {
        return s[8] || (s[8] = []);
      }
      function pc(s, o) {
        let u;
        const c = o[s.index];
        if (li(c)) u = c;
        else {
          let d;
          if (8 & s.type) d = sr(c);
          else {
            const p = o[11];
            d = p.createComment("");
            const y = Di(s, o);
            Ri(
              p,
              fy(p, y),
              d,
              (function K0(s, o) {
                return s.nextSibling(o);
              })(p, y),
              !1
            );
          }
          (o[s.index] = u = jo(c, o, d, s)), Yp(o, u);
        }
        return new qr(u, s, o);
      }
      class gc {
        constructor(o) {
          (this.queryList = o), (this.matches = null);
        }
        clone() {
          return new gc(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class Sh {
        constructor(o = []) {
          this.queries = o;
        }
        createEmbeddedView(o) {
          const u = o.queries;
          if (null !== u) {
            const c =
                null !== o.contentQueries ? o.contentQueries[0] : u.length,
              d = [];
            for (let p = 0; p < c; p++) {
              const y = u.getByIndex(p);
              d.push(this.queries[y.indexInDeclarationView].clone());
            }
            return new Sh(d);
          }
          return null;
        }
        insertView(o) {
          this.dirtyQueriesWithMatches(o);
        }
        detachView(o) {
          this.dirtyQueriesWithMatches(o);
        }
        dirtyQueriesWithMatches(o) {
          for (let u = 0; u < this.queries.length; u++)
            null !== Fg(o, u).matches && this.queries[u].setDirty();
        }
      }
      class Ng {
        constructor(o, u, c = null) {
          (this.predicate = o), (this.flags = u), (this.read = c);
        }
      }
      class Ah {
        constructor(o = []) {
          this.queries = o;
        }
        elementStart(o, u) {
          for (let c = 0; c < this.queries.length; c++)
            this.queries[c].elementStart(o, u);
        }
        elementEnd(o) {
          for (let u = 0; u < this.queries.length; u++)
            this.queries[u].elementEnd(o);
        }
        embeddedTView(o) {
          let u = null;
          for (let c = 0; c < this.length; c++) {
            const d = null !== u ? u.length : 0,
              p = this.getByIndex(c).embeddedTView(o, d);
            p &&
              ((p.indexInDeclarationView = c),
              null !== u ? u.push(p) : (u = [p]));
          }
          return null !== u ? new Ah(u) : null;
        }
        template(o, u) {
          for (let c = 0; c < this.queries.length; c++)
            this.queries[c].template(o, u);
        }
        getByIndex(o) {
          return this.queries[o];
        }
        get length() {
          return this.queries.length;
        }
        track(o) {
          this.queries.push(o);
        }
      }
      class Rh {
        constructor(o, u = -1) {
          (this.metadata = o),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = u);
        }
        elementStart(o, u) {
          this.isApplyingToNode(u) && this.matchTNode(o, u);
        }
        elementEnd(o) {
          this._declarationNodeIndex === o.index &&
            (this._appliesToNextNode = !1);
        }
        template(o, u) {
          this.elementStart(o, u);
        }
        embeddedTView(o, u) {
          return this.isApplyingToNode(o)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-o.index, u),
              new Rh(this.metadata))
            : null;
        }
        isApplyingToNode(o) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const u = this._declarationNodeIndex;
            let c = o.parent;
            for (; null !== c && 8 & c.type && c.index !== u; ) c = c.parent;
            return u === (null !== c ? c.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(o, u) {
          const c = this.metadata.predicate;
          if (Array.isArray(c))
            for (let d = 0; d < c.length; d++) {
              const p = c[d];
              this.matchTNodeWithReadOption(o, u, QC(u, p)),
                this.matchTNodeWithReadOption(o, u, la(u, o, p, !1, !1));
            }
          else
            c === Au
              ? 4 & u.type && this.matchTNodeWithReadOption(o, u, -1)
              : this.matchTNodeWithReadOption(o, u, la(u, o, c, !1, !1));
        }
        matchTNodeWithReadOption(o, u, c) {
          if (null !== c) {
            const d = this.metadata.read;
            if (null !== d)
              if (d === jd || d === Th || (d === Au && 4 & u.type))
                this.addMatch(u.index, -2);
              else {
                const p = la(u, o, d, !1, !1);
                null !== p && this.addMatch(u.index, p);
              }
            else this.addMatch(u.index, c);
          }
        }
        addMatch(o, u) {
          null === this.matches
            ? (this.matches = [o, u])
            : this.matches.push(o, u);
        }
      }
      function QC(s, o) {
        const u = s.localNames;
        if (null !== u)
          for (let c = 0; c < u.length; c += 2) if (u[c] === o) return u[c + 1];
        return null;
      }
      function YA(s, o, u, c) {
        return -1 === u
          ? (function JC(s, o) {
              return 11 & s.type ? Gl(s, o) : 4 & s.type ? hc(s, o) : null;
            })(o, s)
          : -2 === u
          ? (function XC(s, o, u) {
              return u === jd
                ? Gl(o, s)
                : u === Au
                ? hc(o, s)
                : u === Th
                ? pc(o, s)
                : void 0;
            })(s, o, c)
          : Co(s, s[1], u, o);
      }
      function nE(s, o, u, c) {
        const d = o[19].queries[c];
        if (null === d.matches) {
          const p = s.data,
            y = u.matches,
            w = [];
          for (let C = 0; C < y.length; C += 2) {
            const T = y[C];
            w.push(T < 0 ? null : YA(o, p[T], y[C + 1], u.metadata.read));
          }
          d.matches = w;
        }
        return d.matches;
      }
      function Mh(s, o, u, c) {
        const d = s.queries.getByIndex(u),
          p = d.matches;
        if (null !== p) {
          const y = nE(s, o, d, u);
          for (let w = 0; w < p.length; w += 2) {
            const C = p[w];
            if (C > 0) c.push(y[w / 2]);
            else {
              const T = p[w + 1],
                A = o[-C];
              for (let O = 10; O < A.length; O++) {
                const Z = A[O];
                Z[17] === Z[3] && Mh(Z[1], Z, T, c);
              }
              if (null !== A[9]) {
                const O = A[9];
                for (let Z = 0; Z < O.length; Z++) {
                  const oe = O[Z];
                  Mh(oe[1], oe, T, c);
                }
              }
            }
          }
        }
        return c;
      }
      function rE(s) {
        const o = je(),
          u = mn(),
          c = zf();
        Qa(c + 1);
        const d = Fg(u, c);
        if (s.dirty && rl(o) === (2 == (2 & d.metadata.flags))) {
          if (null === d.matches) s.reset([]);
          else {
            const p = d.crossesNgTemplate ? Mh(u, o, c, []) : nE(u, o, d, c);
            s.reset(p, hT), s.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function Pg(s, o, u, c) {
        const d = mn();
        if (d.firstCreatePass) {
          const p = Jn();
          (function Lr(s, o, u) {
            null === s.queries && (s.queries = new Ah()),
              s.queries.track(new Rh(o, u));
          })(d, new Ng(o, u, c), p.index),
            (function kg(s, o) {
              const u = s.contentQueries || (s.contentQueries = []);
              o !== (u.length ? u[u.length - 1] : -1) &&
                u.push(s.queries.length - 1, o);
            })(d, s),
            2 == (2 & u) && (d.staticContentQueries = !0);
        }
        !(function xr(s, o, u) {
          const c = new Dh(4 == (4 & u));
          II(s, o, c, c.destroy),
            null === o[19] && (o[19] = new Sh()),
            o[19].queries.push(new gc(c));
        })(d, je(), u);
      }
      function Og() {
        return (function iE(s, o) {
          return s[19].queries[o].queryList;
        })(je(), zf());
      }
      function Fg(s, o) {
        return s.queries.getByIndex(o);
      }
      function oo(s) {
        const o = x(s) || k(s) || J(s);
        return null !== o && o.standalone;
      }
      function Ec(...s) {}
      const Kg = new tn("Application Initializer");
      let ao = (() => {
        class s {
          constructor(u) {
            (this.appInits = u),
              (this.resolve = Ec),
              (this.reject = Ec),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((c, d) => {
                (this.resolve = c), (this.reject = d);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const u = [],
              c = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let d = 0; d < this.appInits.length; d++) {
                const p = this.appInits[d]();
                if (lv(p)) u.push(p);
                else if (qI(p)) {
                  const y = new Promise((w, C) => {
                    p.subscribe({ complete: w, error: C });
                  });
                  u.push(y);
                }
              }
            Promise.all(u)
              .then(() => {
                c();
              })
              .catch((d) => {
                this.reject(d);
              }),
              0 === u.length && c(),
              (this.initialized = !0);
          }
        }
        return (
          (s.ɵfac = function (u) {
            return new (u || s)(or(Kg, 8));
          }),
          (s.ɵprov = zt({ token: s, factory: s.ɵfac, providedIn: "root" })),
          s
        );
      })();
      const mE = new tn("AppId", {
        providedIn: "root",
        factory: function db() {
          return `${Ps()}${Ps()}${Ps()}`;
        },
      });
      function Ps() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const Vh = new tn("Platform Initializer"),
        Zg = new tn("Platform ID", {
          providedIn: "platform",
          factory: () => "unknown",
        }),
        Uh = new tn("appBootstrapListener");
      let Yg = (() => {
        class s {
          log(u) {
            console.log(u);
          }
          warn(u) {
            console.warn(u);
          }
        }
        return (
          (s.ɵfac = function (u) {
            return new (u || s)();
          }),
          (s.ɵprov = zt({ token: s, factory: s.ɵfac, providedIn: "platform" })),
          s
        );
      })();
      const Qg = new tn("LocaleId", {
          providedIn: "root",
          factory: () =>
            Al(Qg, Me.Optional | Me.SkipSelf) ||
            (function lR() {
              return (typeof $localize < "u" && $localize.locale) || Ch;
            })(),
        }),
        Bh = new tn("DefaultCurrencyCode", {
          providedIn: "root",
          factory: () => "USD",
        });
      class dR {
        constructor(o, u) {
          (this.ngModuleFactory = o), (this.componentFactories = u);
        }
      }
      let hR = (() => {
        class s {
          compileModuleSync(u) {
            return new Cg(u);
          }
          compileModuleAsync(u) {
            return Promise.resolve(this.compileModuleSync(u));
          }
          compileModuleAndAllComponentsSync(u) {
            const c = this.compileModuleSync(u),
              p = Fo(Se(u).declarations).reduce((y, w) => {
                const C = x(w);
                return C && y.push(new Iu(C)), y;
              }, []);
            return new dR(c, p);
          }
          compileModuleAndAllComponentsAsync(u) {
            return Promise.resolve(this.compileModuleAndAllComponentsSync(u));
          }
          clearCache() {}
          clearCacheFor(u) {}
          getModuleId(u) {}
        }
        return (
          (s.ɵfac = function (u) {
            return new (u || s)();
          }),
          (s.ɵprov = zt({ token: s, factory: s.ɵfac, providedIn: "root" })),
          s
        );
      })();
      const Ic = (() => Promise.resolve(0))();
      function yE(s) {
        typeof Zone > "u"
          ? Ic.then(() => {
              s && s.apply(null, null);
            })
          : Zone.current.scheduleMicroTask("scheduleMicrotask", s);
      }
      class Mi {
        constructor({
          enableLongStackTrace: o = !1,
          shouldCoalesceEventChangeDetection: u = !1,
          shouldCoalesceRunChangeDetection: c = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new Ns(!1)),
            (this.onMicrotaskEmpty = new Ns(!1)),
            (this.onStable = new Ns(!1)),
            (this.onError = new Ns(!1)),
            typeof Zone > "u")
          )
            throw new Re(908, !1);
          Zone.assertZonePatched();
          const d = this;
          if (
            ((d._nesting = 0),
            (d._outer = d._inner = Zone.current),
            Zone.AsyncStackTaggingZoneSpec)
          ) {
            const p = Zone.AsyncStackTaggingZoneSpec;
            d._inner = d._inner.fork(new p("Angular"));
          }
          Zone.TaskTrackingZoneSpec &&
            (d._inner = d._inner.fork(new Zone.TaskTrackingZoneSpec())),
            o &&
              Zone.longStackTraceZoneSpec &&
              (d._inner = d._inner.fork(Zone.longStackTraceZoneSpec)),
            (d.shouldCoalesceEventChangeDetection = !c && u),
            (d.shouldCoalesceRunChangeDetection = c),
            (d.lastRequestAnimationFrameId = -1),
            (d.nativeRequestAnimationFrame = (function gR() {
              let s = qe.requestAnimationFrame,
                o = qe.cancelAnimationFrame;
              if (typeof Zone < "u" && s && o) {
                const u = s[Zone.__symbol__("OriginalDelegate")];
                u && (s = u);
                const c = o[Zone.__symbol__("OriginalDelegate")];
                c && (o = c);
              }
              return {
                nativeRequestAnimationFrame: s,
                nativeCancelAnimationFrame: o,
              };
            })().nativeRequestAnimationFrame),
            (function vE(s) {
              const o = () => {
                !(function hb(s) {
                  s.isCheckStableRunning ||
                    -1 !== s.lastRequestAnimationFrameId ||
                    ((s.lastRequestAnimationFrameId =
                      s.nativeRequestAnimationFrame.call(qe, () => {
                        s.fakeTopEventTask ||
                          (s.fakeTopEventTask = Zone.root.scheduleEventTask(
                            "fakeTopEventTask",
                            () => {
                              (s.lastRequestAnimationFrameId = -1),
                                $h(s),
                                (s.isCheckStableRunning = !0),
                                Xg(s),
                                (s.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {}
                          )),
                          s.fakeTopEventTask.invoke();
                      })),
                    $h(s));
                })(s);
              };
              s._inner = s._inner.fork({
                name: "angular",
                properties: { isAngularZone: !0 },
                onInvokeTask: (u, c, d, p, y, w) => {
                  try {
                    return EE(s), u.invokeTask(d, p, y, w);
                  } finally {
                    ((s.shouldCoalesceEventChangeDetection &&
                      "eventTask" === p.type) ||
                      s.shouldCoalesceRunChangeDetection) &&
                      o(),
                      wE(s);
                  }
                },
                onInvoke: (u, c, d, p, y, w, C) => {
                  try {
                    return EE(s), u.invoke(d, p, y, w, C);
                  } finally {
                    s.shouldCoalesceRunChangeDetection && o(), wE(s);
                  }
                },
                onHasTask: (u, c, d, p) => {
                  u.hasTask(d, p),
                    c === d &&
                      ("microTask" == p.change
                        ? ((s._hasPendingMicrotasks = p.microTask),
                          $h(s),
                          Xg(s))
                        : "macroTask" == p.change &&
                          (s.hasPendingMacrotasks = p.macroTask));
                },
                onHandleError: (u, c, d, p) => (
                  u.handleError(d, p),
                  s.runOutsideAngular(() => s.onError.emit(p)),
                  !1
                ),
              });
            })(d);
        }
        static isInAngularZone() {
          return typeof Zone < "u" && !0 === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!Mi.isInAngularZone()) throw new Re(909, !1);
        }
        static assertNotInAngularZone() {
          if (Mi.isInAngularZone()) throw new Re(909, !1);
        }
        run(o, u, c) {
          return this._inner.run(o, u, c);
        }
        runTask(o, u, c, d) {
          const p = this._inner,
            y = p.scheduleEventTask("NgZoneEvent: " + d, o, mR, Ec, Ec);
          try {
            return p.runTask(y, u, c);
          } finally {
            p.cancelTask(y);
          }
        }
        runGuarded(o, u, c) {
          return this._inner.runGuarded(o, u, c);
        }
        runOutsideAngular(o) {
          return this._outer.run(o);
        }
      }
      const mR = {};
      function Xg(s) {
        if (0 == s._nesting && !s.hasPendingMicrotasks && !s.isStable)
          try {
            s._nesting++, s.onMicrotaskEmpty.emit(null);
          } finally {
            if ((s._nesting--, !s.hasPendingMicrotasks))
              try {
                s.runOutsideAngular(() => s.onStable.emit(null));
              } finally {
                s.isStable = !0;
              }
          }
      }
      function $h(s) {
        s.hasPendingMicrotasks = !!(
          s._hasPendingMicrotasks ||
          ((s.shouldCoalesceEventChangeDetection ||
            s.shouldCoalesceRunChangeDetection) &&
            -1 !== s.lastRequestAnimationFrameId)
        );
      }
      function EE(s) {
        s._nesting++,
          s.isStable && ((s.isStable = !1), s.onUnstable.emit(null));
      }
      function wE(s) {
        s._nesting--, Xg(s);
      }
      class IE {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new Ns()),
            (this.onMicrotaskEmpty = new Ns()),
            (this.onStable = new Ns()),
            (this.onError = new Ns());
        }
        run(o, u, c) {
          return o.apply(u, c);
        }
        runGuarded(o, u, c) {
          return o.apply(u, c);
        }
        runOutsideAngular(o) {
          return o();
        }
        runTask(o, u, c, d) {
          return o.apply(u, c);
        }
      }
      const fb = new tn(""),
        pb = new tn("");
      let Cc,
        _R = (() => {
          class s {
            constructor(u, c, d) {
              (this._ngZone = u),
                (this.registry = c),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                Cc ||
                  ((function Gh(s) {
                    Cc = s;
                  })(d),
                  d.addToWindow(c)),
                this._watchAngularEvents(),
                u.run(() => {
                  this.taskTrackingZone =
                    typeof Zone > "u"
                      ? null
                      : Zone.current.get("TaskTrackingZone");
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      Mi.assertNotInAngularZone(),
                        yE(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error("pending async requests below zero");
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                yE(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let u = this._callbacks.pop();
                    clearTimeout(u.timeoutId), u.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let u = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (c) =>
                    !c.updateCb ||
                    !c.updateCb(u) ||
                    (clearTimeout(c.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((u) => ({
                    source: u.source,
                    creationLocation: u.creationLocation,
                    data: u.data,
                  }))
                : [];
            }
            addCallback(u, c, d) {
              let p = -1;
              c &&
                c > 0 &&
                (p = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    (y) => y.timeoutId !== p
                  )),
                    u(this._didWork, this.getPendingTasks());
                }, c)),
                this._callbacks.push({ doneCb: u, timeoutId: p, updateCb: d });
            }
            whenStable(u, c, d) {
              if (d && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                );
              this.addCallback(u, c, d), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            registerApplication(u) {
              this.registry.registerApplication(u, this);
            }
            unregisterApplication(u) {
              this.registry.unregisterApplication(u);
            }
            findProviders(u, c, d) {
              return [];
            }
          }
          return (
            (s.ɵfac = function (u) {
              return new (u || s)(or(Mi), or(Hh), or(pb));
            }),
            (s.ɵprov = zt({ token: s, factory: s.ɵfac })),
            s
          );
        })(),
        Hh = (() => {
          class s {
            constructor() {
              this._applications = new Map();
            }
            registerApplication(u, c) {
              this._applications.set(u, c);
            }
            unregisterApplication(u) {
              this._applications.delete(u);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(u) {
              return this._applications.get(u) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(u, c = !0) {
              return Cc?.findTestabilityInTree(this, u, c) ?? null;
            }
          }
          return (
            (s.ɵfac = function (u) {
              return new (u || s)();
            }),
            (s.ɵprov = zt({
              token: s,
              factory: s.ɵfac,
              providedIn: "platform",
            })),
            s
          );
        })(),
        uo = null;
      const CE = new tn("AllowMultipleToken"),
        Nu = new tn("PlatformDestroyListeners");
      class vR {
        constructor(o, u) {
          (this.name = o), (this.token = u);
        }
      }
      function bE(s, o, u = []) {
        const c = `Platform: ${o}`,
          d = new tn(c);
        return (p = []) => {
          let y = Os();
          if (!y || y.injector.get(CE, !1)) {
            const w = [...u, ...p, { provide: d, useValue: !0 }];
            s
              ? s(w)
              : (function ER(s) {
                  if (uo && !uo.get(CE, !1)) throw new Re(400, !1);
                  uo = s;
                  const o = s.get(DE);
                  (function mb(s) {
                    const o = s.get(Vh, null);
                    o && o.forEach((u) => u());
                  })(s);
                })(
                  (function Wh(s = [], o) {
                    return Uo.create({
                      name: o,
                      providers: [
                        { provide: k_, useValue: "platform" },
                        { provide: Nu, useValue: new Set([() => (uo = null)]) },
                        ...s,
                      ],
                    });
                  })(w, c)
                );
          }
          return (function _b(s) {
            const o = Os();
            if (!o) throw new Re(401, !1);
            return o;
          })();
        };
      }
      function Os() {
        return uo?.get(DE) ?? null;
      }
      let DE = (() => {
        class s {
          constructor(u) {
            (this._injector = u),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(u, c) {
            const d = (function TE(s, o) {
                let u;
                return (
                  (u =
                    "noop" === s
                      ? new IE()
                      : ("zone.js" === s ? void 0 : s) || new Mi(o)),
                  u
                );
              })(
                c?.ngZone,
                (function yb(s) {
                  return {
                    enableLongStackTrace: !1,
                    shouldCoalesceEventChangeDetection:
                      !(!s || !s.ngZoneEventCoalescing) || !1,
                    shouldCoalesceRunChangeDetection:
                      !(!s || !s.ngZoneRunCoalescing) || !1,
                  };
                })(c)
              ),
              p = [{ provide: Mi, useValue: d }];
            return d.run(() => {
              const y = Uo.create({
                  providers: p,
                  parent: this.injector,
                  name: u.moduleType.name,
                }),
                w = u.create(y),
                C = w.injector.get(Wl, null);
              if (!C) throw new Re(402, !1);
              return (
                d.runOutsideAngular(() => {
                  const T = d.onError.subscribe({
                    next: (A) => {
                      C.handleError(A);
                    },
                  });
                  w.onDestroy(() => {
                    Pu(this._modules, w), T.unsubscribe();
                  });
                }),
                (function bc(s, o, u) {
                  try {
                    const c = u();
                    return lv(c)
                      ? c.catch((d) => {
                          throw (
                            (o.runOutsideAngular(() => s.handleError(d)), d)
                          );
                        })
                      : c;
                  } catch (c) {
                    throw (o.runOutsideAngular(() => s.handleError(c)), c);
                  }
                })(C, d, () => {
                  const T = w.injector.get(ao);
                  return (
                    T.runInitializers(),
                    T.donePromise.then(
                      () => (
                        (function eA(s) {
                          Dt(s, "Expected localeId to be defined"),
                            "string" == typeof s &&
                              (RC = s.toLowerCase().replace(/_/g, "-"));
                        })(w.injector.get(Qg, Ch) || Ch),
                        this._moduleDoBootstrap(w),
                        w
                      )
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(u, c = []) {
            const d = SE({}, c);
            return (function yR(s, o, u) {
              const c = new Cg(u);
              return Promise.resolve(c);
            })(0, 0, u).then((p) => this.bootstrapModuleFactory(p, d));
          }
          _moduleDoBootstrap(u) {
            const c = u.injector.get(Dc);
            if (u._bootstrapComponents.length > 0)
              u._bootstrapComponents.forEach((d) => c.bootstrap(d));
            else {
              if (!u.instance.ngDoBootstrap) throw new Re(403, !1);
              u.instance.ngDoBootstrap(c);
            }
            this._modules.push(u);
          }
          onDestroy(u) {
            this._destroyListeners.push(u);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new Re(404, !1);
            this._modules.slice().forEach((c) => c.destroy()),
              this._destroyListeners.forEach((c) => c());
            const u = this._injector.get(Nu, null);
            u && (u.forEach((c) => c()), u.clear()), (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (s.ɵfac = function (u) {
            return new (u || s)(or(Uo));
          }),
          (s.ɵprov = zt({ token: s, factory: s.ɵfac, providedIn: "platform" })),
          s
        );
      })();
      function SE(s, o) {
        return Array.isArray(o) ? o.reduce(SE, s) : { ...s, ...o };
      }
      let Dc = (() => {
        class s {
          constructor(u, c, d) {
            (this._zone = u),
              (this._injector = c),
              (this._exceptionHandler = d),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._stable = !0),
              (this._destroyed = !1),
              (this._destroyListeners = []),
              (this.componentTypes = []),
              (this.components = []),
              (this._onMicrotaskEmptySubscription =
                this._zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this._zone.run(() => {
                      this.tick();
                    });
                  },
                }));
            const p = new P.y((w) => {
                (this._stable =
                  this._zone.isStable &&
                  !this._zone.hasPendingMacrotasks &&
                  !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    w.next(this._stable), w.complete();
                  });
              }),
              y = new P.y((w) => {
                let C;
                this._zone.runOutsideAngular(() => {
                  C = this._zone.onStable.subscribe(() => {
                    Mi.assertNotInAngularZone(),
                      yE(() => {
                        !this._stable &&
                          !this._zone.hasPendingMacrotasks &&
                          !this._zone.hasPendingMicrotasks &&
                          ((this._stable = !0), w.next(!0));
                      });
                  });
                });
                const T = this._zone.onUnstable.subscribe(() => {
                  Mi.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        w.next(!1);
                      }));
                });
                return () => {
                  C.unsubscribe(), T.unsubscribe();
                };
              });
            this.isStable = (0, re.T)(p, y.pipe((0, Ie.B)()));
          }
          get destroyed() {
            return this._destroyed;
          }
          get injector() {
            return this._injector;
          }
          bootstrap(u, c) {
            const d = u instanceof T0;
            if (!this._injector.get(ao).done)
              throw (!d && oo(u), new Re(405, false));
            let y;
            (y = d ? u : this._injector.get(gu).resolveComponentFactory(u)),
              this.componentTypes.push(y.componentType);
            const w = (function gb(s) {
                return s.isBoundToModule;
              })(y)
                ? void 0
                : this._injector.get(uc),
              T = y.create(Uo.NULL, [], c || y.selector, w),
              A = T.location.nativeElement,
              O = T.injector.get(fb, null);
            return (
              O?.registerApplication(A),
              T.onDestroy(() => {
                this.detachView(T.hostView),
                  Pu(this.components, T),
                  O?.unregisterApplication(A);
              }),
              this._loadComponent(T),
              T
            );
          }
          tick() {
            if (this._runningTick) throw new Re(101, !1);
            try {
              this._runningTick = !0;
              for (let u of this._views) u.detectChanges();
            } catch (u) {
              this._zone.runOutsideAngular(() =>
                this._exceptionHandler.handleError(u)
              );
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(u) {
            const c = u;
            this._views.push(c), c.attachToAppRef(this);
          }
          detachView(u) {
            const c = u;
            Pu(this._views, c), c.detachFromAppRef();
          }
          _loadComponent(u) {
            this.attachView(u.hostView),
              this.tick(),
              this.components.push(u),
              this._injector
                .get(Uh, [])
                .concat(this._bootstrapListeners)
                .forEach((d) => d(u));
          }
          ngOnDestroy() {
            if (!this._destroyed)
              try {
                this._destroyListeners.forEach((u) => u()),
                  this._views.slice().forEach((u) => u.destroy()),
                  this._onMicrotaskEmptySubscription.unsubscribe();
              } finally {
                (this._destroyed = !0),
                  (this._views = []),
                  (this._bootstrapListeners = []),
                  (this._destroyListeners = []);
              }
          }
          onDestroy(u) {
            return (
              this._destroyListeners.push(u),
              () => Pu(this._destroyListeners, u)
            );
          }
          destroy() {
            if (this._destroyed) throw new Re(406, !1);
            const u = this._injector;
            u.destroy && !u.destroyed && u.destroy();
          }
          get viewCount() {
            return this._views.length;
          }
          warnIfDestroyed() {}
        }
        return (
          (s.ɵfac = function (u) {
            return new (u || s)(or(Mi), or(pu), or(Wl));
          }),
          (s.ɵprov = zt({ token: s, factory: s.ɵfac, providedIn: "root" })),
          s
        );
      })();
      function Pu(s, o) {
        const u = s.indexOf(o);
        u > -1 && s.splice(u, 1);
      }
      let zh = !0,
        vb = !1;
      function Eb() {
        return (vb = !0), zh;
      }
      function qh() {
        if (vb)
          throw new Error("Cannot enable prod mode after platform setup.");
        zh = !1;
      }
      let ME = (() => {
        class s {}
        return (s.__NG_ELEMENT_ID__ = wb), s;
      })();
      function wb(s) {
        return (function tm(s, o, u) {
          if (Us(s) && !u) {
            const c = Tr(s.index, o);
            return new Xp(c, c);
          }
          return 47 & s.type ? new Xp(o[16], o) : null;
        })(Jn(), je(), 16 == (16 & s));
      }
      class Pr {
        constructor() {}
        supports(o) {
          return gr(o);
        }
        create(o) {
          return new Na(o);
        }
      }
      const Sc = (s, o) => o;
      class Na {
        constructor(o) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = o || Sc);
        }
        forEachItem(o) {
          let u;
          for (u = this._itHead; null !== u; u = u._next) o(u);
        }
        forEachOperation(o) {
          let u = this._itHead,
            c = this._removalsHead,
            d = 0,
            p = null;
          for (; u || c; ) {
            const y = !c || (u && u.currentIndex < _r(c, d, p)) ? u : c,
              w = _r(y, d, p),
              C = y.currentIndex;
            if (y === c) d--, (c = c._nextRemoved);
            else if (((u = u._next), null == y.previousIndex)) d++;
            else {
              p || (p = []);
              const T = w - d,
                A = C - d;
              if (T != A) {
                for (let Z = 0; Z < T; Z++) {
                  const oe = Z < p.length ? p[Z] : (p[Z] = 0),
                    xe = oe + Z;
                  A <= xe && xe < T && (p[Z] = oe + 1);
                }
                p[y.previousIndex] = A - T;
              }
            }
            w !== C && o(y, w, C);
          }
        }
        forEachPreviousItem(o) {
          let u;
          for (u = this._previousItHead; null !== u; u = u._nextPrevious) o(u);
        }
        forEachAddedItem(o) {
          let u;
          for (u = this._additionsHead; null !== u; u = u._nextAdded) o(u);
        }
        forEachMovedItem(o) {
          let u;
          for (u = this._movesHead; null !== u; u = u._nextMoved) o(u);
        }
        forEachRemovedItem(o) {
          let u;
          for (u = this._removalsHead; null !== u; u = u._nextRemoved) o(u);
        }
        forEachIdentityChange(o) {
          let u;
          for (
            u = this._identityChangesHead;
            null !== u;
            u = u._nextIdentityChange
          )
            o(u);
        }
        diff(o) {
          if ((null == o && (o = []), !gr(o))) throw new Re(900, !1);
          return this.check(o) ? this : null;
        }
        onDestroy() {}
        check(o) {
          this._reset();
          let d,
            p,
            y,
            u = this._itHead,
            c = !1;
          if (Array.isArray(o)) {
            this.length = o.length;
            for (let w = 0; w < this.length; w++)
              (p = o[w]),
                (y = this._trackByFn(w, p)),
                null !== u && Object.is(u.trackById, y)
                  ? (c && (u = this._verifyReinsertion(u, p, y, w)),
                    Object.is(u.item, p) || this._addIdentityChange(u, p))
                  : ((u = this._mismatch(u, p, y, w)), (c = !0)),
                (u = u._next);
          } else
            (d = 0),
              (function ro(s, o) {
                if (Array.isArray(s))
                  for (let u = 0; u < s.length; u++) o(s[u]);
                else {
                  const u = s[Ra()]();
                  let c;
                  for (; !(c = u.next()).done; ) o(c.value);
                }
              })(o, (w) => {
                (y = this._trackByFn(d, w)),
                  null !== u && Object.is(u.trackById, y)
                    ? (c && (u = this._verifyReinsertion(u, w, y, d)),
                      Object.is(u.item, w) || this._addIdentityChange(u, w))
                    : ((u = this._mismatch(u, w, y, d)), (c = !0)),
                  (u = u._next),
                  d++;
              }),
              (this.length = d);
          return this._truncate(u), (this.collection = o), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let o;
            for (
              o = this._previousItHead = this._itHead;
              null !== o;
              o = o._next
            )
              o._nextPrevious = o._next;
            for (o = this._additionsHead; null !== o; o = o._nextAdded)
              o.previousIndex = o.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                o = this._movesHead;
              null !== o;
              o = o._nextMoved
            )
              o.previousIndex = o.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(o, u, c, d) {
          let p;
          return (
            null === o ? (p = this._itTail) : ((p = o._prev), this._remove(o)),
            null !==
            (o =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(c, null))
              ? (Object.is(o.item, u) || this._addIdentityChange(o, u),
                this._reinsertAfter(o, p, d))
              : null !==
                (o =
                  null === this._linkedRecords
                    ? null
                    : this._linkedRecords.get(c, d))
              ? (Object.is(o.item, u) || this._addIdentityChange(o, u),
                this._moveAfter(o, p, d))
              : (o = this._addAfter(new VE(u, c), p, d)),
            o
          );
        }
        _verifyReinsertion(o, u, c, d) {
          let p =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(c, null);
          return (
            null !== p
              ? (o = this._reinsertAfter(p, o._prev, d))
              : o.currentIndex != d &&
                ((o.currentIndex = d), this._addToMoves(o, d)),
            o
          );
        }
        _truncate(o) {
          for (; null !== o; ) {
            const u = o._next;
            this._addToRemovals(this._unlink(o)), (o = u);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(o, u, c) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(o);
          const d = o._prevRemoved,
            p = o._nextRemoved;
          return (
            null === d ? (this._removalsHead = p) : (d._nextRemoved = p),
            null === p ? (this._removalsTail = d) : (p._prevRemoved = d),
            this._insertAfter(o, u, c),
            this._addToMoves(o, c),
            o
          );
        }
        _moveAfter(o, u, c) {
          return (
            this._unlink(o),
            this._insertAfter(o, u, c),
            this._addToMoves(o, c),
            o
          );
        }
        _addAfter(o, u, c) {
          return (
            this._insertAfter(o, u, c),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = o)
                : (this._additionsTail._nextAdded = o)),
            o
          );
        }
        _insertAfter(o, u, c) {
          const d = null === u ? this._itHead : u._next;
          return (
            (o._next = d),
            (o._prev = u),
            null === d ? (this._itTail = o) : (d._prev = o),
            null === u ? (this._itHead = o) : (u._next = o),
            null === this._linkedRecords && (this._linkedRecords = new Je()),
            this._linkedRecords.put(o),
            (o.currentIndex = c),
            o
          );
        }
        _remove(o) {
          return this._addToRemovals(this._unlink(o));
        }
        _unlink(o) {
          null !== this._linkedRecords && this._linkedRecords.remove(o);
          const u = o._prev,
            c = o._next;
          return (
            null === u ? (this._itHead = c) : (u._next = c),
            null === c ? (this._itTail = u) : (c._prev = u),
            o
          );
        }
        _addToMoves(o, u) {
          return (
            o.previousIndex === u ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = o)
                  : (this._movesTail._nextMoved = o)),
            o
          );
        }
        _addToRemovals(o) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new Je()),
            this._unlinkedRecords.put(o),
            (o.currentIndex = null),
            (o._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = o),
                (o._prevRemoved = null))
              : ((o._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = o)),
            o
          );
        }
        _addIdentityChange(o, u) {
          return (
            (o.item = u),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = o)
                : (this._identityChangesTail._nextIdentityChange = o)),
            o
          );
        }
      }
      class VE {
        constructor(o, u) {
          (this.item = o),
            (this.trackById = u),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class xR {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(o) {
          null === this._head
            ? ((this._head = this._tail = o),
              (o._nextDup = null),
              (o._prevDup = null))
            : ((this._tail._nextDup = o),
              (o._prevDup = this._tail),
              (o._nextDup = null),
              (this._tail = o));
        }
        get(o, u) {
          let c;
          for (c = this._head; null !== c; c = c._nextDup)
            if (
              (null === u || u <= c.currentIndex) &&
              Object.is(c.trackById, o)
            )
              return c;
          return null;
        }
        remove(o) {
          const u = o._prevDup,
            c = o._nextDup;
          return (
            null === u ? (this._head = c) : (u._nextDup = c),
            null === c ? (this._tail = u) : (c._prevDup = u),
            null === this._head
          );
        }
      }
      class Je {
        constructor() {
          this.map = new Map();
        }
        put(o) {
          const u = o.trackById;
          let c = this.map.get(u);
          c || ((c = new xR()), this.map.set(u, c)), c.add(o);
        }
        get(o, u) {
          const d = this.map.get(o);
          return d ? d.get(o, u) : null;
        }
        remove(o) {
          const u = o.trackById;
          return this.map.get(u).remove(o) && this.map.delete(u), o;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function _r(s, o, u) {
        const c = s.previousIndex;
        if (null === c) return c;
        let d = 0;
        return u && c < u.length && (d = u[c]), c + o + d;
      }
      class Ac {
        constructor() {}
        supports(o) {
          return o instanceof Map || BI(o);
        }
        create() {
          return new UE();
        }
      }
      class UE {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(o) {
          let u;
          for (u = this._mapHead; null !== u; u = u._next) o(u);
        }
        forEachPreviousItem(o) {
          let u;
          for (u = this._previousMapHead; null !== u; u = u._nextPrevious) o(u);
        }
        forEachChangedItem(o) {
          let u;
          for (u = this._changesHead; null !== u; u = u._nextChanged) o(u);
        }
        forEachAddedItem(o) {
          let u;
          for (u = this._additionsHead; null !== u; u = u._nextAdded) o(u);
        }
        forEachRemovedItem(o) {
          let u;
          for (u = this._removalsHead; null !== u; u = u._nextRemoved) o(u);
        }
        diff(o) {
          if (o) {
            if (!(o instanceof Map || BI(o))) throw new Re(900, !1);
          } else o = new Map();
          return this.check(o) ? this : null;
        }
        onDestroy() {}
        check(o) {
          this._reset();
          let u = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(o, (c, d) => {
              if (u && u.key === d)
                this._maybeAddToChanges(u, c),
                  (this._appendAfter = u),
                  (u = u._next);
              else {
                const p = this._getOrCreateRecordForKey(d, c);
                u = this._insertBeforeOrAppend(u, p);
              }
            }),
            u)
          ) {
            u._prev && (u._prev._next = null), (this._removalsHead = u);
            for (let c = u; null !== c; c = c._nextRemoved)
              c === this._mapHead && (this._mapHead = null),
                this._records.delete(c.key),
                (c._nextRemoved = c._next),
                (c.previousValue = c.currentValue),
                (c.currentValue = null),
                (c._prev = null),
                (c._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(o, u) {
          if (o) {
            const c = o._prev;
            return (
              (u._next = o),
              (u._prev = c),
              (o._prev = u),
              c && (c._next = u),
              o === this._mapHead && (this._mapHead = u),
              (this._appendAfter = o),
              o
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = u), (u._prev = this._appendAfter))
              : (this._mapHead = u),
            (this._appendAfter = u),
            null
          );
        }
        _getOrCreateRecordForKey(o, u) {
          if (this._records.has(o)) {
            const d = this._records.get(o);
            this._maybeAddToChanges(d, u);
            const p = d._prev,
              y = d._next;
            return (
              p && (p._next = y),
              y && (y._prev = p),
              (d._next = null),
              (d._prev = null),
              d
            );
          }
          const c = new Ct(o);
          return (
            this._records.set(o, c),
            (c.currentValue = u),
            this._addToAdditions(c),
            c
          );
        }
        _reset() {
          if (this.isDirty) {
            let o;
            for (
              this._previousMapHead = this._mapHead, o = this._previousMapHead;
              null !== o;
              o = o._next
            )
              o._nextPrevious = o._next;
            for (o = this._changesHead; null !== o; o = o._nextChanged)
              o.previousValue = o.currentValue;
            for (o = this._additionsHead; null != o; o = o._nextAdded)
              o.previousValue = o.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(o, u) {
          Object.is(u, o.currentValue) ||
            ((o.previousValue = o.currentValue),
            (o.currentValue = u),
            this._addToChanges(o));
        }
        _addToAdditions(o) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = o)
            : ((this._additionsTail._nextAdded = o), (this._additionsTail = o));
        }
        _addToChanges(o) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = o)
            : ((this._changesTail._nextChanged = o), (this._changesTail = o));
        }
        _forEach(o, u) {
          o instanceof Map
            ? o.forEach(u)
            : Object.keys(o).forEach((c) => u(o[c], c));
        }
      }
      class Ct {
        constructor(o) {
          (this.key = o),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function Wt() {
        return new BE([new Pr()]);
      }
      let BE = (() => {
        class s {
          constructor(u) {
            this.factories = u;
          }
          static create(u, c) {
            if (null != c) {
              const d = c.factories.slice();
              u = u.concat(d);
            }
            return new s(u);
          }
          static extend(u) {
            return {
              provide: s,
              useFactory: (c) => s.create(u, c || Wt()),
              deps: [[s, new Ys(), new Zs()]],
            };
          }
          find(u) {
            const c = this.factories.find((d) => d.supports(u));
            if (null != c) return c;
            throw new Re(901, !1);
          }
        }
        return (s.ɵprov = zt({ token: s, providedIn: "root", factory: Wt })), s;
      })();
      function be() {
        return new Ge([new Ac()]);
      }
      let Ge = (() => {
        class s {
          constructor(u) {
            this.factories = u;
          }
          static create(u, c) {
            if (c) {
              const d = c.factories.slice();
              u = u.concat(d);
            }
            return new s(u);
          }
          static extend(u) {
            return {
              provide: s,
              useFactory: (c) => s.create(u, c || be()),
              deps: [[s, new Ys(), new Zs()]],
            };
          }
          find(u) {
            const c = this.factories.find((d) => d.supports(u));
            if (c) return c;
            throw new Re(901, !1);
          }
        }
        return (s.ɵprov = zt({ token: s, providedIn: "root", factory: be })), s;
      })();
      const NR = bE(null, "core", []);
      let PR = (() => {
        class s {
          constructor(u) {}
        }
        return (
          (s.ɵfac = function (u) {
            return new (u || s)(or(Dc));
          }),
          (s.ɵmod = Pt({ type: s })),
          (s.ɵinj = ze({})),
          s
        );
      })();
      function OR(s) {
        return "boolean" == typeof s ? s : null != s && "false" !== s;
      }
    },
    579: (wt, Oe, M) => {
      M.d(Oe, {
        EI: () => z,
        Gb: () => Jt,
        IH: () => bn,
        Iv: () => $,
        Kz: () => ke,
        Xd: () => Vn,
        lT: () => j,
        xP: () => U,
      });
      var f = M(5861),
        V = M(9681),
        P = M(1877),
        re = M(2090),
        Ie = M(4859);
      M(2833);
      const ce = "analytics",
        he = "firebase_id",
        H =
          "https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig",
        Q = "https://www.googletagmanager.com/gtag/js",
        Be = new P.Yd("@firebase/analytics");
      function Ue(ue) {
        return Promise.all(ue.map((L) => L.catch((x) => x)));
      }
      function Re(ue, L) {
        const x = document.createElement("script");
        (x.src = `${Q}?l=${ue}&id=${L}`),
          (x.async = !0),
          document.head.appendChild(x);
      }
      function ge(ue, L, x, k, J, Se) {
        return de.apply(this, arguments);
      }
      function de() {
        return (de = (0, f.Z)(function* (ue, L, x, k, J, Se) {
          const Qe = k[J];
          try {
            if (Qe) yield L[Qe];
            else {
              const Ze = (yield Ue(x)).find((mt) => mt.measurementId === J);
              Ze && (yield L[Ze.appId]);
            }
          } catch (we) {
            Be.error(we);
          }
          ue("config", J, Se);
        })).apply(this, arguments);
      }
      function at(ue, L, x, k, J) {
        return rt.apply(this, arguments);
      }
      function rt() {
        return (rt = (0, f.Z)(function* (ue, L, x, k, J) {
          try {
            let Se = [];
            if (J && J.send_to) {
              let Qe = J.send_to;
              Array.isArray(Qe) || (Qe = [Qe]);
              const we = yield Ue(x);
              for (const Ze of Qe) {
                const mt = we.find((Tn) => Tn.measurementId === Ze),
                  qt = mt && L[mt.appId];
                if (!qt) {
                  Se = [];
                  break;
                }
                Se.push(qt);
              }
            }
            0 === Se.length && (Se = Object.values(L)),
              yield Promise.all(Se),
              ue("event", k, J || {});
          } catch (Se) {
            Be.error(Se);
          }
        })).apply(this, arguments);
      }
      function Ae() {
        const ue = window.document.getElementsByTagName("script");
        for (const L of Object.values(ue))
          if (L.src && L.src.includes(Q)) return L;
        return null;
      }
      const te = new re.LL("analytics", "Analytics", {
          "already-exists":
            "A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.",
          "already-initialized":
            "initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.",
          "already-initialized-settings":
            "Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.",
          "interop-component-reg-failed":
            "Firebase Analytics Interop Component failed to instantiate: {$reason}",
          "invalid-analytics-context":
            "Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}",
          "indexeddb-unavailable":
            "IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}",
          "fetch-throttle":
            "The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.",
          "config-fetch-failed":
            "Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}",
          "no-api-key":
            'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',
          "no-app-id":
            'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',
        }),
        ne = new (class X {
          constructor(L = {}, x = 1e3) {
            (this.throttleMetadata = L), (this.intervalMillis = x);
          }
          getThrottleMetadata(L) {
            return this.throttleMetadata[L];
          }
          setThrottleMetadata(L, x) {
            this.throttleMetadata[L] = x;
          }
          deleteThrottleMetadata(L) {
            delete this.throttleMetadata[L];
          }
        })();
      function se(ue) {
        return new Headers({
          Accept: "application/json",
          "x-goog-api-key": ue,
        });
      }
      function ve(ue) {
        return ae.apply(this, arguments);
      }
      function ae() {
        return (ae = (0, f.Z)(function* (ue) {
          var L;
          const { appId: x, apiKey: k } = ue,
            J = { method: "GET", headers: se(k) },
            Se = H.replace("{app-id}", x),
            Qe = yield fetch(Se, J);
          if (200 !== Qe.status && 304 !== Qe.status) {
            let we = "";
            try {
              const Ze = yield Qe.json();
              null !== (L = Ze.error) &&
                void 0 !== L &&
                L.message &&
                (we = Ze.error.message);
            } catch {}
            throw te.create("config-fetch-failed", {
              httpStatus: Qe.status,
              responseMessage: we,
            });
          }
          return Qe.json();
        })).apply(this, arguments);
      }
      function $e(ue) {
        return ht.apply(this, arguments);
      }
      function ht() {
        return (ht = (0, f.Z)(function* (ue, L = ne, x) {
          const { appId: k, apiKey: J, measurementId: Se } = ue.options;
          if (!k) throw te.create("no-app-id");
          if (!J) {
            if (Se) return { measurementId: Se, appId: k };
            throw te.create("no-api-key");
          }
          const Qe = L.getThrottleMetadata(k) || {
              backoffCount: 0,
              throttleEndTimeMillis: Date.now(),
            },
            we = new Ln();
          return (
            setTimeout(
              (0, f.Z)(function* () {
                we.abort();
              }),
              void 0 !== x ? x : 6e4
            ),
            Gt({ appId: k, apiKey: J, measurementId: Se }, Qe, we, L)
          );
        })).apply(this, arguments);
      }
      function Gt(ue, L, x) {
        return Dt.apply(this, arguments);
      }
      function Dt() {
        return (Dt = (0, f.Z)(function* (
          ue,
          { throttleEndTimeMillis: L, backoffCount: x },
          k,
          J = ne
        ) {
          var Se, Qe;
          const { appId: we, measurementId: Ze } = ue;
          try {
            yield et(k, L);
          } catch (mt) {
            if (Ze)
              return (
                Be.warn(
                  `Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${Ze} provided in the "measurementId" field in the local Firebase config. [${
                    null === (Se = mt) || void 0 === Se ? void 0 : Se.message
                  }]`
                ),
                { appId: we, measurementId: Ze }
              );
            throw mt;
          }
          try {
            const mt = yield ve(ue);
            return J.deleteThrottleMetadata(we), mt;
          } catch (mt) {
            const qt = mt;
            if (!Vt(qt)) {
              if ((J.deleteThrottleMetadata(we), Ze))
                return (
                  Be.warn(
                    `Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${Ze} provided in the "measurementId" field in the local Firebase config. [${qt?.message}]`
                  ),
                  { appId: we, measurementId: Ze }
                );
              throw mt;
            }
            const Tn =
                503 ===
                Number(
                  null === (Qe = qt?.customData) || void 0 === Qe
                    ? void 0
                    : Qe.httpStatus
                )
                  ? (0, re.$s)(x, J.intervalMillis, 30)
                  : (0, re.$s)(x, J.intervalMillis),
              At = {
                throttleEndTimeMillis: Date.now() + Tn,
                backoffCount: x + 1,
              };
            return (
              J.setThrottleMetadata(we, At),
              Be.debug(`Calling attemptFetch again in ${Tn} millis`),
              Gt(ue, At, k, J)
            );
          }
        })).apply(this, arguments);
      }
      function et(ue, L) {
        return new Promise((x, k) => {
          const J = Math.max(L - Date.now(), 0),
            Se = setTimeout(x, J);
          ue.addEventListener(() => {
            clearTimeout(Se),
              k(te.create("fetch-throttle", { throttleEndTimeMillis: L }));
          });
        });
      }
      function Vt(ue) {
        if (!(ue instanceof re.ZR && ue.customData)) return !1;
        const L = Number(ue.customData.httpStatus);
        return 429 === L || 500 === L || 503 === L || 504 === L;
      }
      class Ln {
        constructor() {
          this.listeners = [];
        }
        addEventListener(L) {
          this.listeners.push(L);
        }
        abort() {
          this.listeners.forEach((L) => L());
        }
      }
      let pn, xn;
      function Nt() {
        return (Nt = (0, f.Z)(function* (ue, L, x, k, J) {
          if (J && J.global) ue("event", x, k);
          else {
            const Se = yield L;
            ue(
              "event",
              x,
              Object.assign(Object.assign({}, k), { send_to: Se })
            );
          }
        })).apply(this, arguments);
      }
      function lt() {
        return (lt = (0, f.Z)(function* (ue, L, x, k) {
          if (k && k.global)
            return ue("set", { screen_name: x }), Promise.resolve();
          ue("config", yield L, { update: !0, screen_name: x });
        })).apply(this, arguments);
      }
      function Zt() {
        return (Zt = (0, f.Z)(function* (ue, L, x, k) {
          if (k && k.global)
            return ue("set", { user_id: x }), Promise.resolve();
          ue("config", yield L, { update: !0, user_id: x });
        })).apply(this, arguments);
      }
      function en() {
        return (en = (0, f.Z)(function* (ue, L, x, k) {
          if (k && k.global) {
            const J = {};
            for (const Se of Object.keys(x)) J[`user_properties.${Se}`] = x[Se];
            return ue("set", J), Promise.resolve();
          }
          ue("config", yield L, { update: !0, user_properties: x });
        })).apply(this, arguments);
      }
      function On() {
        return (On = (0, f.Z)(function* (ue, L) {
          const x = yield ue;
          window[`ga-disable-${x}`] = !L;
        })).apply(this, arguments);
      }
      function Yn(ue) {
        xn = ue;
      }
      function Me(ue) {
        pn = ue;
      }
      function fe() {
        return Pe.apply(this, arguments);
      }
      function Pe() {
        return (Pe = (0, f.Z)(function* () {
          var ue;
          if (!(0, re.hl)())
            return (
              Be.warn(
                te.create("indexeddb-unavailable", {
                  errorInfo: "IndexedDB is not available in this environment.",
                }).message
              ),
              !1
            );
          try {
            yield (0, re.eu)();
          } catch (L) {
            return (
              Be.warn(
                te.create("indexeddb-unavailable", {
                  errorInfo:
                    null === (ue = L) || void 0 === ue ? void 0 : ue.toString(),
                }).message
              ),
              !1
            );
          }
          return !0;
        })).apply(this, arguments);
      }
      function ct() {
        return (ct = (0, f.Z)(function* (ue, L, x, k, J, Se, Qe) {
          var we;
          const Ze = $e(ue);
          Ze.then((Dn) => {
            (x[Dn.measurementId] = Dn.appId),
              ue.options.measurementId &&
                Dn.measurementId !== ue.options.measurementId &&
                Be.warn(
                  `The measurement ID in the local Firebase config (${ue.options.measurementId}) does not match the measurement ID fetched from the server (${Dn.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`
                );
          }).catch((Dn) => Be.error(Dn)),
            L.push(Ze);
          const mt = fe().then((Dn) => {
              if (Dn) return k.getId();
            }),
            [qt, Tn] = yield Promise.all([Ze, mt]);
          Ae() || Re(Se, qt.measurementId),
            xn && (J("consent", "default", xn), Yn(void 0)),
            J("js", new Date());
          const At = null !== (we = Qe?.config) && void 0 !== we ? we : {};
          return (
            (At.origin = "firebase"),
            (At.update = !0),
            null != Tn && (At[he] = Tn),
            J("config", qt.measurementId, At),
            pn && (J("set", pn), Me(void 0)),
            qt.measurementId
          );
        })).apply(this, arguments);
      }
      class Ut {
        constructor(L) {
          this.app = L;
        }
        _delete() {
          return delete Rt[this.app.options.appId], Promise.resolve();
        }
      }
      let Rt = {},
        Yt = [];
      const En = {};
      let qe,
        it,
        Nn = "dataLayer",
        bt = "gtag",
        Bn = !1;
      function Vn(ue) {
        if (Bn) throw te.create("already-initialized");
        ue.dataLayerName && (Nn = ue.dataLayerName),
          ue.gtagName && (bt = ue.gtagName);
      }
      function kn(ue, L, x) {
        !(function Mt() {
          const ue = [];
          if (
            ((0, re.ru)() &&
              ue.push("This is a browser extension environment."),
            (0, re.zI)() || ue.push("Cookies are not available."),
            ue.length > 0)
          ) {
            const L = ue.map((k, J) => `(${J + 1}) ${k}`).join(" "),
              x = te.create("invalid-analytics-context", { errorInfo: L });
            Be.warn(x.message);
          }
        })();
        const k = ue.options.appId;
        if (!k) throw te.create("no-app-id");
        if (!ue.options.apiKey) {
          if (!ue.options.measurementId) throw te.create("no-api-key");
          Be.warn(
            `The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${ue.options.measurementId} provided in the "measurementId" field in the local Firebase config.`
          );
        }
        if (null != Rt[k]) throw te.create("already-exists", { id: k });
        if (!Bn) {
          !(function tt(ue) {
            let L = [];
            Array.isArray(window[ue]) ? (L = window[ue]) : (window[ue] = L);
          })(Nn);
          const { wrappedGtag: Se, gtagCore: Qe } = (function Ne(
            ue,
            L,
            x,
            k,
            J
          ) {
            let Se = function (...Qe) {
              window[k].push(arguments);
            };
            return (
              window[J] && "function" == typeof window[J] && (Se = window[J]),
              (window[J] = (function Ve(ue, L, x, k) {
                function Se() {
                  return (Se = (0, f.Z)(function* (Qe, we, Ze) {
                    try {
                      "event" === Qe
                        ? yield at(ue, L, x, we, Ze)
                        : "config" === Qe
                        ? yield ge(ue, L, x, k, we, Ze)
                        : "consent" === Qe
                        ? ue("consent", "update", Ze)
                        : ue("set", we);
                    } catch (mt) {
                      Be.error(mt);
                    }
                  })).apply(this, arguments);
                }
                return function J(Qe, we, Ze) {
                  return Se.apply(this, arguments);
                };
              })(Se, ue, L, x)),
              { gtagCore: Se, wrappedGtag: window[J] }
            );
          })(Rt, Yt, En, Nn, bt);
          (it = Se), (qe = Qe), (Bn = !0);
        }
        return (
          (Rt[k] = (function Ke(ue, L, x, k, J, Se, Qe) {
            return ct.apply(this, arguments);
          })(ue, Yt, En, L, qe, Nn, x)),
          new Ut(ue)
        );
      }
      function bn(ue = (0, V.getApp)()) {
        ue = (0, re.m9)(ue);
        const L = (0, V._getProvider)(ue, ce);
        return L.isInitialized()
          ? L.getImmediate()
          : (function dn(ue, L = {}) {
              const x = (0, V._getProvider)(ue, ce);
              if (x.isInitialized()) {
                const J = x.getImmediate();
                if ((0, re.vZ)(L, x.getOptions())) return J;
                throw te.create("already-initialized");
              }
              return x.initialize({ options: L });
            })(ue);
      }
      function Jt() {
        return gn.apply(this, arguments);
      }
      function gn() {
        return (gn = (0, f.Z)(function* () {
          if ((0, re.ru)() || !(0, re.zI)() || !(0, re.hl)()) return !1;
          try {
            return yield (0, re.eu)();
          } catch {
            return !1;
          }
        })).apply(this, arguments);
      }
      function j(ue, L, x) {
        (ue = (0, re.m9)(ue)),
          (function ze(ue, L, x, k) {
            return lt.apply(this, arguments);
          })(it, Rt[ue.app.options.appId], L, x).catch((k) => Be.error(k));
      }
      function $(ue, L, x) {
        (ue = (0, re.m9)(ue)),
          (function yt(ue, L, x, k) {
            return Zt.apply(this, arguments);
          })(it, Rt[ue.app.options.appId], L, x).catch((k) => Be.error(k));
      }
      function U(ue, L, x) {
        (ue = (0, re.m9)(ue)),
          (function $t(ue, L, x, k) {
            return en.apply(this, arguments);
          })(it, Rt[ue.app.options.appId], L, x).catch((k) => Be.error(k));
      }
      function z(ue, L) {
        (ue = (0, re.m9)(ue)),
          (function Mn(ue, L) {
            return On.apply(this, arguments);
          })(Rt[ue.app.options.appId], L).catch((x) => Be.error(x));
      }
      function ke(ue, L, x, k) {
        (ue = (0, re.m9)(ue)),
          (function zt(ue, L, x, k, J) {
            return Nt.apply(this, arguments);
          })(it, Rt[ue.app.options.appId], L, x, k).catch((J) => Be.error(J));
      }
      const Pt = "@firebase/analytics";
      !(function on() {
        (0, V._registerComponent)(
          new Ie.wA(
            ce,
            (L, { options: x }) =>
              kn(
                L.getProvider("app").getImmediate(),
                L.getProvider("installations-internal").getImmediate(),
                x
              ),
            "PUBLIC"
          )
        ),
          (0, V._registerComponent)(
            new Ie.wA(
              "analytics-internal",
              function ue(L) {
                try {
                  const x = L.getProvider(ce).getImmediate();
                  return { logEvent: (k, J, Se) => ke(x, k, J, Se) };
                } catch (x) {
                  throw te.create("interop-component-reg-failed", {
                    reason: x,
                  });
                }
              },
              "PRIVATE"
            )
          ),
          (0, V.registerVersion)(Pt, "0.8.0"),
          (0, V.registerVersion)(Pt, "0.8.0", "esm2017");
      })();
    },
    3942: (wt, Oe, M) => {
      M.d(Oe, { Z: () => Re });
      var f = M(2090),
        V = M(4859),
        P = M(9681),
        re = M(1877);
      class Ie {
        constructor(ge, de) {
          (this._delegate = ge),
            (this.firebase = de),
            (0, P._addComponent)(
              ge,
              new V.wA("app-compat", () => this, "PUBLIC")
            ),
            (this.container = ge.container);
        }
        get automaticDataCollectionEnabled() {
          return this._delegate.automaticDataCollectionEnabled;
        }
        set automaticDataCollectionEnabled(ge) {
          this._delegate.automaticDataCollectionEnabled = ge;
        }
        get name() {
          return this._delegate.name;
        }
        get options() {
          return this._delegate.options;
        }
        delete() {
          return new Promise((ge) => {
            this._delegate.checkDestroyed(), ge();
          }).then(
            () => (
              this.firebase.INTERNAL.removeApp(this.name),
              (0, P.deleteApp)(this._delegate)
            )
          );
        }
        _getService(ge, de = P._DEFAULT_ENTRY_NAME) {
          var at;
          this._delegate.checkDestroyed();
          const rt = this._delegate.container.getProvider(ge);
          return (
            !rt.isInitialized() &&
              "EXPLICIT" ===
                (null === (at = rt.getComponent()) || void 0 === at
                  ? void 0
                  : at.instantiationMode) &&
              rt.initialize(),
            rt.getImmediate({ identifier: de })
          );
        }
        _removeServiceInstance(ge, de = P._DEFAULT_ENTRY_NAME) {
          this._delegate.container.getProvider(ge).clearInstance(de);
        }
        _addComponent(ge) {
          (0, P._addComponent)(this._delegate, ge);
        }
        _addOrOverwriteComponent(ge) {
          (0, P._addOrOverwriteComponent)(this._delegate, ge);
        }
        toJSON() {
          return {
            name: this.name,
            automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,
            options: this.options,
          };
        }
      }
      const ce = new f.LL("app-compat", "Firebase", {
          "no-app":
            "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
          "invalid-app-argument":
            "firebase.{$appName}() takes either no argument or a Firebase App instance.",
        }),
        G = (function Ce() {
          const tt = (function he(tt) {
            const ge = {},
              de = {
                __esModule: !0,
                initializeApp: function Ve(te, ye = {}) {
                  const De = P.initializeApp(te, ye);
                  if ((0, f.r3)(ge, De.name)) return ge[De.name];
                  const X = new tt(De, de);
                  return (ge[De.name] = X), X;
                },
                app: rt,
                registerVersion: P.registerVersion,
                setLogLevel: P.setLogLevel,
                onLog: P.onLog,
                apps: null,
                SDK_VERSION: P.SDK_VERSION,
                INTERNAL: {
                  registerComponent: function Ae(te) {
                    const ye = te.name,
                      De = ye.replace("-compat", "");
                    if (P._registerComponent(te) && "PUBLIC" === te.type) {
                      const X = (ne = rt()) => {
                        if ("function" != typeof ne[De])
                          throw ce.create("invalid-app-argument", {
                            appName: ye,
                          });
                        return ne[De]();
                      };
                      void 0 !== te.serviceProps &&
                        (0, f.ZB)(X, te.serviceProps),
                        (de[De] = X),
                        (tt.prototype[De] = function (...ne) {
                          return this._getService
                            .bind(this, ye)
                            .apply(this, te.multipleInstances ? ne : []);
                        });
                    }
                    return "PUBLIC" === te.type ? de[De] : null;
                  },
                  removeApp: function at(te) {
                    delete ge[te];
                  },
                  useAsService: function Xe(te, ye) {
                    return "serverAuth" === ye ? null : ye;
                  },
                  modularAPIs: P,
                },
              };
            function rt(te) {
              if (!(0, f.r3)(ge, (te = te || P._DEFAULT_ENTRY_NAME)))
                throw ce.create("no-app", { appName: te });
              return ge[te];
            }
            return (
              (de.default = de),
              Object.defineProperty(de, "apps", {
                get: function Ne() {
                  return Object.keys(ge).map((te) => ge[te]);
                },
              }),
              (rt.App = tt),
              de
            );
          })(Ie);
          return (
            (tt.INTERNAL = Object.assign(Object.assign({}, tt.INTERNAL), {
              createFirebaseNamespace: Ce,
              extendNamespace: function ge(de) {
                (0, f.ZB)(tt, de);
              },
              createSubscribe: f.ne,
              ErrorFactory: f.LL,
              deepExtend: f.ZB,
            })),
            tt
          );
        })(),
        H = new re.Yd("@firebase/app-compat");
      if ((0, f.jU)() && void 0 !== self.firebase) {
        H.warn(
          "\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  "
        );
        const tt = self.firebase.SDK_VERSION;
        tt &&
          tt.indexOf("LITE") >= 0 &&
          H.warn(
            "\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    "
          );
      }
      const Re = G;
      !(function Ue(tt) {
        (0, P.registerVersion)("@firebase/app-compat", "0.1.30", tt);
      })();
    },
    9681: (wt, Oe, M) => {
      M.r(Oe),
        M.d(Oe, {
          FirebaseError: () => re.ZR,
          SDK_VERSION: () => Mn,
          _DEFAULT_ENTRY_NAME: () => Dt,
          _addComponent: () => pn,
          _addOrOverwriteComponent: () => zt,
          _apps: () => Vt,
          _clearComponents: () => yt,
          _components: () => Ln,
          _getProvider: () => ze,
          _registerComponent: () => Nt,
          _removeServiceInstance: () => lt,
          deleteApp: () => Me,
          getApp: () => xn,
          getApps: () => Yn,
          initializeApp: () => On,
          onLog: () => Ke,
          registerVersion: () => Pe,
          setLogLevel: () => ct,
        });
      var f = M(5861),
        V = M(4859),
        P = M(1877),
        re = M(2090),
        Ie = M(8766);
      class _e {
        constructor(z) {
          this.container = z;
        }
        getPlatformInfoString() {
          return this.container
            .getProviders()
            .map((q) => {
              if (
                (function ce(U) {
                  return "VERSION" === U.getComponent()?.type;
                })(q)
              ) {
                const ke = q.getImmediate();
                return `${ke.library}/${ke.version}`;
              }
              return null;
            })
            .filter((q) => q)
            .join(" ");
        }
      }
      const he = "@firebase/app",
        G = new P.Yd("@firebase/app"),
        Dt = "[DEFAULT]",
        et = {
          [he]: "fire-core",
          "@firebase/app-compat": "fire-core-compat",
          "@firebase/analytics": "fire-analytics",
          "@firebase/analytics-compat": "fire-analytics-compat",
          "@firebase/app-check": "fire-app-check",
          "@firebase/app-check-compat": "fire-app-check-compat",
          "@firebase/auth": "fire-auth",
          "@firebase/auth-compat": "fire-auth-compat",
          "@firebase/database": "fire-rtdb",
          "@firebase/database-compat": "fire-rtdb-compat",
          "@firebase/functions": "fire-fn",
          "@firebase/functions-compat": "fire-fn-compat",
          "@firebase/installations": "fire-iid",
          "@firebase/installations-compat": "fire-iid-compat",
          "@firebase/messaging": "fire-fcm",
          "@firebase/messaging-compat": "fire-fcm-compat",
          "@firebase/performance": "fire-perf",
          "@firebase/performance-compat": "fire-perf-compat",
          "@firebase/remote-config": "fire-rc",
          "@firebase/remote-config-compat": "fire-rc-compat",
          "@firebase/storage": "fire-gcs",
          "@firebase/storage-compat": "fire-gcs-compat",
          "@firebase/firestore": "fire-fst",
          "@firebase/firestore-compat": "fire-fst-compat",
          "fire-js": "fire-js",
          firebase: "fire-js-all",
        },
        Vt = new Map(),
        Ln = new Map();
      function pn(U, z) {
        try {
          U.container.addComponent(z);
        } catch (q) {
          G.debug(
            `Component ${z.name} failed to register with FirebaseApp ${U.name}`,
            q
          );
        }
      }
      function zt(U, z) {
        U.container.addOrOverwriteComponent(z);
      }
      function Nt(U) {
        const z = U.name;
        if (Ln.has(z))
          return (
            G.debug(`There were multiple attempts to register component ${z}.`),
            !1
          );
        Ln.set(z, U);
        for (const q of Vt.values()) pn(q, U);
        return !0;
      }
      function ze(U, z) {
        const q = U.container
          .getProvider("heartbeat")
          .getImmediate({ optional: !0 });
        return q && q.triggerHeartbeat(), U.container.getProvider(z);
      }
      function lt(U, z, q = Dt) {
        ze(U, z).clearInstance(q);
      }
      function yt() {
        Ln.clear();
      }
      const $t = new re.LL("app", "Firebase", {
        "no-app":
          "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
        "bad-app-name": "Illegal App name: '{$appName}",
        "duplicate-app":
          "Firebase App named '{$appName}' already exists with different options or config",
        "app-deleted": "Firebase App named '{$appName}' already deleted",
        "invalid-app-argument":
          "firebase.{$appName}() takes either no argument or a Firebase App instance.",
        "invalid-log-argument":
          "First argument to `onLog` must be null or a function.",
        "storage-open":
          "Error thrown when opening storage. Original error: {$originalErrorMessage}.",
        "storage-get":
          "Error thrown when reading from storage. Original error: {$originalErrorMessage}.",
        "storage-set":
          "Error thrown when writing to storage. Original error: {$originalErrorMessage}.",
        "storage-delete":
          "Error thrown when deleting from storage. Original error: {$originalErrorMessage}.",
      });
      class en {
        constructor(z, q, ke) {
          (this._isDeleted = !1),
            (this._options = Object.assign({}, z)),
            (this._config = Object.assign({}, q)),
            (this._name = q.name),
            (this._automaticDataCollectionEnabled =
              q.automaticDataCollectionEnabled),
            (this._container = ke),
            this.container.addComponent(new V.wA("app", () => this, "PUBLIC"));
        }
        get automaticDataCollectionEnabled() {
          return this.checkDestroyed(), this._automaticDataCollectionEnabled;
        }
        set automaticDataCollectionEnabled(z) {
          this.checkDestroyed(), (this._automaticDataCollectionEnabled = z);
        }
        get name() {
          return this.checkDestroyed(), this._name;
        }
        get options() {
          return this.checkDestroyed(), this._options;
        }
        get config() {
          return this.checkDestroyed(), this._config;
        }
        get container() {
          return this._container;
        }
        get isDeleted() {
          return this._isDeleted;
        }
        set isDeleted(z) {
          this._isDeleted = z;
        }
        checkDestroyed() {
          if (this.isDeleted)
            throw $t.create("app-deleted", { appName: this._name });
        }
      }
      const Mn = "9.9.1";
      function On(U, z = {}) {
        "object" != typeof z && (z = { name: z });
        const q = Object.assign(
            { name: Dt, automaticDataCollectionEnabled: !1 },
            z
          ),
          ke = q.name;
        if ("string" != typeof ke || !ke)
          throw $t.create("bad-app-name", { appName: String(ke) });
        const st = Vt.get(ke);
        if (st) {
          if ((0, re.vZ)(U, st.options) && (0, re.vZ)(q, st.config)) return st;
          throw $t.create("duplicate-app", { appName: ke });
        }
        const Pt = new V.H0(ke);
        for (const on of Ln.values()) Pt.addComponent(on);
        const sn = new en(U, q, Pt);
        return Vt.set(ke, sn), sn;
      }
      function xn(U = Dt) {
        const z = Vt.get(U);
        if (!z) throw $t.create("no-app", { appName: U });
        return z;
      }
      function Yn() {
        return Array.from(Vt.values());
      }
      function Me(U) {
        return fe.apply(this, arguments);
      }
      function fe() {
        return (fe = (0, f.Z)(function* (U) {
          const z = U.name;
          Vt.has(z) &&
            (Vt.delete(z),
            yield Promise.all(
              U.container.getProviders().map((q) => q.delete())
            ),
            (U.isDeleted = !0));
        })).apply(this, arguments);
      }
      function Pe(U, z, q) {
        var ke;
        let st = null !== (ke = et[U]) && void 0 !== ke ? ke : U;
        q && (st += `-${q}`);
        const Pt = st.match(/\s|\//),
          sn = z.match(/\s|\//);
        if (Pt || sn) {
          const on = [
            `Unable to register library "${st}" with version "${z}":`,
          ];
          return (
            Pt &&
              on.push(
                `library name "${st}" contains illegal characters (whitespace or "/")`
              ),
            Pt && sn && on.push("and"),
            sn &&
              on.push(
                `version name "${z}" contains illegal characters (whitespace or "/")`
              ),
            void G.warn(on.join(" "))
          );
        }
        Nt(
          new V.wA(
            `${st}-version`,
            () => ({ library: st, version: z }),
            "VERSION"
          )
        );
      }
      function Ke(U, z) {
        if (null !== U && "function" != typeof U)
          throw $t.create("invalid-log-argument");
        (0, P.Am)(U, z);
      }
      function ct(U) {
        (0, P.Ub)(U);
      }
      const Yt = "firebase-heartbeat-store";
      let En = null;
      function Nn() {
        return (
          En ||
            (En = (0, Ie.X3)("firebase-heartbeat-database", 1, {
              upgrade: (U, z) => {
                0 === z && U.createObjectStore(Yt);
              },
            }).catch((U) => {
              throw $t.create("storage-open", {
                originalErrorMessage: U.message,
              });
            })),
          En
        );
      }
      function qe() {
        return (qe = (0, f.Z)(function* (U) {
          var z;
          try {
            return (yield Nn()).transaction(Yt).objectStore(Yt).get(Vn(U));
          } catch (q) {
            throw $t.create("storage-get", {
              originalErrorMessage:
                null === (z = q) || void 0 === z ? void 0 : z.message,
            });
          }
        })).apply(this, arguments);
      }
      function it(U, z) {
        return Bn.apply(this, arguments);
      }
      function Bn() {
        return (Bn = (0, f.Z)(function* (U, z) {
          var q;
          try {
            const st = (yield Nn()).transaction(Yt, "readwrite");
            return yield st.objectStore(Yt).put(z, Vn(U)), st.done;
          } catch (ke) {
            throw $t.create("storage-set", {
              originalErrorMessage:
                null === (q = ke) || void 0 === q ? void 0 : q.message,
            });
          }
        })).apply(this, arguments);
      }
      function Vn(U) {
        return `${U.name}!${U.options.appId}`;
      }
      class bn {
        constructor(z) {
          (this.container = z), (this._heartbeatsCache = null);
          const q = this.container.getProvider("app").getImmediate();
          (this._storage = new gn(q)),
            (this._heartbeatsCachePromise = this._storage
              .read()
              .then((ke) => ((this._heartbeatsCache = ke), ke)));
        }
        triggerHeartbeat() {
          var z = this;
          return (0, f.Z)(function* () {
            const ke = z.container
                .getProvider("platform-logger")
                .getImmediate()
                .getPlatformInfoString(),
              st = dn();
            if (
              (null === z._heartbeatsCache &&
                (z._heartbeatsCache = yield z._heartbeatsCachePromise),
              z._heartbeatsCache.lastSentHeartbeatDate !== st &&
                !z._heartbeatsCache.heartbeats.some((Pt) => Pt.date === st))
            )
              return (
                z._heartbeatsCache.heartbeats.push({ date: st, agent: ke }),
                (z._heartbeatsCache.heartbeats =
                  z._heartbeatsCache.heartbeats.filter((Pt) => {
                    const sn = new Date(Pt.date).valueOf();
                    return Date.now() - sn <= 2592e6;
                  })),
                z._storage.overwrite(z._heartbeatsCache)
              );
          })();
        }
        getHeartbeatsHeader() {
          var z = this;
          return (0, f.Z)(function* () {
            if (
              (null === z._heartbeatsCache && (yield z._heartbeatsCachePromise),
              null === z._heartbeatsCache ||
                0 === z._heartbeatsCache.heartbeats.length)
            )
              return "";
            const q = dn(),
              { heartbeatsToSend: ke, unsentEntries: st } = (function Jt(
                U,
                z = 1024
              ) {
                const q = [];
                let ke = U.slice();
                for (const st of U) {
                  const Pt = q.find((sn) => sn.agent === st.agent);
                  if (Pt) {
                    if ((Pt.dates.push(st.date), j(q) > z)) {
                      Pt.dates.pop();
                      break;
                    }
                  } else if (
                    (q.push({ agent: st.agent, dates: [st.date] }), j(q) > z)
                  ) {
                    q.pop();
                    break;
                  }
                  ke = ke.slice(1);
                }
                return { heartbeatsToSend: q, unsentEntries: ke };
              })(z._heartbeatsCache.heartbeats),
              Pt = (0, re.L)(JSON.stringify({ version: 2, heartbeats: ke }));
            return (
              (z._heartbeatsCache.lastSentHeartbeatDate = q),
              st.length > 0
                ? ((z._heartbeatsCache.heartbeats = st),
                  yield z._storage.overwrite(z._heartbeatsCache))
                : ((z._heartbeatsCache.heartbeats = []),
                  z._storage.overwrite(z._heartbeatsCache)),
              Pt
            );
          })();
        }
      }
      function dn() {
        return new Date().toISOString().substring(0, 10);
      }
      class gn {
        constructor(z) {
          (this.app = z),
            (this._canUseIndexedDBPromise =
              this.runIndexedDBEnvironmentCheck());
        }
        runIndexedDBEnvironmentCheck() {
          return (0, f.Z)(function* () {
            return (
              !!(0, re.hl)() &&
              (0, re.eu)()
                .then(() => !0)
                .catch(() => !1)
            );
          })();
        }
        read() {
          var z = this;
          return (0, f.Z)(function* () {
            return (
              ((yield z._canUseIndexedDBPromise) &&
                (yield (function bt(U) {
                  return qe.apply(this, arguments);
                })(z.app))) || { heartbeats: [] }
            );
          })();
        }
        overwrite(z) {
          var q = this;
          return (0, f.Z)(function* () {
            var ke;
            if (yield q._canUseIndexedDBPromise) {
              const Pt = yield q.read();
              return it(q.app, {
                lastSentHeartbeatDate:
                  null !== (ke = z.lastSentHeartbeatDate) && void 0 !== ke
                    ? ke
                    : Pt.lastSentHeartbeatDate,
                heartbeats: z.heartbeats,
              });
            }
          })();
        }
        add(z) {
          var q = this;
          return (0, f.Z)(function* () {
            var ke;
            if (yield q._canUseIndexedDBPromise) {
              const Pt = yield q.read();
              return it(q.app, {
                lastSentHeartbeatDate:
                  null !== (ke = z.lastSentHeartbeatDate) && void 0 !== ke
                    ? ke
                    : Pt.lastSentHeartbeatDate,
                heartbeats: [...Pt.heartbeats, ...z.heartbeats],
              });
            }
          })();
        }
      }
      function j(U) {
        return (0, re.L)(JSON.stringify({ version: 2, heartbeats: U })).length;
      }
      !(function $(U) {
        Nt(new V.wA("platform-logger", (z) => new _e(z), "PRIVATE")),
          Nt(new V.wA("heartbeat", (z) => new bn(z), "PRIVATE")),
          Pe(he, "0.7.29", U),
          Pe(he, "0.7.29", "esm2017"),
          Pe("fire-js", "");
      })("");
    },
    4859: (wt, Oe, M) => {
      M.d(Oe, { H0: () => he, wA: () => P });
      var f = M(5861),
        V = M(2090);
      class P {
        constructor(G, H, Q) {
          (this.name = G),
            (this.instanceFactory = H),
            (this.type = Q),
            (this.multipleInstances = !1),
            (this.serviceProps = {}),
            (this.instantiationMode = "LAZY"),
            (this.onInstanceCreated = null);
        }
        setInstantiationMode(G) {
          return (this.instantiationMode = G), this;
        }
        setMultipleInstances(G) {
          return (this.multipleInstances = G), this;
        }
        setServiceProps(G) {
          return (this.serviceProps = G), this;
        }
        setInstanceCreatedCallback(G) {
          return (this.onInstanceCreated = G), this;
        }
      }
      const re = "[DEFAULT]";
      class Ie {
        constructor(G, H) {
          (this.name = G),
            (this.container = H),
            (this.component = null),
            (this.instances = new Map()),
            (this.instancesDeferred = new Map()),
            (this.instancesOptions = new Map()),
            (this.onInitCallbacks = new Map());
        }
        get(G) {
          const H = this.normalizeInstanceIdentifier(G);
          if (!this.instancesDeferred.has(H)) {
            const Q = new V.BH();
            if (
              (this.instancesDeferred.set(H, Q),
              this.isInitialized(H) || this.shouldAutoInitialize())
            )
              try {
                const Be = this.getOrInitializeService({
                  instanceIdentifier: H,
                });
                Be && Q.resolve(Be);
              } catch {}
          }
          return this.instancesDeferred.get(H).promise;
        }
        getImmediate(G) {
          var H;
          const Q = this.normalizeInstanceIdentifier(G?.identifier),
            Be = null !== (H = G?.optional) && void 0 !== H && H;
          if (!this.isInitialized(Q) && !this.shouldAutoInitialize()) {
            if (Be) return null;
            throw Error(`Service ${this.name} is not available`);
          }
          try {
            return this.getOrInitializeService({ instanceIdentifier: Q });
          } catch (Ue) {
            if (Be) return null;
            throw Ue;
          }
        }
        getComponent() {
          return this.component;
        }
        setComponent(G) {
          if (G.name !== this.name)
            throw Error(
              `Mismatching Component ${G.name} for Provider ${this.name}.`
            );
          if (this.component)
            throw Error(`Component for ${this.name} has already been provided`);
          if (((this.component = G), this.shouldAutoInitialize())) {
            if (
              (function ce(Ce) {
                return "EAGER" === Ce.instantiationMode;
              })(G)
            )
              try {
                this.getOrInitializeService({ instanceIdentifier: re });
              } catch {}
            for (const [H, Q] of this.instancesDeferred.entries()) {
              const Be = this.normalizeInstanceIdentifier(H);
              try {
                const Ue = this.getOrInitializeService({
                  instanceIdentifier: Be,
                });
                Q.resolve(Ue);
              } catch {}
            }
          }
        }
        clearInstance(G = re) {
          this.instancesDeferred.delete(G),
            this.instancesOptions.delete(G),
            this.instances.delete(G);
        }
        delete() {
          var G = this;
          return (0, f.Z)(function* () {
            const H = Array.from(G.instances.values());
            yield Promise.all([
              ...H.filter((Q) => "INTERNAL" in Q).map((Q) =>
                Q.INTERNAL.delete()
              ),
              ...H.filter((Q) => "_delete" in Q).map((Q) => Q._delete()),
            ]);
          })();
        }
        isComponentSet() {
          return null != this.component;
        }
        isInitialized(G = re) {
          return this.instances.has(G);
        }
        getOptions(G = re) {
          return this.instancesOptions.get(G) || {};
        }
        initialize(G = {}) {
          const { options: H = {} } = G,
            Q = this.normalizeInstanceIdentifier(G.instanceIdentifier);
          if (this.isInitialized(Q))
            throw Error(`${this.name}(${Q}) has already been initialized`);
          if (!this.isComponentSet())
            throw Error(`Component ${this.name} has not been registered yet`);
          const Be = this.getOrInitializeService({
            instanceIdentifier: Q,
            options: H,
          });
          for (const [Ue, Re] of this.instancesDeferred.entries())
            Q === this.normalizeInstanceIdentifier(Ue) && Re.resolve(Be);
          return Be;
        }
        onInit(G, H) {
          var Q;
          const Be = this.normalizeInstanceIdentifier(H),
            Ue =
              null !== (Q = this.onInitCallbacks.get(Be)) && void 0 !== Q
                ? Q
                : new Set();
          Ue.add(G), this.onInitCallbacks.set(Be, Ue);
          const Re = this.instances.get(Be);
          return (
            Re && G(Re, Be),
            () => {
              Ue.delete(G);
            }
          );
        }
        invokeOnInitCallbacks(G, H) {
          const Q = this.onInitCallbacks.get(H);
          if (Q)
            for (const Be of Q)
              try {
                Be(G, H);
              } catch {}
        }
        getOrInitializeService({ instanceIdentifier: G, options: H = {} }) {
          let Q = this.instances.get(G);
          if (
            !Q &&
            this.component &&
            ((Q = this.component.instanceFactory(this.container, {
              instanceIdentifier: ((Ce = G), Ce === re ? void 0 : Ce),
              options: H,
            })),
            this.instances.set(G, Q),
            this.instancesOptions.set(G, H),
            this.invokeOnInitCallbacks(Q, G),
            this.component.onInstanceCreated)
          )
            try {
              this.component.onInstanceCreated(this.container, G, Q);
            } catch {}
          var Ce;
          return Q || null;
        }
        normalizeInstanceIdentifier(G = re) {
          return this.component
            ? this.component.multipleInstances
              ? G
              : re
            : G;
        }
        shouldAutoInitialize() {
          return (
            !!this.component && "EXPLICIT" !== this.component.instantiationMode
          );
        }
      }
      class he {
        constructor(G) {
          (this.name = G), (this.providers = new Map());
        }
        addComponent(G) {
          const H = this.getProvider(G.name);
          if (H.isComponentSet())
            throw new Error(
              `Component ${G.name} has already been registered with ${this.name}`
            );
          H.setComponent(G);
        }
        addOrOverwriteComponent(G) {
          this.getProvider(G.name).isComponentSet() &&
            this.providers.delete(G.name),
            this.addComponent(G);
        }
        getProvider(G) {
          if (this.providers.has(G)) return this.providers.get(G);
          const H = new Ie(G, this);
          return this.providers.set(G, H), H;
        }
        getProviders() {
          return Array.from(this.providers.values());
        }
      }
    },
    2833: (wt, Oe, M) => {
      var f = M(5861),
        V = M(9681),
        P = M(4859),
        re = M(2090),
        Ie = M(8766);
      const _e = "@firebase/installations",
        ce = "0.5.12",
        Ce = `w:${ce}`,
        G = "FIS_v2",
        tt = new re.LL("installations", "Installations", {
          "missing-app-config-values":
            'Missing App configuration value: "{$valueName}"',
          "not-registered": "Firebase Installation is not registered.",
          "installation-not-found": "Firebase Installation not found.",
          "request-failed":
            '{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',
          "app-offline": "Could not process request. Application offline.",
          "delete-pending-registration":
            "Can't delete installation while there is a pending registration request.",
        });
      function ge(Y) {
        return Y instanceof re.ZR && Y.code.includes("request-failed");
      }
      function de({ projectId: Y }) {
        return `https://firebaseinstallations.googleapis.com/v1/projects/${Y}/installations`;
      }
      function at(Y) {
        return {
          token: Y.token,
          requestStatus: 2,
          expiresIn: ye(Y.expiresIn),
          creationTime: Date.now(),
        };
      }
      function rt(Y, pe) {
        return Ve.apply(this, arguments);
      }
      function Ve() {
        return (Ve = (0, f.Z)(function* (Y, pe) {
          const ut = (yield pe.json()).error;
          return tt.create("request-failed", {
            requestName: Y,
            serverCode: ut.code,
            serverMessage: ut.message,
            serverStatus: ut.status,
          });
        })).apply(this, arguments);
      }
      function Ne({ apiKey: Y }) {
        return new Headers({
          "Content-Type": "application/json",
          Accept: "application/json",
          "x-goog-api-key": Y,
        });
      }
      function Ae(Y, { refreshToken: pe }) {
        const Fe = Ne(Y);
        return (
          Fe.append(
            "Authorization",
            (function De(Y) {
              return `${G} ${Y}`;
            })(pe)
          ),
          Fe
        );
      }
      function Xe(Y) {
        return te.apply(this, arguments);
      }
      function te() {
        return (te = (0, f.Z)(function* (Y) {
          const pe = yield Y();
          return pe.status >= 500 && pe.status < 600 ? Y() : pe;
        })).apply(this, arguments);
      }
      function ye(Y) {
        return Number(Y.replace("s", "000"));
      }
      function X(Y, pe) {
        return ne.apply(this, arguments);
      }
      function ne() {
        return (ne = (0, f.Z)(function* (
          { appConfig: Y, heartbeatServiceProvider: pe },
          { fid: Fe }
        ) {
          const ut = de(Y),
            Sn = Ne(Y),
            hn = pe.getImmediate({ optional: !0 });
          if (hn) {
            const fn = yield hn.getHeartbeatsHeader();
            fn && Sn.append("x-firebase-client", fn);
          }
          const Qn = {
              method: "POST",
              headers: Sn,
              body: JSON.stringify({
                fid: Fe,
                authVersion: G,
                appId: Y.appId,
                sdkVersion: Ce,
              }),
            },
            bi = yield Xe(() => fetch(ut, Qn));
          if (bi.ok) {
            const fn = yield bi.json();
            return {
              fid: fn.fid || Fe,
              registrationStatus: 2,
              refreshToken: fn.refreshToken,
              authToken: at(fn.authToken),
            };
          }
          throw yield rt("Create Installation", bi);
        })).apply(this, arguments);
      }
      function se(Y) {
        return new Promise((pe) => {
          setTimeout(pe, Y);
        });
      }
      const ae = /^[cdef][\w-]{21}$/;
      function ht() {
        try {
          const Y = new Uint8Array(17);
          (self.crypto || self.msCrypto).getRandomValues(Y),
            (Y[0] = 112 + (Y[0] % 16));
          const Fe = (function Gt(Y) {
            return (function ve(Y) {
              return btoa(String.fromCharCode(...Y))
                .replace(/\+/g, "-")
                .replace(/\//g, "_");
            })(Y).substr(0, 22);
          })(Y);
          return ae.test(Fe) ? Fe : "";
        } catch {
          return "";
        }
      }
      function Dt(Y) {
        return `${Y.appName}!${Y.appId}`;
      }
      const et = new Map();
      function Vt(Y, pe) {
        const Fe = Dt(Y);
        zt(Fe, pe),
          (function Nt(Y, pe) {
            const Fe = (function lt() {
              return (
                !ze &&
                  "BroadcastChannel" in self &&
                  ((ze = new BroadcastChannel("[Firebase] FID Change")),
                  (ze.onmessage = (Y) => {
                    zt(Y.data.key, Y.data.fid);
                  })),
                ze
              );
            })();
            Fe && Fe.postMessage({ key: Y, fid: pe }),
              (function yt() {
                0 === et.size && ze && (ze.close(), (ze = null));
              })();
          })(Fe, pe);
      }
      function zt(Y, pe) {
        const Fe = et.get(Y);
        if (Fe) for (const ut of Fe) ut(pe);
      }
      let ze = null;
      const en = "firebase-installations-store";
      let Mn = null;
      function On() {
        return (
          Mn ||
            (Mn = (0, Ie.X3)("firebase-installations-database", 1, {
              upgrade: (Y, pe) => {
                0 === pe && Y.createObjectStore(en);
              },
            })),
          Mn
        );
      }
      function xn(Y, pe) {
        return Yn.apply(this, arguments);
      }
      function Yn() {
        return (Yn = (0, f.Z)(function* (Y, pe) {
          const Fe = Dt(Y),
            Sn = (yield On()).transaction(en, "readwrite"),
            hn = Sn.objectStore(en),
            Tt = yield hn.get(Fe);
          return (
            yield hn.put(pe, Fe),
            yield Sn.done,
            (!Tt || Tt.fid !== pe.fid) && Vt(Y, pe.fid),
            pe
          );
        })).apply(this, arguments);
      }
      function Me(Y) {
        return fe.apply(this, arguments);
      }
      function fe() {
        return (fe = (0, f.Z)(function* (Y) {
          const pe = Dt(Y),
            ut = (yield On()).transaction(en, "readwrite");
          yield ut.objectStore(en).delete(pe), yield ut.done;
        })).apply(this, arguments);
      }
      function Pe(Y, pe) {
        return Ke.apply(this, arguments);
      }
      function Ke() {
        return (Ke = (0, f.Z)(function* (Y, pe) {
          const Fe = Dt(Y),
            Sn = (yield On()).transaction(en, "readwrite"),
            hn = Sn.objectStore(en),
            Tt = yield hn.get(Fe),
            Qn = pe(Tt);
          return (
            void 0 === Qn ? yield hn.delete(Fe) : yield hn.put(Qn, Fe),
            yield Sn.done,
            Qn && (!Tt || Tt.fid !== Qn.fid) && Vt(Y, Qn.fid),
            Qn
          );
        })).apply(this, arguments);
      }
      function ct(Y) {
        return Ut.apply(this, arguments);
      }
      function Ut() {
        return (Ut = (0, f.Z)(function* (Y) {
          let pe;
          const Fe = yield Pe(Y.appConfig, (ut) => {
            const Sn = Rt(ut),
              hn = Yt(Y, Sn);
            return (pe = hn.registrationPromise), hn.installationEntry;
          });
          return "" === Fe.fid
            ? { installationEntry: yield pe }
            : { installationEntry: Fe, registrationPromise: pe };
        })).apply(this, arguments);
      }
      function Rt(Y) {
        return Bn(Y || { fid: ht(), registrationStatus: 0 });
      }
      function Yt(Y, pe) {
        if (0 === pe.registrationStatus) {
          if (!navigator.onLine)
            return {
              installationEntry: pe,
              registrationPromise: Promise.reject(tt.create("app-offline")),
            };
          const Fe = {
              fid: pe.fid,
              registrationStatus: 1,
              registrationTime: Date.now(),
            },
            ut = (function En(Y, pe) {
              return Nn.apply(this, arguments);
            })(Y, Fe);
          return { installationEntry: Fe, registrationPromise: ut };
        }
        return 1 === pe.registrationStatus
          ? { installationEntry: pe, registrationPromise: bt(Y) }
          : { installationEntry: pe };
      }
      function Nn() {
        return (Nn = (0, f.Z)(function* (Y, pe) {
          try {
            const Fe = yield X(Y, pe);
            return xn(Y.appConfig, Fe);
          } catch (Fe) {
            throw (
              (ge(Fe) && 409 === Fe.customData.serverCode
                ? yield Me(Y.appConfig)
                : yield xn(Y.appConfig, { fid: pe.fid, registrationStatus: 0 }),
              Fe)
            );
          }
        })).apply(this, arguments);
      }
      function bt(Y) {
        return qe.apply(this, arguments);
      }
      function qe() {
        return (qe = (0, f.Z)(function* (Y) {
          let pe = yield it(Y.appConfig);
          for (; 1 === pe.registrationStatus; )
            yield se(100), (pe = yield it(Y.appConfig));
          if (0 === pe.registrationStatus) {
            const { installationEntry: Fe, registrationPromise: ut } = yield ct(
              Y
            );
            return ut || Fe;
          }
          return pe;
        })).apply(this, arguments);
      }
      function it(Y) {
        return Pe(Y, (pe) => {
          if (!pe) throw tt.create("installation-not-found");
          return Bn(pe);
        });
      }
      function Bn(Y) {
        return (function Vn(Y) {
          return (
            1 === Y.registrationStatus && Y.registrationTime + 1e4 < Date.now()
          );
        })(Y)
          ? { fid: Y.fid, registrationStatus: 0 }
          : Y;
      }
      function Mt(Y, pe) {
        return kn.apply(this, arguments);
      }
      function kn() {
        return (kn = (0, f.Z)(function* (
          { appConfig: Y, heartbeatServiceProvider: pe },
          Fe
        ) {
          const ut = bn(Y, Fe),
            Sn = Ae(Y, Fe),
            hn = pe.getImmediate({ optional: !0 });
          if (hn) {
            const fn = yield hn.getHeartbeatsHeader();
            fn && Sn.append("x-firebase-client", fn);
          }
          const Qn = {
              method: "POST",
              headers: Sn,
              body: JSON.stringify({
                installation: { sdkVersion: Ce, appId: Y.appId },
              }),
            },
            bi = yield Xe(() => fetch(ut, Qn));
          if (bi.ok) return at(yield bi.json());
          throw yield rt("Generate Auth Token", bi);
        })).apply(this, arguments);
      }
      function bn(Y, { fid: pe }) {
        return `${de(Y)}/${pe}/authTokens:generate`;
      }
      function dn(Y) {
        return Jt.apply(this, arguments);
      }
      function Jt() {
        return (Jt = (0, f.Z)(function* (Y, pe = !1) {
          let Fe;
          const ut = yield Pe(Y.appConfig, (hn) => {
            if (!q(hn)) throw tt.create("not-registered");
            const Tt = hn.authToken;
            if (!pe && ke(Tt)) return hn;
            if (1 === Tt.requestStatus) return (Fe = gn(Y, pe)), hn;
            {
              if (!navigator.onLine) throw tt.create("app-offline");
              const Qn = Pt(hn);
              return (Fe = U(Y, Qn)), Qn;
            }
          });
          return Fe ? yield Fe : ut.authToken;
        })).apply(this, arguments);
      }
      function gn(Y, pe) {
        return j.apply(this, arguments);
      }
      function j() {
        return (j = (0, f.Z)(function* (Y, pe) {
          let Fe = yield $(Y.appConfig);
          for (; 1 === Fe.authToken.requestStatus; )
            yield se(100), (Fe = yield $(Y.appConfig));
          const ut = Fe.authToken;
          return 0 === ut.requestStatus ? dn(Y, pe) : ut;
        })).apply(this, arguments);
      }
      function $(Y) {
        return Pe(Y, (pe) => {
          if (!q(pe)) throw tt.create("not-registered");
          return (function sn(Y) {
            return 1 === Y.requestStatus && Y.requestTime + 1e4 < Date.now();
          })(pe.authToken)
            ? Object.assign(Object.assign({}, pe), {
                authToken: { requestStatus: 0 },
              })
            : pe;
        });
      }
      function U(Y, pe) {
        return z.apply(this, arguments);
      }
      function z() {
        return (z = (0, f.Z)(function* (Y, pe) {
          try {
            const Fe = yield Mt(Y, pe),
              ut = Object.assign(Object.assign({}, pe), { authToken: Fe });
            return yield xn(Y.appConfig, ut), Fe;
          } catch (Fe) {
            if (
              !ge(Fe) ||
              (401 !== Fe.customData.serverCode &&
                404 !== Fe.customData.serverCode)
            ) {
              const ut = Object.assign(Object.assign({}, pe), {
                authToken: { requestStatus: 0 },
              });
              yield xn(Y.appConfig, ut);
            } else yield Me(Y.appConfig);
            throw Fe;
          }
        })).apply(this, arguments);
      }
      function q(Y) {
        return void 0 !== Y && 2 === Y.registrationStatus;
      }
      function ke(Y) {
        return (
          2 === Y.requestStatus &&
          !(function st(Y) {
            const pe = Date.now();
            return (
              pe < Y.creationTime || Y.creationTime + Y.expiresIn < pe + 36e5
            );
          })(Y)
        );
      }
      function Pt(Y) {
        const pe = { requestStatus: 1, requestTime: Date.now() };
        return Object.assign(Object.assign({}, Y), { authToken: pe });
      }
      function ue() {
        return (ue = (0, f.Z)(function* (Y) {
          const pe = Y,
            { installationEntry: Fe, registrationPromise: ut } = yield ct(pe);
          return (
            ut ? ut.catch(console.error) : dn(pe).catch(console.error), Fe.fid
          );
        })).apply(this, arguments);
      }
      function x() {
        return (x = (0, f.Z)(function* (Y, pe = !1) {
          const Fe = Y;
          return yield k(Fe), (yield dn(Fe, pe)).token;
        })).apply(this, arguments);
      }
      function k(Y) {
        return J.apply(this, arguments);
      }
      function J() {
        return (J = (0, f.Z)(function* (Y) {
          const { registrationPromise: pe } = yield ct(Y);
          pe && (yield pe);
        })).apply(this, arguments);
      }
      function Dn(Y) {
        return tt.create("missing-app-config-values", { valueName: Y });
      }
      const K = "installations",
        nt = (Y) => {
          const pe = Y.getProvider("app").getImmediate(),
            Fe = (function At(Y) {
              if (!Y || !Y.options) throw Dn("App Configuration");
              if (!Y.name) throw Dn("App Name");
              const pe = ["projectId", "apiKey", "appId"];
              for (const Fe of pe) if (!Y.options[Fe]) throw Dn(Fe);
              return {
                appName: Y.name,
                projectId: Y.options.projectId,
                apiKey: Y.options.apiKey,
                appId: Y.options.appId,
              };
            })(pe);
          return {
            app: pe,
            appConfig: Fe,
            heartbeatServiceProvider: (0, V._getProvider)(pe, "heartbeat"),
            _delete: () => Promise.resolve(),
          };
        },
        He = (Y) => {
          const pe = Y.getProvider("app").getImmediate(),
            Fe = (0, V._getProvider)(pe, K).getImmediate();
          return {
            getId: () =>
              (function on(Y) {
                return ue.apply(this, arguments);
              })(Fe),
            getToken: (Sn) =>
              (function L(Y) {
                return x.apply(this, arguments);
              })(Fe, Sn),
          };
        };
      (function Ot() {
        (0, V._registerComponent)(new P.wA(K, nt, "PUBLIC")),
          (0, V._registerComponent)(
            new P.wA("installations-internal", He, "PRIVATE")
          );
      })(),
        (0, V.registerVersion)(_e, ce),
        (0, V.registerVersion)(_e, ce, "esm2017");
    },
    1877: (wt, Oe, M) => {
      M.d(Oe, { Am: () => Ce, Ub: () => he, Yd: () => ce, in: () => V });
      const f = [];
      var V = (() => {
        return (
          ((G = V || (V = {}))[(G.DEBUG = 0)] = "DEBUG"),
          (G[(G.VERBOSE = 1)] = "VERBOSE"),
          (G[(G.INFO = 2)] = "INFO"),
          (G[(G.WARN = 3)] = "WARN"),
          (G[(G.ERROR = 4)] = "ERROR"),
          (G[(G.SILENT = 5)] = "SILENT"),
          V
        );
        var G;
      })();
      const P = {
          debug: V.DEBUG,
          verbose: V.VERBOSE,
          info: V.INFO,
          warn: V.WARN,
          error: V.ERROR,
          silent: V.SILENT,
        },
        re = V.INFO,
        Ie = {
          [V.DEBUG]: "log",
          [V.VERBOSE]: "log",
          [V.INFO]: "info",
          [V.WARN]: "warn",
          [V.ERROR]: "error",
        },
        _e = (G, H, ...Q) => {
          if (H < G.logLevel) return;
          const Be = new Date().toISOString(),
            Ue = Ie[H];
          if (!Ue)
            throw new Error(
              `Attempted to log a message with an invalid logType (value: ${H})`
            );
          console[Ue](`[${Be}]  ${G.name}:`, ...Q);
        };
      class ce {
        constructor(H) {
          (this.name = H),
            (this._logLevel = re),
            (this._logHandler = _e),
            (this._userLogHandler = null),
            f.push(this);
        }
        get logLevel() {
          return this._logLevel;
        }
        set logLevel(H) {
          if (!(H in V))
            throw new TypeError(
              `Invalid value "${H}" assigned to \`logLevel\``
            );
          this._logLevel = H;
        }
        setLogLevel(H) {
          this._logLevel = "string" == typeof H ? P[H] : H;
        }
        get logHandler() {
          return this._logHandler;
        }
        set logHandler(H) {
          if ("function" != typeof H)
            throw new TypeError(
              "Value assigned to `logHandler` must be a function"
            );
          this._logHandler = H;
        }
        get userLogHandler() {
          return this._userLogHandler;
        }
        set userLogHandler(H) {
          this._userLogHandler = H;
        }
        debug(...H) {
          this._userLogHandler && this._userLogHandler(this, V.DEBUG, ...H),
            this._logHandler(this, V.DEBUG, ...H);
        }
        log(...H) {
          this._userLogHandler && this._userLogHandler(this, V.VERBOSE, ...H),
            this._logHandler(this, V.VERBOSE, ...H);
        }
        info(...H) {
          this._userLogHandler && this._userLogHandler(this, V.INFO, ...H),
            this._logHandler(this, V.INFO, ...H);
        }
        warn(...H) {
          this._userLogHandler && this._userLogHandler(this, V.WARN, ...H),
            this._logHandler(this, V.WARN, ...H);
        }
        error(...H) {
          this._userLogHandler && this._userLogHandler(this, V.ERROR, ...H),
            this._logHandler(this, V.ERROR, ...H);
        }
      }
      function he(G) {
        f.forEach((H) => {
          H.setLogLevel(G);
        });
      }
      function Ce(G, H) {
        for (const Q of f) {
          let Be = null;
          H && H.level && (Be = P[H.level]),
            (Q.userLogHandler =
              null === G
                ? null
                : (Ue, Re, ...tt) => {
                    const ge = tt
                      .map((de) => {
                        if (null == de) return null;
                        if ("string" == typeof de) return de;
                        if ("number" == typeof de || "boolean" == typeof de)
                          return de.toString();
                        if (de instanceof Error) return de.message;
                        try {
                          return JSON.stringify(de);
                        } catch {
                          return null;
                        }
                      })
                      .filter((de) => de)
                      .join(" ");
                    Re >= (Be ?? Ue.logLevel) &&
                      G({
                        level: V[Re].toLowerCase(),
                        message: ge,
                        args: tt,
                        type: Ue.name,
                      });
                  });
        }
      }
    },
    8766: (wt, Oe, M) => {
      M.d(Oe, { Lj: () => Ve, X3: () => rt });
      var f = M(5861);
      let P, re;
      const ce = new WeakMap(),
        he = new WeakMap(),
        Ce = new WeakMap(),
        G = new WeakMap(),
        H = new WeakMap();
      let Ue = {
        get(ye, De, X) {
          if (ye instanceof IDBTransaction) {
            if ("done" === De) return he.get(ye);
            if ("objectStoreNames" === De)
              return ye.objectStoreNames || Ce.get(ye);
            if ("store" === De)
              return X.objectStoreNames[1]
                ? void 0
                : X.objectStore(X.objectStoreNames[0]);
          }
          return de(ye[De]);
        },
        set: (ye, De, X) => ((ye[De] = X), !0),
        has: (ye, De) =>
          (ye instanceof IDBTransaction && ("done" === De || "store" === De)) ||
          De in ye,
      };
      function ge(ye) {
        return "function" == typeof ye
          ? (function tt(ye) {
              return ye !== IDBDatabase.prototype.transaction ||
                "objectStoreNames" in IDBTransaction.prototype
                ? (function _e() {
                    return (
                      re ||
                      (re = [
                        IDBCursor.prototype.advance,
                        IDBCursor.prototype.continue,
                        IDBCursor.prototype.continuePrimaryKey,
                      ])
                    );
                  })().includes(ye)
                  ? function (...De) {
                      return ye.apply(at(this), De), de(ce.get(this));
                    }
                  : function (...De) {
                      return de(ye.apply(at(this), De));
                    }
                : function (De, ...X) {
                    const ne = ye.call(at(this), De, ...X);
                    return Ce.set(ne, De.sort ? De.sort() : [De]), de(ne);
                  };
            })(ye)
          : (ye instanceof IDBTransaction &&
              (function Be(ye) {
                if (he.has(ye)) return;
                const De = new Promise((X, ne) => {
                  const se = () => {
                      ye.removeEventListener("complete", ve),
                        ye.removeEventListener("error", ae),
                        ye.removeEventListener("abort", ae);
                    },
                    ve = () => {
                      X(), se();
                    },
                    ae = () => {
                      ne(
                        ye.error || new DOMException("AbortError", "AbortError")
                      ),
                        se();
                    };
                  ye.addEventListener("complete", ve),
                    ye.addEventListener("error", ae),
                    ye.addEventListener("abort", ae);
                });
                he.set(ye, De);
              })(ye),
            ((ye, De) => De.some((X) => ye instanceof X))(
              ye,
              (function Ie() {
                return (
                  P ||
                  (P = [
                    IDBDatabase,
                    IDBObjectStore,
                    IDBIndex,
                    IDBCursor,
                    IDBTransaction,
                  ])
                );
              })()
            )
              ? new Proxy(ye, Ue)
              : ye);
      }
      function de(ye) {
        if (ye instanceof IDBRequest)
          return (function Q(ye) {
            const De = new Promise((X, ne) => {
              const se = () => {
                  ye.removeEventListener("success", ve),
                    ye.removeEventListener("error", ae);
                },
                ve = () => {
                  X(de(ye.result)), se();
                },
                ae = () => {
                  ne(ye.error), se();
                };
              ye.addEventListener("success", ve),
                ye.addEventListener("error", ae);
            });
            return (
              De.then((X) => {
                X instanceof IDBCursor && ce.set(X, ye);
              }).catch(() => {}),
              H.set(De, ye),
              De
            );
          })(ye);
        if (G.has(ye)) return G.get(ye);
        const De = ge(ye);
        return De !== ye && (G.set(ye, De), H.set(De, ye)), De;
      }
      const at = (ye) => H.get(ye);
      function rt(
        ye,
        De,
        { blocked: X, upgrade: ne, blocking: se, terminated: ve } = {}
      ) {
        const ae = indexedDB.open(ye, De),
          $e = de(ae);
        return (
          ne &&
            ae.addEventListener("upgradeneeded", (ht) => {
              ne(
                de(ae.result),
                ht.oldVersion,
                ht.newVersion,
                de(ae.transaction)
              );
            }),
          X && ae.addEventListener("blocked", () => X()),
          $e
            .then((ht) => {
              ve && ht.addEventListener("close", () => ve()),
                se && ht.addEventListener("versionchange", () => se());
            })
            .catch(() => {}),
          $e
        );
      }
      function Ve(ye, { blocked: De } = {}) {
        const X = indexedDB.deleteDatabase(ye);
        return (
          De && X.addEventListener("blocked", () => De()), de(X).then(() => {})
        );
      }
      const Ne = ["get", "getKey", "getAll", "getAllKeys", "count"],
        Ae = ["put", "add", "delete", "clear"],
        Xe = new Map();
      function te(ye, De) {
        if (!(ye instanceof IDBDatabase) || De in ye || "string" != typeof De)
          return;
        if (Xe.get(De)) return Xe.get(De);
        const X = De.replace(/FromIndex$/, ""),
          ne = De !== X,
          se = Ae.includes(X);
        if (
          !(X in (ne ? IDBIndex : IDBObjectStore).prototype) ||
          (!se && !Ne.includes(X))
        )
          return;
        const ve = (function () {
          var ae = (0, f.Z)(function* ($e, ...ht) {
            const Gt = this.transaction($e, se ? "readwrite" : "readonly");
            let Dt = Gt.store;
            return (
              ne && (Dt = Dt.index(ht.shift())),
              (yield Promise.all([Dt[X](...ht), se && Gt.done]))[0]
            );
          });
          return function (ht) {
            return ae.apply(this, arguments);
          };
        })();
        return Xe.set(De, ve), ve;
      }
      !(function Re(ye) {
        Ue = ye(Ue);
      })((ye) => ({
        ...ye,
        get: (De, X, ne) => te(De, X) || ye.get(De, X, ne),
        has: (De, X) => !!te(De, X) || ye.has(De, X),
      }));
    },
    5861: (wt, Oe, M) => {
      function f(P, re, Ie, _e, ce, he, Ce) {
        try {
          var G = P[he](Ce),
            H = G.value;
        } catch (Q) {
          return void Ie(Q);
        }
        G.done ? re(H) : Promise.resolve(H).then(_e, ce);
      }
      function V(P) {
        return function () {
          var re = this,
            Ie = arguments;
          return new Promise(function (_e, ce) {
            var he = P.apply(re, Ie);
            function Ce(H) {
              f(he, _e, ce, Ce, G, "next", H);
            }
            function G(H) {
              f(he, _e, ce, Ce, G, "throw", H);
            }
            Ce(void 0);
          });
        };
      }
      M.d(Oe, { Z: () => V });
    },
  },
  (wt) => {
    wt((wt.s = 7799));
  },
]);
